CREATE OR REPLACE PROCEDURE ATUALIZA_DEMONST_CUSTO_BENEF (P_ANO NUMBER, P_DEP NUMBER) IS

  I            NUMBER(2)    := 1;
  J            NUMBER(2)    := 1;
  SIGLA        VARCHAR2(100):= 'CREFUNPATTCTTPETVTODOMEDSEG';
  TESTE_INSERT NUMBER(1);
  
 BEGIN
  BEGIN
    SELECT DISTINCT 1
    INTO   TESTE_INSERT
    FROM   DEMONSTRATIVO_CUSTO_BENEFICIO
    WHERE  DCB_ANO = P_ANO
    AND    DCB_DEP_CODIGO = P_DEP;
    --
    UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
    SET    DCB_CUSTO_LIQUIDO = 0,
           DCB_PARTICIPACAO  = 0,
           DCB_SOBRAS        = 0,
           DCB_CUSTO_EMP     = 0,
           DCB_CUSTO_DEP     = 0,
           DCB_CUSTO_APO     = 0,
           DCB_CUSTO_BASICO  = 0,
           DCB_CUSTO_EMP_BAS = 0,
           DCB_CUSTO_COMP    = 0 
    WHERE  DCB_ANO           = P_ANO
    AND    DCB_DEP_CODIGO    = P_DEP;
    --
    COMMIT;
    --
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      WHILE J < 26 LOOP
         FOR I IN 1..12 LOOP
            INSERT INTO DEMONSTRATIVO_CUSTO_BENEFICIO
                  (DCB_SIGLA,
                   DCB_MES,
                   DCB_ANO,
                   DCB_DEP_CODIGO,
                   DCB_CUSTO_LIQUIDO,
                   DCB_PARTICIPACAO,
                   DCB_SOBRAS,
                   DCB_CUSTO_EMP,
                   DCB_CUSTO_DEP,
                   DCB_CUSTO_APO,
                   DCB_CUSTO_BASICO,
                   DCB_CUSTO_EMP_BAS,
                   DCB_CUSTO_COMP)
            VALUES (SUBSTR(SIGLA,J,3),
                    I,
                   P_ANO, -- COLOCAR O PARAMETRO
                   P_DEP,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0);
         END LOOP;
         J:= J +3;
      END LOOP;
      COMMIT;
  END;

-- AUXILIO CRECHE (CRE)

FOR REG_AUXILIO_CRECHE IN 
   (SELECT REE_EMB_BEN_SIGLA SIGLA,
            REE_MES_PAGAMENTO MES,
            REE_ANO_PAGAMENTO ANO,
            REE_EMP_DEP_CODIGO_LOTACAO DEP_CODIGO,
            NVL(SUM(NVL(REE_VALOR_LIQUIDO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(REE_VALOR_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   REEMBOLSOS
     WHERE  REE_EMB_BEN_SIGLA = 'CRE'
     AND    REE_ANO_PAGAMENTO = P_ANO -- PARAMETRO DO FORMS
     AND    REE_EMP_DEP_CODIGO_LOTACAO = P_DEP -- PARAMETRO DO FORMS
     GROUP BY REE_MES_PAGAMENTO,
              REE_ANO_PAGAMENTO,
              REE_EMB_BEN_SIGLA,
              REE_EMP_DEP_CODIGO_LOTACAO)
     LOOP

       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = REG_AUXILIO_CRECHE.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = REG_AUXILIO_CRECHE.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_AUXILIO_CRECHE.SIGLA
       AND    DCB_MES           = REG_AUXILIO_CRECHE.MES
       AND    DCB_ANO           = REG_AUXILIO_CRECHE.ANO
       AND    DCB_DEP_CODIGO    = REG_AUXILIO_CRECHE.DEP_CODIGO;
       
    END LOOP;
    COMMIT;
    
-- AUXILIO FUNERAL(FUN) - REEMBOLSOS

FOR REG_AUXILIO_FUNERAL_REE IN 
(SELECT REE_EMB_BEN_SIGLA SIGLA,
            REE_MES_PAGAMENTO MES,
            REE_ANO_PAGAMENTO ANO,
            REE_EMP_DEP_CODIGO_LOTACAO DEP_CODIGO,
            NVL(SUM(NVL(REE_VALOR_LIQUIDO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(REE_VALOR_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   REEMBOLSOS
     WHERE  REE_EMB_BEN_SIGLA = 'FUN'
     AND    REE_ANO_PAGAMENTO = P_ANO
     AND    REE_EMP_DEP_CODIGO_LOTACAO = P_DEP
     GROUP BY REE_MES_PAGAMENTO,
              REE_ANO_PAGAMENTO,
              REE_EMB_BEN_SIGLA,
              REE_EMP_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = REG_AUXILIO_FUNERAL_REE.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = REG_AUXILIO_FUNERAL_REE.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_AUXILIO_FUNERAL_REE.SIGLA
       AND    DCB_MES           = REG_AUXILIO_FUNERAL_REE.MES
       AND    DCB_ANO           = REG_AUXILIO_FUNERAL_REE.ANO
       AND    DCB_DEP_CODIGO    = REG_AUXILIO_FUNERAL_REE.DEP_CODIGO;
    END LOOP;
    COMMIT;    
    
-- AUXILIO FUNERAL(FUN) - DOCUMENTOS_COBRANCA

FOR REG_AUXILIO_FUNERAL_DOC IN 
(SELECT DOC_CBE_BEN_SIGLA SIGLA, 
            DOC_MES_PAGAMENTO MES,
            DOC_ANO_PAGAMENTO ANO,
            DOC_DEP_CODIGO    DEP_CODIGO,
            NVL(SUM(NVL(DOC_VALOR_AUTORIZADO,0)),0) - NVL(SUM(NVL(DOC_VALOR_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(DOC_VALOR_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   DOCUMENTOS_COBRANCA
     WHERE  DOC_CBE_BEN_SIGLA = 'FUN'
     AND    DOC_ANO_PAGAMENTO = P_ANO
     AND    DOC_DEP_CODIGO    = P_DEP
     GROUP BY DOC_MES_PAGAMENTO,
              DOC_ANO_PAGAMENTO,
              DOC_CBE_BEN_SIGLA,
              DOC_DEP_CODIGO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = DCB_CUSTO_LIQUIDO + REG_AUXILIO_FUNERAL_DOC.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = DCB_PARTICIPACAO  + REG_AUXILIO_FUNERAL_DOC.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_AUXILIO_FUNERAL_DOC.SIGLA
       AND    DCB_MES           = REG_AUXILIO_FUNERAL_DOC.MES
       AND    DCB_ANO           = REG_AUXILIO_FUNERAL_DOC.ANO
       AND    DCB_DEP_CODIGO    = REG_AUXILIO_FUNERAL_DOC.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- PROGRAMA ALIMENTAÇÃO (PAT) - NÃO CANCELADOS

FOR REG_PROGRAMA_ALIM_NAO_CANCEL IN 
(SELECT ORT_EMB_BEN_SIGLA SIGLA,
            ORT_MES_MAPA      MES,
            ORT_ANO_MAPA      ANO,
            ORT_DEP_CODIGO    DEP_CODIGO,
            NVL(SUM(NVL((DECODE(ORT_QUANTIDADE_AVUL,NULL,ORT_QTD_BLOCO,ORT_QUANTIDADE_AVUL)- NVL(ORT_DEVOLUCAO,0))*ORT_VALOR,0)),0) - 
            NVL(SUM(NVL(ORT_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(ORT_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   OCORRENCIAS_RECEB_TICKETS
     WHERE  ORT_ANO_MAPA = P_ANO
     AND    ORT_DEP_CODIGO = P_DEP
     AND    ORT_EMB_BEN_SIGLA = 'PAT'
     AND    (ORT_CANCELADO = 'N' OR ORT_CANCELADO IS NULL)
     GROUP BY ORT_MES_MAPA,
              ORT_ANO_MAPA,
              ORT_EMB_BEN_SIGLA,
              ORT_DEP_CODIGO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = REG_PROGRAMA_ALIM_NAO_CANCEL.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = REG_PROGRAMA_ALIM_NAO_CANCEL.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_PROGRAMA_ALIM_NAO_CANCEL.SIGLA
       AND    DCB_MES           = REG_PROGRAMA_ALIM_NAO_CANCEL.MES
       AND    DCB_ANO           = REG_PROGRAMA_ALIM_NAO_CANCEL.ANO
       AND    DCB_DEP_CODIGO    = REG_PROGRAMA_ALIM_NAO_CANCEL.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- PROGRAMA ALIMENTAÇÃO (PAT) - CANCELADOS

FOR REG_PROGRAMA_ALIM_CANCEL IN 
(SELECT ORT_EMB_BEN_SIGLA SIGLA,
            ORT_MES_MAPA      MES,
            ORT_ANO_MAPA      ANO,
            ORT_DEP_CODIGO    DEP_CODIGO,
            NVL(SUM(NVL((DECODE(ORT_QUANTIDADE_AVUL,NULL,ORT_QTD_BLOCO,ORT_QUANTIDADE_AVUL)- NVL(ORT_DEVOLUCAO,0))*ORT_VALOR,0)),0) - 
            NVL(SUM(NVL(ORT_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(ORT_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   OCORRENCIAS_RECEB_TICKETS
     WHERE  ORT_ANO_MAPA = P_ANO
     AND    ORT_DEP_CODIGO = P_DEP
     AND    ORT_EMB_BEN_SIGLA = 'PAT'
     AND    ORT_CANCELADO = 'S'
     GROUP BY ORT_MES_MAPA,
              ORT_ANO_MAPA,
              ORT_EMB_BEN_SIGLA,
              ORT_DEP_CODIGO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_SOBRAS        = REG_PROGRAMA_ALIM_CANCEL.CUSTO_LIQUIDO
       WHERE  DCB_SIGLA         = REG_PROGRAMA_ALIM_CANCEL.SIGLA
       AND    DCB_MES           = REG_PROGRAMA_ALIM_CANCEL.MES
       AND    DCB_ANO           = REG_PROGRAMA_ALIM_CANCEL.ANO
       AND    DCB_DEP_CODIGO    = REG_PROGRAMA_ALIM_CANCEL.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- PROGRAMA ALMENTAÇÃO (PAT) - DEVOLVIDOS

FOR REG_PROGRAMA_ALIM_DEVOLV IN 
( SELECT ORT_EMB_BEN_SIGLA SIGLA,
            ORT_MES_MAPA      MES,
            ORT_ANO_MAPA      ANO,
            ORT_DEP_CODIGO    DEP_CODIGO,
            NVL(SUM(NVL(ORT_DEVOLUCAO,0)*ORT_VALOR),0) - 
            NVL(SUM(NVL(ORT_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(ORT_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   OCORRENCIAS_RECEB_TICKETS
     WHERE  ORT_ANO_MAPA = P_ANO
     AND    ORT_DEP_CODIGO = P_DEP
     AND    ORT_EMB_BEN_SIGLA = 'PAT'
     AND    ORT_DEVOLUCAO IS NOT NULL
     GROUP BY ORT_MES_MAPA,
              ORT_ANO_MAPA,
              ORT_EMB_BEN_SIGLA,
              ORT_DEP_CODIGO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_SOBRAS        = DCB_SOBRAS + REG_PROGRAMA_ALIM_DEVOLV.CUSTO_LIQUIDO
       WHERE  DCB_SIGLA         = REG_PROGRAMA_ALIM_DEVOLV.SIGLA
       AND    DCB_MES           = REG_PROGRAMA_ALIM_DEVOLV.MES
       AND    DCB_ANO           = REG_PROGRAMA_ALIM_DEVOLV.ANO
       AND    DCB_DEP_CODIGO    = REG_PROGRAMA_ALIM_DEVOLV.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- TRANSPORTE FRETADO (TCT)

FOR REG_TRANSPORTE_FRETADO IN 
(SELECT ORV_EMC_EMB_BEN_SIGLA SIGLA,
            ORV_MES_MAPA      MES,
            ORV_ANO_MAPA      ANO,
            ORV_DEP_CODIGO_LOTACAO DEP_CODIGO,
            NVL(SUM(NVL(ORV_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   OCORRENCIAS_RECEB_VALES
     WHERE  ORV_ANO_MAPA = 2003
     AND    ORV_EMC_EMB_BEN_SIGLA = 'TCT'
     AND    ORV_DEP_CODIGO_LOTACAO    = P_DEP
     AND    (ORV_CANCELADO     = 'N' OR ORV_CANCELADO IS NULL)
     GROUP BY ORV_MES_MAPA,
              ORV_ANO_MAPA,
              ORV_EMC_EMB_BEN_SIGLA,
              ORV_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_PARTICIPACAO  = REG_TRANSPORTE_FRETADO.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_TRANSPORTE_FRETADO.SIGLA
       AND    DCB_MES           = REG_TRANSPORTE_FRETADO.MES
       AND    DCB_ANO           = REG_TRANSPORTE_FRETADO.ANO
       AND    DCB_DEP_CODIGO    = REG_TRANSPORTE_FRETADO.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- TRANSPORTE INFRAERO (TPE)

FOR REG_TRANSPORTE_INFRAERO IN 
   (SELECT ORV_EMC_EMB_BEN_SIGLA SIGLA,
           ORV_MES_MAPA          MES,
           ORV_ANO_MAPA          ANO,
           ORV_DEP_CODIGO_LOTACAO DEP_CODIGO,
           NVL(SUM((NVL(ORV_QUANTIDADE,0)* NVL(ORV_VALOR,0))- NVL(ORV_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
           NVL(SUM(NVL(ORV_PARTICIPACAO,0)),0)                 PARTICIPACAO
    FROM   OCORRENCIAS_RECEB_VALES
    WHERE  ORV_EMC_EMB_BEN_SIGLA = 'TPE'
    AND    ORV_ANO_MAPA = P_ANO
    AND    ORV_DEP_CODIGO_LOTACAO = P_DEP
    GROUP BY ORV_EMC_EMB_BEN_SIGLA,
             ORV_MES_MAPA,
             ORV_ANO_MAPA,
             ORV_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = REG_TRANSPORTE_INFRAERO.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = REG_TRANSPORTE_INFRAERO.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_TRANSPORTE_INFRAERO.SIGLA
       AND    DCB_MES           = REG_TRANSPORTE_INFRAERO.MES
       AND    DCB_ANO           = REG_TRANSPORTE_INFRAERO.ANO
       AND    DCB_DEP_CODIGO    = REG_TRANSPORTE_INFRAERO.DEP_CODIGO;

    END LOOP;
    COMMIT;
    
-- TRANSPORTE (TVT) - NÃO CANCELADOS

FOR REG_TRANSPORTE_NAO_CANCEL IN 
(SELECT ORV_EMC_EMB_BEN_SIGLA SIGLA,
            ORV_MES_MAPA      MES,
            ORV_ANO_MAPA      ANO,
            ORV_DEP_CODIGO_LOTACAO DEP_CODIGO,
            NVL(SUM(NVL(ORV_QUANTIDADE,0)*ORV_VALOR),0) - 
            NVL(SUM(NVL(ORV_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(ORV_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   OCORRENCIAS_RECEB_VALES
     WHERE  ORV_ANO_MAPA = P_ANO
     AND    ORV_DEP_CODIGO_LOTACAO = P_DEP
     AND    ORV_EMC_EMB_BEN_SIGLA = 'TVT'
     AND    (ORV_CANCELADO = 'N' OR ORV_CANCELADO IS NULL)
     GROUP BY ORV_MES_MAPA,
              ORV_ANO_MAPA,
              ORV_EMC_EMB_BEN_SIGLA,
              ORV_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = REG_TRANSPORTE_NAO_CANCEL.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = REG_TRANSPORTE_NAO_CANCEL.PARTICIPACAO
       WHERE  DCB_SIGLA         = REG_TRANSPORTE_NAO_CANCEL.SIGLA
       AND    DCB_MES           = REG_TRANSPORTE_NAO_CANCEL.MES
       AND    DCB_ANO           = REG_TRANSPORTE_NAO_CANCEL.ANO
       AND    DCB_DEP_CODIGO    = REG_TRANSPORTE_NAO_CANCEL.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- TRANSPORTE (TVT) - CANCELADOS

FOR REG_TRANSPORTE_CANCEL IN 
(SELECT ORV_EMC_EMB_BEN_SIGLA SIGLA,
            ORV_MES_MAPA      MES,
            ORV_ANO_MAPA      ANO,
            ORV_DEP_CODIGO_LOTACAO DEP_CODIGO,
            NVL(SUM(NVL(ORV_QUANTIDADE,0)*ORV_VALOR),0) - 
            NVL(SUM(NVL(ORV_PARTICIPACAO,0)),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(ORV_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   OCORRENCIAS_RECEB_VALES
     WHERE  ORV_ANO_MAPA = P_ANO
     AND    ORV_DEP_CODIGO_LOTACAO = P_DEP
     AND    ORV_EMC_EMB_BEN_SIGLA = 'TVT'
     AND    ORV_CANCELADO = 'S'
     GROUP BY ORV_MES_MAPA,
              ORV_ANO_MAPA,
              ORV_EMC_EMB_BEN_SIGLA,
              ORV_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_SOBRAS        = REG_TRANSPORTE_CANCEL.CUSTO_LIQUIDO
       WHERE  DCB_SIGLA         = REG_TRANSPORTE_CANCEL.SIGLA
       AND    DCB_MES           = REG_TRANSPORTE_CANCEL.MES
       AND    DCB_ANO           = REG_TRANSPORTE_CANCEL.ANO
       AND    DCB_DEP_CODIGO    = REG_TRANSPORTE_CANCEL.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- TRANSPORTE (TVT)- DEVOLVIDOS

FOR REG_TRANSPORTE_DEVOLV IN 
(SELECT REE_EMB_BEN_SIGLA SIGLA,
            REE_MES_PAGAMENTO MES,
            REE_ANO_PAGAMENTO ANO,
            REE_EMP_DEP_CODIGO_LOTACAO DEP_CODIGO,
            NVL(NVL(SUM(NVL(REE_VALOR_LIQUIDO,0)),0) - NVL(SUM(NVL(REE_VALOR_PARTICIPACAO,0)),0),0) CUSTO_LIQUIDO,
            NVL(SUM(NVL(REE_VALOR_PARTICIPACAO,0)),0) PARTICIPACAO
     FROM   REEMBOLSOS
     WHERE  REE_EMB_BEN_SIGLA = 'TVT'
     AND    REE_ANO_PAGAMENTO = P_ANO
     AND     REE_EMP_DEP_CODIGO_LOTACAO = P_DEP
     GROUP BY REE_MES_PAGAMENTO,
              REE_ANO_PAGAMENTO,
              REE_EMB_BEN_SIGLA,
              REE_EMP_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_SOBRAS        = DCB_SOBRAS + REG_TRANSPORTE_DEVOLV.CUSTO_LIQUIDO
       WHERE  DCB_SIGLA         = REG_TRANSPORTE_DEVOLV.SIGLA
       AND    DCB_MES           = REG_TRANSPORTE_DEVOLV.MES
       AND    DCB_ANO           = REG_TRANSPORTE_DEVOLV.ANO
       AND    DCB_DEP_CODIGO    = REG_TRANSPORTE_DEVOLV.DEP_CODIGO;
    END LOOP;
    COMMIT;
  
-- PROGRAMA ODONTOLÓGIO (ODO) - PRODONTO

FOR REG_PRODONTO IN 
    (SELECT BEN_SIGLA         SIGLA,
            MESES.MES         MES,
            REE_ANO_PAGAMENTO ANO,
            REE_EMP_DEP_CODIGO_LOTACAO DEP_CODIGO,
            SUM(NVL(REE_VALOR_LIQUIDO,0)) CUSTO_LIQUIDO,
            SUM(NVL(REE_VALOR_PARTICIPACAO,0)) PARTICIPACAO,
            SUM(DECODE(REE_PVB_PVI_SEQUENCIAL,NULL,NVL(REE_VALOR_LIQUIDO,0),0)) CUSTO_EMP_ODO,
            SUM(DECODE(REE_PVB_PVI_SEQUENCIAL,NULL,0,NVL(REE_VALOR_LIQUIDO,0))) CUSTO_DEP_ODO
     FROM   CADASTROS EMP,
            BENEFICIOS,
            EMPREGADOS_BENEFICIOS,
            REEMBOLSOS,
           (SELECT 1 MES, 'JAN' DESC_MES FROM DUAL
            UNION ALL
            SELECT 02 MES, 'FEV' DESC_MES FROM DUAL
            UNION ALL
            SELECT 03 MES, 'MAR' DESC_MES FROM DUAL
            UNION ALL
            SELECT 04 MES, 'ABR' DESC_MES FROM DUAL
            UNION ALL  
            SELECT 05 MES, 'MAI' DESC_MES FROM DUAL
            UNION ALL
            SELECT 06 MES, 'JUN' DESC_MES FROM DUAL
            UNION ALL
            SELECT 07 MES, 'JUL' DESC_MES FROM DUAL
            UNION ALL
            SELECT 08 MES, 'AGO' DESC_MES FROM DUAL
            UNION ALL
            SELECT 09 MES, 'SET' DESC_MES FROM DUAL
            UNION ALL
            SELECT 10 MES, 'OUT' DESC_MES FROM DUAL
            UNION ALL
            SELECT 11 MES, 'NOV' DESC_MES FROM DUAL
            UNION ALL
            SELECT 12 MES, 'DEZ' DESC_MES FROM DUAL) MESES
     WHERE  EMP.EMP_NUMERO_MATRICULA        = EMB_EMP_NUMERO_MATRICULA
     AND    BEN_SIGLA                       = EMB_BEN_SIGLA
     AND    REE_EMB_EMP_NUMERO_MATRICULA(+) = EMB_EMP_NUMERO_MATRICULA
     AND    EMB_BEN_SIGLA                   = REE_EMB_BEN_SIGLA(+)
     AND   (REE_MES_PAGAMENTO               = MESES.MES OR REE_MES_PAGAMENTO IS NULL)
     AND   (REE_ANO_PAGAMENTO               = P_ANO      OR REE_ANO_PAGAMENTO IS NULL)
     AND    DATA_ADESAO                    <= LAST_DAY(TO_DATE(TO_CHAR(MESES.MES,'00')||TO_CHAR(P_ANO),'MMYYYY'))
     AND   (EMB_DATA_EXCLUSAO              >= TO_DATE('0101'||TO_CHAR(P_ANO),'DDMMYYYY')
            OR EMB_DATA_EXCLUSAO IS NULL)
     AND    EMB_BEN_SIGLA                   = 'ODO'
     AND    EMP_DEP_CODIGO_FISICO LIKE NVL(TO_CHAR(P_DEP),'%')
     GROUP BY BEN_SIGLA,
              MESES.MES,
              REE_ANO_PAGAMENTO,
              REE_EMP_DEP_CODIGO_LOTACAO
     UNION 
     SELECT DOC_CBE_BEN_SIGLA SIGLA, 
            DOC_MES_PAGAMENTO MES,
            DOC_ANO_PAGAMENTO ANO,           
            DOC_DEP_CODIGO    DEP_CODIGO,
            SUM(NVL(ATO_VALOR_AUTORIZACAO,0)-NVL(ATO_VALOR_PARTICIPACAO,0)) CUSTO_LIQUIDO,
            SUM(NVL(ATO_VALOR_PARTICIPACAO,0))                              PARTICIPACAO,
            SUM(DECODE(ATO_PVB_PVI_SEQUENCIAL,NULL,NVL(ATO_VALOR_AUTORIZACAO,0)-NVL(ATO_VALOR_PARTICIPACAO,0),0)) CUSTO_EMP_ODO,
            SUM(DECODE(ATO_PVB_PVI_SEQUENCIAL,NULL,0,NVL(ATO_VALOR_AUTORIZACAO,0)-NVL(ATO_VALOR_PARTICIPACAO,0))) CUSTO_DEP_ODO
     FROM   DOCUMENTOS_COBRANCA DOC,
            PEDIDOS_COBRANCAS,
            AUTORIZACOES_TRATAMENTOS_ODONT
     WHERE  DOC_CBE_BEN_SIGLA                  = 'ODO'
     AND    DOC_CBE_CRE_SEQUENCIAL             = PCO_DOC_CBE_CRE_SEQUENCIAL
     AND    DOC_CBE_BEN_SIGLA                  = PCO_DOC_CBE_BEN_SIGLA
     AND    DOC_DEP_CODIGO                     = PCO_DOC_DEP_CODIGO
     AND    PCO_NUMERO_PEDIDO                  = ATO_NUMERO
     AND    DOC_NUMERO                         = ATO_NUMERO_NOTA
     AND    NVL(DOC_VALOR,0)                  <> 0 
     AND    NVL(DOC_VALOR_AUTORIZADO,0)       <> 0
     AND    DOC_ANO_PAGAMENTO(+)               = P_ANO
     AND    DOC_DEP_CODIGO LIKE NVL(TO_CHAR(P_DEP),'%')
     GROUP BY DOC_CBE_BEN_SIGLA,
              DOC_MES_PAGAMENTO,
              DOC_ANO_PAGAMENTO,
              DOC_DEP_CODIGO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_LIQUIDO = REG_PRODONTO.CUSTO_LIQUIDO,
              DCB_PARTICIPACAO  = REG_PRODONTO.PARTICIPACAO,
              DCB_CUSTO_EMP     = REG_PRODONTO.CUSTO_EMP_ODO,
              DCB_CUSTO_DEP     = REG_PRODONTO.CUSTO_DEP_ODO
       WHERE  DCB_SIGLA         = REG_PRODONTO.SIGLA
       AND    DCB_MES           = REG_PRODONTO.MES
       AND    DCB_ANO           = REG_PRODONTO.ANO
       AND    DCB_DEP_CODIGO    = REG_PRODONTO.DEP_CODIGO;
    END LOOP;
    COMMIT;
    
-- PROGRAMA DE ASSISTENCIA MÉDICA (MED) - REEMBOLSO

FOR REG_PAMI_REE IN 
    (SELECT REE_EMB_BEN_SIGLA             SIGLA,
            REE_MES_PAGAMENTO             MES,
            REE_ANO_PAGAMENTO             ANO,
            REE_EMP_DEP_CODIGO_LOTACAO    DEP_CODIGO,
            REE_MES                       MES_MED,
            REE_PVB_PVI_SEQUENCIAL        PVI_SEQUENCIAL,
            EMP_DT_APOSENTADORIA          DT_APOSENTADORIA,
            NVL(REE_VALOR_LIQUIDO,0)      CUSTO_LIQUIDO,
            NVL(REE_VALOR_PARTICIPACAO,0) PARTICIPACAO
     FROM   REEMBOLSOS ,
            EMPREGADOS_BENEFICIOS,
            CADASTROS
     WHERE  REE_EMB_BEN_SIGLA               = 'MED'
     AND    REE_ANO_PAGAMENTO               = P_ANO -- PARAMETRO DO FORMS
     AND    REE_EMP_DEP_CODIGO_LOTACAO      = P_DEP -- PARAMETRO DO FORMS
     AND    EMP_NUMERO_MATRICULA            = EMB_EMP_NUMERO_MATRICULA
     AND    REE_EMB_EMP_NUMERO_MATRICULA(+) = EMB_EMP_NUMERO_MATRICULA
     AND    EMB_BEN_SIGLA                   = REE_EMB_BEN_SIGLA(+))
              
 LOOP
 
     UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
     SET    DCB_CUSTO_LIQUIDO = DCB_CUSTO_LIQUIDO + REG_PAMI_REE.CUSTO_LIQUIDO,
            DCB_PARTICIPACAO  = DCB_PARTICIPACAO  + REG_PAMI_REE.PARTICIPACAO
     WHERE  DCB_SIGLA      = REG_PAMI_REE.SIGLA
     AND    DCB_MES        = REG_PAMI_REE.MES
     AND    DCB_ANO        = REG_PAMI_REE.ANO
     AND    DCB_DEP_CODIGO = REG_PAMI_REE.DEP_CODIGO;
 
     IF REG_PAMI_REE.PVI_SEQUENCIAL IS NULL AND REG_PAMI_REE.DT_APOSENTADORIA IS NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_EMP  = DCB_CUSTO_EMP + REG_PAMI_REE.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_REE.SIGLA
         AND    DCB_MES        = REG_PAMI_REE.MES
         AND    DCB_ANO        = REG_PAMI_REE.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_REE.DEP_CODIGO;
         
     ELSIF REG_PAMI_REE.PVI_SEQUENCIAL IS NOT NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_DEP  = DCB_CUSTO_DEP + REG_PAMI_REE.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_REE.SIGLA
         AND    DCB_MES        = REG_PAMI_REE.MES
         AND    DCB_ANO        = REG_PAMI_REE.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_REE.DEP_CODIGO;
         
     ELSIF REG_PAMI_REE.PVI_SEQUENCIAL IS NULL 
           AND REG_PAMI_REE.DT_APOSENTADORIA <= LAST_DAY(TO_DATE(TO_CHAR(NVL(REG_PAMI_REE.MES,12),'00')||REG_PAMI_REE.ANO,'MMYYYY')) THEN
         
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_APO  = DCB_CUSTO_APO + REG_PAMI_REE.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_REE.SIGLA
         AND    DCB_MES        = REG_PAMI_REE.MES
         AND    DCB_ANO        = REG_PAMI_REE.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_REE.DEP_CODIGO;     
         
     END IF;
     
 END LOOP;
 COMMIT;

-- PROGRAMA DE ASSISTENCIA MÉDICA (MED) - TABELA DMO
 
 FOR REG_PAMI_DMO IN
   (SELECT  DOC.DOC_CBE_BEN_SIGLA     SIGLA,
            DOC.DOC_MES_PAGAMENTO     MES,
            DOC.DOC_ANO_PAGAMENTO     ANO,
            DOC.DOC_DEP_CODIGO        DEP_CODIGO,
            EMP.EMP_DT_APOSENTADORIA  DT_APOSENTADORIA,
            GUI.GUI_PVI_SEQUENCIAL    PVI_SEQUENCIAL,
            NVL(DMO.DMO_VALOR_INFORMADO,0)    CUSTO_LIQUIDO,
            NVL(DMO.DMO_VALOR_PARTICIPACAO,0) PARTICIPACAO
    FROM    GUIAS GUI,
            DOCUMENTOS_COBRANCA DOC,
            CADASTROS EMP,
            DIVERSOS_MEDICAS_HOSPIT DMO
    WHERE   GUI.GUI_NUMERO                 = DMO.DMO_GUI_NUMERO
    AND     GUI.GUI_DOC_NUMERO             = DMO.DMO_GUI_DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = DMO.DMO_GUI_DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = DMO.DMO_GUI_DOC_CBE_CRE_SEQUENCIAL
    AND     GUI.GUI_DOC_DEP_CODIGO         = DMO.DMO_GUI_DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_DEP_CODIGO         = DOC.DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_NUMERO             = DOC.DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = DOC.DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = DOC.DOC_CBE_CRE_SEQUENCIAL
    AND     DOC.DOC_ANO_PAGAMENTO          = P_ANO
    AND     DOC.DOC_CBE_BEN_SIGLA          = 'MED'
    AND     DOC.DOC_DEP_CODIGO             = P_DEP
    AND     EMP.EMP_NUMERO_MATRICULA       = GUI.GUI_EMP_NUMERO_MATRICULA)
             
 LOOP
 
     UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
     SET    DCB_CUSTO_LIQUIDO = DCB_CUSTO_LIQUIDO + REG_PAMI_DMO.CUSTO_LIQUIDO,
            DCB_PARTICIPACAO  = DCB_PARTICIPACAO  + REG_PAMI_DMO.PARTICIPACAO
     WHERE  DCB_SIGLA      = REG_PAMI_DMO.SIGLA
     AND    DCB_MES        = REG_PAMI_DMO.MES
     AND    DCB_ANO        = REG_PAMI_DMO.ANO
     AND    DCB_DEP_CODIGO = REG_PAMI_DMO.DEP_CODIGO;
   
     IF REG_PAMI_DMO.PVI_SEQUENCIAL IS NULL AND REG_PAMI_DMO.DT_APOSENTADORIA IS NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_EMP  = DCB_CUSTO_EMP + REG_PAMI_DMO.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_DMO.SIGLA
         AND    DCB_MES        = REG_PAMI_DMO.MES
         AND    DCB_ANO        = REG_PAMI_DMO.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_DMO.DEP_CODIGO;
         
     ELSIF REG_PAMI_DMO.PVI_SEQUENCIAL IS NOT NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_DEP  = DCB_CUSTO_DEP + REG_PAMI_DMO.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_DMO.SIGLA
         AND    DCB_MES        = REG_PAMI_DMO.MES
         AND    DCB_ANO        = REG_PAMI_DMO.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_DMO.DEP_CODIGO;
         
     ELSIF REG_PAMI_DMO.PVI_SEQUENCIAL IS NULL 
           AND REG_PAMI_DMO.DT_APOSENTADORIA <= LAST_DAY(TO_DATE(TO_CHAR(NVL(REG_PAMI_DMO.MES,12),'00')||REG_PAMI_DMO.ANO,'MMYYYY')) THEN
         
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_APO  = DCB_CUSTO_APO + REG_PAMI_DMO.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_DMO.SIGLA
         AND    DCB_MES        = REG_PAMI_DMO.MES
         AND    DCB_ANO        = REG_PAMI_DMO.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_DMO.DEP_CODIGO;     
         
     END IF;
               
 END LOOP;
 COMMIT;

-- PROGRAMA DE ASSISTENCIA MÉDICA (MED) - TABELA DMH
    
 FOR REG_PAMI_DMH IN
   (SELECT  DOC.DOC_CBE_BEN_SIGLA     SIGLA,
            DOC.DOC_MES_PAGAMENTO     MES,
            DOC.DOC_ANO_PAGAMENTO     ANO,
            DOC.DOC_DEP_CODIGO        DEP_CODIGO,
            EMP.EMP_DT_APOSENTADORIA  DT_APOSENTADORIA,
            GUI.GUI_PVI_SEQUENCIAL    PVI_SEQUENCIAL,
            NVL(DMP.DMP_VALOR_INFORMADO,0)    CUSTO_LIQUIDO,
            NVL(DMP.DMP_VALOR_PARTICIPACAO,0) PARTICIPACAO
    FROM    GUIAS GUI,
            DOCUMENTOS_COBRANCA DOC,
            CADASTROS EMP,
            DESPESAS_MEDICAS_HOSPITALARES DMP
    WHERE   GUI.GUI_NUMERO                 = DMP.DMP_GUI_NUMERO
    AND     GUI.GUI_DOC_NUMERO             = DMP.DMP_GUI_DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = DMP.DMP_GUI_DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = DMP.DMP_GUI_DOC_CBE_CRE_SEQUENCIAL
    AND     GUI.GUI_DOC_DEP_CODIGO         = DMP.DMP_GUI_DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_DEP_CODIGO         = DOC.DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_NUMERO             = DOC.DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = DOC.DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = DOC.DOC_CBE_CRE_SEQUENCIAL
    AND     DOC.DOC_ANO_PAGAMENTO          = P_ANO
    AND     DOC.DOC_CBE_BEN_SIGLA          = 'MED'
    AND     DOC.DOC_DEP_CODIGO             = P_DEP
    AND     EMP.EMP_NUMERO_MATRICULA       = GUI.GUI_EMP_NUMERO_MATRICULA)
             
 LOOP

     UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
     SET    DCB_CUSTO_LIQUIDO = DCB_CUSTO_LIQUIDO + REG_PAMI_DMH.CUSTO_LIQUIDO,
            DCB_PARTICIPACAO  = DCB_PARTICIPACAO  + REG_PAMI_DMH.PARTICIPACAO
     WHERE  DCB_SIGLA      = REG_PAMI_DMH.SIGLA
     AND    DCB_MES        = REG_PAMI_DMH.MES
     AND    DCB_ANO        = REG_PAMI_DMH.ANO
     AND    DCB_DEP_CODIGO = REG_PAMI_DMH.DEP_CODIGO;

     IF REG_PAMI_DMH.PVI_SEQUENCIAL IS NULL AND REG_PAMI_DMH.DT_APOSENTADORIA IS NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_EMP  = DCB_CUSTO_EMP + REG_PAMI_DMH.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_DMH.SIGLA
         AND    DCB_MES        = REG_PAMI_DMH.MES
         AND    DCB_ANO        = REG_PAMI_DMH.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_DMH.DEP_CODIGO;
         
     ELSIF REG_PAMI_DMH.PVI_SEQUENCIAL IS NOT NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_DEP  = DCB_CUSTO_DEP + REG_PAMI_DMH.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_DMH.SIGLA
         AND    DCB_MES        = REG_PAMI_DMH.MES
         AND    DCB_ANO        = REG_PAMI_DMH.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_DMH.DEP_CODIGO;
         
     ELSIF REG_PAMI_DMH.PVI_SEQUENCIAL IS NULL 
           AND REG_PAMI_DMH.DT_APOSENTADORIA <= LAST_DAY(TO_DATE(TO_CHAR(NVL(REG_PAMI_DMH.MES,12),'00')||REG_PAMI_DMH.ANO,'MMYYYY')) THEN
         
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_APO  = DCB_CUSTO_APO + REG_PAMI_DMH.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_DMH.SIGLA
         AND    DCB_MES        = REG_PAMI_DMH.MES
         AND    DCB_ANO        = REG_PAMI_DMH.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_DMH.DEP_CODIGO;     
         
     END IF;
    
 END LOOP;
 COMMIT;

-- PROGRAMA DE ASSISTENCIA MÉDICA (MED) - TABELA TDM
    
 FOR REG_PAMI_TDM IN
    (SELECT  DOC.DOC_CBE_BEN_SIGLA     SIGLA,
            DOC.DOC_MES_PAGAMENTO      MES,
            DOC.DOC_ANO_PAGAMENTO      ANO,
            DOC.DOC_DEP_CODIGO         DEP_CODIGO,
            EMP.EMP_DT_APOSENTADORIA   DT_APOSENTADORIA,
            GUI.GUI_PVI_SEQUENCIAL     PVI_SEQUENCIAL,
            NVL(TDM.TDM_VALOR,0)       CUSTO_LIQUIDO,
            NVL(TDM.TDM_VALOR_PARTICIPACAO,0) PARTICIPACAO
    FROM    GUIAS GUI,
            DOCUMENTOS_COBRANCA DOC,
            CADASTROS EMP,
            TAB_DESPESA_MEDICAMENTOS TDM
    WHERE   GUI.GUI_NUMERO                 = TDM.TDM_GUI_NUMERO
    AND     GUI.GUI_DOC_NUMERO             = TDM.TDM_GUI_DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = TDM.TDM_GUI_DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = TDM.TDM_GUI_DOC_CBE_CRE_SEQUENCIAL
    AND     GUI.GUI_DOC_DEP_CODIGO         = TDM.TDM_GUI_DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_DEP_CODIGO         = DOC.DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_NUMERO             = DOC.DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = DOC.DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = DOC.DOC_CBE_CRE_SEQUENCIAL
    AND     DOC.DOC_ANO_PAGAMENTO          = P_ANO
    AND     DOC.DOC_CBE_BEN_SIGLA          = 'MED'
    AND     DOC.DOC_DEP_CODIGO             = P_DEP
    AND     EMP.EMP_NUMERO_MATRICULA       = GUI.GUI_EMP_NUMERO_MATRICULA)
             
 LOOP

     UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
     SET    DCB_CUSTO_LIQUIDO = DCB_CUSTO_LIQUIDO + REG_PAMI_TDM.CUSTO_LIQUIDO,
            DCB_PARTICIPACAO  = DCB_PARTICIPACAO  + REG_PAMI_TDM.PARTICIPACAO
     WHERE  DCB_SIGLA      = REG_PAMI_TDM.SIGLA
     AND    DCB_MES        = REG_PAMI_TDM.MES
     AND    DCB_ANO        = REG_PAMI_TDM.ANO
     AND    DCB_DEP_CODIGO = REG_PAMI_TDM.DEP_CODIGO;

     IF REG_PAMI_TDM.PVI_SEQUENCIAL IS NULL AND REG_PAMI_TDM.DT_APOSENTADORIA IS NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_EMP  = DCB_CUSTO_EMP + REG_PAMI_TDM.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_TDM.SIGLA
         AND    DCB_MES        = REG_PAMI_TDM.MES
         AND    DCB_ANO        = REG_PAMI_TDM.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_TDM.DEP_CODIGO;
         
     ELSIF REG_PAMI_TDM.PVI_SEQUENCIAL IS NOT NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_DEP  = DCB_CUSTO_DEP + REG_PAMI_TDM.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_TDM.SIGLA
         AND    DCB_MES        = REG_PAMI_TDM.MES
         AND    DCB_ANO        = REG_PAMI_TDM.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_TDM.DEP_CODIGO;
         
     ELSIF REG_PAMI_TDM.PVI_SEQUENCIAL IS NULL 
           AND REG_PAMI_TDM.DT_APOSENTADORIA <= LAST_DAY(TO_DATE(TO_CHAR(NVL(REG_PAMI_TDM.MES,12),'00')||REG_PAMI_TDM.ANO,'MMYYYY')) THEN
         
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_APO  = DCB_CUSTO_APO + REG_PAMI_TDM.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_TDM.SIGLA
         AND    DCB_MES        = REG_PAMI_TDM.MES
         AND    DCB_ANO        = REG_PAMI_TDM.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_TDM.DEP_CODIGO;     
         
     END IF;
        
 END LOOP;
 COMMIT;

-- PROGRAMA DE ASSISTENCIA MÉDICA (MED) - TABELA GPR
    
 FOR REG_PAMI_GPR IN
    (SELECT DOC.DOC_CBE_BEN_SIGLA      SIGLA,
            DOC.DOC_MES_PAGAMENTO      MES,
            DOC.DOC_ANO_PAGAMENTO      ANO,
            DOC.DOC_DEP_CODIGO         DEP_CODIGO,
            EMP.EMP_DT_APOSENTADORIA   DT_APOSENTADORIA,
            GUI.GUI_PVI_SEQUENCIAL     PVI_SEQUENCIAL,
            DECODE(NVL(TO_NUMBER(GPR.GPR_VALOR_EXCEDENTE),0),0,
                       NVL(TO_NUMBER(GPR.GPR_VALOR),0),
                       NVL(TO_NUMBER((GPR.GRP_VALOR_CALCULADO+GPR.GPR_VALOR_TAXA)*GPR_QTD),0)) CUSTO_LIQUIDO,
            NVL(GPR.GPR_VALOR_PARTICIPACAO,0) + nvl(GPR.GPR_VALOR_EXCEDE,0) PARTICIPACAO
    FROM    GUIAS GUI,
            DOCUMENTOS_COBRANCA DOC,
            GUIAS_PROCEDIMENTOS GPR,
            CADASTROS           EMP
    WHERE   GUI.GUI_NUMERO                 = GPR.GPR_GUI_NUMERO
    AND     GUI.GUI_DOC_NUMERO             = GPR.GPR_GUI_DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = GPR.GPR_GUI_DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = GPR.GPR_GUI_DOC_CBE_CRE_SEQUENCIAL
    AND     GUI.GUI_DOC_DEP_CODIGO         = GPR.GPR_GUI_DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_DEP_CODIGO         = DOC.DOC_DEP_CODIGO
    AND     GUI.GUI_DOC_NUMERO             = DOC.DOC_NUMERO
    AND     GUI.GUI_DOC_CBE_BEN_SIGLA      = DOC.DOC_CBE_BEN_SIGLA
    AND     GUI.GUI_DOC_CBE_CRE_SEQUENCIAL = DOC.DOC_CBE_CRE_SEQUENCIAL
    AND     DOC.DOC_ANO_PAGAMENTO          = P_ANO
    AND     DOC.DOC_CBE_BEN_SIGLA          = 'MED'
    AND     DOC.DOC_DEP_CODIGO             = P_DEP
    AND     GUI.GUI_EMP_NUMERO_MATRICULA   = EMP.EMP_NUMERO_MATRICULA)
             
 LOOP

     UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
     SET    DCB_CUSTO_LIQUIDO = DCB_CUSTO_LIQUIDO + REG_PAMI_GPR.CUSTO_LIQUIDO,
            DCB_PARTICIPACAO  = DCB_PARTICIPACAO  + REG_PAMI_GPR.PARTICIPACAO
     WHERE  DCB_SIGLA         = REG_PAMI_GPR.SIGLA
     AND    DCB_MES           = REG_PAMI_GPR.MES
     AND    DCB_ANO           = REG_PAMI_GPR.ANO
     AND    DCB_DEP_CODIGO    = REG_PAMI_GPR.DEP_CODIGO;

     IF REG_PAMI_GPR.PVI_SEQUENCIAL IS NULL AND REG_PAMI_GPR.DT_APOSENTADORIA IS NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_EMP  = DCB_CUSTO_EMP + REG_PAMI_GPR.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_GPR.SIGLA
         AND    DCB_MES        = REG_PAMI_GPR.MES
         AND    DCB_ANO        = REG_PAMI_GPR.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_GPR.DEP_CODIGO;
         
     ELSIF REG_PAMI_GPR.PVI_SEQUENCIAL IS NOT NULL THEN
     
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_DEP  = DCB_CUSTO_DEP + REG_PAMI_GPR.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_GPR.SIGLA
         AND    DCB_MES        = REG_PAMI_GPR.MES
         AND    DCB_ANO        = REG_PAMI_GPR.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_GPR.DEP_CODIGO;
         
     ELSIF REG_PAMI_GPR.PVI_SEQUENCIAL IS NULL 
           AND REG_PAMI_GPR.DT_APOSENTADORIA <= LAST_DAY(TO_DATE(TO_CHAR(NVL(REG_PAMI_GPR.MES,12),'00')||REG_PAMI_GPR.ANO,'MMYYYY')) THEN
         
         UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
         SET    DCB_CUSTO_APO  = DCB_CUSTO_APO + REG_PAMI_GPR.CUSTO_LIQUIDO
         WHERE  DCB_SIGLA      = REG_PAMI_GPR.SIGLA
         AND    DCB_MES        = REG_PAMI_GPR.MES
         AND    DCB_ANO        = REG_PAMI_GPR.ANO
         AND    DCB_DEP_CODIGO = REG_PAMI_GPR.DEP_CODIGO;     
         
     END IF;            
     
 END LOOP;
 COMMIT;
 
-- PROGRAMA DE SEGURO (SEG)

FOR REG_SEGURO IN 
   (SELECT 'SEG'                     SIGLA,
           PRS_MES                    MES,
           PRS_ANO                    ANO,
           PRS_EMP_DEP_CODIGO_LOTACAO DEP_CODIGO,
           SUM(NVL(PRS_PREMIO_IND_BASICA,0)+
               NVL(PRS_VALOR_COTA_PARTE_EMPRESA,0)) CUSTO_BASICO,
           SUM(NVL(PRS_VALOR_COTA_PARTE_EMPRESA,0)) CUSTO_EMP_BAS,
           SUM(NVL(PRS_PREMIO_IND_COMPLEMENTAR,0))  CUSTO_COMP 
    FROM   PREMIO_SEGURO
    WHERE  PRS_ANO = P_ANO
    AND    PRS_EMP_DEP_CODIGO_LOTACAO LIKE NVL(TO_CHAR(P_DEP),'%')
    GROUP BY 'SEG',
             PRS_MES,
             PRS_ANO,
             PRS_EMP_DEP_CODIGO_LOTACAO)
 
    LOOP
       UPDATE DEMONSTRATIVO_CUSTO_BENEFICIO
       SET    DCB_CUSTO_BASICO  = REG_SEGURO.CUSTO_BASICO,
              DCB_CUSTO_EMP_BAS = REG_SEGURO.CUSTO_EMP_BAS,
              DCB_CUSTO_COMP    = REG_SEGURO.CUSTO_COMP
       WHERE  DCB_SIGLA         = REG_SEGURO.SIGLA
       AND    DCB_MES           = REG_SEGURO.MES
       AND    DCB_ANO           = REG_SEGURO.ANO
       AND    DCB_DEP_CODIGO    = REG_SEGURO.DEP_CODIGO;  
    END LOOP;
    COMMIT;

END;
