SPO trcanlzr_error.log;
SET DEF ON ECHO ON TERM OFF VER OFF SERVEROUT ON SIZE 1000000 NUMF "" SQLP SQL>;
SET SERVEROUT ON SIZE UNL;
REM $Header: 224270.1 trcanlzr.sql 11.4.5.0 2012/11/21 carlos.sierra $
REM
REM Copyright (c) 2000-2013, Oracle Corporation. All rights reserved.
REM
REM AUTHOR
REM   carlos.sierra@oracle.com
REM
REM SCRIPT
REM   trcanlzr.sql
REM
REM DESCRIPTION
REM   This script parses a sql trace file generated by event 10046
REM   levels 1, 4, 8 or 12. Then it produces a comprehensive report
REM   which includes top sql and sql genealogy according to the sql
REM   statements found in the trace provided.
REM
REM PRE-REQUISITES
REM   1. Install Trace Anallyzer tool as per
REM      trca/trca_instructions.html provided.
REM
REM PARAMETERS
REM   1. Read trca/trca_instructions.html.
REM
REM EXECUTION
REM   1. Navigate to trca/run directory
REM   2. Start SQL*Plus connecting as application user that generated
REM      trace to be analyzed
REM   3. Execute script trcanlzr.sql passing name of trace file or
REM      the name of the text file that contains multiple traces (one
REM      per line).
REM
REM EXAMPLES
REM   # cd trca/run
REM   # sqlplus [apps user]
REM   SQL> start trcanlzr.sql [name of your trace file]
REM   SQL> start trcanlzr.sql largesql.trc  <== your trace file
REM   SQL> start trcanlzr.sql control_file.txt  <== your text file
REM   Notice that a single file must end with ".trc" while a control
REM   file must end with something else like ".txt".
REM
REM NOTES
REM   1. For best results, use Trace Analyzer in the same system
REM      where the trace was generated, and connected as the same
REM      user that generated the trace.
REM   2. If using Trace Analyzer in a different system, consider
REM      copying the data dictionary from the SOURCE. Use scripts in
REM      trca/dict for this effect.
REM   3. To analyze multiple files, create a text file that contains
REM      the names of the trace files to be analyzed, and provide
REM      this filename as the inline parameter to the Trace Analyzer.
REM      This small text file with names of traces (one per line),
REM      should also be located in the the input directory.
REM   4. If you need the input directory be something else than UDUMP
REM      use then trca/utl/tacdiri1.sql connected as SYS.
REM   5. For possible errors see trcanlzr_error.log generated under
REM      the SQL*Plus default directory.
REM
DEF tool_repository_schema = 'TRCANLZR';
DEF tool_administer_schema = 'TRCADMIN';
DEF role_name = 'TRCA_USER_ROLE';
SELECT * FROM session_roles;
SET ROLE &&role_name.;
SELECT * FROM session_roles;
COL libraries FOR A64;
SELECT SUBSTR(text, INSTR(text, ' ', 1, 3) + 1,  INSTR(text, ' ', 1, 6) - INSTR(text, ' ', 1, 3)) libraries
  FROM all_source
 WHERE owner = '&&tool_administer_schema.'
   AND line = 2
   AND text LIKE '%$Header%'
 ORDER BY 1;
SELECT status||' '||object_type||' '||object_name libraries
  FROM all_objects
 WHERE owner = '&&tool_administer_schema.'
   AND object_type LIKE 'PACKAGE%'
 ORDER BY 1;
COL lib_count NEW_V lib_count FOR 999;
COL role_count NEW_V role_count FOR 999;
SELECT COUNT(*) lib_count FROM all_objects WHERE owner = '&&tool_administer_schema.' AND object_type = 'PACKAGE' AND status = 'VALID';
SELECT COUNT(*) role_count FROM user_role_privs WHERE granted_role IN ('&&role_name.', 'DBA');
SELECT granted_role FROM user_role_privs WHERE granted_role IN ('&&role_name.', 'DBA');
SELECT user FROM dual;
SET TERM ON ECHO OFF;
WHENEVER SQLERROR EXIT SQL.SQLCODE;
BEGIN
  IF &&role_count. < 1 THEN
    RAISE_APPLICATION_ERROR(-20109, 'User "'||USER||'" lacks required "&&role_name." role. Request: "GRANT &&role_name. TO '||USER||';" to your DBA.');
  END IF;
  IF &&lib_count. < 3 THEN
    RAISE_APPLICATION_ERROR(-20110, 'User "'||USER||'" lacks required "&&role_name." role or &&tool_repository_schema. is not properly installed. Review installation NN_*.log files.');
  END IF;
END;
/
WHENEVER SQLERROR CONTINUE;
SET TERM ON ECHO OFF;
PRO
PRO Parameter 1:
PRO Trace Filename or control_file.txt (required)
PRO
DEF input_filename = &1;
PRO
PRO Value passed to trcanlzr.sql:
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO TRACE_FILENAME: &&input_filename.
PRO
PRO Analyzing &&input_filename.
PRO
DEF _SQLPLUS_RELEASE
SET TERM OFF HEA ON LIN 2000 PAGES 1000 TRIMS ON TI OFF TIMI OFF;
COL connected_user NEW_V connected_user FOR A30;
SELECT user connected_user FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') current_time FROM DUAL;
SELECT * FROM v$version;
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET TERM ON ECHO OFF;
PRO ***
PRO *** NOTE:
PRO *** If you get one of these errors it means &&tool_repository_schema. is not installed:
PRO ***   PLS-00201: identifier '&&tool_administer_schema..TRCA$P' must be declared
PRO ***   ORA-00904: "&&tool_administer_schema."."TRCA$G"."VALIDATE_USER": invalid identifier
PRO *** In such case look for errors in NN_*.log files created during install.
PRO ***
CL SCR;
PRO ... please wait ...
SET TERM OFF;
COL libraries FOR A64;
SELECT object_type||' '||object_name||' ('||status||')' library
  FROM all_objects
 WHERE owner = UPPER('&&tool_administer_schema.')
   AND object_type IN ('PACKAGE', 'PACKAGE BODY', 'PROCEDURE', 'FUNCTION')
 ORDER BY
       object_type, object_name;
EXEC &&tool_administer_schema..trca$p.set_nls;
EXEC &&tool_administer_schema..trca$g.general_initialization;
VAR v_tool_execution_id NUMBER;
EXEC :v_tool_execution_id := &&tool_administer_schema..trca$p.get_tool_execution_id;
COL tool_execution_id NEW_V tool_execution_id FOR A17;
SELECT TO_CHAR(:v_tool_execution_id) tool_execution_id FROM DUAL;
COL tool_version FOR A16 HEA 'Tool Version';
SELECT &&tool_administer_schema..trca$g.get_param('tool_version', 'I') tool_version FROM DUAL;
COL install_date FOR A16 HEA 'Install Date';
SELECT &&tool_administer_schema..trca$g.get_param('install_date', 'I') install_date FROM DUAL;
COL host_name FOR A128 HEA 'Host Name';
SELECT &&tool_administer_schema..trca$g.get_param('tool_host_name', 'I') host_name FROM DUAL;
COL column_value FOR A128 HEA 'Directories';
SELECT column_value FROM TABLE(&&tool_administer_schema..trca$g.directories);
COL column_value FOR A128 HEA 'Libraries';
SELECT column_value FROM TABLE(&&tool_administer_schema..trca$g.packages);
WHENEVER SQLERROR CONTINUE;
SELECT directory_name||' '||directory_path directories FROM dba_directories WHERE directory_name LIKE 'SQLT$%' OR directory_name LIKE 'TRCA$%' ORDER BY 1;
WHENEVER SQLERROR EXIT SQL.SQLCODE;
PRO
PRO In case of unexpected termination, review file
PRO trca_e&&tool_execution_id..log from output directory
SET TERM ON;
PRO To monitor progress, login into another session and execute:
PRO SQL> SELECT * FROM &&tool_administer_schema..trca$_log_v;;
PRO
PRO ... analyzing trace(s) ...
PRO
SET TERM OFF;
EXEC &&tool_administer_schema..trca$i.trcanlzr(p_file_name => '&&input_filename.', x_tool_execution_id => :v_tool_execution_id);
COL trace_file_name NEW_V trace_file_name FOR A640;
SELECT &&tool_administer_schema..trca$g.get_1st_trace_path_n_name trace_file_name FROM DUAL;
SET TERM ON;
PRO
PRO
PRO Trace Analyzer completed.
PRO Review first trcanlzr_error.log file for possible fatal errors.
PRO Review next trca_e&&tool_execution_id..log for parsing messages and totals.
PRO
PRO Copying now generated files into local directory
PRO
SET TERM OFF ECHO OFF DEF ON FEED OFF FLU OFF HEA OFF LIN 2000 NEWP NONE PAGES 0 SHOW OFF SQLC MIX TAB OFF TRIMS ON VER OFF TI OFF TIMI OFF ARRAY 100 SQLP SQL> BLO . RECSEP OFF SERVEROUT ON SIZE 1000000 FOR TRU;
SET SERVEROUT ON SIZE UNL;
COL column_value FOR A2000;
WHENEVER OSERROR CONTINUE;
WHENEVER SQLERROR CONTINUE;
PRO No fatal errors!
SPO trca_e&&tool_execution_id..txt;
SELECT column_value FROM TABLE(&&tool_administer_schema..trca$g.display_file(:v_tool_execution_id, 'TEXT'));
SPO trca_e&&tool_execution_id..html;
SELECT column_value FROM TABLE(&&tool_administer_schema..trca$g.display_file(:v_tool_execution_id, 'HTML'));
SPO trca_e&&tool_execution_id..log;
SELECT column_value FROM TABLE(&&tool_administer_schema..trca$g.display_file(:v_tool_execution_id, 'LOG'));
SPO OFF;
HOS tkprof &&trace_file_name. trca_e&&tool_execution_id._nosort.tkprof
HOS tkprof &&trace_file_name. trca_e&&tool_execution_id._sort.tkprof sort=prsela exeela fchela
HOS zip -mT trca_e&&tool_execution_id. trca_e&&tool_execution_id.* trcanlzr_error.log
HOS zip -d trca_e&&tool_execution_id. trcanlzr_error.log
HOS unzip -l trca_e&&tool_execution_id.
SET TERM ON;
PRO
PRO File trca_e&&tool_execution_id..zip has been created
PRO
CL COL;
UNDEFINE 1
PRO TRCANLZR completed.
