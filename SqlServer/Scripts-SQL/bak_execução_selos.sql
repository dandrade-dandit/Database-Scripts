--01
USE [GEACutcx]
GO

/****** Object:  Table [dbo].[cor_aeroporto_u]    Script Date: 01/05/2011 17:46:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[cor_aeroporto_u](
	[cd_aerop] [char](4) NOT NULL,
	[no_aerop] [varchar](40) NOT NULL,
	[recv_entity_id] [char](5) NOT NULL,
	[cd_regional] [char](2) NOT NULL,
	[cd_aerop_num] [char](3) NOT NULL,
	[date_created] [datetime] NOT NULL,
	[user_id_created] [char](30) NOT NULL,
	[date_changed] [datetime] NOT NULL,
	[user_id_changed] [char](30) NOT NULL,
	[inactive_ind] [char](1) NOT NULL,
	[active_date] [datetime] NOT NULL,
	[chgstamp] [smallint] NOT NULL,
 CONSTRAINT [P_cor_aeroporto_u] PRIMARY KEY CLUSTERED 
(
	[cd_aerop] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [GEACutcx_dat1]
) ON [GEACutcx_dat1]

GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[cor_aeroporto_u] ADD  CONSTRAINT [DF_cor_aeroporto_u_recv_entity_id]  DEFAULT (1001) FOR [recv_entity_id]
GO


CREATE TRIGGER [dbo].[utrg_del_ut34] 
       ON dbo.cor_aeroporto_u 
       FOR DELETE 
       AS 
 
 DELETE cor_aeroporto_u_comnt_u 
   FROM cor_aeroporto_u_comnt_u, deleted 
  WHERE cor_aeroporto_u_comnt_u.cd_aerop = deleted.cd_aerop
GO

--02
USE [GEACupax]
GO

/****** Object:  Table [dbo].[pax_coletor_u]    Script Date: 01/05/2011 17:52:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING OFF
GO

CREATE TABLE [dbo].[pax_coletor_u](
	[serial] [char](9) NOT NULL,
	[dependencia] [char](3) NOT NULL,
	[sigla] [char](4) NOT NULL,
	[chgstamp] [smallint] NOT NULL,
 CONSTRAINT [P_pax_coletor_u] PRIMARY KEY CLUSTERED 
(
	[serial] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [GEACupax_dat1]
) ON [GEACupax_dat1]

GO

SET ANSI_PADDING OFF
GO


--03
USE [GEACupax]
GO

/****** Object:  Table [dbo].[pax_fiscal_head_u]    Script Date: 01/05/2011 17:55:11 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING OFF
GO

CREATE TABLE [dbo].[pax_fiscal_head_u](
	[cd_aerop] [char](4) NOT NULL,
	[data_mov] [datetime] NOT NULL,
	[cd_cia_aerea] [char](3) NOT NULL,
	[nro_voo] [char](5) NOT NULL,
	[fl_fiscalizado] [char](1) NOT NULL,
	[user_ficalizador] [char](30) NOT NULL,
	[fl_validado] [char](1) NOT NULL,
	[user_validador] [char](30) NOT NULL,
	[chgstamp] [smallint] NOT NULL,
 CONSTRAINT [P_pax_fiscal_head_u] PRIMARY KEY CLUSTERED 
(
	[cd_aerop] ASC,
	[data_mov] ASC,
	[cd_cia_aerea] ASC,
	[nro_voo] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 80) ON [GEACupax_dat1]
) ON [GEACupax_dat1]

GO

SET ANSI_PADDING OFF
GO

CREATE TRIGGER [dbo].[utrg_del_uqaa] 
    ON dbo.pax_fiscal_head_u 
   FOR DELETE 
AS 
 
    DELETE pax_fiscal_head_u_comnt_u 
      FROM pax_fiscal_head_u_comnt_u, deleted 
     WHERE pax_fiscal_head_u_comnt_u.cd_aerop = deleted.cd_aerop 
       AND pax_fiscal_head_u_comnt_u.data_mov = deleted.data_mov 
       AND pax_fiscal_head_u_comnt_u.cd_cia_aerea = deleted.cd_cia_aerea 
       AND pax_fiscal_head_u_comnt_u.nro_voo = deleted.nro_voo 

    DELETE pax_fiscal_det_u 
      FROM pax_fiscal_det_u, deleted 
     WHERE pax_fiscal_det_u.cd_aerop = deleted.cd_aerop 
       AND pax_fiscal_det_u.data_mov = deleted.data_mov 
       AND pax_fiscal_det_u.cd_cia_aerea = deleted.cd_cia_aerea 
       AND pax_fiscal_det_u.nro_voo = deleted.nro_voo
GO

--04
tabela nova

--05
tabela nova

--todas as procedures

USE [GEACupax]
GO

/****** Object:  StoredProcedure [dbo].[Proc_Incluir_Selo_Coletor]    Script Date: 01/05/2011 18:05:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.Proc_Incluir_Selo_Coletor    Script Date: 19/09/2008 15:19:59 ******/


CREATE PROCEDURE [dbo].[Proc_Incluir_Selo_Coletor]
(	
	@arquivo			char(40), 
	@nro_linha			int, 
	@linha				char(30), 
	@cd_aerop_num		char(3), 
	@tp_selo			char(1), 
	@nro_selo			char(14), 
	@tp_baixa			char(1), 
	@serie_coletor		char(15), 
	@cpf_agente			char(11), 
	@status_linha		char(1), 
	@user_id_created	char(30), 
	@date_created		datetime
	
)
AS
	INSERT INTO  pax_selos_coletados_u 
				(arquivo, nro_linha, linha, cd_aerop_num, tp_selo, nro_selo, tp_baixa, serie_coletor, cpf_agente, status_linha, user_id_created, date_created)
	VALUES		
				(@arquivo, @nro_linha, @linha, @cd_aerop_num, @tp_selo, @nro_selo, @tp_baixa, @serie_coletor, @cpf_agente, @status_linha, @user_id_created, @date_created)
	
RETURN 




GO

/****** Object:  StoredProcedure [dbo].[carta_cia_voos_inconsistentes]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.carta_cia_voos_inconsistentes    Script Date: 19/09/2008 15:19:59 ******/



/*

exec carta_cia_voos_inconsistentes 'SBRJ', '20070928', 'TAM', 'TODOS', 'Pedro Ferreira', 'José Muñoz', 'Coordinado Tarifa de Embarque', 'Brasilia', 'FITC', 'Gerente Aeroporto'

CF N.º                     /FITC(            )2007                                                          RIO DE JANEIRO, 28 de setembro de 2007
select * from DBSprqt..payable_entity c
select * from GEACrpt..gvw_dependencias
select * from GEACcust..params_custodia_u


select * from DBSrrcv..recv_entity


*/

CREATE      proc [dbo].[carta_cia_voos_inconsistentes]
			(@p_cd_aerop			varchar(4) 
			,@p_data_mov        	datetime
			,@p_cd_cia_aerea 		varchar(3)
			,@p_nro_voo				varchar(5)
			,@p_nome_func_cia		varchar(60)
			,@p_nome_func_infraero	varchar(60)
			,@p_cargo_func_infraero	varchar(60)
			,@p_cidade				varchar(60)
			,@p_sigla_area			varchar(30)
			,@p_cargo_resp_cia		varchar(60)
)
as

declare @v_data_emisao		datetime
set @v_data_emisao			= getdate()

select nro_voo_lista
	,rpe_informado			= a.tot_rpe
	,selos_confirmados		= a.sel_conf_dom_ele + a.sel_conf_int_ele
	,diferencia				= case when a.tot_rpe - (a.sel_conf_dom_ele + a.sel_conf_int_ele) < 0 then
									(a.tot_rpe - (a.sel_conf_dom_ele + a.sel_conf_int_ele)) * -1
								else
									a.tot_rpe - (a.sel_conf_dom_ele + a.sel_conf_int_ele)
								end
	,selos_lidos			= a.sel_lid_tot
	,selos_lido_coletor		= a.sel_lid_tot
	,observacao				= Case when a.tot_rpe 								= 0 				then 'RPE não informado.'
								when (a.sel_conf_dom_ele + a.sel_conf_int_ele) 	= 0 				then 'Falta Arquivo de Confirmação.'
								when (a.sel_conf_dom_ele + a.sel_conf_int_ele) 	<> a.tot_rpe 		then 'RPE e Arquivo de Confirmação Diferentes.'
								when (a.sel_conf_dom_ele + a.sel_conf_int_ele) 	<> a.sel_lid_tot 	then 'Arquivo de Confirmação Diferente a Leitura de Infraero.'
								when a.tot_rpe 									<> a.sel_lid_tot 	then 'RPE Diferente a Leitura de Infraero.'
								end
	,@p_nome_func_cia
	,upper(@p_nome_func_infraero)
	,@p_cargo_func_infraero
	,@p_cidade			
	,@p_cd_aerop
	,@p_data_mov
	,@p_cd_cia_aerea
	,'CF N.º                     /' +  Ltrim(rtrim(@p_sigla_area)) + ' / '
	+ convert(varchar(4),(year(@p_data_mov))) cf
	,ltrim(rtrim(d.city_name)) + ', '
	+ convert(varchar(2),(day(@v_data_emisao))) + ' de '
	+ case when month(@v_data_emisao) = 1 then 'janeiro'
		 when month(@v_data_emisao) = 2 then 'fevereiro'
		 when month(@v_data_emisao) = 3 then 'março'
		 when month(@v_data_emisao) = 4 then 'abril'
		 when month(@v_data_emisao) = 5 then 'maio'
		 when month(@v_data_emisao) = 6 then 'junho'
		 when month(@v_data_emisao) = 7 then 'julho'
		 when month(@v_data_emisao) = 8 then 'agosto'
		 when month(@v_data_emisao) = 9 then 'setembro'
		 when month(@v_data_emisao) = 10 then 'outubro'
		 when month(@v_data_emisao) = 11 then 'novembro'
		 when month(@v_data_emisao) = 12 then 'dezembro' end
	+ ' de '+ convert(varchar(4),(year(@v_data_emisao))) cidade_data
	,ltrim(rtrim(b.no_aerop))		no_aerop
	,case when left(ltrim(rtrim(c.no_cia_aerea)),3) = c.cd_cia_aerea then ltrim(rtrim(c.no_cia_aerea))	
			else c.cd_cia_aerea + ' - ' + ltrim(rtrim(c.no_cia_aerea))	end no_cia_aerea
	,@p_sigla_area sigla_area
	,ltrim(rtrim(d.addr_line_1)) 
	+ ' ' + ltrim(rtrim(d.addr_line_2)) 
	+ ' ' + ltrim(rtrim(d.addr_line_3)) 
	+ ' ' + ltrim(rtrim(d.street_or_post_office_box_1)) 
	+ ' ' + 'Fone:(0xx)(' +  ltrim(rtrim(d.phone_area_city_code)) + ') ' + ltrim(rtrim(d.phone_nbr)) end_linha_1

	,'CEP ' + ltrim(rtrim(d.postal_code)) 
	+ ' - ' + ltrim(rtrim(d.city_name))
	+ ' - ' + ltrim(rtrim(d.country_sub_entity_code)) 
	+ ' - BRASIL   Fax:(0xx)(' +  ltrim(rtrim(d.fax_area_city_code)) + ') ' + ltrim(rtrim(d.fax_nbr)) end_linha_2

	,'HOME PAGE: http://www.infraero.gov.br' end_linha_3
	,ltrim(rtrim(@p_cargo_resp_cia))	cargo_resp_cia
	,convert(varchar(10),@p_data_mov, 103)  data_ref
	,'Continuação        CF N.º                     /' +  Ltrim(rtrim(@p_sigla_area)) + ' / '
	+ convert(varchar(4),(year(@p_data_mov))) continuacao
from pax_fiscal_det_u a (nolock) 
inner join GEACutcx..cor_aeroporto_u b (nolock )
on b.cd_aerop					= a.cd_aerop
inner join GEACutcx..cor_cia_aerea_u c (nolock )
on c.cd_cia_aerea				= a.cd_cia_aerea
left join DBSrrcv..recv_entity d(nolock)
on d.recv_entity_id		= b.recv_entity_id
where a.cd_aerop				= @p_cd_aerop
and a.data_mov					= @p_data_mov
and a.cd_cia_aerea				= @p_cd_cia_aerea
and a.nro_voo					= @p_nro_voo
and a.fl_dados_inconsistentes	= 'S'
and ( ((a.sel_conf_dom_ele + a.sel_conf_int_ele) 	<> a.tot_rpe)
	or ((sel_lid_dom_ele + sel_lid_int_ele)			> a.tot_rpe))
--and tot_rpe 				<> sel_conf_dom_ele + sel_conf_int_ele
order by 6





GO

/****** Object:  StoredProcedure [dbo].[gsp_atualiza_tranf_selo_elec]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_atualiza_tranf_selo_elec    Script Date: 19/09/2008 15:19:59 ******/


CREATE proc [dbo].[gsp_atualiza_tranf_selo_elec]
as
set nocount on
drop table atu_transf_selos_elec
create table atu_transf_selos_elec (linha varchar (255))
GRANT SELECT ON atu_transf_selos_elec TO geaccarga
GRANT INSERT ON atu_transf_selos_elec TO geaccarga

declare  @p_arquivo char(255)
	,@p_execute char(255)
SELECT 	 --@p_arquivo = 'Takeshi_teste.txt'
	@p_arquivo = 'Takeshi.txt'
 	,@p_execute = 'master..xp_cmdshell ''bcp GEACupax..atu_transf_selos_elec in \\S-SEAN217\DriveF\ConfSelo\' + ltrim(rtrim(@p_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''

EXECUTE  (@p_execute)
IF @@ERROR = 0
begin
	print 'ok'
end
	




GO

/****** Object:  StoredProcedure [dbo].[gsp_baixa_selacao_selos]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_baixa_selacao_selos    Script Date: 19/09/2008 15:19:59 ******/


/*
EXECUTE SQLSSIII.GEACupax.dbo.gsp_baixa_selacao_selos 'SBLO','1','19000101','29001231','TAM','%','AA11111111','ZZ99999999','20070626','114000','','','0','01',2005
*/

CREATE proc [dbo].[gsp_baixa_selacao_selos]	 (
		@p_cd_aerop 				char(4)
		,@p_cd_terminal        		char(10)
		,@p_dt_inicio_periodo  		char(10)
		,@p_dt_final_periodo   		char(10)
		,@p_cd_cia_aerea       		char(3)
		,@p_nro_rste           		char(6)
		,@p_nro_inicio_selo    		char(10)
		,@p_nro_final_selo     		char(10)
		,@p_dt_mov      			datetime
		,@p_hh_mm   				char(6)
		,@p_selo_status_1  			char(1)
		,@p_selo_status_2  			char(1)
		,@p_selo_status_3  			char(1)
		,@p_cd_motivo  				char(2) 
		,@p_ano_remesa				integer	) WITH RECOMPILE
		As

declare @dt_inicio datetime
declare @dt_final  datetime

set @dt_inicio = @p_dt_inicio_periodo + '00:00:00.000'
set @dt_final  = @p_dt_final_periodo + '23:59:59.000'

IF EXISTS (SELECT 1  FROM GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
		WHERE cd_aerop   	= @p_cd_aerop
		AND cd_terminal  	= @p_cd_terminal
		AND dt_mov          = @p_dt_mov
		AND hh_mm    		= @p_hh_mm
		AND selo_status  	= @p_selo_status_1
		AND cd_motivo  		= @p_cd_motivo)
BEGIN
	SELECT  
		nro_selo
		,dt_mov
		,selo_status  = Case selo_status  When '0' Then 'Disponível' 
		When '1' Then 'Distribuído' 
		When '2' Then 'Utilizado' 
		When '3' Then 'Devolvido'
		When '4' Then 'Cancelado' 
		When '5' Then 'Transeferido' 
		When '9' Then 'Enviado' 
		Else selo_status End
		,ativado 			= '0'
		,cd_selo_status  	= selo_status 
		,ano_remesa			= year(dt_mov)
	FROM
		GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
	WHERE
		cd_aerop   			= @p_cd_aerop
		AND cd_terminal  	= @p_cd_terminal
		AND dt_mov          = @p_dt_mov
		AND hh_mm    		= @p_hh_mm
		AND selo_status  	= @p_selo_status_1
		AND cd_motivo  		= @p_cd_motivo
		
END
ELSE
BEGIN
	if rtrim( @p_nro_rste ) = '%'
	Begin
		SELECT 
			A.nro_selo
			,A.dt_mov
			,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
			When '1' Then 'Distribuído' 
			When '2' Then 'Utilizado' 
			When '3' Then 'Devolvido'
			When '4' Then 'Cancelado' 
			When '5' Then 'Transeferido' 
			When '9' Then 'Enviado' 
			Else A.selo_status End
			,ativado 			= '0'
			,cd_selo_status  	= A.selo_status 
			,A.ano_remesa
		FROM  GEACupax..pax_selo_u A (NOLOCK)
		INNER JOIN GEACupax..pax_entrega_selo_line_u B (NOLOCK)
		ON B.cd_aerop				= A.cd_aerop
		and B.cd_terminal		= A.cd_terminal
		and B.cd_cia_aerea		= A.cd_cia_aerea
		and B.nro_rste   		= A.nro_rste 
		and B.ano_remesa		= A.ano_remesa
		INNER JOIN GEACupax..pax_entrega_selo_ctrl_u C (NOLOCK INDEX = idx_entrega_rste)
		ON C.cd_aerop 			= B.cd_aerop
		and C.cd_terminal 		= B.cd_terminal
		and C.dt_entrega 		= B.dt_entrega
		and C.hh_entrega 		= B.hh_entrega
		and C.cd_cia_aerea 		= B.cd_cia_aerea
		and C.nro_rste 			= B.nro_rste
		and C.cd_situacao_rste 	= '1' -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
		WHERE
			A.cd_aerop				= @p_cd_aerop
			and A.cd_terminal			= @p_cd_terminal
			and A.dt_mov				Between @dt_inicio and @dt_final
			and A.cd_cia_aerea			= @p_cd_cia_aerea
			and A.nro_selo				Between @p_nro_inicio_selo and @p_nro_final_selo
			and A.selo_status			IN (@p_selo_status_1, @p_selo_status_2, @p_selo_status_3) 
			and A.ano_remesa			= @p_ano_remesa
		Union
		
		SELECT  
			nro_selo
			,dt_mov
			,selo_status  = Case selo_status  When '0' Then 'Disponível' 
			When '1' Then 'Distribuído' 
			When '2' Then 'Utilizado' 
			When '3' Then 'Devolvido'
			When '4' Then 'Cancelado' 
			When '5' Then 'Transeferido' 
			When '9' Then 'Enviado' 
			Else selo_status End
			,ativado = '0'
			,cd_selo_status  	= selo_status 
			,ano_remesa			= year(dt_mov)
		FROM
			GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
		WHERE 
			cd_aerop            = @p_cd_aerop
			and cd_terminal         = @p_cd_terminal
			and dt_mov              = @p_dt_mov
			and hh_mm               = @p_hh_mm
			and selo_status         = @p_selo_status_1
			and cd_motivo           = @p_cd_motivo
	END
	Else
	Begin
		SELECT 
			A.nro_selo
			,A.dt_mov
			,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
			When '1' Then 'Distribuído' 
			When '2' Then 'Utilizado' 
			When '3' Then 'Devolvido'
			When '4' Then 'Cancelado' 
			When '5' Then 'Transeferido' 
			When '9' Then 'Enviado' 
			Else A.selo_status End
			,ativado = '0'
			,cd_selo_status  = A.selo_status 
			,A.ano_remesa
		FROM
		GEACupax..pax_selo_u A (NOLOCK)
		INNER JOIN GEACupax..pax_entrega_selo_line_u B (NOLOCK)
		ON B.cd_aerop				= A.cd_aerop
		and B.cd_terminal		= A.cd_terminal
		and B.cd_cia_aerea		= A.cd_cia_aerea
		and B.nro_rste   		= A.nro_rste 
		and B.ano_remesa		= A.ano_remesa
		INNER JOIN GEACupax..pax_entrega_selo_ctrl_u C (NOLOCK INDEX = idx_entrega_rste)
		ON C.cd_aerop 			= B.cd_aerop
		and C.cd_terminal 		= B.cd_terminal
		and C.dt_entrega 		= B.dt_entrega
		and C.hh_entrega 		= B.hh_entrega
		and C.cd_cia_aerea 		= B.cd_cia_aerea
		and C.nro_rste 			= B.nro_rste
		and C.cd_situacao_rste 	= '1' -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
		WHERE
			A.cd_aerop				= @p_cd_aerop
			and A.cd_terminal			= @p_cd_terminal
			and A.dt_mov				Between @dt_inicio and @dt_final
			and A.cd_cia_aerea			= @p_cd_cia_aerea
			and A.nro_rste				= @p_nro_rste
			and A.nro_selo				Between @p_nro_inicio_selo and @p_nro_final_selo
			and A.selo_status			IN (@p_selo_status_1, @p_selo_status_2, @p_selo_status_3) 
			and A.ano_remesa			= @p_ano_remesa
		UNION
		SELECT  
			nro_selo
			,dt_mov
			,selo_status  = Case selo_status  When '0' Then 'Disponível' 
							When '1' Then 'Distribuído' 
							When '2' Then 'Utilizado' 
							When '3' Then 'Devolvido'
							When '4' Then 'Cancelado' 
							When '5' Then 'Transeferido' 
							When '9' Then 'Enviado' 
							Else selo_status End
			,ativado = '0'
			,cd_selo_status  = selo_status 
			,ano_remesa		= year(dt_mov)
		FROM
			GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
		WHERE 
			cd_aerop            = @p_cd_aerop
			AND cd_terminal         = @p_cd_terminal
			AND dt_mov              = @p_dt_mov
			AND hh_mm               = @p_hh_mm
			AND selo_status         = @p_selo_status_1
			AND cd_motivo           = @p_cd_motivo
	End
END







GO

/****** Object:  StoredProcedure [dbo].[gsp_baixa_selacao_selos_bk_jm20070626]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_baixa_selacao_selos_bk_jm20070626    Script Date: 19/09/2008 15:19:59 ******/
CREATE       Proc [dbo].[gsp_baixa_selacao_selos_bk_jm20070626]	 (
		@p_cd_aerop 				char(4)
		,@p_cd_terminal        		char(10)
		,@p_dt_inicio_periodo  		char(10)
		,@p_dt_final_periodo   		char(10)
		,@p_cd_cia_aerea       		char(3)
		,@p_nro_rste           		char(6)
		,@p_nro_inicio_selo    		char(10)
		,@p_nro_final_selo     		char(10)
		,@p_dt_mov      			datetime
		,@p_hh_mm   				char(6)
		,@p_selo_status  			char(1)
		,@p_cd_motivo  				char(2) 
		,@p_ano_remesa				integer	) WITH RECOMPILE
		As

declare @dt_inicio datetime
declare @dt_final  datetime

set @dt_inicio = @p_dt_inicio_periodo + '00:00:00.000'
set @dt_final  = @p_dt_final_periodo + '23:59:59.000'

IF EXISTS (SELECT 1  FROM GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
		WHERE cd_aerop   	= @p_cd_aerop
		AND cd_terminal  	= @p_cd_terminal
		AND dt_mov          = @p_dt_mov
		AND hh_mm    		= @p_hh_mm
		AND selo_status  	= @p_selo_status
		AND cd_motivo  		= @p_cd_motivo)
BEGIN
    SELECT  
                nro_selo
                ,dt_mov
                ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                                When '1' Then 'Distribuído' 
                                When '2' Then 'Utilizado' 
                                When '3' Then 'Devolvido'
                                When '4' Then 'Cancelado' 
                                When '5' Then 'Transeferido' 
                                When '9' Then 'Enviado' 
                                Else selo_status End
                ,ativado 			= '0'
                ,cd_selo_status  	= selo_status 
				,ano_remesa			= year(dt_mov)
    FROM
            GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
    WHERE
            cd_aerop   			= @p_cd_aerop
            AND cd_terminal  	= @p_cd_terminal
            AND dt_mov          = @p_dt_mov
            AND hh_mm    		= @p_hh_mm
            AND selo_status  	= @p_selo_status
            AND cd_motivo  		= @p_cd_motivo

END
ELSE
BEGIN

   IF @p_selo_status = 'X'
   BEGIN
      if rtrim( @p_nro_rste ) = '%'
      Begin
         SELECT 
            A.nro_selo
            ,A.dt_mov
            ,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
                     When '1' Then 'Distribuído' 
                     When '2' Then 'Utilizado' 
                     When '3' Then 'Devolvido'
                     When '4' Then 'Cancelado' 
                     When '5' Then 'Transeferido' 
                     When '9' Then 'Enviado' 
                     Else A.selo_status End
            ,ativado 			= '0'
            ,cd_selo_status  	= A.selo_status 
			,A.ano_remesa
         FROM  GEACupax..pax_selo_u A (NOLOCK)
         INNER JOIN GEACupax..pax_entrega_selo_line_u B (NOLOCK)
         ON B.cd_aerop				= A.cd_aerop
			and B.cd_terminal		= A.cd_terminal
			and B.cd_cia_aerea		= A.cd_cia_aerea
            and B.nro_rste   		= A.nro_rste 
			and B.ano_remesa		= A.ano_remesa
		 INNER JOIN GEACupax..pax_entrega_selo_ctrl_u C (NOLOCK INDEX = idx_entrega_rste)
		 ON C.cd_aerop 			= B.cd_aerop
			and C.cd_terminal 		= B.cd_terminal
			and C.dt_entrega 		= B.dt_entrega
			and C.hh_entrega 		= B.hh_entrega
			and C.cd_cia_aerea 		= B.cd_cia_aerea
			and C.nro_rste 			= B.nro_rste
            and C.cd_situacao_rste 	= '1' -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
         WHERE
                A.cd_aerop				= @p_cd_aerop
            and A.cd_terminal			= @p_cd_terminal
            and A.dt_mov				Between @dt_inicio and @dt_final
            and A.cd_cia_aerea			= @p_cd_cia_aerea
            and A.nro_selo				Between @p_nro_inicio_selo and @p_nro_final_selo
            and A.selo_status			IN ('1','2') 
        
        Union
         
         SELECT  
            nro_selo
            ,dt_mov
            ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                        When '1' Then 'Distribuído' 
                        When '2' Then 'Utilizado' 
                        When '3' Then 'Devolvido'
                        When '4' Then 'Cancelado' 
                        When '5' Then 'Transeferido' 
                        When '9' Then 'Enviado' 
                        Else selo_status End
            ,ativado = '0'
            ,cd_selo_status  	= selo_status 
			,ano_remesa			= year(dt_mov)
         FROM
            GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
         WHERE 
                cd_aerop            = @p_cd_aerop
            and cd_terminal         = @p_cd_terminal
            and dt_mov              = @p_dt_mov
            and hh_mm               = @p_hh_mm
            and selo_status         = @p_selo_status
            and cd_motivo           = @p_cd_motivo
      
      END
      Else
      Begin
         SELECT 
            A.nro_selo
            ,A.dt_mov
            ,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
                     When '1' Then 'Distribuído' 
                     When '2' Then 'Utilizado' 
                     When '3' Then 'Devolvido'
                     When '4' Then 'Cancelado' 
                     When '5' Then 'Transeferido' 
                     When '9' Then 'Enviado' 
                     Else A.selo_status End
            ,ativado = '0'
            ,cd_selo_status  = A.selo_status 
			,A.ano_remesa
		FROM
                    GEACupax..pax_selo_u A (NOLOCK)
         INNER JOIN GEACupax..pax_entrega_selo_line_u B (NOLOCK)
         ON B.cd_aerop				= A.cd_aerop
			and B.cd_terminal		= A.cd_terminal
			and B.cd_cia_aerea		= A.cd_cia_aerea
            and B.nro_rste   		= A.nro_rste 
			and B.ano_remesa		= A.ano_remesa
		 INNER JOIN GEACupax..pax_entrega_selo_ctrl_u C (NOLOCK INDEX = idx_entrega_rste)
		 ON C.cd_aerop 			= B.cd_aerop
			and C.cd_terminal 		= B.cd_terminal
			and C.dt_entrega 		= B.dt_entrega
			and C.hh_entrega 		= B.hh_entrega
			and C.cd_cia_aerea 		= B.cd_cia_aerea
			and C.nro_rste 			= B.nro_rste
            and C.cd_situacao_rste 	= '1' -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
         WHERE
                A.cd_aerop				= @p_cd_aerop
            and A.cd_terminal			= @p_cd_terminal
            and A.dt_mov				Between @dt_inicio and @dt_final
            and A.cd_cia_aerea			= @p_cd_cia_aerea
            and A.nro_rste				= @p_nro_rste
            and A.nro_selo				Between @p_nro_inicio_selo and @p_nro_final_selo
            and A.selo_status			IN ('1','2') 
         
        UNION
         SELECT  
            nro_selo
            ,dt_mov
            ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                        When '1' Then 'Distribuído' 
                        When '2' Then 'Utilizado' 
                        When '3' Then 'Devolvido'
                        When '4' Then 'Cancelado' 
                        When '5' Then 'Transeferido' 
                        When '9' Then 'Enviado' 
                        Else selo_status End
            ,ativado = '0'
            ,cd_selo_status  = selo_status 
			,ano_remesa		= year(dt_mov)
         FROM
            GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
         WHERE 
                cd_aerop            = @p_cd_aerop
            AND cd_terminal         = @p_cd_terminal
            AND dt_mov              = @p_dt_mov
            AND hh_mm               = @p_hh_mm
            AND selo_status         = @p_selo_status
            AND cd_motivo           = @p_cd_motivo
      End
   End
   ELSE
   BEGIN
      if rtrim( @p_nro_rste ) = '%'
      Begin
         SELECT 
            A.nro_selo
            ,A.dt_mov
            ,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
                            When '1' Then 'Distribuído' 
                            When '2' Then 'Utilizado' 
                            When '3' Then 'Devolvido'
                            When '4' Then 'Cancelado' 
                            When '5' Then 'Transeferido' 
                            When '9' Then 'Enviado' 
                            Else A.selo_status End
            ,ativado = '0'
            ,cd_selo_status  = A.selo_status 
			,A.ano_remesa
         FROM GEACupax..pax_selo_u A (NOLOCK)
         INNER JOIN GEACupax..pax_entrega_selo_line_u B (NOLOCK)
         ON B.cd_aerop				= A.cd_aerop
			and B.cd_terminal		= A.cd_terminal
			and B.cd_cia_aerea		= A.cd_cia_aerea
            and B.nro_rste   		= A.nro_rste 
			and B.ano_remesa		= A.ano_remesa
		 INNER JOIN GEACupax..pax_entrega_selo_ctrl_u C (NOLOCK INDEX = idx_entrega_rste)
		 ON C.cd_aerop 			= B.cd_aerop
			and C.cd_terminal 		= B.cd_terminal
			and C.dt_entrega 		= B.dt_entrega
			and C.hh_entrega 		= B.hh_entrega
			and C.cd_cia_aerea 		= B.cd_cia_aerea
			and C.nro_rste 			= B.nro_rste
            and C.cd_situacao_rste 	= '1' -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
         WHERE
                A.cd_aerop                    = @p_cd_aerop
            and A.cd_terminal                 = @p_cd_terminal
            and A.dt_mov                      Between @dt_inicio and @dt_final
            and A.cd_cia_aerea                = @p_cd_cia_aerea
            and A.nro_selo     						Between @p_nro_inicio_selo and @p_nro_final_selo
            and A.selo_status    					= @p_selo_status
         		
         UNION
         SELECT  
            nro_selo
            ,dt_mov
            ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                            When '1' Then 'Distribuído' 
                            When '2' Then 'Utilizado' 
                            When '3' Then 'Devolvido'
                            When '4' Then 'Cancelado' 
                            When '5' Then 'Transeferido' 
                            When '9' Then 'Enviado' 
                            Else selo_status End
            ,ativado 			= '0'
            ,cd_selo_status  	= selo_status 
			,ano_remesa			= year(dt_mov)
        FROM
             GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
        WHERE
             cd_aerop				= @p_cd_aerop
             AND cd_terminal		= @p_cd_terminal
             AND dt_mov				= @p_dt_mov
             AND hh_mm				= @p_hh_mm
             AND selo_status		= @p_selo_status
             AND cd_motivo			= @p_cd_motivo
      End
      Else
      Begin
         SELECT 
            A.nro_selo
            ,A.dt_mov
            ,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
                            When '1' Then 'Distribuído' 
                            When '2' Then 'Utilizado' 
                            When '3' Then 'Devolvido'
                            When '4' Then 'Cancelado' 
                            When '5' Then 'Transeferido' 
                            When '9' Then 'Enviado' 
                            Else A.selo_status End
            ,ativado 			= '0'
            ,cd_selo_status  	= A.selo_status 
			,A.ano_remesa	
         FROM GEACupax..pax_selo_u A (NOLOCK)
         INNER JOIN GEACupax..pax_entrega_selo_line_u B (NOLOCK)
         ON B.cd_aerop				= A.cd_aerop
			and B.cd_terminal		= A.cd_terminal
			and B.cd_cia_aerea		= A.cd_cia_aerea
            and B.nro_rste   		= A.nro_rste 
			and B.ano_remesa		= A.ano_remesa
		 INNER JOIN GEACupax..pax_entrega_selo_ctrl_u C (NOLOCK INDEX = idx_entrega_rste)
		 ON C.cd_aerop 			= B.cd_aerop
			and C.cd_terminal 		= B.cd_terminal
			and C.dt_entrega 		= B.dt_entrega
			and C.hh_entrega 		= B.hh_entrega
			and C.cd_cia_aerea 		= B.cd_cia_aerea
			and C.nro_rste 			= B.nro_rste
            and C.cd_situacao_rste 	= '1' -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
         WHERE
                A.cd_aerop                    = @p_cd_aerop
            and A.cd_terminal                 = @p_cd_terminal
            and A.dt_mov                      Between @dt_inicio and @dt_final
            and A.cd_cia_aerea                = @p_cd_cia_aerea
            and A.nro_rste                    = @p_nro_rste
            and A.nro_selo                    Between @p_nro_inicio_selo and @p_nro_final_selo
            and A.selo_status                 = @p_selo_status
         
         UNION
         SELECT  
            nro_selo
            ,dt_mov
            ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                            When '1' Then 'Distribuído' 
                            When '2' Then 'Utilizado' 
                            When '3' Then 'Devolvido'
                            When '4' Then 'Cancelado' 
                            When '5' Then 'Transeferido' 
                            When '9' Then 'Enviado' 
                            Else selo_status End
            ,ativado 			= '0'
            ,cd_selo_status  	= selo_status 
			,ano_remesa			= year(dt_mov)
        FROM
             GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
        WHERE
             cd_aerop				= @p_cd_aerop
             AND cd_terminal		= @p_cd_terminal
             AND dt_mov				= @p_dt_mov
             AND hh_mm				= @p_hh_mm
             AND selo_status		= @p_selo_status
             AND cd_motivo			= @p_cd_motivo
      End
   END
END











GO

/****** Object:  StoredProcedure [dbo].[gsp_baixa_selacao_selos_temp]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_baixa_selacao_selos_temp    Script Date: 19/09/2008 15:19:59 ******/



CREATE Proc [dbo].[gsp_baixa_selacao_selos_temp] (
	@p_cd_aerop 			char(4)
               ,@p_cd_terminal        		char(10)
               ,@p_dt_inicio_periodo  		char(10)
               ,@p_dt_final_periodo   		char(10)
               ,@p_cd_cia_aerea       		char(3)
               ,@p_nro_rste           		char(6)
               ,@p_nro_inicio_selo    		char(10)
               ,@p_nro_final_selo     		char(10)
               ,@p_dt_mov      		datetime
               ,@p_hh_mm   			char(6)
               ,@p_selo_status  		char(1)
               ,@p_cd_motivo  		char(2) )
As


IF EXISTS (SELECT 1  FROM
            GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
        WHERE
            cd_aerop   			= @p_cd_aerop
            AND cd_terminal  	= @p_cd_terminal
            AND dt_mov          = @p_dt_mov
            AND hh_mm    		= @p_hh_mm
            AND selo_status  	= @p_selo_status
            AND cd_motivo  		= @p_cd_motivo)
BEGIN
    SELECT  
                nro_selo
                ,dt_mov
                ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                                When '1' Then 'Distribuído' 
                                When '2' Then 'Utilizado' 
                                When '3' Then 'Devolvido'
                                When '4' Then 'Cancelado' 
                                When '5' Then 'Transeferido' 
                                When '9' Then 'Enviado' 
                                Else selo_status End
                --,ativado  = CASE selo_status  WHEN '2'  THEN '1'  ELSE '0'  END
                ,ativado = '0'
                ,cd_selo_status  = selo_status 
    FROM
            GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
    WHERE
            cd_aerop   			= @p_cd_aerop
            AND cd_terminal  	= @p_cd_terminal
            AND dt_mov          = @p_dt_mov
            AND hh_mm    		= @p_hh_mm
            AND selo_status  	= @p_selo_status
            AND cd_motivo  		= @p_cd_motivo

END
ELSE
BEGIN

    IF @p_selo_status = 'X'
    BEGIN
        SELECT 
            A.nro_selo
            ,A.dt_mov
            ,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
                     When '1' Then 'Distribuído' 
                     When '2' Then 'Utilizado' 
                     When '3' Then 'Devolvido'
                     When '4' Then 'Cancelado' 
                     When '5' Then 'Transeferido' 
                     When '9' Then 'Enviado' 
                     Else A.selo_status End
            --,ativado = CASE A.selo_status  WHEN '2'  THEN '1'  ELSE '0'  END
            ,ativado = '0'
            ,cd_selo_status  = A.selo_status 
        FROM
                     GEACupax..pax_selo_u A (NOLOCK)
        INNER JOIN
                     GEACupax..pax_entrega_selo_ctrl_u B (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
        ON
                     B.nro_rste   = A.nro_rste
            AND B.cd_situacao_rste = '1' --@p_selo_status -- '1'  -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
        WHERE
                     A.cd_aerop       				Like Rtrim(@p_cd_aerop)
            and A.cd_terminal    					Like Rtrim(@p_cd_terminal)
            and Convert(Char(10), A.dt_mov, 112)  	Between @p_dt_inicio_periodo and @p_dt_final_periodo
            and Isnull(A.cd_cia_aerea,'')         		Like Rtrim(@p_cd_cia_aerea)
            and Isnull(A.nro_rste,'')             		Like Rtrim(@p_nro_rste)
            and A.nro_selo     			Between @p_nro_inicio_selo and @p_nro_final_selo
            and A.selo_status    			IN ('1','2') 

        UNION
        SELECT  
            nro_selo
            ,dt_mov
            ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                        When '1' Then 'Distribuído' 
                        When '2' Then 'Utilizado' 
                        When '3' Then 'Devolvido'
                        When '4' Then 'Cancelado' 
                        When '5' Then 'Transeferido' 
                        When '9' Then 'Enviado' 
                        Else selo_status End
            --,ativado  = CASE selo_status  WHEN '2'  THEN '1'  ELSE '0'  END
            ,ativado = '0'
            ,cd_selo_status  = selo_status 
        FROM
            GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
        WHERE
            cd_aerop   		= @p_cd_aerop
            AND cd_terminal  	= @p_cd_terminal
            AND dt_mov           	= @p_dt_mov
            AND hh_mm    		= @p_hh_mm
            AND selo_status  	= @p_selo_status
            AND cd_motivo  		= @p_cd_motivo

    END
    ELSE
    BEGIN
		PRINT  '@p_selo_status <> ''X'''
        SELECT 
            A.nro_selo
            ,A.dt_mov
            ,selo_status = Case A.selo_status  When '0' Then 'Disponível' 
                            When '1' Then 'Distribuído' 
                            When '2' Then 'Utilizado' 
                            When '3' Then 'Devolvido'
                            When '4' Then 'Cancelado' 
                            When '5' Then 'Transeferido' 
                            When '9' Then 'Enviado' 
                            Else A.selo_status End
            --,ativado = CASE A.selo_status  WHEN '2'  THEN '1'  ELSE '0'  END
            ,ativado = '0'
            ,cd_selo_status  = A.selo_status 
        FROM
                GEACupax..pax_selo_u A (NOLOCK)
        INNER JOIN
                GEACupax..pax_entrega_selo_ctrl_u B (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
        ON
                B.nro_rste   = A.nro_rste
                AND B.cd_situacao_rste = '1' --@p_selo_status -- '1'  -- SO UTILIZAR LOS SELOS DONDE NRO_RSTE ESTE CONCLUIDO
        WHERE
                A.cd_aerop       						Like Rtrim(@p_cd_aerop)
                and A.cd_terminal    					Like Rtrim(@p_cd_terminal)
                and Convert(Char(10), A.dt_mov, 112)  	Between @p_dt_inicio_periodo and @p_dt_final_periodo
                and Isnull(A.cd_cia_aerea,'')         	Like Rtrim(@p_cd_cia_aerea)
                and Isnull(A.nro_rste,'')             	Like Rtrim(@p_nro_rste)
                and A.nro_selo     						Between @p_nro_inicio_selo and @p_nro_final_selo
                and A.selo_status    					= @p_selo_status
		
        UNION
        SELECT  
                nro_selo
                ,dt_mov
                ,selo_status  = Case selo_status  When '0' Then 'Disponível' 
                                When '1' Then 'Distribuído' 
                                When '2' Then 'Utilizado' 
                                When '3' Then 'Devolvido'
                                When '4' Then 'Cancelado' 
                                When '5' Then 'Transeferido' 
                                When '9' Then 'Enviado' 
                                Else selo_status End
                --,ativado  = CASE selo_status  WHEN '2'  THEN '1'  ELSE '0'  END
                ,ativado = '0'
                ,cd_selo_status  = selo_status 
        FROM
               GEACupax..pax_baixa_selecao_selos_u (NOLOCK INDEX = P_pax_baixa_selecao_selos_u)
        WHERE
                cd_aerop   			= @p_cd_aerop
                AND cd_terminal  	= @p_cd_terminal
                AND dt_mov          = @p_dt_mov
                AND hh_mm    		= @p_hh_mm
                AND selo_status  	= @p_selo_status
                AND cd_motivo  		= @p_cd_motivo
		
    END
END



GO

/****** Object:  StoredProcedure [dbo].[gsp_consulta_selos]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_consulta_selos    Script Date: 19/09/2008 15:19:59 ******/

--EXECUTE SQLSSII.GEACupax.dbo.gsp_consulta_selos 'SBEG', '1', '20090201', '20090227', '%', '%', 'NULL', 'IA0460029', 'NULL', 'NULL'

CREATE Proc [dbo].[gsp_consulta_selos] (@p_cd_aerop	     	char(4)
			       ,@p_cd_terminal       	char(10)
			       ,@p_dt_inicio_periodo 	DATETIME
			       ,@p_dt_final_periodo  	DATETIME
			       ,@p_cd_cia_aerea      	CHAR(3)
			       ,@p_nro_rste          	CHAR(6)
			       ,@p_nro_selo_inicial		CHAR(10) 		= 'NULL'
			       ,@p_nro_selo_final		CHAR(10) 		= 'NULL'
			       ,@p_discrepancia			VARCHAR(10) 	= 'NULL'
			       ,@p_arquivo				VARCHAR(255) 	= 'NULL'

	)	
As

    IF @p_nro_selo_inicial	 = 'NULL'
    BEGIN
        SET @p_nro_selo_inicial 	= '0000000000'
    END 

    IF @p_nro_selo_final	 = 'NULL'
    BEGIN
        SET @p_nro_selo_final 		= 'ZZ99999999'
    END 

	SET @p_arquivo = UPPER(RTRIM(LTRIM(@p_arquivo)))

    SELECT
	 b.nro_selo 
	,b.dt_mov
	,rtrim(f.descp)	selo_status_discrepancia
	,b.cd_aerop_destino
	,b.cd_terminal_destino
	,cd_cia_aerea 	= Isnull(a.cd_cia_aerea,'')
	,nro_rste     	= Isnull(a.nro_rste,'')
	,discrepancia 	= ltrim(rtrim(c.descp)) 
	,b.date_created
	,b.user_id_created
	,b.user_id_changed
	,b.date_changed
	,b.selo_status status
	,b.arquivo
	,a.ano_remesa 	ano_remessa_selo
	,b.ano_remesa 	ano_remessa_discrapencia
	,rtrim(d.descp)	selo_status_selo
	,a.billing_line_id	
	into #temp_saida
	FROM GEACupax..pax_discrep_selo_u b (NOLOCK INDEX = P_pax_discrep_selo_u)
    LEFT JOIN GEACupax..pax_selo_u      a	(NOLOCK INDEX = P_pax_selo_u)
    ON 	a.nro_selo    = b.nro_selo
    LEFT JOIN GEACCOMMON..dropdowndw_u  c	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	c.tbl_code		= 'DSEF'
	and c.code			= b.discrepancia
    LEFT JOIN GEACCOMMON..dropdowndw_u  d	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	d.tbl_code		= 'STSL'
	and d.code			= a.selo_status
    LEFT JOIN GEACCOMMON..dropdowndw_u  f	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	f.tbl_code		= 'STSL'
	and f.code			= b.selo_status
    WHERE 
	    b.cd_aerop_destino    			= @p_cd_aerop
	and b.cd_terminal_destino 			= @p_cd_terminal
	and convert(char(8),b.dt_mov,112) Between convert(char(8),@p_dt_inicio_periodo,112) and convert(char(8),@p_dt_final_periodo,112)
	and Isnull(a.cd_cia_aerea,'')   	Like Rtrim(@p_cd_cia_aerea)
	and Isnull(a.nro_rste,'')       	Like Rtrim(@p_nro_rste)
	and b.selo_status_ind 				<> 'C'
--	and b.nro_selo 						BETWEEN  @p_nro_selo_inicial	AND @p_nro_selo_final
	and b.discrepancia					= CASE WHEN @p_discrepancia = 'NULL' THEN b.discrepancia ELSE @p_discrepancia END
	and UPPER(ltrim(rtrim(b.arquivo)))	= CASE WHEN @p_arquivo		= 'NULL' THEN UPPER(ltrim(rtrim(b.arquivo)))  ELSE @p_arquivo END


	if @p_nro_selo_inicial 	<> '0000000000' or @p_nro_selo_final <> 'ZZ99999999'
		delete from #temp_saida
		where nro_selo < @p_nro_selo_inicial or nro_selo > @p_nro_selo_final
		
	select * from #temp_saida order by nro_selo





GO

/****** Object:  StoredProcedure [dbo].[gsp_consulta_selos_elec]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_consulta_selos_elec    Script Date: 19/09/2008 15:20:00 ******/
CREATE PROC [dbo].[gsp_consulta_selos_elec] (
					@p_cd_aerop	     		char(4)
			       ,@p_cd_terminal       	char(10)
			       ,@p_dt_inicio_periodo 	DATETIME
			       ,@p_dt_final_periodo  	DATETIME
			       ,@p_cd_cia_aerea      	CHAR(3)
			       ,@p_nro_selo_inicial		CHAR(20) 		= 'NULL'
			       ,@p_nro_selo_final		CHAR(20) 		= 'NULL'
			       ,@p_discrepancia			VARCHAR(10) 	= 'NULL'
			       ,@p_arquivo				VARCHAR(255) 	= 'NULL'
	)	
As

    IF @p_nro_selo_inicial	 = 'NULL'
    BEGIN
        SET @p_nro_selo_inicial 	= '00000000000000000000'
    END 

    IF @p_nro_selo_final	 = 'NULL'
    BEGIN
        SET @p_nro_selo_final 	= 'ZZ999999999999999999'
    END 

    SELECT
	 b.nro_selo_elec 
	,b.dt_mov
	,selo_status 	= Case 	
				When b.selo_status = '2' or b.selo_status = 'U' Then 'Utilização' 
				When b.selo_status = '3' Then 'Devolução' 
				When b.selo_status = '4' or b.selo_status = 'C' Then 'Cancelamento' 
				When b.selo_status = 'T' Then 'Transferido' 
				else 'Não Definido' + '(' + b.selo_status + ')'End
	,b.cd_aerop_destino
	,b.cd_terminal_destino
	,cd_cia_aerea 	= Isnull(b.cd_cia_aerea,'')
	,''
	,c.descp
	,b.arquivo
	,b.date_created
	,b.user_id_created
	,b.user_id_changed
	,b.date_changed
	,b.selo_status status
    FROM GEACupax..pax_discrep_selo_elec_u 		b (NOLOCK INDEX = P_pax_discrep_selo_elec_u)
    LEFT JOIN GEACupax..pax_selo_elec_u      	a	(NOLOCK INDEX = PK_pax_selo_elec_u)
    ON 	a.nro_selo_elec    = b.nro_selo_elec
    LEFT JOIN GEACCOMMON..dropdowndw_u    		c	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	c.tbl_code		= 'DSEL'
	and c.code			=  b.discrepancia
    WHERE 
	    b.cd_aerop_destino    			Like Rtrim(@p_cd_aerop)
	and b.cd_terminal_destino 			Like Rtrim(@p_cd_terminal)
	and convert(varchar(8),b.dt_mov,112) Between convert(varchar(8),@p_dt_inicio_periodo,112) and convert(varchar(8),@p_dt_final_periodo,112)
	and Isnull(b.cd_cia_aerea,'')   	Like Rtrim(@p_cd_cia_aerea)
	and b.nro_selo_elec					BETWEEN  @p_nro_selo_inicial	AND @p_nro_selo_final
	and b.discrepancia					= CASE WHEN @p_discrepancia = 'NULL' THEN b.discrepancia ELSE @p_discrepancia END
	and b.arquivo						= CASE WHEN @p_arquivo = 'NULL' THEN b.arquivo ELSE @p_arquivo END


SELECT * FROM GEACupax..pax_discrep_selo_elec_u







GO

/****** Object:  StoredProcedure [dbo].[gsp_consulta_selos_temp]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_consulta_selos    Script Date: 19/09/2008 15:19:59 ******/

--EXECUTE SQLSSII.GEACupax.dbo.gsp_consulta_selos_temp 'SBEG', '1', '20090201', '20090227', '%', '%', 'NULL', 'NULL', 'NULL', 'NULL'

CREATE proc [dbo].[gsp_consulta_selos_temp] 
					(@p_cd_aerop	     	char(4)
			       ,@p_cd_terminal       	char(10)
			       ,@p_dt_inicio_periodo 	DATETIME
			       ,@p_dt_final_periodo  	DATETIME
			       ,@p_cd_cia_aerea      	CHAR(3)
			       ,@p_nro_rste          	CHAR(6)
			       ,@p_nro_selo_inicial		CHAR(10) 		= 'NULL'
			       ,@p_nro_selo_final		CHAR(10) 		= 'NULL'
			       ,@p_discrepancia			VARCHAR(10) 	= 'NULL'
			       ,@p_arquivo				VARCHAR(255) 	= 'NULL'

	)	
As

    IF @p_nro_selo_inicial	 = 'NULL'
    BEGIN
        SET @p_nro_selo_inicial 	= '0000000000'
    END 

    IF @p_nro_selo_final	 = 'NULL'
    BEGIN
        SET @p_nro_selo_final 		= 'ZZ99999999'
    END 

	SET @p_arquivo = UPPER(RTRIM(LTRIM(@p_arquivo)))

    SELECT
	 b.nro_selo 
	,b.dt_mov
	,rtrim(f.descp)	selo_status_discrepancia
	,b.cd_aerop_destino
	,b.cd_terminal_destino
	,cd_cia_aerea 	= Isnull(a.cd_cia_aerea,'')
	,nro_rste     	= Isnull(a.nro_rste,'')
	,discrepancia 	= ltrim(rtrim(c.descp)) 
	,b.date_created
	,b.user_id_created
	,b.user_id_changed
	,b.date_changed
	,b.selo_status status
	,b.arquivo
	,a.ano_remesa 	ano_remessa_selo
	,b.ano_remesa 	ano_remessa_discrapencia
	,rtrim(d.descp)	selo_status_selo
	,a.billing_line_id	
	into #temp_saida
	FROM GEACupax..pax_discrep_selo_u b (NOLOCK INDEX = P_pax_discrep_selo_u)
    LEFT JOIN GEACupax..pax_selo_u      a	(NOLOCK INDEX = P_pax_selo_u)
    ON 	a.nro_selo		= b.nro_selo
	and a.ano_remesa	= b.ano_remesa
    LEFT JOIN GEACCOMMON..dropdowndw_u  c	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	c.tbl_code		= 'DSEF'
	and c.code			= b.discrepancia
    LEFT JOIN GEACCOMMON..dropdowndw_u  d	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	d.tbl_code		= 'STSL'
	and d.code			= a.selo_status
    LEFT JOIN GEACCOMMON..dropdowndw_u  f	(NOLOCK INDEX = PK_dropdowndw_u)
    ON 	f.tbl_code		= 'STSL'
	and f.code			= b.selo_status
    WHERE 
	    b.cd_aerop_destino    			= @p_cd_aerop
	and b.cd_terminal_destino 			= @p_cd_terminal
	and convert(char(8),b.dt_mov,112) Between convert(char(8),@p_dt_inicio_periodo,112) and convert(char(8),@p_dt_final_periodo,112)
	and Isnull(a.cd_cia_aerea,'')   	Like Rtrim(@p_cd_cia_aerea)
	and Isnull(a.nro_rste,'')       	Like Rtrim(@p_nro_rste)
	and b.selo_status_ind 				<> 'C'
	--and (b.nro_selo 					>=  @p_nro_selo_inicial	AND b.nro_selo <= @p_nro_selo_final)
	and b.discrepancia					= CASE WHEN @p_discrepancia = 'NULL' THEN b.discrepancia ELSE @p_discrepancia END
	and UPPER(ltrim(rtrim(b.arquivo)))	= CASE WHEN @p_arquivo		= 'NULL' THEN UPPER(ltrim(rtrim(b.arquivo)))  ELSE @p_arquivo END

	if @p_nro_selo_inicial 	<> '0000000000' or @p_nro_selo_final <> 'ZZ99999999'
		delete from #temp_saida
		where nro_selo < @p_nro_selo_inicial or nro_selo > @p_nro_selo_final
		
	select * from #temp_saida



GO

/****** Object:  StoredProcedure [dbo].[gsp_del_faixa_selos]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_del_faixa_selos    Script Date: 19/09/2008 15:20:00 ******/


CREATE PROCEDURE [dbo].[gsp_del_faixa_selos] (
				@p_cd_aerop Char (10),
				@p_cd_terminal Char (1),
				@p_nro_selo_inicial Char (10),
				@p_nro_selo_final Char (10),
				@p_quantidade Int )
As

Declare @w_count Int


-- Busca a quantidade de selos para o aeroporto/terminal selecionado
Select 
  @w_count = Count (1) 
From 
  GEACupax..pax_selo_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final And
  cd_aerop = @p_cd_aerop And
  cd_terminal = @p_cd_terminal

If ( @w_count <> @p_quantidade )
  Begin
    Select 'A quantidade de selos ' + LTrim ( Str (@w_count) ) + ' não é igual à quantidade informada: ' + LTrim ( Str (@p_quantidade) ) + ' para o aeroporto: ' + @p_cd_aerop + ' terminal: ' + @p_cd_terminal
    Return 5
  End

Begin Tran

-- Grava registros que serão deletados da tabela de selos
Insert Into dbo.gtb_log_upd_selos
  (nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp)
Select
  nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp
from
  GEACupax..pax_selo_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final

If ( @@Rowcount <> @p_quantidade )
  Begin
    Select 'A quantidade de selos selecionados diferente de: ' + LTrim ( Str ( @p_quantidade ) )
    Rollback Tran
    Return 5
  End

-- Grava registros que serão deletados do log de selo
Insert Into dbo.gtb_log_upd_selos_log
  (nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp)
Select
  nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp
from
  GEACupax..pax_selo_log_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final

-- Grava registros que serão deletados da discrepância
Insert Into dbo.gtb_log_upd_discrep
  ( cd_aerop_destino, cd_terminal_destino, dt_mov, selo_status, nro_selo, selo_status_ind, cd_cia_aerea, discrepancia, cd_motivo, arquivo, tp_coletor, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp )
Select
  cd_aerop_destino, cd_terminal_destino, dt_mov, selo_status, nro_selo, selo_status_ind, cd_cia_aerea, discrepancia, cd_motivo, arquivo, tp_coletor, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp
From
  GEACupax..pax_discrep_selo_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final


-- Apaga a tabela de selos
Delete
  GEACupax..pax_selo_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final

If ( @@Rowcount <> @p_quantidade )
  Begin
    Select 'A quantidade de selos excluidos diferente de: ' + LTrim ( Str ( @p_quantidade ) )
    Rollback Tran
    Return 5
  End

-- Apaga a tabela de log de selos
Delete
  GEACupax..pax_selo_log_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final

-- Apaga a tabela de discrepancia
Delete
  GEACupax..pax_discrep_selo_u
Where
  nro_selo Between @p_nro_selo_inicial And @p_nro_selo_final

Commit Tran




GO

/****** Object:  StoredProcedure [dbo].[gsp_del_faixa_selos_arq]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_del_faixa_selos_arq    Script Date: 19/09/2008 15:20:00 ******/



CREATE   PROCEDURE [dbo].[gsp_del_faixa_selos_arq] (
		@p_caminho       	Char (255),
		@p_nome_arquivo  	Char  (30))
As

Declare @w_count Int

Set NoCount On
Declare  @v_cd_aerop             	char(4)
	,@v_terminal             		char(1)
	,@return_xp_cmd_shell  			integer
	,@p_execute              		varchar(255)
	,@v_qtde_selos_total     		Integer
	,@v_qtde_selos_excluidos 		Integer


Declare  @curr_nro_selo_inicial  	char(10)
	,@curr_nro_selo_final    		char(10)
	,@curr_qtde_selos        		int 
	,@ERROR 						int 

Select   @v_cd_aerop  	= Substring(@p_nome_arquivo,1,4)
	,@v_terminal  		= Substring(@p_nome_arquivo,5,1) 


If Not Exists (Select 1 from GEACutcx..cor_terminal_aerop_u (NOLOCK index = P_cor_terminal_aerop_u)  
               Where cd_aerop = @v_cd_aerop and terminal = @v_terminal)
Begin
	Select 'Aeroporto/Terminal Inexistente.'
	Return 
End 


Create Table #table_arq_interval (nro_selo_inicial char(10), nro_selo_final char(10), qtde_selos int)

Select @p_execute = 'BULK INSERT #table_arq_interval FROM "' + Rtrim(@p_caminho) + '\' + Rtrim(@p_nome_arquivo) + '"'
Execute (@p_execute)

If @@error <> 0
Begin
	Select 'Erro ao carregar a tabela temporária #table_arq_interval'
	Return
End

Declare selo_arq_interval Cursor For
Select 
	 nro_selo_inicial  
	,nro_selo_final    
	,qtde_selos        
from 
	#table_arq_interval


Open selo_arq_interval

Fetch Next From selo_arq_interval 
Into     @curr_nro_selo_inicial  
		,@curr_nro_selo_final    
		,@curr_qtde_selos        

While @@Fetch_Status = 0

Begin
	SELECT @ERROR = 0

	BEGIN TRAN
	
	-- Busca a quantidade de selos para o aeroporto/terminal selecionado
	Select 
		@v_qtde_selos_total = Count (1) 
	From 
		GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
	Where
	    nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final 
	And cd_aerop       = @v_cd_aerop 
	And cd_terminal    = @v_terminal
	
	
	If ( @v_qtde_selos_total > @curr_qtde_selos )
	Begin
		Select 'A quantidade de selos ' + LTrim ( Str (@v_qtde_selos_total) ) + ' não é maior à quantidade informada: ' + LTrim ( Str (@curr_qtde_selos) ) + ' para o intervalo: ' +   @curr_nro_selo_inicial  + ' à ' + @curr_nro_selo_final     
		Select @ERROR = 1
		Goto Prox
	End
	
	/** Valida se o status do Selo está <> de 0 
	If Exists (Select * From GEACupax..pax_selo_u
	    Where nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final 
	      And cd_aerop       = @v_cd_aerop 
	      And cd_terminal    = @v_terminal
	      And selo_status   <> 0)
	Begin
	Select 'Existe Selo com o Status diferente de 0 para o intervalo:' +   @curr_nro_selo_inicial  + ' à ' + @curr_nro_selo_final     
	Goto Prox
	End
	**/
	
	-- Grava registros que serão deletados da tabela de selos
	Insert Into dbo.gtb_log_upd_selos
	(nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp)
	Select
		nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp
	from
	    GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
	Where
		nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final and selo_status = '0'
	
	-- Grava registros que serão deletados do log de selo
	Insert Into dbo.gtb_log_upd_selos_log
	(nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp)
	Select
      nro_selo, tp_natureza, dt_mov, selo_status, cd_motivo, tp_fat, cd_cia_aerea, tp_unid, cd_aerop, cd_terminal, tp_unid_destino, cd_aerop_destino, cd_terminal_destino, dt_confirma, cd_aerop_utilizacao, cd_terminal_utilizacao, nfm, nro_rste, tp_coletor, item_fat, billing_line_id, billing_int_date, billing_int_type, billing_user_1, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp
from
	GEACupax..pax_selo_log_u (NOLOCK INDEX = P_pax_selo_log_u)
	Where
		nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final and selo_status = '0'
	
	-- Grava registros que serão deletados da discrepância
	Insert Into dbo.gtb_log_upd_discrep
	( cd_aerop_destino, cd_terminal_destino, dt_mov, selo_status, nro_selo, selo_status_ind, cd_cia_aerea, discrepancia, cd_motivo, arquivo, tp_coletor, date_created, user_id_created, date_changed, user_id_changed, inactive_ind, active_date, chgstamp )
	Select
	  *
	From
	 GEACupax..pax_discrep_selo_u (NOLOCK INDEX = P_pax_discrep_selo_u)
	Where
	 	nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final and selo_status = '0'
	
	
	-- Apaga a tabela de selos
	Delete
		GEACupax..pax_selo_u
	Where
		nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final and selo_status = '0'
	
	Select @v_qtde_selos_excluidos = @@Rowcount 
	
	-- Apaga a tabela de log de selos
	Delete
		GEACupax..pax_selo_log_u
	Where
		nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final 
	
	-- Apaga a tabela de discrepancia
	Delete
		GEACupax..pax_discrep_selo_u
	Where
		nro_selo Between @curr_nro_selo_inicial And @curr_nro_selo_final 
	
	Select '======================================================================================='
	Select ' Intervalo informado no arquivo: ' + @curr_nro_selo_inicial + ' à ' +  @curr_nro_selo_final
	Select ' Qauntidade informada no arquivo: ' + LTrim(Str(@curr_qtde_selos))
	Select ' Quantidade Total de Selos na base de dados: ' + LTrim(Str(@v_qtde_selos_total))
	Select ' Quantidade de Selos Excluídos: ' + LTrim(Str(@v_qtde_selos_excluidos))
	
	Prox:
	IF @ERROR = 1
		ROLLBACK TRAN
	ELSE
		COMMIT TRAN

	Fetch Next From selo_arq_interval 
	Into     @curr_nro_selo_inicial  
			,@curr_nro_selo_final    
			,@curr_qtde_selos        

End 
Close selo_arq_interval 
Deallocate selo_arq_interval




GO

/****** Object:  StoredProcedure [dbo].[gsp_del_selos_discrep]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_del_selos_discrep    Script Date: 19/09/2008 15:20:00 ******/


CREATE  Proc [dbo].[gsp_del_selos_discrep] 
(    @p_cd_aerop_destino		CHAR(4)
	,@p_cd_terminal_destino		CHAR(10)
	,@p_dt_mov					DATETIME
	,@p_selo_status             CHAR(1)
	,@p_nro_selo				CHAR(10)
)

As

DELETE pax_discrep_selo_u 
WHERE  cd_aerop_destino					= @p_cd_aerop_destino
  AND cd_terminal_destino				= @p_cd_terminal_destino
  AND convert(varchar(8),dt_mov,112)	= convert(varchar(8),@p_dt_mov,112)
  AND selo_status						= @p_selo_status
  AND nro_selo							= @p_nro_selo





GO

/****** Object:  StoredProcedure [dbo].[gsp_del_selos_elec_discrep]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_del_selos_elec_discrep    Script Date: 19/09/2008 15:20:00 ******/



CREATE PROC [dbo].[gsp_del_selos_elec_discrep] 
(    @p_cd_aerop_destino		CHAR(4)
	,@p_cd_terminal_destino		CHAR(10)
	,@p_dt_mov					DATETIME
	,@p_selo_status             CHAR(1)
	,@p_nro_selo_elec			CHAR(14)
)

As

DELETE pax_discrep_selo_elec_u 
WHERE  cd_aerop_destino					= @p_cd_aerop_destino
  AND cd_terminal_destino				= @p_cd_terminal_destino
  AND convert(varchar(8),dt_mov,112)	= convert(varchar(8),@p_dt_mov,112)
  AND selo_status						= @p_selo_status
  AND nro_selo_elec						= @p_nro_selo_elec





GO

/****** Object:  StoredProcedure [dbo].[gsp_demonstrativo_arqs_faltantes]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_demonstrativo_arqs_faltantes    Script Date: 19/09/2008 15:20:00 ******/
CREATE PROCEDURE [dbo].[gsp_demonstrativo_arqs_faltantes] (
			@p_dt_inicio 	Datetime,
			@p_dt_fim	Datetime )
AS


/* TABELA COM OS DADOS
DROP TABLE gtb_upax_demonstrativo_arqs_faltantes
CREATE TABLE gtb_upax_demonstrativo_arqs_faltantes (
  dt_inicio		Datetime,
  dt_fim		Datetime,
  cd_aerop_utilizacao 	Char (4),
  dt_voo 		Datetime,
  nro_voo		Char (5),
  rpe_e 		Int,
  rpe 			Int,
  lidos_conf 		Int,
  not_conf 		Int,
  not_lidos 		Int,
  cld_conf 		Int,
  trans_conf 		Int,
  selos_fis 		Int )

grant select on gtb_upax_demonstrativo_arqs_faltantes to public
-- Select top 1 * from gtb_upax_demonstrativo_arqs_faltantes
truncate table gtb_upax_demonstrativo_arqs_faltantes
*/

-- APAGA OS REGISTROS ANTERIORES
Delete gtb_upax_demonstrativo_arqs_faltantes Where dt_voo >= @p_dt_inicio AND dt_voo < Dateadd (dd, 1, @p_dt_fim)


/* TABELA INTERMEDIÁRIA */
CREATE TABLE #gtb_upax_demonstrativo_leitura_selos (
  dt_inicio		Datetime,
  dt_fim		Datetime,
  cd_aerop_utilizacao 	Char (4),
  dt_voo 		Datetime,
  nro_voo		Char (5),
  rpe_e 		Int,
  rpe 			Int,
  lidos_conf 		Int,
  not_conf 		Int,
  not_lidos 		Int,
  cld_conf 		Int,
  trans_conf 		Int,
  selos_fis 		Int )


/* CRIA TABELA TEMPORÁRIA COM OS SELOS ELETRÔNICOS */
Select
  dt_voo 		= Convert ( Datetime, Convert ( Char (10), dt_voo_rea, 101) ),
  nro_voo 		= voo_rea,
  a.*
Into
  #gtb_selos_elec
From 
  pax_selo_elec_u a ( NOLOCK INDEX = IDX01_BI )
Inner Join 
  GEACutcx..cor_tpfatur_selo_u b(nolock)
on 
  b.cd_aerop 	 = a.cd_aerop_utilizacao 	AND
  b.terminal 	 = a.cd_terminal_utilizacao	AND
  b.dt_vigencia  = ( Select MAX (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c (nolock)
		     Where c.cd_aerop 	 = a.cd_aerop_utilizacao	AND
		           c.terminal 	 = a.cd_terminal_utilizacao	AND
			   c.dt_vigencia <= a.dt_voo_rea )
Where 
  selo_status 		= '2' 				AND
  cd_cia_aerea 		= 'TAM' 			AND
  dt_voo_rea 		>= @p_dt_inicio			AND
  dt_voo_rea 		<  Dateadd (dd, 1, @p_dt_fim)	AND
  b.inactive_ind 	= '0'				AND
  b.tp_fatur_pax 	= '1'				AND
  b.tp_selo		= 'E'

/* FIM CRIAÇÃO TABELA TEMPORÁRIA */


-- INSERE DADOS DE RPE Eletrônico
Insert Into #gtb_upax_demonstrativo_leitura_selos
Select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao 	= a.cd_aerop,
  dt_voo		= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
  nro_voo 		= Right ( Ltrim ( Rtrim (nro_voo) ), 4),
  qtde_rpe_e 		= Sum ( pax_dom_fat ),
  qtde_rpe 		= 0,
  qtde_lidos_conf 	= 0,
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= 0,
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  rpax_emb_voo_u a ( NOLOCK ) 
Inner Join 
  GEACutcx..cor_tpfatur_selo_u b ( NOLOCK )
on 
  b.cd_aerop 	 = a.cd_aerop 		AND
  b.terminal 	 = a.cd_terminal	AND
  b.dt_vigencia  = ( Select MAX (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK )
		     Where c.cd_aerop 	 = a.cd_aerop		AND
			   c.terminal 	 = a.cd_terminal	AND
			   c.dt_vigencia <= a.dt_voo )
Where
  a.cd_cia_aerea 	= 'TAM'				AND
  a.dt_voo 		Between @p_dt_inicio AND @p_dt_fim	AND
  a.user_id_created	= 'RPE ELETRÔNICO'		AND
  a.inactive_ind 	= '0'				AND
  b.inactive_ind 	= '0'				AND
  b.tp_fatur_pax 	= '1'				AND
  b.tp_selo 		= 'E'
Group By
  a.cd_aerop,
  dt_voo,
  Right ( Ltrim ( Rtrim (nro_voo) ), 4)

-- RPE Digitado
Insert Into #gtb_upax_demonstrativo_leitura_selos
Select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao 	= a.cd_aerop,
  dt_voo		= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
  nro_voo 		= Right ( Ltrim ( Rtrim (nro_voo) ), 4),
  qtde_rpe_e 		= 0,
  qtde_rpe 		= Sum ( pax_dom_fat ),
  qtde_lidos_conf 	= 0,
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= 0,
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  rpax_emb_voo_u a ( NOLOCK ) 
Inner Join 
  GEACutcx..cor_tpfatur_selo_u b (NOLOCK)
On 
  b.cd_aerop 		= a.cd_aerop 	AND
  b.terminal 		= a.cd_terminal	AND
  b.dt_vigencia 	= ( Select MAX (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c (nolock)
			    Where c.cd_aerop 	= a.cd_aerop	AND
				  c.terminal 	= a.cd_terminal	AND
				  c.dt_vigencia <= a.dt_voo )
Where
  a.cd_cia_aerea 	= 'TAM'				AND
  a.dt_voo 		BETWEEN @p_dt_inicio AND @p_dt_fim	AND
  a.user_id_created	<> 'RPE ELETRÔNICO'		AND
  a.inactive_ind 	= '0'				AND
  b.inactive_ind 	= '0'				AND
  b.tp_fatur_pax 	= '1'				AND
  b.tp_selo 		= 'E'
Group By
  a.cd_aerop,
  dt_voo,
  Right ( Ltrim ( Rtrim (nro_voo) ), 4)


-- Selos físicos
Insert Into #gtb_upax_demonstrativo_leitura_selos
Select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_mov		= Convert ( Datetime, Convert ( Char (10), dt_mov, 101) ),
  nro_voo 		= '',
  qtde_rpe 		= 0,
  qtde_rpe_e 		= 0,
  qtde_rpe 		= 0,
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= 0,
  qtde_trans_conf 	= 0,
  qtde_lidos_conf_fis 	= Count (1)
From
  pax_selo_u a ( NOLOCK INDEX = IDX02_BI )
Inner Join
  GEACutcx..cor_tpfatur_selo_u b ( NOLOCK )
On
  b.cd_aerop 	 = a.cd_aerop_utilizacao 	AND
  b.terminal 	 = a.cd_terminal_utilizacao	AND
  b.dt_vigencia  = ( Select MAX (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK )
		     Where c.cd_aerop     = a.cd_aerop_utilizacao	AND
			   c.terminal     = a.cd_terminal_utilizacao	AND
			   c.dt_vigencia  <= a.dt_mov )
Where 
  cd_cia_aerea 		= 'TAM' 		   AND
  selo_status 		= '2' 			   AND
  dt_mov  		>= @p_dt_inicio		   AND
  dt_mov       		< Dateadd (dd, 1, @p_dt_fim) AND
  tp_natureza 		= 'D'			   AND
  b.inactive_ind 	= '0'			   AND
  b.tp_fatur_pax 	= '1'			   AND
  b.tp_selo		= 'E'
Group By
  cd_aerop_utilizacao,
  dt_mov



-- Selos eletrônicos lidos e confirmados
Insert Into #gtb_upax_demonstrativo_leitura_selos
Select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_voo		= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
  nro_voo,
  qtde_rpe_e 	  	= 0,
  qtde_rpe 	  	= 0,
  qtde_lidos_conf 	= Count (1),
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= 0,
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  #gtb_selos_elec
Where 
  tp_coletor 		= '01' 		AND
  dt_confirma 		<> '1900-01-01' 		
Group By
  cd_aerop_utilizacao,
  dt_voo,
  nro_voo

-- Selos lidos e não confirmados
Insert Into #gtb_upax_demonstrativo_leitura_selos
Select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_voo		= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
  nro_voo,
  qtde_rpe_e 		= 0,
  qtde_rpe 		= 0,
  qtde_lidos_conf 	= 0,
  qtde_not_conf 	= Count (1),
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= 0,
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  #gtb_selos_elec
Where 
  tp_coletor 		= '01' 		AND
  dt_confirma 		= '1900-01-01'			
Group By
  cd_aerop_utilizacao,
  dt_voo,
  nro_voo


--Selos não lidos, apenas confirmados como utilizados
Insert Into #gtb_upax_demonstrativo_leitura_selos
Select
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_voo 		= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
  nro_voo,
  qtde_rpe_e 		= 0,
  qtde_rpe 		= 0,
  qtde_lidos_conf 	= 0,
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= Count (1),
  qtde_cld_conf 	= 0,
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  #gtb_selos_elec
Where 
  tp_coletor  	= '9' 		AND
  dt_confirma 	<> '1900-01-01'	
Group By
  cd_aerop_utilizacao,
  dt_voo,
  nro_voo

--Selos confirmados como cancelados
Insert Into #gtb_upax_demonstrativo_leitura_selos
select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_voo 		= Convert ( Datetime, Convert ( Char (10), dt_voo_rea, 101) ),
  nro_voo 		= voo_rea,
  qtde_rpe_e 		= 0,
  qtde_rpe 		= 0,
  qtde_lidos_conf 	= 0,
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= Count (1),
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  pax_selo_elec_u a  ( NOLOCK INDEX = IDX01_BI )
Inner Join 
  GEACutcx..cor_tpfatur_selo_u b ( NOLOCK )
On
  b.cd_aerop 	= a.cd_aerop_utilizacao 	AND
  b.terminal 	= a.cd_terminal_utilizacao	AND
  b.dt_vigencia = ( Select max(dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK )
		    Where c.cd_aerop 	= a.cd_aerop_utilizacao		AND
			  c.terminal 	= a.cd_terminal_utilizacao	AND
			  c.dt_vigencia <= a.dt_voo_rea )
Where
  cd_cia_aerea 		= 'TAM' 			AND
  selo_status 		= '4' 				AND
  dt_voo_rea 		>= @p_dt_inicio			AND
  dt_voo_rea 		< Dateadd (dd, 1, @p_dt_fim)	AND
  dt_confirma 		<> '1900-01-01' 		AND
  b.inactive_ind 	= '0'				AND
  b.tp_fatur_pax 	= '1'				AND
  b.tp_selo		= 'E'
Group By
  cd_aerop_utilizacao,
  dt_voo_rea,
  voo_rea


--Selos confirmados como tranferidos
Insert Into #gtb_upax_demonstrativo_leitura_selos
select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_voo 		= Convert ( Datetime, Convert ( Char (10), dt_voo_rea, 101) ),
  nro_voo 		= voo_rea,
  qtde_rpe_e 		= 0,
  qtde_rpe 		= 0,
  qtde_lidos_conf 	= 0,
  qtde_not_conf 	= 0,
  qtde_not_lidos 	= 0,
  qtde_cld_conf 	= Count (1),
  qtde_trans_conf 	= 0,
  qtde_selos_fis 	= 0
From 
  pax_selo_elec_u a  ( NOLOCK INDEX = IDX01_BI )
Inner Join 
  GEACutcx..cor_tpfatur_selo_u b ( NOLOCK )
On
  b.cd_aerop 	= a.cd_aerop_utilizacao 	AND
  b.terminal 	= a.cd_terminal_utilizacao	AND
  b.dt_vigencia = ( Select max(dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK )
		    Where c.cd_aerop 	= a.cd_aerop_utilizacao		AND
			  c.terminal 	= a.cd_terminal_utilizacao	AND
			  c.dt_vigencia <= a.dt_voo_rea )
Where
  cd_cia_aerea 		= 'TAM' 			AND
  selo_status 		= '5' 				AND
  dt_voo_rea 		>= @p_dt_inicio			AND
  dt_voo_rea 		< Dateadd (dd, 1, @p_dt_fim)	AND
  dt_confirma 		<> '1900-01-01' 		AND
  b.inactive_ind 	= '0'				AND
  b.tp_fatur_pax 	= '1'				AND
  b.tp_selo		= 'E'
Group By
  cd_aerop_utilizacao,
  dt_voo_rea,
  voo_rea


Insert Into gtb_upax_demonstrativo_arqs_faltantes
select 
  @p_dt_inicio,
  @p_dt_fim,
  cd_aerop_utilizacao,
  dt_voo,
  '', --  nro_voo,
  Sum (rpe_e),
  Sum (rpe),
  Sum (lidos_conf),
  Sum (not_conf),
  Sum (not_lidos),
  Sum (cld_conf),
  Sum (trans_conf),
  Sum (selos_fis)
From
  #gtb_upax_demonstrativo_leitura_selos
Group By
  cd_aerop_utilizacao,
  dt_voo--,
--  nro_voo


/*
set nocount on
exec dbo.gsp_gera_demonstrativo_leitura_selos '10/01/2004', '10/15/2004'
*/




GO

/****** Object:  StoredProcedure [dbo].[gsp_demonstrativo_desempenho_leitura_selos]    Script Date: 01/05/2011 18:05:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_demonstrativo_desempenho_leitura_selos    Script Date: 19/09/2008 15:20:01 ******/



CREATE    PROCEDURE [dbo].[gsp_demonstrativo_desempenho_leitura_selos] (
				@p_dt_inicio 	Datetime,
				@p_dt_fim	Datetime )
AS

/*
truncate table dbo.gtb_desempenho_leitura_selos_u

DROP TABLE dbo.gtb_desempenho_leitura_selos_u
CREATE TABLE dbo.gtb_desempenho_leitura_selos_u (
			dt_inicio 		Datetime,
			dt_fim			Datetime,
			cd_aerop 		Char (4),
			dt_voo			Datetime,
			coletor_f 		Int,
			manual_arq_f 	Int,
			coletor_e 		Int,
			manual_arq_e 	Int,
			manual_ativ_e	Int,
			rpe 			Int )
grant select on dbo.gtb_desempenho_leitura_selos_u to public
*/

declare @p_dataini		varchar(8)
	,@p_datafin			varchar(8)

select @p_dataini		= convert(varchar(8), @p_dt_inicio, 112)
	,@p_datafin			= convert(varchar(8), @p_dt_fim, 112)


/*Delete dbo.gtb_desempenho_leitura_selos_u Where dt_voo >= @p_dt_inicio AND dt_voo < Dateadd (dd, 1, @p_dt_fim)*/
Delete dbo.gtb_desempenho_leitura_selos_u Where dt_voo between @p_dataini and @p_datafin

Insert Into dbo.gtb_desempenho_leitura_selos_u
Select  
	@p_dt_inicio,
	@p_dt_fim,
	cd_aerop,
	dt_voo,
	coletor_f 		= sum(qtde_coletor_f),
	manual_arq_f 	= sum(qtde_manual_arq_f),
	coletor_e 		= sum(qtde_coletor_e),
	manual_arq_e 	= sum(qtde_manual_arq_e),
	manual_ativ_e	= sum(qtde_manual_ati_e),
	rpe 			= sum(qtde_rpe)
From (

  --Selos físicos
  Select 	
    cd_aerop 			= cd_aerop_utilizacao,
    dt_voo 				= Convert ( Datetime, Convert ( Char (10), dt_mov, 101) ),
    qtde_coletor_f 		= case when tp_coletor = '01' then 1 else 0 end,
    qtde_manual_arq_f 	= case when tp_coletor = '03' then 1 else 0 end,
    qtde_coletor_e 		= 0,
    qtde_manual_arq_e 	= 0,
    qtde_manual_ati_e 	= 0,
    qtde_rpe 			= 0
  From 
    pax_selo_u a ( NOLOCK INDEX = IDX01_BI) 
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK index = P_cor_tpfatur_selo_u) 
  On 
    b.cd_aerop 		= a.cd_aerop_utilizacao 	AND
    b.terminal 		= a.cd_terminal_utilizacao	AND
    b.dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK index = P_cor_tpfatur_selo_u) 
			    Where c.cd_aerop    = a.cd_aerop_utilizacao		AND
				  c.terminal    = a.cd_terminal_utilizacao	AND
				  c.dt_vigencia <= a.dt_mov )
  Where 
    selo_status 		= '2' 
	and convert(varchar(8), dt_mov, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'
    and b.tp_fatur_pax 	= '1'

  UNION ALL

  --Selos eletrônicos
  Select	
    cd_aerop 			= cd_aerop_utilizacao,
    --dt_voo 				= Convert ( Datetime, Convert ( Char (10), dt_voo_rea, 101) ),
	dt_voo 				= Convert ( Datetime, Convert ( Char (10), a.dt_mov, 101)),
    qtde_coletor_f 		= 0,
    qtde_manual_arq_f 	= 0,
    qtde_coletor_e 		= case when tp_coletor = '01' then 1 else 0 end,
    qtde_manual_arq_e 	= case when tp_coletor = '9' then 1 else 0 end,
    qtde_manual_ati_e 	= case when tp_coletor = '03' then 1 else 0 end,
    qtde_rpe 			= 0
  From
    pax_selo_elec_u a ( NOLOCK INDEX = IDX01_BI )
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK )
  On 
    b.cd_aerop 		= a.cd_aerop_utilizacao 	AND
    b.terminal 		= a.cd_terminal_utilizacao	AND
    b.dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c (nolock)
			    Where c.cd_aerop    = a.cd_aerop_utilizacao		AND
				  c.terminal    = a.cd_terminal_utilizacao	AND
				  c.dt_vigencia <= a.dt_voo_rea )
  Where 
    selo_status 	= '2'
	and convert(varchar(8), dt_mov, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'
    and b.tp_fatur_pax 	= '1'

  UNION ALL

  --Selos eletrônicos
  Select	
    cd_aerop 			= cd_aerop_utilizacao,
	dt_voo 				= Convert ( Datetime, Convert ( Char (10), a.dt_mov, 101)),
    qtde_coletor_f 		= 0,
    qtde_manual_arq_f 	= 0,
    qtde_coletor_e 		= case when tp_coletor = '01' then 1 else 0 end,
    qtde_manual_arq_e 	= case when tp_coletor = '9' then 1 else 0 end,
    qtde_manual_ati_e 	= case when tp_coletor = '03' then 1 else 0 end,
    qtde_rpe 			= 0
  From
    pax_selo_electronico_u a ( NOLOCK INDEX = IDX01_BI )
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK  index = P_cor_tpfatur_selo_u)
  On 
    b.cd_aerop 		= a.cd_aerop_utilizacao 	AND
    b.terminal 		= a.cd_terminal_utilizacao	AND
    b.dt_vigencia 	= ( Select Max (dt_vigencia) 
						From GEACutcx..cor_tpfatur_selo_u c (nolock  index = P_cor_tpfatur_selo_u)
						Where c.cd_aerop    = a.cd_aerop_utilizacao		AND
						c.terminal    = a.cd_terminal_utilizacao	AND
						c.dt_vigencia <= a.dt_voo_rea )
  Where 

    selo_status 	= '2' 				
	and convert(varchar(8), a.dt_mov, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'				
    and b.tp_fatur_pax 	= '1'

UNION ALL

  --Rpe eletrônico
  Select 
    a.cd_aerop,
    dt_voo 				= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
    qtde_coletor_f 		= 0,
    qtde_manual_arq_f 	= 0,
    qtde_coletor_e 		= 0,
    qtde_manual_arq_e 	= 0,
    qtde_manual_ati_e 	= 0,
    qtde_rpe 			= pax_tot_fat + pax_tot_vista
  From 
    rpax_emb_voo_u a ( NOLOCK index = IDX_01)
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK  index = P_cor_tpfatur_selo_u)
  On 
    b.cd_aerop 	  = a.cd_aerop		AND
    b.terminal 	  = a.cd_terminal	AND
    b.dt_vigencia = ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK  index = P_cor_tpfatur_selo_u)
	  	      Where c.cd_aerop 	  = a.cd_aerop		AND
			    c.terminal 	  = a.cd_terminal	AND
			    c.dt_vigencia <= a.dt_voo )
  Where 
	convert(varchar(8), dt_voo, 112) between @p_dataini and @p_datafin
    /*and dt_voo 		>= @p_dt_inicio	
    and dt_voo 		< Dateadd (dd, 1, @p_dt_fim) */
    and a.inactive_ind 	= '0'
    and b.inactive_ind 	= '0'
    and b.tp_fatur_pax 	= '1'
  ) a
Group By 
  cd_aerop,
  dt_voo
--Order By 
--  cd_aerop,
--  Convert ( Datetime, Convert ( Char (10), dt_voo, 101) )




GO

/****** Object:  StoredProcedure [dbo].[gsp_demonstrativo_desempenho_leitura_selos_cia_aerea]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_demonstrativo_desempenho_leitura_selos_cia_aerea    Script Date: 19/09/2008 15:20:01 ******/



CREATE    PROCEDURE [dbo].[gsp_demonstrativo_desempenho_leitura_selos_cia_aerea] (
				@p_dt_inicio 	Datetime,
				@p_dt_fim	Datetime )
AS

/*
truncate table dbo.gtb_desempenho_leitura_selos_cia_aerea_u

DROP TABLE dbo.gtb_desempenho_leitura_selos_cia_aerea_u
CREATE TABLE dbo.gtb_desempenho_leitura_selos_cia_aerea_u (
			dt_inicio 	Datetime,
			dt_fim		Datetime,
			cd_cia_aerea	Char (3),
			cd_aerop 	Char (4),
			dt_voo		Datetime,
			coletor_f 	Int,
			manual_arq_f 	Int,
			coletor_e 	Int,
			manual_arq_e 	Int,
			manual_ati_e	int, 
			rpe 		Int )
grant select on dbo.gtb_desempenho_leitura_selos_cia_aerea_u to public
*/

declare @p_dataini		varchar(8)
	,@p_datafin			varchar(8)

select @p_dataini		= convert(varchar(8), @p_dt_inicio, 112)
	,@p_datafin			= convert(varchar(8), @p_dt_fim, 112)

Delete dbo.gtb_desempenho_leitura_selos_cia_aerea_u Where dt_voo >= @p_dt_inicio AND dt_voo < Dateadd (dd, 1, @p_dt_fim)

Insert Into dbo.gtb_desempenho_leitura_selos_cia_aerea_u
Select  
	@p_dt_inicio,
	@p_dt_fim,
	cd_cia_aerea,
	cd_aerop,
	dt_voo,
	coletor_f 		= sum(qtde_coletor_f),
	manual_arq_f 	= sum(qtde_manual_arq_f),
	coletor_e 		= sum(qtde_coletor_e),
	manual_arq_e 	= sum(qtde_manual_arq_e),
	manual_ati_e	= sum(qtde_manual_ati_e),
	rpe 			= sum(qtde_rpe)
From (

  --Selos físicos
  Select 	
    cd_cia_aerea		= cd_cia_aerea,
    cd_aerop 			= cd_aerop_utilizacao,
    dt_voo 				= Convert ( Datetime, Convert ( Char (10), dt_mov, 101)),
    qtde_coletor_f 		= case when tp_coletor = '01' then 1 else 0 end,
    qtde_manual_arq_f 	= case when tp_coletor = '03' then 1 else 0 end,
    qtde_coletor_e 		= 0,
    qtde_manual_arq_e 	= 0,
	qtde_manual_ati_e	= 0,
    qtde_rpe 			= 0
  From 
    pax_selo_u a ( NOLOCK INDEX = IDX01_BI) 
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK  index = P_cor_tpfatur_selo_u) 
  On 
    b.cd_aerop 		= a.cd_aerop_utilizacao 	AND
    b.terminal 		= a.cd_terminal_utilizacao	AND
    b.dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK  index = P_cor_tpfatur_selo_u) 
			    Where c.cd_aerop    = a.cd_aerop_utilizacao		AND
				  c.terminal    = a.cd_terminal_utilizacao	AND
				  c.dt_vigencia <= a.dt_mov )
  Where 
    selo_status 	= '2'
	and convert(varchar(8), dt_mov, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'			
    and b.tp_fatur_pax 	= '1'


  UNION ALL

  --Selos eletrônicos
  Select	
    cd_cia_aerea		= cd_cia_aerea,
    cd_aerop 			= cd_aerop_utilizacao,
	dt_voo 				= Convert ( Datetime, Convert ( Char (10), a.dt_mov, 101)),
    qtde_coletor_f 		= 0,
    qtde_manual_arq_f 	= 0,
    qtde_coletor_e 		= case when tp_coletor = '01' then 1 else 0 end,
    qtde_manual_arq_e 	= case when tp_coletor = '9' then 1 else 0 end,
	qtde_manual_ati_e	= case when tp_coletor = '03' then 1 else 0 end,
    qtde_rpe 			= 0
  From
    pax_selo_elec_u a ( NOLOCK INDEX = IDX01_BI )
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK  index = P_cor_tpfatur_selo_u)
  On 
    b.cd_aerop 		= a.cd_aerop_utilizacao 	AND
    b.terminal 		= a.cd_terminal_utilizacao	AND
    b.dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c (nolock  index = P_cor_tpfatur_selo_u)
			    Where c.cd_aerop    = a.cd_aerop_utilizacao		AND
				  c.terminal    = a.cd_terminal_utilizacao	AND
				  c.dt_vigencia <= a.dt_voo_rea )
  Where 
    selo_status 	= '2' 				
	and convert(varchar(8), dt_mov, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'
    and b.tp_fatur_pax 	= '1'

  UNION ALL

  --Selos eletrônicos
  Select	
    cd_cia_aerea		= cd_cia_aerea,
    cd_aerop 			= cd_aerop_utilizacao,
	dt_voo 				= Convert ( Datetime, Convert ( Char (10), a.dt_mov, 101)),
    qtde_coletor_f 		= 0,
    qtde_manual_arq_f 	= 0,
    qtde_coletor_e 		= case when tp_coletor = '01' then 1 else 0 end,
    qtde_manual_arq_e 	= case when tp_coletor = '9' then 1 else 0 end,
	qtde_manual_ati_e	= case when tp_coletor = '03' then 1 else 0 end,
    qtde_rpe 			= 0
  From
    pax_selo_electronico_u a ( NOLOCK INDEX = IDX01_BI )
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK  index = P_cor_tpfatur_selo_u)
  On 
    b.cd_aerop 		= a.cd_aerop_utilizacao 	AND
    b.terminal 		= a.cd_terminal_utilizacao	AND
    b.dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c (nolock  index = P_cor_tpfatur_selo_u)
			    Where c.cd_aerop    = a.cd_aerop_utilizacao		AND
				  c.terminal    = a.cd_terminal_utilizacao	AND
				  c.dt_vigencia <= a.dt_voo_rea )
  Where 
    selo_status 	= '2' 			
	and convert(varchar(8), dt_mov, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'			
    and b.tp_fatur_pax 	= '1'


UNION ALL

  --Rpe eletrônico
  Select 
    cd_cia_aerea		= cd_cia_aerea,
    a.cd_aerop,
    dt_voo 				= Convert ( Datetime, Convert ( Char (10), dt_voo, 101) ),
    qtde_coletor_f 		= 0,
    qtde_manual_arq_f 	= 0,
    qtde_coletor_e 		= 0,
    qtde_manual_arq_e 	= 0,
	qtde_manual_ati_e	= 0,
    qtde_rpe 			= pax_tot_fat + pax_tot_vista
  From 
    rpax_emb_voo_u a ( NOLOCK  index = IDX_01)
  Inner Join 
    GEACutcx..cor_tpfatur_selo_u b ( NOLOCK  index = P_cor_tpfatur_selo_u)
  On 
    b.cd_aerop 	  = a.cd_aerop		AND
    b.terminal 	  = a.cd_terminal	AND
    b.dt_vigencia = ( Select Max (dt_vigencia) From GEACutcx..cor_tpfatur_selo_u c ( NOLOCK  index = P_cor_tpfatur_selo_u)
	  	      Where c.cd_aerop 	  = a.cd_aerop		AND
			    c.terminal 	  = a.cd_terminal	AND
			    c.dt_vigencia <= a.dt_voo )
  Where 
	a.inactive_ind 	= '0'
	and convert(varchar(8), dt_voo, 112) between @p_dataini and @p_datafin
    and b.inactive_ind 	= '0'
    and b.tp_fatur_pax 	= '1'
  ) a
Group By 
  cd_cia_aerea,
  cd_aerop,
  dt_voo
--Order By 
--  cd_aerop,
--  Convert ( Datetime, Convert ( Char (10), dt_voo, 101) )





GO

/****** Object:  StoredProcedure [dbo].[gsp_demonstrativo_eletronico]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_demonstrativo_eletronico    Script Date: 19/09/2008 15:20:01 ******/


--drop procedure gsp_demonstrativo_eletronico
--Exec GEACupax..gsp_demonstrativo_eletronico 'VRG','708712'
CREATE PROCEDURE [dbo].[gsp_demonstrativo_eletronico] (
			@p_cd_cia_aerea char(3)
			,@p_nu_boleto_ss Int )
As

set nocount on

CREATE TABLE ##gtb_temp1 (
		linha char (255),
		tstamp timestamp )


Declare @w_linha 			Char (255),
	@w_dt_inicio_periodo		Char (10),
	@w_dt_final_periodo 		Char (10),
	@w_dt_emissao 			Char (10),
	@w_dt_vencimento 		Char (10),
	@w_vl_liquido			Money,

	@w_dt_inicio_periodo_str	Char (8),
	@w_dt_final_periodo_str 	Char (8),
	@w_dt_emissao_str 		Char (8),
	@w_dt_vencimento_str 		Char (8),
	@w_vl_liquido_str		Char (15),
	@w_nu_boleto_str		Char (10),
	@w_natureza			Char (1),
	@w_sigla			Char (2),
	@w_msg				Char (255),
	@w_str				CHAR (255),
	@w_cd_aerop			CHAR (4),

	@w_vl_cpmf			Money,
	@w_vl_deducao			Money,
	@w_vl_bruto			Money,

	@w_vl_cpmf_str			Char (15),
	@w_vl_deducao_str		Char (15),
	@w_vl_bruto_str			Char (15),

	@w_dt_mov 			Char (10), 
	@w_dt_mov_str 			Char (8), 
	@w_categoria 			Char (1), 
	@w_unit_price			Money, 
	@w_unit_price_str		Char (6), 
	@w_quantity			Int, 
	@w_quantity_str			Char (7), 
	@w_recv_doc_line_amt		Money,
	@w_recv_doc_line_amt_str	Char (15),
	@w_arquivo			Char(110),
	@boleto				Char(10)

-- LINHA DE HEADER DA FATURA
Select
  @w_dt_inicio_periodo 	= Convert (Char (10), dt_inicio_periodo, 103),
  @w_dt_final_periodo 	= Convert (Char (10), dt_final_periodo, 103),
  @w_dt_emissao 	= Convert (Char (10), dt_documento, 103),
  @w_dt_vencimento 	= Convert (Char (10), dt_vencimento, 103),
  @w_vl_liquido		= vl_boleto,
  @w_natureza		= RTrim (natureza),
  @w_sigla		= Case
				When ds_cliente like 'VARIG%' Then 'RG' 
				When ds_cliente like 'RIO%' Then 'SL' 
				When ds_cliente like 'NORDESTE%' Then 'JH'
				Else 'XX'
			  End,		
  @w_nu_boleto_str	= '0' + Substring ( LTrim ( Str ( nu_boleto_ss + 1000000000 ) ), 2, 9)
From
  GEACrrcv..gtb_docs_boleto_ctrl
Where
  nu_boleto_ss = @p_nu_boleto_ss

If @@Rowcount = 0
  Begin
    Select @w_msg = 'Não encontrou boleto: ' + LTrim ( Str (@p_nu_boleto_ss) )
    Print @w_msg
    Return 5
  End

-- BUSCA OS VALORES DE CPMF E DEDUÇÃO NO DEMONSTRATIVO
select
  @w_vl_cpmf    = Max (vl_cpmf),
  @w_vl_deducao = Max (vl_deducao)
from
  GEACrpt..gvw_demonstrativo_faturamento_pax
where
  nu_boleto_ss = @p_nu_boleto_ss

-- CALCULA O VALOR BRUTO
Select @w_vl_bruto = @w_vl_liquido + @w_vl_cpmf + @w_vl_deducao

-- PARA TIRAR A VÍRGULA
Select @w_vl_bruto = @w_vl_bruto * 100
Select @w_vl_liquido = @w_vl_liquido * 100
Select @w_vl_cpmf = @w_vl_cpmf * 100
Select @w_vl_deducao = @w_vl_deducao * 100


-- VALORES PARA INSERÇÃO NO ARQUIVO
Select @w_dt_inicio_periodo_str	= Left (@w_dt_inicio_periodo, 2) + Substring (@w_dt_inicio_periodo, 4, 2) + Substring (@w_dt_inicio_periodo, 7, 4)
Select @w_dt_final_periodo_str 	= Left (@w_dt_final_periodo, 2) + Substring (@w_dt_final_periodo, 4, 2) + Substring (@w_dt_final_periodo, 7, 4)
Select @w_dt_emissao_str 	= Left (@w_dt_emissao, 2) + Substring (@w_dt_emissao, 4, 2) + Substring (@w_dt_emissao, 7, 4)
Select @w_dt_vencimento_str 	= Left (@w_dt_vencimento, 2) + Substring (@w_dt_vencimento, 4, 2) + Substring (@w_dt_vencimento, 7, 4)
select @w_vl_liquido_str 	= Substring ( Str (1000000000000000 + @w_vl_liquido , 16, 0), 2, 15)
select @w_vl_cpmf_str 	 	= Substring ( Str (1000000000000000 + @w_vl_cpmf ,    16, 0), 2, 15)
select @w_vl_deducao_str 	= Substring ( Str (1000000000000000 + @w_vl_deducao , 16, 0), 2, 15)
select @w_vl_bruto_str 	 	= Substring ( Str (1000000000000000 + @w_vl_bruto ,   16, 0), 2, 15)


/*
SE FOR PARA ENVIAR A VÍRGULA NO ARQUIVO

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_liquido , 17, 0), 2, 17)
select @w_vl_liquido_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_cpmf , 17, 0), 2, 17)
select @w_vl_cpmf_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_deducao , 17, 0), 2, 17)
select @w_vl_deducao_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_bruto , 17, 0), 2, 17)
select @w_vl_bruto_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)
*/

-- MONTA O REGISTRO HEADER
Select @w_linha = '99'										-- TIPO REGISTRO
Select @w_linha = RTrim (@w_linha) + Case @w_natureza When 'D' Then '900192' Else '900191' End	-- CÓDIGO FORNECEDOR
Select @w_linha = RTrim (@w_linha) + @w_sigla							-- SIGLA EMPRESA AÉREA
Select @w_linha = RTrim (@w_linha) + @w_dt_inicio_periodo_str					-- INÍCIO PERÍODO FATURAMENTO
Select @w_linha = RTrim (@w_linha) + @w_dt_final_periodo_str					-- FINAL PERÍODO FATURAMENTO
Select @w_linha = RTrim (@w_linha) + @w_dt_emissao_str						-- DATA EMISSÃO
Select @w_linha = RTrim (@w_linha) + @w_dt_vencimento_str					-- DATA VENCIMENTO FATURA
Select @w_linha = RTrim (@w_linha) + 'BRL'							-- MOEDA DE COBRANÇA
Select @w_linha = RTrim (@w_linha) + @w_vl_bruto_str						-- VALOR BRUTO
Select @w_linha = RTrim (@w_linha) + @w_vl_deducao_str						-- VALOR DEDUÇÃO (3% OU 1,5%)
Select @w_linha = RTrim (@w_linha) + @w_vl_cpmf_str						-- VALOR CPMF
Select @w_linha = RTrim (@w_linha) + @w_vl_liquido_str						-- VALOR LIQUIDO
Select @w_linha = RTrim (@w_linha) + @w_nu_boleto_str						-- NÚMERO DO BOLETO

Insert Into ##gtb_temp1 (linha) Values (@w_linha)

Declare linhas_demo Cursor For
Select 
  Left (recv_entity_name, 4),
  natureza,
  dt_mov = Convert (Char (10), dt_mov, 103),
  categoria,
  unit_price,
  quantity,
  recv_doc_line_amt
From 
  GEACrpt..gvw_demonstrativo_faturamento_pax
Where
  nu_boleto_ss = @p_nu_boleto_ss

Open linhas_demo
Fetch linhas_demo Into @w_cd_aerop, @w_natureza, @w_dt_mov, @w_categoria, @w_unit_price, @w_quantity, @w_recv_doc_line_amt
While @@Fetch_Status = 0
  Begin

    -- TIRAR AS VÍRGULAS
    Select @w_unit_price = @w_unit_price * 100
    Select @w_recv_doc_line_amt = @w_recv_doc_line_amt * 100

    -- VARIÁVEIS PARA COMPOR A LINHA DO ARQUIVO
    Select @w_dt_mov_str     	      = Left (@w_dt_mov, 2) + Substring (@w_dt_mov, 4, 2) + Substring (@w_dt_mov, 7, 4)
    select @w_unit_price_str 	      = Substring ( Str (1000000 + @w_unit_price , 7, 0), 2, 6)
    select @w_quantity_str   	      = Substring ( Str (10000000 + @w_quantity , 8, 0), 2, 7)
    select @w_recv_doc_line_amt_str   = Substring ( Str (1000000000000000 + @w_recv_doc_line_amt , 16, 0), 2, 15)
  
    Select @w_linha = '10'						-- TIPO DE REGISTRO
    Select @w_linha = RTrim (@w_linha) + @w_cd_aerop			-- SIGLA AEROPORTO
    Select @w_linha = RTrim (@w_linha) + @w_natureza			-- TIPO DE REGISTRO
    Select @w_linha = RTrim (@w_linha) + @w_dt_mov_str			-- DATA DO MOVIMENTO
    Select @w_linha = RTrim (@w_linha) + @w_categoria			-- CATEGORIA
    Select @w_linha = RTrim (@w_linha) + @w_unit_price_str		-- PREÇO UNITÁRIO
    Select @w_linha = RTrim (@w_linha) + @w_quantity_str		-- QUANTIDADE
    Select @w_linha = RTrim (@w_linha) + @w_recv_doc_line_amt_str	-- VALOR TOTAL


    Insert Into ##gtb_temp1 (linha) Values (@w_linha)

    Fetch linhas_demo Into @w_cd_aerop, @w_natureza, @w_dt_mov, @w_categoria, @w_unit_price, @w_quantity, @w_recv_doc_line_amt
  End

Close linhas_demo
Deallocate linhas_demo

--Select linha from ##gtb_temp1 order by tstamp

-- Joga o conteúdo da tabela temporária em um arquivo
select @boleto = convert(char(10),@p_nu_boleto_ss)
select @w_arquivo = 'bcp ##gtb_temp1 out \\S-SEAN218\DriveF\Demonstrativos\'+ @p_cd_cia_aerea + ltrim(rtrim(@boleto)) + '.txt -c -SSQLSSII -T'
declare @sql varchar(3000)
set @sql = ' master..xp_cmdshell'+ @w_arquivo
exec (@sql)
DROP TABLE ##gtb_temp1
set nocount off






GO

/****** Object:  StoredProcedure [dbo].[gsp_demonstrativo_eletronico_marcelo]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_demonstrativo_eletronico_marcelo    Script Date: 19/09/2008 15:20:01 ******/

CREATE PROCEDURE [dbo].[gsp_demonstrativo_eletronico_marcelo] (
			@p_nu_boleto_ss Int )
As

CREATE TABLE #gtb_temp1 (
		linha char (255),
		tstamp timestamp )


Declare @w_linha 			Char (255),
	@w_dt_inicio_periodo		Char (10),
	@w_dt_final_periodo 		Char (10),
	@w_dt_emissao 			Char (10),
	@w_dt_vencimento 		Char (10),
	@w_vl_liquido			Money,

	@w_dt_inicio_periodo_str	Char (8),
	@w_dt_final_periodo_str 	Char (8),
	@w_dt_emissao_str 		Char (8),
	@w_dt_vencimento_str 		Char (8),
	@w_vl_liquido_str		Char (15),
	@w_nu_boleto_str		Char (10),
	@w_natureza			Char (1),
	@w_sigla			Char (2),
	@w_msg				Char (255),
	@w_str				CHAR (255),
	@w_cd_aerop			CHAR (4),

	@w_vl_cpmf			Money,
	@w_vl_deducao			Money,
	@w_vl_bruto			Money,

	@w_vl_cpmf_str			Char (15),
	@w_vl_deducao_str		Char (15),
	@w_vl_bruto_str			Char (15),

	@w_dt_mov 			Char (10), 
	@w_dt_mov_str 			Char (8), 
	@w_categoria 			Char (1), 
	@w_unit_price			Money, 
	@w_unit_price_str		Char (6), 
	@w_quantity			Int, 
	@w_quantity_str			Char (7), 
	@w_recv_doc_line_amt		Money,
	@w_recv_doc_line_amt_str	Char (15)

-- LINHA DE HEADER DA FATURA
Select
  @w_dt_inicio_periodo 	= Convert (Char (10), dt_inicio_periodo, 103),
  @w_dt_final_periodo 	= Convert (Char (10), dt_final_periodo, 103),
  @w_dt_emissao 	= Convert (Char (10), dt_documento, 103),
  @w_dt_vencimento 	= Convert (Char (10), dt_vencimento, 103),
  @w_vl_liquido		= vl_boleto,
  @w_natureza		= RTrim (natureza),
  @w_sigla		= Case
				When ds_cliente like 'VARIG%' Then 'RG' 
				When ds_cliente like 'RIO%' Then 'SL' 
				When ds_cliente like 'NORDESTE%' Then 'JH'
				Else 'XX'
			  End,		
  @w_nu_boleto_str	= '0' + Substring ( LTrim ( Str ( nu_boleto_ss + 1000000000 ) ), 2, 9)
From
  GEACrrcv..gtb_docs_boleto_ctrl
Where
  nu_boleto_ss = @p_nu_boleto_ss

If @@Rowcount = 0
  Begin
    Select @w_msg = 'Não encontrou boleto: ' + LTrim ( Str (@p_nu_boleto_ss) )
    Print @w_msg
    Return 5
  End


-- BUSCA OS VALORES DE CPMF E DEDUÇÃO NO DEMONSTRATIVO
select
  @w_vl_cpmf    = Max (vl_cpmf),
  @w_vl_deducao = Max (vl_deducao)
from
  GEACrpt..gvw_demonstrativo_faturamento_pax
where
  nu_boleto_ss = @p_nu_boleto_ss

-- CALCULA O VALOR BRUTO
Select @w_vl_bruto = @w_vl_liquido + @w_vl_cpmf + @w_vl_deducao

-- PARA TIRAR A VÍRGULA
Select @w_vl_bruto = @w_vl_bruto * 100
Select @w_vl_liquido = @w_vl_liquido * 100
Select @w_vl_cpmf = @w_vl_cpmf * 100
Select @w_vl_deducao = @w_vl_deducao * 100


-- VALORES PARA INSERÇÃO NO ARQUIVO
Select @w_dt_inicio_periodo_str	= Left (@w_dt_inicio_periodo, 2) + Substring (@w_dt_inicio_periodo, 4, 2) + Substring (@w_dt_inicio_periodo, 7, 4)
Select @w_dt_final_periodo_str 	= Left (@w_dt_final_periodo, 2) + Substring (@w_dt_final_periodo, 4, 2) + Substring (@w_dt_final_periodo, 7, 4)
Select @w_dt_emissao_str 	= Left (@w_dt_emissao, 2) + Substring (@w_dt_emissao, 4, 2) + Substring (@w_dt_emissao, 7, 4)
Select @w_dt_vencimento_str 	= Left (@w_dt_vencimento, 2) + Substring (@w_dt_vencimento, 4, 2) + Substring (@w_dt_vencimento, 7, 4)
select @w_vl_liquido_str 	= Substring ( Str (1000000000000000 + @w_vl_liquido , 16, 0), 2, 15)
select @w_vl_cpmf_str 	 	= Substring ( Str (1000000000000000 + @w_vl_cpmf ,    16, 0), 2, 15)
select @w_vl_deducao_str 	= Substring ( Str (1000000000000000 + @w_vl_deducao , 16, 0), 2, 15)
select @w_vl_bruto_str 	 	= Substring ( Str (1000000000000000 + @w_vl_bruto ,   16, 0), 2, 15)


/*
SE FOR PARA ENVIAR A VÍRGULA NO ARQUIVO

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_liquido , 17, 0), 2, 17)
select @w_vl_liquido_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_cpmf , 17, 0), 2, 17)
select @w_vl_cpmf_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_deducao , 17, 0), 2, 17)
select @w_vl_deducao_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)

Select @w_str = Substring ( Str (10000000000000000 + @w_vl_bruto , 17, 0), 2, 17)
select @w_vl_bruto_str = Left (@w_str, 14) + ',' + Substring (@w_str, 15, 2)
*/

-- MONTA O REGISTRO HEADER
Select @w_linha = '99'										-- TIPO REGISTRO
Select @w_linha = RTrim (@w_linha) + Case @w_natureza When 'D' Then '900192' Else '900191' End	-- CÓDIGO FORNECEDOR
Select @w_linha = RTrim (@w_linha) + @w_sigla							-- SIGLA EMPRESA AÉREA
Select @w_linha = RTrim (@w_linha) + @w_dt_inicio_periodo_str					-- INÍCIO PERÍODO FATURAMENTO
Select @w_linha = RTrim (@w_linha) + @w_dt_final_periodo_str					-- FINAL PERÍODO FATURAMENTO
Select @w_linha = RTrim (@w_linha) + @w_dt_emissao_str						-- DATA EMISSÃO
Select @w_linha = RTrim (@w_linha) + @w_dt_vencimento_str					-- DATA VENCIMENTO FATURA
Select @w_linha = RTrim (@w_linha) + 'BRL'							-- MOEDA DE COBRANÇA
Select @w_linha = RTrim (@w_linha) + @w_vl_bruto_str						-- VALOR BRUTO
Select @w_linha = RTrim (@w_linha) + @w_vl_deducao_str						-- VALOR DEDUÇÃO (3% OU 1,5%)
Select @w_linha = RTrim (@w_linha) + @w_vl_cpmf_str						-- VALOR CPMF
Select @w_linha = RTrim (@w_linha) + @w_vl_liquido_str						-- VALOR LIQUIDO
Select @w_linha = RTrim (@w_linha) + @w_nu_boleto_str						-- NÚMERO DO BOLETO

Insert Into #gtb_temp1 (linha) Values (@w_linha)

Declare linhas_demo Cursor For
Select 
  Left (recv_entity_name, 4),
  natureza,
  dt_mov = Convert (Char (10), dt_mov, 103),
  categoria,
  unit_price,
  quantity,
  recv_doc_line_amt
From 
  GEACrpt..gvw_demonstrativo_faturamento_pax
Where
  nu_boleto_ss = @p_nu_boleto_ss

Open linhas_demo
Fetch linhas_demo Into @w_cd_aerop, @w_natureza, @w_dt_mov, @w_categoria, @w_unit_price, @w_quantity, @w_recv_doc_line_amt
While @@Fetch_Status = 0
  Begin

    -- TIRAR AS VÍRGULAS
    Select @w_unit_price = @w_unit_price * 100
    Select @w_recv_doc_line_amt = @w_recv_doc_line_amt * 100

    -- VARIÁVEIS PARA COMPOR A LINHA DO ARQUIVO
    Select @w_dt_mov_str     	      = Left (@w_dt_mov, 2) + Substring (@w_dt_mov, 4, 2) + Substring (@w_dt_mov, 7, 4)
    select @w_unit_price_str 	      = Substring ( Str (1000000 + @w_unit_price , 7, 0), 2, 6)
    select @w_quantity_str   	      = Substring ( Str (10000000 + @w_quantity , 8, 0), 2, 7)
    select @w_recv_doc_line_amt_str   = Substring ( Str (1000000000000000 + @w_recv_doc_line_amt , 16, 0), 2, 15)
  
    Select @w_linha = '10'						-- TIPO DE REGISTRO
    Select @w_linha = RTrim (@w_linha) + @w_cd_aerop			-- SIGLA AEROPORTO
    Select @w_linha = RTrim (@w_linha) + @w_natureza			-- TIPO DE REGISTRO
    Select @w_linha = RTrim (@w_linha) + @w_dt_mov_str			-- DATA DO MOVIMENTO
    Select @w_linha = RTrim (@w_linha) + @w_categoria			-- CATEGORIA
    Select @w_linha = RTrim (@w_linha) + @w_unit_price_str		-- PREÇO UNITÁRIO
    Select @w_linha = RTrim (@w_linha) + @w_quantity_str		-- QUANTIDADE
    Select @w_linha = RTrim (@w_linha) + @w_recv_doc_line_amt_str	-- VALOR TOTAL


    Insert Into #gtb_temp1 (linha) Values (@w_linha)

    Fetch linhas_demo Into @w_cd_aerop, @w_natureza, @w_dt_mov, @w_categoria, @w_unit_price, @w_quantity, @w_recv_doc_line_amt
  End

Close linhas_demo
Deallocate linhas_demo

Select linha from #gtb_temp1 order by tstamp








GO

/****** Object:  StoredProcedure [dbo].[gsp_gera_arq_demonstrativo_selo]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE Procedure [dbo].[gsp_gera_arq_demonstrativo_selo]
(
  @nu_boleto_ss   int
)

as

set nocount on 
-- 1310995
-- 1278845
-- 1319917

-- Busca os boletos a serem enviados para a TAM
Declare 
  @nu_boleto_char char(9),
  @arquivo        varchar(50)

set @nu_boleto_char = substring(convert(char(10),'1000000000' + @nu_boleto_ss),2,9)

if not exists (select 1 from GEACrrcv..gtb_docs_boleto_ctrl (NOLOCK)
               where nu_boleto_ss = @nu_boleto_char and cd_cliente = 'LAP')     
  set @arquivo = 'TEMTAM'
else
  Set @arquivo = 'TEMLAP'

-- Monta Nome do Arquivo 
select @arquivo = @arquivo + left(competencia,2)+right(rtrim(competencia),2)+'-'+
                  case when day(dt_final_periodo) <= 15 then '1' else '2' end +
                  natureza + '.txt'
from GEACrrcv..gtb_docs_boleto_ctrl (nolock)
where nu_boleto_ss = @nu_boleto_ss


-- Gera tabela temporária para guardar as linhas do arquivo
Create table #arquivo( linha varchar(255) )

-- ****  Header
select 
codigo            = '01',
boleto            = right('0000000000000'+convert(varchar(13),a.nu_boleto_ss),13),  
dt_emissao        = convert(char(8),a.dt_emissao,112),
dt_vencimento     = convert(char(8),a.dt_vencimento,112),
dt_inicio_periodo = convert(char(8),a.dt_inicio_periodo,112),
dt_final_periodo  = convert(char(8),a.dt_final_periodo,112),
moeda             = convert(char(5),CASE when a.natureza = 'D' then 'R$   '
                    else 'US$  ' end),
a.natureza,
creditos        = sum(case when recv_doc_line_amt < 0 then recv_doc_line_amt else 0 end) * -1,
debitos         = sum(case when recv_doc_line_amt > 0 then recv_doc_line_amt else 0 end),
juros           = 0,
valor_bruto     = isnull(sum(recv_doc_line_amt),0),
valor_desconto  = isnull(max(vl_deducao),0),
valor_cpmf      = isnull(max(vl_cpmf),0),
valor_liquido   = max(vl_boleto),
qtd_passageiros = sum(case when quantity > 0 then quantity else 0 end)   
into #linhas
from   GEACrrcv..gtb_docs_boleto_ctrl a (nolock)
inner join    GEACrpt..gvw_demonstrativo_faturamento_pax b (nolock)
   on a.nu_boleto_ss = b.nu_boleto_ss
where  tp_sistema = 'PI'
 and  a.nu_boleto_ss  = @nu_boleto_ss
group by
       a.nu_boleto_ss,
       dt_emissao, 
       convert(char(8),a.dt_vencimento,112),
       convert(char(8),a.dt_inicio_periodo,112),
       convert(char(8),a.dt_final_periodo,112),
       CASE when a.natureza = 'D' then 'R$   ' else 'US$   ' end,
       a.natureza

insert into #arquivo
Select codigo+
       boleto+
       dt_emissao+
       dt_vencimento+
       dt_inicio_periodo+
       dt_final_periodo+
       moeda+
       natureza+
       right('000000000000000'+convert(varchar(15),convert(int,round(creditos*100,2))),15) +
       right('000000000000000'+convert(varchar(15),convert(int,round(debitos*100,2))),15) +
       right('000000000000000'+convert(varchar(15),convert(int,round(juros*100,2))),15)  +
       right('000000000000000'+convert(varchar(15),convert(int,round(valor_bruto*100,2))),15)+
       right('000000000000000'+convert(varchar(15),convert(int,round(valor_desconto*100,2))),15)+
       right('000000000000000'+convert(varchar(15),convert(int,round(valor_cpmf*100,2))),15)  +
       right('000000000000000'+convert(varchar(15),convert(int,round(valor_liquido*100,2))),15) +
       right('00000000'+convert(varchar(8),qtd_passageiros),8)
from #linhas



-- *** Busca Linhas do Boleto
---- ***** RPE
select cd_aerop, 
       tp_voo,
       data_voo, 
       nro_voo,
       base, 
       qtd_passageiros,
       valor_unitario, 
       total = qtd_passageiros * valor_unitario,
       billing_line_id   
into #linhas_boleto
from ( SELECT cd_aerop, tp_voo, data_voo = convert(char(8),dt_voo,112), 
       nro_voo = case when len(nro_voo)>4 then substring(nro_voo,2,4) else nro_voo end,
       base = 'RPE', qtd_passageiros = pax_total,
       valor_unitario = (SELECT top 1 convert(numeric(15,2),unit_price)
                         FROM DBSrrcv.dbo.zud_price_list_z b
                         where b.item_id = a.item_fat 
                           and b.eff_date <= a.dt_voo
                         order by b.eff_date desc),
      billing_line_id  
FROM [GEACupax].[dbo].[rpax_itens_u] a 
WHERE billing_line_id = @nu_boleto_ss
) t

-- Selo Físico
insert into #linhas_boleto
select cd_aerop, tp_voo, data_voo, nro_voo, base, qtd_passageiros = sum(qtd_passageiros),
       valor_unitario, valor_total = sum(valor_unitario), billing_line_id
from ( select cd_aerop, 
       tp_voo= case when charindex('1',item_fat) > 0 then '1'
                    when charindex('2',item_fat) > 0 then '2' 
                    when charindex('3',item_fat) > 0 then '3' 
                    when charindex('4',item_fat) > 0 then '4' 
               else ''
               end,
       data_voo = convert(char(8),dt_mov,112), 
       nro_voo = '    ',
       base = 'SF', qtd_passageiros = 1,
       valor_unitario = (SELECT top 1 convert(numeric(15,2),unit_price)
                         FROM DBSrrcv.dbo.zud_price_list_z b
                         where b.item_id = a.item_fat 
                           and b.eff_date <= a.dt_mov
                         order by b.eff_date desc),
      billing_line_id  
from GEACupax..pax_selo_u a (nolock)
where billing_line_id = @nu_boleto_ss) m
group by  cd_aerop, tp_voo, data_voo, nro_voo, base, valor_unitario, billing_line_id
order by data_voo, cd_aerop



-- Selo Eletrônico
insert into #linhas_boleto
select cd_aerop, tp_voo, data_voo, nro_voo, base, sum(qtd_passageiros),
       valor_unitario, valor_total = sum(valor_unitario), billing_line_id
from (
select 
       cd_aerop, 
       tp_voo= case when charindex('1',item_fat) > 0 then '1'
                    when charindex('2',item_fat) > 0 then '2' 
                    when charindex('3',item_fat) > 0 then '3' 
                    when charindex('4',item_fat) > 0 then '4' 
               else ''
               end,
       data_voo = convert(char(8),dt_mov,112), 
       nro_voo = voo_rea,
       base = 'SE', qtd_passageiros = 1,
       valor_unitario = (SELECT top 1 convert(numeric(15,2),unit_price)
                         FROM DBSrrcv.dbo.zud_price_list_z b
                         where b.item_id = a.item_fat 
                           and b.eff_date <= a.dt_mov
                         order by b.eff_date desc),
      billing_line_id  
from GEACupax..pax_selo_electronico_u a (nolock)
where billing_line_id = @nu_boleto_ss) m
group by  cd_aerop, tp_voo, data_voo, nro_voo, base, valor_unitario, billing_line_id
--------------------  ******************************************

-- Insere as linhas do boleto na tabela final 
   Insert into #arquivo
   Select '02'+
          'DB'+
       cd_aerop+
       tp_voo+
       data_voo+
       (CASE WHEN nro_voo = 'XXXX' then '    ' else convert(char(4),nro_voo) end)+
       convert(char(3),base)+
       right('000000'+convert(varchar(6),qtd_passageiros),6)+
       right('0000000000000000'+convert(varchar(16),convert(int,round(valor_unitario*100,2))),15)+
       right('0000000000000000'+convert(varchar(16),convert(int,round(total*100,2))),15)+
       '000000000000000'+
       '0000000000000'
   from #linhas_boleto


Insert into #arquivo
   Select '02'+
       'CR'+
       substring(recv_entity_name,1,4)+
       categoria+
       convert(char(8),dt_mov,112)+
       space(4)+
       convert(char(3),case base_fat  when 'SELO FÍSICO' then 'SF'  when 'SELO ELETRÔNICO' then 'SE' else 'RPE' end ) +
       right('000000'+convert(varchar(6),quantity * -1),6) +
       right('0000000000000000'+convert(varchar(16),convert(int,round(unit_price,2)*100)),15) +
       right('0000000000000000'+convert(varchar(16),convert(int,round(recv_doc_line_amt * -1,2)*100)),15) +
       '000000000000000'+
       '0000000000000'
from GEACrpt..gvw_demonstrativo_faturamento_pax
where nu_boleto_ss  = @nu_boleto_ss
and quantity < 0


-- **************** Linhas de Controle ******************
Declare 
   @total_linha_detalhe int,
   @total_linhas int

select @total_linha_detalhe = count(1) from #arquivo where substring(linha,1,2) = '02'
  
insert into #arquivo 
Select '09'+
       (select right('000000'+Convert(varchar(6),count(1)),6)  from #arquivo where substring(linha,1,2) = '02' )+ 
       (select right('000000'+Convert(varchar(6),count(1)+1),6) from #arquivo) 


select arquivo = @arquivo,* 
--into ##arquivo 
from #arquivo order by linha

/*
create index idx_1 on ##arquivo(linha)

Declare @w_arquivo varchar(500)
select @w_arquivo =  'master.dbo.xp_cmdshell ''bcp ##arquivo out \\se10275528\RPE-Corretivo\' + @arquivo + ' -c -SSQLSSIII -T'''

print @w_arquivo

exec (@w_arquivo)

drop table ##arquivo
*/


GO

/****** Object:  StoredProcedure [dbo].[gsp_ins_selos_discrep]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_ins_selos_discrep    Script Date: 19/09/2008 15:20:01 ******/
CREATE proc [dbo].[gsp_ins_selos_discrep] (
	@p_cd_aerop_destino     		char(4)
	,@p_cd_terminal_destino  		char(10)
	,@p_dt_mov                		datetime
	,@p_selo_status           		char(1)
	,@p_nro_selo              		char(10)
	,@p_selo_status_ind       		char(1)
	,@p_cd_cia_aerea          		char(3)
	,@p_discrepancia          		varchar(10)
	,@p_cd_motivo   				char(2)
	,@p_arquivo   					char(255)
	,@p_tp_coletor   				char(16)
	,@p_date_created          		datetime = '19000101'
	,@p_user_id_created       		char(30) = 'X' 
	,@p_ano_remesa					integer = NULL) 
As
if @p_date_created = '19000101' 
    select @p_date_created = GETDATE()
if @p_user_id_created = 'X' 
    select @p_user_id_created = suser_sname()

declare  
	@p_date_changed         	datetime
	,@p_user_id_changed   		char(30)
	,@p_inactive_ind         	char(1)
	,@p_active_date          	datetime

if @p_ano_remesa IS NULL
	set @p_ano_remesa = year(@p_dt_mov)

if exists (select * from pax_discrep_selo_u (nolock index = P_pax_discrep_selo_u)
		 where cd_aerop_destino     		= @p_cd_aerop_destino    
			and cd_terminal_destino  		= @p_cd_terminal_destino 
			and dt_mov               		= @p_dt_mov              
			and selo_status          		= @p_selo_status         
			and nro_selo             		= @p_nro_selo            
			and ano_remesa					= @p_ano_remesa)
begin
	select @p_date_changed         	= @p_date_created
		,@p_user_id_changed      	= @p_user_id_created

    Update pax_discrep_selo_u
    set selo_status_ind      	= @p_selo_status_ind     
	   ,cd_cia_aerea         	= @p_cd_cia_aerea        
	   ,discrepancia         	= @p_discrepancia        
	   ,cd_motivo         		= @p_cd_motivo
	   ,arquivo          		= @p_arquivo
	   ,tp_coletor           	= @p_tp_coletor
	   ,date_changed         	= @p_date_changed        
	   ,user_id_changed      	= @p_user_id_changed     
	   ,chgstamp             	= chgstamp + 1
    where cd_aerop_destino     		= @p_cd_aerop_destino    
		and cd_terminal_destino  	= @p_cd_terminal_destino 
		and dt_mov               	= @p_dt_mov              
		and selo_status          	= @p_selo_status         
		and nro_selo             	= @p_nro_selo            
		AND ano_remesa				= @p_ano_remesa
end 
else
begin
	select  @p_date_changed		= '19000101'
		,@p_user_id_changed		= ''
		,@p_inactive_ind		= '0'
		,@p_active_date			= @p_date_created

	insert pax_discrep_selo_u
	values (@p_cd_aerop_destino    
		,@p_cd_terminal_destino 
		,@p_dt_mov              
		,@p_selo_status         
		,@p_nro_selo            
		,@p_ano_remesa
		,@p_selo_status_ind     
		,@p_cd_cia_aerea        
		,@p_discrepancia        
		,@p_cd_motivo
		,@p_arquivo
		,@p_tp_coletor
		,@p_date_created        
		,@p_user_id_created     
		,@p_date_changed        
		,@p_user_id_changed     
		,@p_inactive_ind        
		,@p_active_date         
		,0)
end




GO

/****** Object:  StoredProcedure [dbo].[gsp_le_arq_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_le_arq_selos    Script Date: 19/09/2008 15:20:02 ******/

--DROP PROCEDURE dbo.gsp_le_arq_selos
--gsp_le_arq_selos

CREATE   PROCEDURE [dbo].[gsp_le_arq_selos] --
--		@p_caminho       	Char (255),
--@p_nome_arquivo  	Char  (30))
As

Create Table #table_le_arq_selos (data_mov char(13), nro_selo char(9))
--Execute BULK INSERT #table_le_arq_selos FROM " + Rtrim(@p_caminho) + '\' + Rtrim(@p_nome_arquivo) + '"
BULK INSERT #table_le_arq_selos FROM "\\S-SEAN218\DriveF\Selo_procesado\SBRF_1_1_U_NA_15092003-180002_303.TXT"




GO

/****** Object:  StoredProcedure [dbo].[gsp_procura_arq_conf_selos_e]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_procura_arq_conf_selos_e    Script Date: 19/09/2008 15:20:02 ******/



--drop proc gsp_procura_arq_conf_selos_e
/*
*/

CREATE              PROC [dbo].[gsp_procura_arq_conf_selos_e]
AS

/*
Data: 20/11/2003

Busca arquivos de confirmação das operações de selos eletrônicos, enviados pelas empresas aéreas.

--exec gsp_procura_arq_conf_selos_e

Marcelo Reis Palma

17/12/2008: Adaili Dias
- Incluida Cia aerea AZUL - cd_cia_aerea: AZL - sigla_iata: AD

12/01/2009: Adaili Dias
- Alterada Cia aerea AZUL - cd_cia_aerea: AZU - sigla_iata: AD
E-MAIL: Lawrence Pinto/SEDE/INFRAERO 12/01/2009 09:45

*/

DECLARE  @arquivo  		VARCHAR (255)
	,@cont_arq  		INTEGER
	,@mensaje  			VARCHAR (255)
	,@date_pro          DATETIME
	,@copy   			VARCHAR (255)
	,@p_cd_terminal     CHAR (10) 
	,@p_dt_mov          DATETIME
	,@p_hh_mm           CHAR (6) 
	,@p_selo_status     CHAR (1) 
	,@p_arquivo         CHAR (255) 
	,@p_cd_motivo       CHAR (2) 
	,@p_qtd_selos       FLOAT
	,@p_tp_coletor      CHAR (16) 
	,@p_tp_baixa        CHAR (1) 
	,@p_status_arq      CHAR (1) 
	,@p_date_created    DATETIME
	,@p_user_id_created CHAR (30) 
	,@p_date_changed    DATETIME 
	,@p_user_id_changed CHAR (30) 
	,@p_inactive_ind    CHAR (1) 
	,@p_active_date     DATETIME  
	,@p_status_arq_aux  CHAR (1) 
	,@LINEA 			VARCHAR (255)
	,@size 				REAL
	,@error_size		INTEGER
	,@data_str_temp		CHAR (10)
	,@fl_habilitado		CHAR (1)
	,@w_tp_selo			CHAR (1)
	,@w_cd_cia_aerea	CHAR (3)
	,@w_dt_arquivo		CHAR (8)
	,@w_prefixo_cia_aerea CHAR(2)
	,@v_date_temp     	DATETIME  
	,@v_envia_pra_erro	SMALLINT
	,@v_dt_inicio		DATETIME  
	,@v_cd_aerop		CHAR(4)
	,@v_execute			VARCHAR (255)
	,@sql				varchar(3000)
	,@v_pasta_arq_pro	varchar(255)
	,@v_pasta_arq_jenv	varchar(255)
	,@v_pasta_arq_erro	varchar(255)


-- VERIFICAR SI EL PROCESO ESTA HABILITADO
SELECT @fl_habilitado = ISNULL(descp,'0') FROM GEACCOMMON..dropdowndw_u (NOLOCK)
WHERE  tbl_code = 'CSEL'
AND code = '1'

IF @fl_habilitado = '0' OR @fl_habilitado IS NULL
BEGIN
	SET @mensaje = 'Processo desabilitado, Verificar tabelas genericas [CSEL]. codigo = 1, Descrição = 0.'
	PRINT @mensaje         
	RETURN 3
END
-- FIM VERIFICAR SI EL PROCESO ESTA HABILITADO

/* Procurar pasta com arquivos a processar */
exec GEACCOMMON..psp_buscar_valor_tab_gen 'TDIR', 'CONF_SELO', @v_pasta_arq_pro output
if @v_pasta_arq_pro = ''
begin
	set @mensaje = 'Debe especificar a pasta aonde estão os arquivos na Atividade "Tabela Generica de Valores". Codigo de Tabela TDIR, codigo CONF_SELO' 
	print @mensaje         
	return 3
end

/* Procurar pasta com arquivos já enviados */
exec GEACCOMMON..psp_buscar_valor_tab_gen 'TDIR', 'CSELO_JENV', @v_pasta_arq_jenv output
if @v_pasta_arq_jenv = ''
begin
	set @mensaje = 'Debe especificar a pasta aonde estão os arquivos na Atividade "Tabela Generica de Valores". Codigo de Tabela TDIR, codigo CSELO_JENV' 
	print @mensaje         
	return 3
end


/* Procurar pasta com arquivos já enviados */
exec GEACCOMMON..psp_buscar_valor_tab_gen 'TDIR', 'CSELO_ERRO', @v_pasta_arq_erro output
if @v_pasta_arq_erro = ''
begin
	set @mensaje = 'Debe especificar a pasta aonde estão os arquivos com erro na Atividade "Tabela Generica de Valores". Codigo de Tabela TDIR, codigo CSELO_ERRO' 
	print @mensaje         
	return 3
end


SET NOCOUNT ON

SELECT @cont_arq 	= 0
	 ,@mensaje 		= ''
 	,@date_pro 		= GETDATE()

-- Incluir registro na tabela de erros de processamento de selos eletronicos
if not exists (select 1 from sysobjects 
				where name 	= 'pax_erro_job_selos_elec_u'
				and xtype	= 'U')
begin
	create table pax_erro_job_selos_elec_u  (
		 linha			integer IDENTITY
		,mensagem		varchar(255) NULL
		,data_processo	datetime)
end

insert into  pax_erro_job_selos_elec_u values ('Inicio do Processo (' + CONVERT(varchar(10), @date_pro, 103) + ' ' + CONVERT(varchar(12), @date_pro, 114) + ')', @date_pro)

CREATE TABLE #TEMP ( LINEA VARCHAR(255) NULL)

set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Tam\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Gol\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Web\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Vrg\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Lap\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\one\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Pantanal\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\trip\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\sete\Selo\*.* /-C'''
exec (@v_execute)
set @v_execute = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir ' + @v_pasta_arq_pro + '\Azul\Selo\*.* /-C'''
exec (@v_execute)

DELETE FROM #TEMP 
WHERE (LINEA 							IS NULL)
or (left(LINEA,1) 						= ' ')
or (charindex('<DIR>', LINEA)			> 0 )
or (isnumeric(substring(LINEA,1,2))		= 0)

DECLARE cur_arq CURSOR FOR
SELECT LTRIM(RTRIM(LINEA)) FROM #TEMP

OPEN cur_arq 

FETCH NEXT FROM cur_arq INTO @LINEA

WHILE @@FETCH_STATUS = 0
BEGIN

    SELECT @arquivo = upper(SUBSTRING (@LINEA, 37, 40)) -- RTRIM(LTRIM(RIGHT(@LINEA, 39)))
          ,@size 	= CONVERT (REAL, SUBSTRING (@LINEA, 20, 17) )

    SELECT @data_str_temp		= SUBSTRING(@arquivo, 3,6)             
          	,@error_size 		= 0
			,@v_envia_pra_erro	= 0

    IF ISDATE(@data_str_temp) 	= 0 OR RIGHT(@LINEA,1) = '.'
    BEGIN
        GOTO SEGUIR
    END


    IF UPPER(RIGHT(@arquivo, 4)) <> '.TXT'
    BEGIN
        SET @mensaje = 'Não foram encontrados Arquivos para Processar'
        insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
        GOTO SALIR
    END

    IF SUBSTRING (@arquivo, 15, 1) <> '-' 
    BEGIN
		SELECT @error_size = 1
	        ,@mensaje = 'Nome do arquivo inválido - separador "-"' --Solimar
        insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
        GOTO SEGUIR
    END

    IF @size <= 1
    BEGIN
        SELECT @mensaje 	= 'Arquivo sem Dados. ' + rtrim(@arquivo)
	      ,@error_size 		= 1
        insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
        GOTO SEGUIR
    END

    SELECT   
		@p_arquivo    			= @arquivo
		,@w_dt_arquivo			= '20' + Substring (@arquivo, 3, 6)
		,@p_date_created     	= @date_pro
		,@p_user_id_created  	= suser_sname()
		,@p_date_changed     	= '19000101'
		,@p_user_id_changed  	= ' '
		,@p_inactive_ind     	= '0'
		,@p_active_date      	= '19000101'
		,@w_prefixo_cia_aerea	= Left (@arquivo, 2)



    -- Busca a cia aérea
	SELECT @w_cd_cia_aerea 	= LTRIM(RTRIM(cd_cia_aerea))
	FROM GEACutcx..cor_cia_aerea_u (NOLOCK INDEX = P_cor_cia_aerea_u)
	WHERE sigla_iata = @w_prefixo_cia_aerea 
      and inactive_ind = 0
	
	IF ( @w_cd_cia_aerea = '' or @w_cd_cia_aerea is null )
	BEGIN
		SELECT @mensaje 	= 'Cia Aéra Inválida. ' + ltrim(rtrim(@w_cd_cia_aerea))
		,@error_size 		= 1
        insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
		GOTO SEGUIR
	END
/*	
	if @w_cd_cia_aerea = 'VGN'
		set  @w_cd_cia_aerea = 'VRG'
*/	
	/* PROCURAR INÍCIO DE OPERAÇÕES DE SELOS ELETRÔNICOS DO AEROPORTO */
	SELECT @v_cd_aerop 		= LEFT(UPPER(RIGHT(@arquivo, 8)),4)
			,@v_date_temp 	= @data_str_temp		

	SELECT  @v_dt_inicio = dt_inicio  
	FROM pax_ini_ope_selo_elet_u (NOLOCK INDEX = P_pax_ini_ope_selo_elet_u)
	WHERE cd_aerop 			= @v_cd_aerop
	AND cd_terminal 		= '1'
	AND cd_cia_aerea  		= @w_cd_cia_aerea
	IF @@ROWCOUNT = 0
	BEGIN
		SELECT @mensaje 	= 'AEROPORTO NÃO AUTORIZADO PARA OPERAR COM SELOS ELETRÔNICOS. CIA ' + ltrim(rtrim(@w_cd_cia_aerea))
		,@error_size 		= 1
		,@v_envia_pra_erro	= 1
		insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
		GOTO SEGUIR
	END
	ELSE
	BEGIN
		IF CONVERT(VARCHAR,@v_date_temp,112) < CONVERT(VARCHAR,@v_dt_inicio,112)
		BEGIN
			SELECT @mensaje 	= 'Aeroporto ' + @v_cd_aerop + ' não autorizado para operar com Selos Eletrônicos nesta data (' + CONVERT(VARCHAR,@v_date_temp,103) + ')'
			,@error_size 		= 1
			,@v_envia_pra_erro	= 1
		    insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
			GOTO SEGUIR
		END
	END

	
	-- Verifica se já existe registro
	IF NOT EXISTS ( SELECT 1 FROM GEACupax..pax_conf_baixa_selo_u (NOLOCK INDEX = P_pax_conf_baixa_selo_u)
					WHERE cd_cia_aerea 		= @w_cd_cia_aerea
					AND dt_arquivo  	 	= @w_dt_arquivo
					AND arquivo  	 		= @p_arquivo )
	BEGIN
		INSERT INTO GEACupax..pax_conf_baixa_selo_u
			( cd_cia_aerea,
			dt_arquivo,
			arquivo,
			qtd_selos,
			status_arq,
			date_created,
			user_id_created,
			date_changed,
			user_id_changed,
			inactive_ind,
			active_date,
			chgstamp )
		VALUES ( 
			@w_cd_cia_aerea
			,@w_dt_arquivo
			,@p_arquivo
			,0
			,'0'
			,@p_date_created
			,@p_user_id_created
			,@p_date_changed
			,@p_user_id_changed
			,@p_inactive_ind
			,@p_active_date
			,0 )

		SET @mensaje = 'REQUISIÇAO CRIADA PARA ARQUIVO:' + ltrim(rtrim(@arquivo)) 
		PRINT @mensaje + CHAR(13) + CHAR(10) 
		insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
		SET @cont_arq = @cont_arq + 1
	END
	ELSE
	BEGIN
		
		SELECT @p_status_arq_aux = status_arq 
		FROM GEACupax..pax_conf_baixa_selo_u (NOLOCK INDEX = P_pax_conf_baixa_selo_u)
		WHERE cd_cia_aerea 		= @w_cd_cia_aerea
		AND  dt_arquivo 		= @w_dt_arquivo
		AND  arquivo 			= @p_arquivo		      
		
		SET @mensaje = 'ARQUIVO:' + ltrim(rtrim(@arquivo)) + '  ESTA DUPLICADO. STATUS DO ARQUIVO ' + @p_status_arq_aux 
		PRINT @mensaje + CHAR(13) + CHAR(10)
		insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
		
		IF @p_status_arq_aux = '1'
		BEGIN
			SELECT @copy = CASE WHEN @w_cd_cia_aerea = 'TAM' THEN 'copy ' + @v_pasta_arq_pro + '\Tam\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'GLO' THEN 'copy ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'WEB' THEN 'copy ' + @v_pasta_arq_pro + '\web\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' THEN 'copy ' + @v_pasta_arq_pro + '\vrg\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'LAP' THEN 'copy ' + @v_pasta_arq_pro + '\Lap\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'ONE' THEN 'copy ' + @v_pasta_arq_pro + '\one\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'PTN' THEN 'copy ' + @v_pasta_arq_pro + '\pantanal\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'TIB' THEN 'copy ' + @v_pasta_arq_pro + '\trip\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'SLX' THEN 'copy ' + @v_pasta_arq_pro + '\sete\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								WHEN @w_cd_cia_aerea = 'AZU' THEN 'copy ' + @v_pasta_arq_pro + '\Azul\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_jenv
								ELSE '' END

			set @sql = 'master..xp_cmdshell '''+ @copy + ''''

			EXEC (@sql)

			SELECT @copy = CASE WHEN @w_cd_cia_aerea = 'TAM' THEN 'DEL ' + @v_pasta_arq_pro + '\Tam\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
								WHEN @w_cd_cia_aerea = 'GLO' THEN 'DEL ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'WEB' THEN 'DEL ' + @v_pasta_arq_pro + '\web\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' THEN 'DEL ' + @v_pasta_arq_pro + '\Vrg\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'LAP' THEN 'DEL ' + @v_pasta_arq_pro + '\Lap\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'ONE' THEN 'DEL ' + @v_pasta_arq_pro + '\one\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'PTN' THEN 'DEL ' + @v_pasta_arq_pro + '\pantanal\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'TIB' THEN 'DEL ' + @v_pasta_arq_pro + '\trip\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'SLX' THEN 'DEL ' + @v_pasta_arq_pro + '\sete\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'AZU' THEN 'DEL ' + @v_pasta_arq_pro + '\Azul\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								ELSE '' END

         set @sql = 'master..xp_cmdshell '''+ @copy + ''''

			EXEC (@sql)


            SET @mensaje = 'ARQUIVO:' + ltrim(rtrim(@arquivo)) + ' COPIADO PARA A PASTA Selo_ja_enviados' + @p_status_arq_aux 
			PRINT @mensaje + CHAR(13) + CHAR(10)
		    insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
		END
		
		IF @p_status_arq_aux = '2'
		BEGIN

			SELECT @copy = CASE WHEN @w_cd_cia_aerea = 'TAM' THEN 'copy ' + @v_pasta_arq_pro + '\Tam\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'GLO' THEN 'copy ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'WEB' THEN 'copy ' + @v_pasta_arq_pro + '\web\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' THEN 'copy ' + @v_pasta_arq_pro + '\vrg\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'LAP' THEN 'copy ' + @v_pasta_arq_pro + '\Lap\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'ONE' THEN 'copy ' + @v_pasta_arq_pro + '\one\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'PTN' THEN 'copy ' + @v_pasta_arq_pro + '\pantanal\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'TIB' THEN 'copy ' + @v_pasta_arq_pro + '\trip\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'SLX' THEN 'copy ' + @v_pasta_arq_pro + '\sete\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								WHEN @w_cd_cia_aerea = 'AZU' THEN 'copy ' + @v_pasta_arq_pro + '\SSH\Azul\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @v_pasta_arq_erro
								ELSE '' END

         set @sql = 'master..xp_cmdshell '''+ @copy  + ''''

			EXEC (@sql)
			
			SELECT @copy = CASE WHEN @w_cd_cia_aerea = 'TAM' THEN 'DEL ' + @v_pasta_arq_pro + 'Tam\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
								WHEN @w_cd_cia_aerea = 'GLO' THEN 'DEL ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'WEB' THEN 'DEL ' + @v_pasta_arq_pro + '\web\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' THEN 'DEL ' + @v_pasta_arq_pro + '\Vrg\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'LAP' THEN 'DEL ' + @v_pasta_arq_pro + '\Lap\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'ONE' THEN 'DEL ' + @v_pasta_arq_pro + '\one\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'PTN' THEN 'DEL ' + @v_pasta_arq_pro + '\pantanal\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'TIB' THEN 'DEL ' + @v_pasta_arq_pro + '\trip\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'SLX' THEN 'DEL ' + @v_pasta_arq_pro + '\sete\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								WHEN @w_cd_cia_aerea = 'AZU' THEN 'DEL ' + @v_pasta_arq_pro + '\Azul\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
								ELSE '' END

         set @sql = 'master..xp_cmdshell '''+ @copy + ''''

			EXEC (@sql)
			
			SET @mensaje = 'ARQUIVO:' + ltrim(rtrim(@arquivo)) + ' COPIADO PARA A PASTA ConfSelo_erroes' + @p_status_arq_aux 
			PRINT @mensaje + CHAR(13) + CHAR(10)
		    insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
		END
		
    END           

    SEGUIR:
    IF @error_size = 1
    BEGIN

		SELECT @copy = CASE WHEN @w_cd_cia_aerea = 'TAM' THEN 'copy ' + @v_pasta_arq_pro + '\Tam\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'GLO' AND @v_envia_pra_erro	= 1  THEN 'copy ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@arquivo)) + ' \\S-SEAN217\ConfSelo_erroes_GOL'
							WHEN @w_cd_cia_aerea = 'GLO' AND @v_envia_pra_erro	<> 1 THEN 'copy ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'WEB' THEN 'copy ' + @v_pasta_arq_pro + '\Web\Selo\' + RTRIM(LTRIM(@arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'
							WHEN @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' THEN 'copy ' + @v_pasta_arq_pro + '\Vrg\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'LAP' THEN 'copy ' + @v_pasta_arq_pro + '\Lap\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'ONE' THEN 'copy ' + @v_pasta_arq_pro + '\one\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'PTN' THEN 'copy ' + @v_pasta_arq_pro + '\pantanal\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'TIB' THEN 'copy ' + @v_pasta_arq_pro + '\trip\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'SLX' THEN 'copy ' + @v_pasta_arq_pro + '\sete\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							WHEN @w_cd_cia_aerea = 'AZU' THEN 'copy ' + @v_pasta_arq_pro + '\Azul\Selo\' + RTRIM(LTRIM(@arquivo)) + ' ' + @v_pasta_arq_erro
							ELSE '' END


         set @sql = 'master..xp_cmdshell '''+ @copy + ''''

			EXEC (@sql)
	
		SELECT @copy = CASE WHEN @w_cd_cia_aerea = 'TAM' THEN 'DEL ' + @v_pasta_arq_pro + '\Tam\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
							WHEN @w_cd_cia_aerea = 'GLO' THEN 'DEL ' + @v_pasta_arq_pro + '\Gol\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'WEB' THEN 'DEL ' + @v_pasta_arq_pro + '\web\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' THEN 'DEL ' + @v_pasta_arq_pro + '\Vrg\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'LAP' THEN 'DEL ' + @v_pasta_arq_pro + '\Lap\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'ONE' THEN 'DEL ' + @v_pasta_arq_pro + '\one\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'PTN' THEN 'DEL ' + @v_pasta_arq_pro + '\pantanal\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'TIB' THEN 'DEL ' + @v_pasta_arq_pro + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'SLX' THEN 'DEL ' + @v_pasta_arq_pro + '\sete\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							WHEN @w_cd_cia_aerea = 'AZU' THEN 'DEL ' + @v_pasta_arq_pro + '\Azul\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' 
							ELSE '' END

         set @sql = 'master..xp_cmdshell '''+ @copy + ''''

			EXEC (@sql)

        SET @mensaje = 'ARQUIVO:' + ltrim(rtrim(@arquivo)) + ' COPIADO PARA A PASTA Selo_erroes - ' + @mensaje +CHAR(13) + CHAR(10) 
        PRINT @mensaje
        insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
    END

    FETCH NEXT FROM cur_arq INTO @LINEA
    
END

SALIR:
IF @cont_arq > 0
BEGIN
   SET @mensaje = 'FORAM CRIADAS ' + RTRIM(LTRIM(STR(@cont_arq))) + ' REQUISIÇÕES.' 
   PRINT @mensaje  + CHAR(13) + CHAR(10)
   insert into  pax_erro_job_selos_elec_u values (@mensaje, @date_pro)
END

CLOSE cur_arq 
DEALLOCATE cur_arq 
DROP TABLE #TEMP

insert into  pax_erro_job_selos_elec_u values ('Fim do Processo (' + CONVERT(varchar(30), GETDATE(), 131) + ')', @date_pro)

SET NOCOUNT OFF







GO

/****** Object:  StoredProcedure [dbo].[gsp_procurar_arquivos_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_procurar_arquivos_selos    Script Date: 19/09/2008 15:20:02 ******/






--drop proc gsp_procurar_arquivos_selos
CREATE                PROC [dbo].[gsp_procurar_arquivos_selos]
AS

/*
Data: 19/11/2003
Modificada a partir da Stored Procedure dbo.gsp_procurar_arquivos_selos,
para o processamento de selos eletrônicos, além dos selos convencionais.
Marcelo Reis Palma

Alteração feita por Solimar Sousa para atender versão 500 do programa Coletor
Data início: 17/08/2004
Alteração feita por Solimar Sousa para aceitar versões 501 e 502 - mudança DataCenter
Data: 14/10/2004

*/

DECLARE  @arquivo  			VARCHAR (255)
	,@cont_arq  			INTEGER
	,@mensaje  				VARCHAR (255)
	,@date_pro           	DATETIME
	,@copy   				VARCHAR (255)
	,@p_cd_aerop         	CHAR (4) 
	,@p_cd_terminal      	CHAR (10) 
	,@p_dt_mov           	CHAR (10)
	,@p_hh_mm            	CHAR (6) 
	,@p_selo_status      	CHAR (1) 
	,@p_arquivo          	CHAR (255) 
	,@p_cd_motivo        	CHAR (2) 
	,@p_qtd_selos        	FLOAT
	,@p_qtd_lineas_arq		FLOAT
	,@p_qtd_discrepancias	FLOAT
	,@p_qtd_lineas_erro		FLOAT
	,@p_qtd_discrepancias_tra 	FLOAT
	,@p_qtd_duplicados			FLOAT
	,@p_tp_coletor       	CHAR (16) 
	,@p_tp_baixa        	CHAR (1) 
	,@p_status_arq       	CHAR (1) 
	,@p_date_created     	DATETIME
	,@p_user_id_created  	CHAR (30) 
	,@p_date_changed     	DATETIME 
	,@p_user_id_changed  	CHAR (30) 
	,@p_inactive_ind     	CHAR (1) 
	,@p_active_date      	DATETIME  
	,@p_status_arq_aux     	CHAR (1) 
	,@LINEA 				VARCHAR (255)
	,@size 					REAL
	,@error_size			INTEGER
	,@data_str_temp			CHAR (10)
	,@fl_habilitado			CHAR (1)
	,@w_tp_selo				CHAR (1)
	,@msg 					varchar(250)
	,@sql                varchar(3000)


-- VERIFICAR SI EL PROCESO ESTA HABILITADO
SELECT @fl_habilitado = ISNULL(descp,'0') FROM GEACCOMMON..dropdowndw_u (NOLOCK)
WHERE  tbl_code = 'CSEL'
AND code = '1'

IF @fl_habilitado = '0' OR @fl_habilitado IS NULL
BEGIN
        SELECT @mensaje = 'Processo desahilitado, Verificar tabelas genericas [CSEL]. codigo = 1, Descrição = 0.'
        PRINT @mensaje         
        RETURN 3
END
-- FIM VERIFICAR SI EL PROCESO ESTA HABILITADO

-- VERIFICAR SI EL PROCESO YA ESTA EJECUTANDOSE
DECLARE @cont INT 
EXEC psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont OUTPUT
IF @cont > 1
BEGIN
    SELECT @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_valida_ins_selos_arq', @cont OUTPUT
IF @cont > 0
BEGIN
    SELECT @msg = 'O Processo de validar os Selos se está executando neste momento, estes dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont OUTPUT
IF @cont > 0
BEGIN
    SELECT @msg = 'O Processo de reprocessamento das discrepâncias se está executando neste momento, estes dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END



SET NOCOUNT ON

SELECT @cont_arq 	= 0
	,@mensaje 		= ''
 	,@date_pro 		= GETDATE()

CREATE TABLE #TEMP (
     LINEA VARCHAR(255) NULL)

set @sql = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir \\S-SEAN217\DriveF\Selo\*.* /-C'''  			-- (PRODUÇÃO)
exec (@sql)

DELETE #TEMP WHERE LINEA IS NULL

DECLARE cur_arq CURSOR FOR
SELECT LTRIM(RTRIM(LINEA)) FROM #TEMP (NOLOCK)

OPEN cur_arq 

FETCH NEXT FROM cur_arq INTO @LINEA

WHILE @@FETCH_STATUS = 0
BEGIN

    SELECT @data_str_temp	= SUBSTRING(@LINEA, 1,10)             
          ,@error_size 		= 0

    IF ISDATE(@data_str_temp) = 0 OR RIGHT(@LINEA,1) = '.'
    BEGIN
        GOTO SEGUIR
    END

    SELECT @arquivo		= LTRIM(RTRIM(SUBSTRING (@LINEA, 40, 40))) 
	   ,@size 		= CONVERT (REAL, SUBSTRING (@LINEA, 20,19) )

    IF UPPER(RIGHT(@arquivo, 4)) <> '.TXT'
    BEGIN
        SELECT 	--@mensaje = 'NO SE ENCONTRARON ARQUIVOS A PROCESAR'
		@mensaje = 'ARQUIVO COM EXTENSÃO DIFERENTE DE .TXT'
		,@error_size 	= 1
        GOTO SEGUIR
    END

    IF SUBSTRING (@arquivo, 1,4) = 'SEDE'
    BEGIN
	SELECT @mensaje = 'ARQUIVO GERADO PELA SEDE NÃO SÃO PROCESSADOS.'
	      	,@error_size 	= 1
        	GOTO SEGUIR
    END

    IF SUBSTRING(RIGHT(rtrim(ltrim(@arquivo)),7),1,3) NOT IN ('400','401','500','501','502','503','504','600')
    BEGIN
        SELECT 	@mensaje = 'VERSÃO DO PROGRAMA COLETOR DIFERENTE DE 400, 401, 500, 501, 502, 503, 504 ou 600'
	      	,@error_size 	= 1
        GOTO SEGUIR
    END

    IF @size <= 1
    BEGIN
       	SELECT @mensaje 	= 'ARQUIVO SEM DADOS. '
		,@error_size 	= 1
       	GOTO SEGUIR
    END

  if SUBSTRING(RIGHT(rtrim(ltrim(@arquivo)),7),1,1) not in ( '5', '6')
  begin

    SELECT @data_str_temp = SUBSTRING (@arquivo, 19,4) + SUBSTRING (@arquivo, 17,2) + SUBSTRING (@arquivo, 15,2)

    IF @data_str_temp > CONVERT(VARCHAR, @date_pro, 112)
    BEGIN
        SELECT @mensaje = 'DATA DE ARQUIVO MAIOR A DATA DO DIA DE PROCESAMENTO.'
	      ,@error_size 	= 1
        GOTO SEGUIR

    END
  
 
    --SELECT @arquivo
    SELECT   @p_cd_aerop    	= LEFT (@arquivo, 4)
		,@p_cd_terminal      	= SUBSTRING (@arquivo, 6,1)
		,@p_dt_mov           	= SUBSTRING (@arquivo, 19,4) + SUBSTRING (@arquivo, 17,2) + SUBSTRING (@arquivo, 15,2)
		,@p_hh_mm            	= SUBSTRING (@arquivo, 24,6)
		,@p_selo_status      	= CASE 	WHEN SUBSTRING (@arquivo, 10,1) = 'U' THEN '2'
		                   		WHEN SUBSTRING (@arquivo, 10,1) = 'D' THEN '3'
		                   		WHEN SUBSTRING (@arquivo, 10,1) = 'C' THEN '4' END
		,@p_arquivo          	= @arquivo
		,@p_cd_motivo        	= SUBSTRING (@arquivo, 12,2)
		,@p_qtd_selos        	= 0
		,@p_tp_coletor       	= CASE WHEN SUBSTRING (@arquivo, 8,1) = '1' THEN '01'
	                               		WHEN SUBSTRING (@arquivo, 8,1) = '2' THEN '02' END
		,@p_tp_baixa        	= 'L'
		,@p_status_arq       	= '0'
		,@p_date_created     	= @date_pro
		,@p_user_id_created  	= suser_sname()
		,@p_date_changed     	= '19000101'
		,@p_user_id_changed  	= ' '
		,@p_inactive_ind     	= '0'
		,@p_active_date      	= '19000101'
		,@p_status_arq_aux		= ''
		,@p_qtd_lineas_arq		= 0
		,@p_qtd_discrepancias	= 0
		,@p_qtd_lineas_erro		= 0
		,@p_qtd_discrepancias_tra = 0
		,@p_qtd_duplicados		= 0

    IF LEN (@arquivo) > 37 AND ( SUBSTRING (@arquivo, 31, 1) = '1' )    
		Select @w_tp_selo = 'E' -- ELETRÔNICO    
    ELSE    
		Select @w_tp_selo = 'C' -- CONVENCIONAL     

  end
  else 
  begin


    	SELECT  @p_arquivo     = @arquivo
		,@p_cd_aerop   	= SUBSTRING(@arquivo,1,4)
		,@p_cd_terminal = SUBSTRING(@arquivo,5,1)
		,@w_tp_selo		= SUBSTRING(@arquivo,7,1)
		,@p_dt_mov  	= SUBSTRING(@arquivo,9,6)
		,@p_hh_mm       = SUBSTRING(@arquivo,16,6)
		,@p_selo_status = SUBSTRING(@arquivo,23,1)
		,@p_cd_motivo   = SUBSTRING(@arquivo,24,2)
		,@p_tp_coletor  = '01'

	IF LEN(@p_arquivo) <> 33
    	BEGIN
        	SELECT @mensaje = 'NOME DO ARQUIVO COM MAIS DE 33 CARACTERES.'
	      		,@error_size 	= 1
        	GOTO SEGUIR
    	END

   	IF ISDATE(rtrim(@data_str_temp) + ' ' 
		+ substring(@p_hh_mm,1,2) + ':' 
		+ substring(@p_hh_mm,3,2)) = '0'
    	BEGIN
        	SELECT @mensaje = 'DATA DO ARQUIVO INVÁLIDA.'
	      		,@error_size 	= 1
        	GOTO SEGUIR
    	END

   	IF CONVERT(DATETIME,@p_dt_mov) > CONVERT(VARCHAR,@date_pro,112)
    	BEGIN
        	SELECT @mensaje = 'DATA DO ARQUIVO MAIOR QUE A DATA ATUAL.'
	      		,@error_size 	= 1
        	GOTO SEGUIR
    	END

	IF @w_tp_selo = 'F' 
		Select @w_tp_selo = 'C' -- FÍSICO (TRATADO ANTERIORMENTE COMO "CONVENCIONAL")
	ELSE
	BEGIN
		IF @w_tp_selo <> 'E' AND  @w_tp_selo <> 'L' -- ELETRÔNICO

		BEGIN
        		SELECT @mensaje 	= 'TIPO DE SELO DIFERENTE DE "E", "F" OU "L".'
	      			,@error_size 	= 1
        		GOTO SEGUIR
		END
	END

	IF @p_selo_status = 'U' 
		Select  @p_selo_status = '2'
	ELSE
	BEGIN
	 	IF @p_selo_status = 'D' 
			Select  @p_selo_status = '3'
		ELSE
		BEGIN 	IF @p_selo_status = 'C' 
				Select  @p_selo_status = '4'
			ELSE
			BEGIN
        			SELECT @mensaje = 'TIPO DE BAIXA DIFERENTE DE U, D OU C.'
	      				,@error_size 	= 1
        			GOTO SEGUIR
			END
		END
	END	

	IF Not Exists ( Select 1 From GEACutcx..cor_aeroporto_u 
			Where cd_aerop = @p_cd_aerop 
				and inactive_ind = '0')
		OR @p_cd_aerop = 'SEDE'	
	BEGIN
		SELECT @mensaje = 'CÓDIGO DE AEROPORTO INVÁLIDO OU INATIVO.'
	      		,@error_size 	= 1
        	GOTO SEGUIR
	END

	IF Not Exists ( Select 1 From GEACutcx..cor_terminal_aerop_u
			Where cd_aerop = @p_cd_aerop 
				and terminal = @p_cd_terminal
				and inactive_ind = '0')
	BEGIN
		SELECT @mensaje = 'TERMINAL DE AEROPORTO INVÁLIDO OU INATIVO.'
	      		,@error_size 	= 1
        	GOTO SEGUIR
	END
                	
  end

	SELECT	 @p_tp_baixa        		= 'L'
		,@p_status_arq       		= '0'
		,@p_date_created     		= @date_pro
		,@p_user_id_created  		= suser_sname()
		,@p_date_changed     		= '19000101'
		,@p_user_id_changed  		= ' '
		,@p_inactive_ind     		= '0'
		,@p_active_date      		= '19000101'
		,@p_status_arq_aux		= ''
		,@p_qtd_selos        		= 0
		,@p_qtd_lineas_arq		= 0
		,@p_qtd_discrepancias		= 0
		,@p_qtd_lineas_erro		= 0
		,@p_qtd_discrepancias_tra 	= 0
		,@p_qtd_duplicados		= 0

	-- VERIFICA SE ARQUIVO JÁ FOI PROCESSADO ANTERIORMENTE
	IF Not Exists ( Select 1 From GEACupax..pax_baixa_selo_u 
		Where cd_aerop 	= @p_cd_aerop
		AND cd_terminal = @p_cd_terminal
		AND dt_mov  	= @p_dt_mov
		AND hh_mm  	= @p_hh_mm
		AND tp_selo	= @w_tp_selo )
	BEGIN
		-- SE ARQUIVO NÃO FOI PROCESSADO ANTERIORMENTE - INCLUI ARQUIVO		
		INSERT INTO GEACupax..pax_baixa_selo_u 
			( cd_aerop, 
			cd_terminal, 
			dt_mov, 
			hh_mm, 
			tp_selo,
			selo_status, 
			arquivo, 
			cd_motivo, 
			qtd_selos, 
			tp_coletor, 
			tp_baixa, 
			status_arq, 
			qtd_lineas_arq, 
			qtd_discrepancias,
			qtd_lineas_erro,
			qtd_discrepancias_tra,
			qtd_duplicados,
			date_created, 
			user_id_created, 
			date_changed, 
			user_id_changed, 
			inactive_ind, 
			active_date, 
			chgstamp )  
		VALUES ( @p_cd_aerop         
			,@p_cd_terminal      
			,@p_dt_mov           
			,@p_hh_mm            
			,@w_tp_selo
			,@p_selo_status      
			,@p_arquivo          
			,@p_cd_motivo        
			,@p_qtd_selos        
			,@p_tp_coletor       
			,@p_tp_baixa        
			,@p_status_arq       
			,@p_qtd_lineas_arq 
			,@p_qtd_discrepancias
			,@p_qtd_lineas_erro
			,@p_qtd_discrepancias_tra
			,@p_qtd_duplicados		
			,@p_date_created     
			,@p_user_id_created  
			,@p_date_changed     
			,@p_user_id_changed  
			,@p_inactive_ind     
			,@p_active_date      
			,0 ) 
		
	       SELECT @mensaje = 'REQUISIÇAO CRIADA PARA ARQUIVO:' + @arquivo + CHAR(13) + CHAR(10) 
	       PRINT @mensaje
	       SELECT @cont_arq = @cont_arq + 1
		
	END
	ELSE
	BEGIN
		-- SE ARQUIVO JÁ FOI PROCESSADO ANTERIORMENTE - REPROCESSA OU NÃO ARQUIVO
	    	SELECT   @p_status_arq_aux = status_arq 
			FROM GEACupax..pax_baixa_selo_u (NOLOCK)
			WHERE   cd_aerop 		= @p_cd_aerop
				AND cd_terminal  	= @p_cd_terminal
				AND dt_mov  		= @p_dt_mov
				AND hh_mm  		= @p_hh_mm
				AND tp_selo		= @w_tp_selo 
				
				
		SELECT @mensaje = 'ARQUIVO:' + @arquivo + '  ESTA DUPLICADO. STATUS DO ARQUIVO ' + @p_status_arq_aux + CHAR(13) + CHAR(10) 
		PRINT @mensaje
			            
		UPDATE GEACupax..pax_baixa_selo_u 
			SET   	status_arq  = CASE WHEN status_arq 	= '2' THEN '0'
					WHEN status_arq 		= '3' THEN '0'
					WHEN status_arq 		= '1' THEN '1'
					WHEN status_arq 		= '0' THEN '0' END
				,arquivo = LTRIM(RTRIM(@arquivo))
				,date_changed = @date_pro

				,user_id_changed = suser_sname()
				,chgstamp  = chgstamp + 1
			WHERE cd_aerop 			= @p_cd_aerop
				AND cd_terminal  	= @p_cd_terminal
				AND dt_mov  		= @p_dt_mov
				AND hh_mm  		= @p_hh_mm
				AND tp_selo		= @w_tp_selo
  
                      
		SELECT   @p_status_arq_aux = status_arq 
		FROM GEACupax..pax_baixa_selo_u (NOLOCK)
		WHERE   cd_aerop 		= @p_cd_aerop
			AND cd_terminal  	= @p_cd_terminal
			AND dt_mov  		= @p_dt_mov
			AND hh_mm  		= @p_hh_mm
			AND tp_selo		= @w_tp_selo
		
	       	SELECT @mensaje = 'ARQUIVO:' + @arquivo +  ' NOVO STATUS DO ARQUIVO ' + @p_status_arq_aux + CHAR(13) + CHAR(10) 
	       	PRINT @mensaje
	
           	IF @p_status_arq_aux = '1'
           	BEGIN
                  	SELECT @copy = 'copy \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\DriveF\Selo_ja_enviados' 
            
                     set @sql = 'master..xp_cmdshell ' + @copy  
                     exec (@sql)
           
                  	SELECT @copy = 'DEL \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q' -- (PRODUÇÃO)
                     set @sql = 'master..xp_cmdshell ' + @copy  
                     exec (@sql)
           
                   	SELECT @mensaje = 'ARQUIVO:' + @arquivo + ' COPIADO A PASTA DE  Selo_ja_enviados' + @p_status_arq_aux + CHAR(13) + CHAR(10) 
                   	PRINT @mensaje
          	END
    	END           
    

    SEGUIR:
    IF @error_size = 1
    BEGIN

        SELECT @copy = 'copy \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@arquivo)) + ' \\S-SEAN217\DriveF\Selo_erroes' 
         set @sql = 'master..xp_cmdshell ' + @copy  
         exec (@sql)

        SELECT @copy = 'DEL \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@arquivo)) + ' /Q'
         set @sql = 'master..xp_cmdshell ' + @copy  
         exec (@sql)

        SELECT @mensaje = 'ARQUIVO:' + @arquivo + ' COPIADO PARA A PASTA DE Selo_erroes - ' + @mensaje + CHAR(13) + CHAR(10) 
        PRINT @mensaje
    END

    FETCH NEXT FROM cur_arq INTO @LINEA
    
END

SALIR:
IF @cont_arq > 0
BEGIN
   SELECT @mensaje = 'FORAM CRIADAS ' + RTRIM(LTRIM(STR(@cont_arq))) + ' REQUISIÇÕES.' + CHAR(13) + CHAR(10) 
   PRINT @mensaje 
END

CLOSE cur_arq 
DEALLOCATE cur_arq 
DROP TABLE #TEMP


SET NOCOUNT OFF






GO

/****** Object:  StoredProcedure [dbo].[gsp_reproc_ins_selos_arq]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_reproc_ins_selos_arq    Script Date: 19/09/2008 15:20:02 ******/







CREATE PROCEDURE  [dbo].[gsp_reproc_ins_selos_arq]
	( 	@ruta			VARCHAR(255)
	   ,@arquivo		VARCHAR(255))
AS


-- DECLARACION DE VARIABLES 
DECLARE
	@p_cd_aerop      		CHAR(4)
	,@p_cd_terminal   		CHAR(10)
	,@p_dt_mov        		DATETIME
	,@p_hh_mm   			CHAR(6)
	,@p_selo_status   		CHAR(1)
	,@p_cd_motivo     		CHAR(2)
	,@p_arquivo       		VARCHAR(255)
	,@p_status_arq   		CHAR(1)
	,@p_linha   			VARCHAR(255)
	,@p_nro_selo  			CHAR(9)
	,@p_tp_natureza  		CHAR(1)
	,@p_dt_mov_str			VARCHAR(8)
	,@p_tp_coletor  		CHAR(2)
	,@p_date_process		DATETIME
	,@p_user_process 		CHAR(30)
	,@p_dt_mov_arq			DATETIME
	,@p_hh_mm_arq 			CHAR(6)
	,@p_nro_rste  			CHAR(6)
	,@p_cd_situacao_rste 	CHAR(1)
	,@p_execute       		VARCHAR(255)
	,@p_tp_fat				CHAR(1)
	,@cd_aerop      		CHAR(4)

DECLARE 
	 @p_selo_status_ind       	CHAR(1)
	,@interno_selo_status   	CHAR(1)
	,@interno_dt_mov        	DATETIME
	,@msg          				VARCHAR (200)

	,@nr_total_lineas_arq    		REAL
	,@nr_total_selos_validos    	REAL
	,@nr_total_selos_discrep		REAL
	,@nr_total_lineas_err    		REAL
	,@nr_total_selos_invalidos		REAL

	,@copy    				VARCHAR (255)
	,@int_error             INTEGER
	,@linea     			VARCHAR (255)
	,@tp_operacion			CHAR (1)
	,@p_nro_selo_aux  		CHAR(10)
	,@p_nro_selo_aux_ant  	CHAR(10)
	,@p_cd_cia_aerea		CHAR(3)
	,@p_cd_cia_aerea_ant	CHAR(3)
	,@p_crear_intervalo		INT
	,@p_item_fat			CHAR(26)
	,@p_billing_line_id    	REAL
	,@fl_habilitado 		CHAR(1)
	,@p_nro_selo_elec		CHAR (20)
	,@w_tp_selo				CHAR (1)
	,@w_cd_cia_aerea		CHAR (3)
	,@w_dt_confirma			DATETIME
	,@w_prefixo_cia_aerea	CHAR (2)
	,@w_cd_aerop			CHAR (4)
	,@w_cd_terminal			CHAR (1)
	,@w_item_fat			CHAR (26)

	,@w_voo_rea				CHAR(4)
	,@w_dt_voo_rea			DATETIME
	,@w_hh_voo_rea			CHAR(6)

	,@error_bcp				SMALLINT
	,@v_status_arq			CHAR(1)

SET NOCOUNT ON

-- VERIFICAR SI EL PROCESO YA ESTA EJECUTANDOSE
DECLARE @cont INT 

SELECT @p_date_process      	= GETDATE()
	,@p_user_process 			= suser_sname()

print @p_date_process

SELECT @w_dt_confirma   		= CONVERT ( CHAR (10), @p_date_process, 101 )



-- DECLARACION DE CURSOR DE ARCHIVOS A PROCESAR

DECLARE cur_arq CURSOR FOR
SELECT 
	cd_aerop 
	,cd_terminal 
	,dt_mov 
	,hh_mm 
	,tp_selo
	,selo_status 
	,arquivo 
	,cd_motivo 
	,status_arq 
	,tp_coletor
FROM 
	GEACupax..pax_baixa_selo_u   (NOLOCK index = IX_STATUS_ARQ)
WHERE 
	arquivo		LIKE @arquivo
ORDER BY arquivo

-- ABRIR CURSOR DE ARCHIVOS A PROCESAR
OPEN cur_arq 

-- PRIMERA LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
FETCH  NEXT FROM  cur_arq
INTO  	 @p_cd_aerop 
	,@p_cd_terminal 
	,@p_dt_mov_arq       
	,@p_hh_mm_arq   
	,@w_tp_selo
	,@p_selo_status   
	,@p_arquivo        
	,@p_cd_motivo     
	,@p_status_arq   
	,@p_tp_coletor

WHILE @@FETCH_STATUS = 0
BEGIN
    DELETE pax_selos_table_1

    SELECT @int_error = 0

    SELECT @p_execute = 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_1 in ' + ltrim(rtrim(@ruta)) + '\' + ltrim(rtrim(@p_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
	EXECUTE  (@p_execute)

    IF @@ERROR <> 0
    BEGIN
       SELECT @int_error 			= 1
              ,@nr_total_lineas_err	= 1
			  ,@error_bcp			= 1
       GOTO PROXIMO_ARQUIVO
    END

    BEGIN TRANSACTION 
    SELECT @msg = 'INICIO PROCESO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13)
    PRINT @msg 
	SELECT @msg  = 'LINEAS: ' +  LTRIM(RTRIM(STR(COUNT(1)))) FROM GEACupax..pax_selos_table_1
    SELECT @msg

    SELECT @nr_total_lineas_arq			= 0
		,@nr_total_selos_validos		= 0
		,@nr_total_selos_invalidos		= 0
		,@nr_total_lineas_err			= 0
		,@nr_total_selos_discrep		= 0
		,@error_bcp						= 0

     

    SELECT @tp_operacion 	= SUBSTRING(@p_arquivo, 10,1)

	SELECT @nr_total_lineas_arq = COUNT(1) FROM GEACupax..pax_selos_table_1 (NOLOCK)
	IF @nr_total_lineas_arq  = 0
	BEGIN
       SELECT @int_error 				= 1
			,@nr_total_lineas_err		= 0
			,@nr_total_selos_validos	= 0
			,@nr_total_lineas_arq		= 0
			,@nr_total_selos_discrep	= 0
			,@nr_total_selos_invalidos	= 0
			,@error_bcp					= 1
       GOTO SEGUIR
	END

    IF @tp_operacion = 'D' 
    BEGIN
         CREATE TABLE #TABLE_DEV (cd_cia_aerea	CHAR(3)
								,nro_selo 		CHAR(10))

         CREATE INDEX IX_NRO_SELO ON #TABLE_DEV (cd_cia_aerea, nro_selo)
    END

    -- DECLARACION DE CURSOR DE SELOS A PROCESAR
    DECLARE selos_cur CURSOR STATIC FOR
    SELECT linha  
    FROM pax_selos_table_1 -- (NOLOCK)
    
    OPEN selos_cur
    
    FETCH NEXT FROM selos_cur
    INTO @p_linha
    
    WHILE @@FETCH_STATUS = 0
    BEGIN

		IF @w_tp_selo = 'C'
		BEGIN
	       SELECT @p_nro_selo  	= SUBSTRING(@p_linha, 14,9)
			,@p_tp_natureza  	= SUBSTRING(@p_linha, 14,1)
			,@p_dt_mov_str  	= CASE WHEN @tp_operacion = 'C' THEN CONVERT(VARCHAR, @p_dt_mov_arq,112)  ELSE CONVERT(VARCHAR(8), CONVERT(DATETIME, SUBSTRING(@p_linha, 1,6)),112) END
			,@p_hh_mm  			= CASE WHEN @tp_operacion = 'C' THEN @p_hh_mm_arq ELSE SUBSTRING(@p_linha, 7,6) END
	
	        -- PROCESAR LOS SELOS Y VERIFICAR SI EXISTEN DISCREPANCIAS
	        --   Validando o Número do Selo 
	        IF ISNUMERIC(SUBSTRING(@p_nro_selo,3,7)) = 0 
	        BEGIN
	            INSERT INTO pax_selos_arquivo_log_processo
	            VALUES (@p_linha, @p_arquivo, GETDATE(), 'O Registro nao é um número válido, Favor Verificar')
	            SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
	            GOTO NEXT
	        END
	        
	        IF @p_tp_natureza NOT IN ('D','I','S') 
	        BEGIN
	            INSERT INTO pax_selos_arquivo_log_processo
	            VALUES (@p_linha, @p_arquivo, GETDATE(), 'A natureza nao é válida, favor verificar')
	            SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
	            GOTO NEXT
	        END
	        
	        IF ISDATE(@p_dt_mov_str) = 0
	        BEGIN
	            INSERT INTO pax_selos_arquivo_log_processo
	            VALUES (@p_linha, @p_arquivo, GETDATE(), 'A data nao é válida, favor Verificar')
	            SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
	            GOTO NEXT
	        END
	        ELSE
	        BEGIN
	             SELECT @p_dt_mov = @p_dt_mov_str + ' ' + SUBSTRING(@p_hh_mm,1,2) + ':' +  SUBSTRING(@p_hh_mm,3,2) + ':' + SUBSTRING(@p_hh_mm,5,2)
	        END
	
	        --   Trabalhando com as regras Prevista 
	        --   Validacao para qualquer tipo de status 
	        --   A regra (a) de todos os tipos de selos_status estao aqui abaixo 
	        
	        SELECT @cd_aerop 			= cd_aerop 
				,@p_billing_line_id 	= billing_line_id 
				,@p_tp_fat				= tp_fat
				,@interno_selo_status  	= selo_status
				,@interno_dt_mov       	= dt_mov
			FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)  
			WHERE nro_selo = @p_nro_selo
	        IF @@ROWCOUNT = 0
	        BEGIN
	            SELECT @msg = 'TODOS:N', @p_selo_status_ind = 'E'
	            EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
	                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	            SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	            GOTO NEXT
	        END 
	        ELSE 
	        BEGIN   --   Demais Situaçoes 
	            -- VALIDAR SI JA FOI FATURADO OU SE TEM  BOLETO GERADO
	            IF @p_billing_line_id <> 0 AND @p_tp_fat = 'F'
	            BEGIN
	                SELECT @msg = 'TODOS:6', @p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
	                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT
	            END

	            --  VALIDAR SI NRO_RSTE ESTA CONCLUIDO
	            SELECT @p_cd_situacao_rste 	= B.cd_situacao_rste 
                       ,@p_nro_rste 		= B.nro_rste
	            FROM GEACupax..pax_entrega_selo_line_u A (NOLOCK INDEX = P_pax_entrega_selo_line_u)
	            INNER JOIN GEACupax..pax_entrega_selo_ctrl_u B (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
	            ON B.cd_aerop 			= A.cd_aerop
	                AND B.cd_terminal 	= A.cd_terminal
	                AND B.dt_entrega  	= A.dt_entrega
	                AND B.hh_entrega  	= A.hh_entrega
	                AND B.cd_cia_aerea 	= A.cd_cia_aerea
	                AND B.nro_rste		= A.nro_rste
	            WHERE A.cd_aerop 		= @cd_aerop
	                AND (A.nro_selo_inicial <= @p_nro_selo and  A.nro_selo_final >= @p_nro_selo)
					AND  B.cd_situacao_rste = '1'

	            IF @@ROWCOUNT = 0 
	            BEGIN
	                SELECT @msg = 'TODOS:2', @p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
	                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT
	            END
	            
	           --  Regra 12
	           --   As Regras (b),(e),(f),(g) sao iguais para todos os demais selos Status 
	           --   SubRegra (b) 
	            
				-- VALIDA A DATA DO MOVIMENTO. NÃO PODE SER ANTERIOR À DATA DO ÚLTIMO MOVIMENTO DO SELO ( MRP 12/11/2003 )
				IF ( @p_dt_mov < @interno_dt_mov  )
            	BEGIN
	                SELECT @msg = 'TODOS:8', @p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
	                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT

            	END
					
					
				IF ( @p_dt_mov > @p_date_process  )
	            	BEGIN
	                SELECT @msg = 'TODOS:7' ,@p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT
	            	END


	            IF @interno_selo_status = '0'
	            BEGIN
	                SELECT @msg = 'TODOS:0' ,@p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT
	            END 
	            
	            --   SubRegra (e) 
	            IF @interno_selo_status = '4'
	            BEGIN
	                SELECT @msg = 'TODOS:4',@p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT
	            END 
	            
	            --   SubRegra (f) 
	            IF @interno_selo_status = '5'
	            BEGIN
	                 SELECT @msg = 'TODOS:5',@p_selo_status_ind = 'E'
	                 EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                            @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                 SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                 GOTO NEXT
	            END 
	            
	           --   SubRegra (g) 
	            IF @interno_selo_status = '9'
	            BEGIN
	                SELECT @msg = 'TODOS:9',@p_selo_status_ind = 'E'
	                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                GOTO NEXT
	            END 
	                        
	            --   Utilizaçao 
	            IF @p_selo_status = '2'
	            BEGIN
	                --   SubRegra (c)
	                IF @interno_selo_status = '2' 
	                BEGIN
	                    SELECT @msg = 'SS2:2',@p_selo_status_ind = 'E'
	                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                                @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                    GOTO NEXT
	                END 
	               
	                --   SubRegra (d)
	                IF @interno_selo_status = '3'
	                BEGIN
	                    SELECT @msg = 'SS2:3',@p_selo_status_ind = 'E'
	                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                    GOTO NEXT
	                END 
	            END 
	           
	            --   Devoluçao
	            IF @p_selo_status = '3'
	            BEGIN
	               --   SubRegra (c) 
	                IF @interno_selo_status = '2'
	                BEGIN
	                    SELECT @msg = 'SS3:2',@p_selo_status_ind = 'E'
	                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                                @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                    GOTO NEXT
	                END 
	                
	                --  SubRegra (d) 
	                IF @interno_selo_status = '3'
	                BEGIN
	                    SELECT @msg = 'SS3:3',@p_selo_status_ind = 'E'
	                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                    GOTO NEXT
	                END 
	            END     
	               
	               --  Cancelamento 
	            IF @p_selo_status = '4'
	            BEGIN
	                
                   --  SubRegra (d)
	                IF @interno_selo_status = '3'
	                BEGIN
	                       SELECT @msg = 'SS4:3', @p_selo_status_ind = 'E'
	                       EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                        @p_nro_selo, '', '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                       SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                       GOTO NEXT
	                END 
	
	                IF @interno_selo_status = '4'
	                BEGIN
	                       SELECT @msg = 'SS4:4', @p_selo_status_ind = 'E'
	                       EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
	                                        @p_nro_selo, '', '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
	                       SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
	                       GOTO NEXT
	                END 
	
	            END     
               
			END 
	        
	        
	        --  BUSCAR EL ITEM    
	       	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	        FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	        WHERE cd_aerop      	= @p_cd_aerop 
	            AND cd_terminal     	= @p_cd_terminal 
	            AND tp_natureza     	= @p_tp_natureza 
	            AND dt_vigencia		<= @p_dt_mov
	            AND inactive_ind		= '0'
	        ORDER BY   dt_vigencia DESC
	        
	        --  Caso esteja tudo correto o processo atualiza o status do selo como utilizado 
	        UPDATE GEACupax..pax_selo_u
	        SET
                cd_aerop_utilizacao     	= @p_cd_aerop
                ,cd_terminal_utilizacao  	= @p_cd_terminal       
                ,dt_mov                  	= @p_dt_mov
                ,item_fat					= CASE WHEN tp_fat = 'F' THEN @p_item_fat ELSE item_fat END
                ,selo_status             	= @p_selo_status       
                ,cd_motivo             		= @p_cd_motivo         
                ,tp_coletor  				= @p_tp_coletor        
                ,date_changed				= @p_date_process
                ,user_id_changed			= @p_user_process
                ,chgstamp					= chgstamp + 1
	        WHERE 
	                nro_selo      		= @p_nro_selo          
	                and tp_natureza  	= @p_tp_natureza     
	
	        IF @tp_operacion = 'D'
	        BEGIN
	            SELECT @p_cd_cia_aerea = cd_cia_aerea 
				FROM GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)  WHERE nro_selo = @p_nro_selo
	            INSERT INTO #TABLE_DEV  VALUES(@p_cd_cia_aerea, @p_nro_selo)
	        END
	
	        SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1  
		END
	
		ELSE -- SELO ELETRÔNICO ( MRP 20/11/2003 )
	
		BEGIN

		    -- Busca dados do selo na linha do arquivo
		    SELECT @p_nro_selo_elec 	= SUBSTRING (@p_linha, 11, 20)
		    		,@p_tp_natureza 	= SUBSTRING (@p_linha, 11, 1)
		    		,@p_dt_mov_str 		= '20' + SUBSTRING (@p_linha, 1, 6)
		    		,@p_hh_mm 			= SUBSTRING (@p_linha, 7, 4) + '00'

		    SELECT @w_cd_aerop			= SUBSTRING (@p_nro_selo_elec, 8, 4)
				,@w_prefixo_cia_aerea 	= SUBSTRING (@p_nro_selo_elec, 2, 2)
				
		    SELECT @w_cd_terminal		= '1' -- FIXO (VERIFICAR)

		    -- Busca a cia aérea
			SELECT @w_cd_cia_aerea 	= LTRIM(RTRIM(cd_cia_aerea))
			FROM GEACutcx..cor_cia_aerea_u (NOLOCK)
			WHERE sigla_iata = @w_prefixo_cia_aerea 
              AND inactive_ind = 0
			
		    -- VALIDA A CIA AÉREA
		    IF ( @w_cd_cia_aerea = '' OR @w_cd_cia_aerea IS NULL)
		    BEGIN
				-- SELECT 'JMUNOZ ', 'ERRO1 3'
				INSERT INTO pax_selos_arquivo_log_processo
				VALUES (@p_linha, @p_arquivo, GETDATE(), 'Prefixo da companhia aérea inválido. Favor verificar.')
				SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
				GOTO NEXT
		    END
	
		    -- VALIDA A NATUREZA
		    IF @p_tp_natureza NOT IN ('D','I','S') 
		    BEGIN
				-- SELECT 'JMUNOZ ', 'ERRO1 2'
				INSERT INTO pax_selos_arquivo_log_processo
				VALUES (@p_linha, @p_arquivo, GETDATE(), 'A natureza não é válida, favor verificar')
				SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
				GOTO NEXT
		    END
	    
		    -- VALIDA A DATA DO MOVIMENTO
		    IF ISDATE(@p_dt_mov_str) = 0
		    BEGIN
				-- SELECT 'JMUNOZ ', 'ERRO1 3'
				INSERT INTO pax_selos_arquivo_log_processo
				VALUES (@p_linha, @p_arquivo, GETDATE(), 'A data não é válida, favor Verificar')
				SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
				GOTO NEXT
		    END
		    ELSE
		    BEGIN
				SELECT @p_dt_mov = @p_dt_mov_str + ' ' + SUBSTRING(@p_hh_mm,1,2) + ':' +  SUBSTRING(@p_hh_mm,3,2) + ':' + SUBSTRING(@p_hh_mm,5,2)
		    END

			SELECT @w_voo_rea			= SUBSTRING (@p_nro_selo_elec, 4, 4)
			SELECT @w_dt_voo_rea		= @p_dt_mov_str
			SELECT @w_hh_voo_rea		= '000000'

	
		    -- Busca o item associado ao aeroporto
		    Select
		      @w_item_fat = item_id
		    From
		      GEACutcx..cor_item_pax_u (NOLOCK INDEX = P_cor_item_pax_u)
		    Where
		      cd_aerop 		= @w_cd_aerop And
		      cd_terminal 	= @w_cd_terminal And
		      tp_natureza 	= @p_tp_natureza And
		      dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_item_pax_u  (NOLOCK INDEX  = P_cor_item_pax_u)
							      Where	cd_aerop 	= @w_cd_aerop 	And
									cd_terminal 	= @w_cd_terminal 	And
									tp_natureza 	= @p_tp_natureza 	And
									dt_vigencia 	<  @p_dt_mov )
	
		    IF @w_item_fat IS NULL
		    BEGIN
				SELECT @msg = 'Não encontrou item para faturar para: ' + @w_cd_aerop + ' - ' + @w_cd_terminal + ' - ' + @p_tp_natureza
				INSERT INTO pax_selos_arquivo_log_processo
				VALUES (@p_linha, @p_arquivo, GETDATE(), @msg)
				SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
				GOTO NEXT
		    END
	
		    -- VERIFICA SE O SELO JÁ EXISTE
		    IF Exists ( Select 1 From GEACupax..pax_selo_elec_u Where nro_selo_elec = @p_nro_selo_elec )
		    BEGIN
				INSERT INTO pax_selos_arquivo_log_processo
				VALUES (@p_linha, @p_arquivo, GETDATE(), 'Selo eletrônico já existe')
				SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
				GOTO NEXT
		    END

		    --  Caso esteja tudo correto, insere na tabela de selo eletrônico como utilizado
		    INSERT INTO GEACupax..pax_selo_elec_u (
				nro_selo_elec,        
				tp_natureza, 
				dt_mov,                                                 
				selo_status, 
				cd_motivo, 
				tp_fat, 
				cd_cia_aerea, 
				tp_unid, 
				cd_aerop, 
				cd_terminal, 
				tp_unid_destino, 
				cd_aerop_destino, 
				cd_terminal_destino, 
				dt_confirma,                                            
				cd_aerop_utilizacao, 
				cd_terminal_utilizacao, 
				nfm,                  		
				nro_rste, 
				tp_coletor,       
				item_fat,                   
				billing_line_id, 
				billing_int_date,                                       
				billing_int_type, 
				billing_user_1, 
				voo_rea,
				dt_voo_rea,
				hh_voo_rea,
				date_created,                                           
				user_id_created,                
				date_changed,                                           
				user_id_changed,                
				inactive_ind, 
				active_date,                                            
				chgstamp) 
		    VALUES (
				@p_nro_selo_elec,        
				@p_tp_natureza, 
				@p_dt_mov,                                                 
				'2', 		-- UTILIZADO
				'', 
				'F', 
				@w_cd_cia_aerea, 
				'A', 		-- Unidade
				@w_cd_aerop, 
				@w_cd_terminal, 
				'A',  		-- Unidade Destino
				'',   		-- Aeroporto Destino (cd_aerop_destino)
				'',   		-- Terminal Destino (cd_terminal_destino)
				'01/01/1900',     -- Data de confirmação                                       
				'',		-- Aeroporto Utilização 
				'', 		-- Terminal Utilização
				'',                  
				'', 
				@p_tp_coletor,
				@w_item_fat,                   
				0, 		-- billing_line_id
				'01/01/1900', 	-- billing_int_date
				'',		-- billing_int_type, 
				'',		-- billing_user_1
				@w_voo_rea,
				@w_dt_voo_rea,
				@w_hh_voo_rea,

				@p_date_process,                                           
				@p_user_process,                
				'01/01/1900', 	-- date_changed
				'',		-- user_id_changed
				0, 		-- inactive_ind
				@p_date_process,-- active_date
				0) 
	
		    SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1  

		END

        NEXT:
        FETCH NEXT FROM selos_cur
        INTO @p_linha

    END

    CLOSE selos_cur
    DEALLOCATE selos_cur

        
    SEGUIR:


    IF @int_error = 0
    BEGIN
        -- SI ES UNA DEVOLUSAO, CREAR EL REGISTRO EN LA ACTIVIDAD DE DEVOLUCOES.
        IF @tp_operacion = 'D'
        BEGIN
            DECLARE @p_cd_cia_aerea_aux	CHAR(3)
                ,@p_nro_selo_ant		CHAR(10)
                ,@p_nro_selo_inicial	CHAR(10)
                ,@p_nro_selo_final		CHAR(10)
                ,@p_crear_linea			INT
                ,@p_nro_rdev_number		INT
				,@p_nro_rdev			CHAR(6)
                ,@p_qtd_selos			INT 
                ,@p_max_nro_selo		CHAR(10)
        
        
                -- CREAR LOS HEADERS
            DECLARE cur_cia CURSOR FOR
            SELECT DISTINCT(cd_cia_aerea)
            FROM #TABLE_DEV ORDER BY 1
                    
            OPEN cur_cia 
            FETCH NEXT FROM cur_cia INTO @p_cd_cia_aerea_aux
            
            WHILE @@FETCH_STATUS = 0
            BEGIN
                SELECT @p_nro_rdev_number = ISNULL(MAX(STR(nro_rdev)) + 1, 1) 
                FROM pax_dev_selo_ctrl_u (NOLOCK INDEX = P_pax_dev_selo_ctrl_u)
                WHERE cd_aerop		= @p_cd_aerop
                AND cd_terminal		= @p_cd_terminal
                AND cd_cia_aerea	= @p_cd_cia_aerea_aux

                SELECT @p_nro_rdev = RIGHT(CONVERT(CHAR(7), 1000000 + @p_nro_rdev_number),6)
                
                INSERT INTO pax_dev_selo_ctrl_u VALUES (
                           @p_cd_aerop
                           ,@p_cd_terminal
                           ,CONVERT(VARCHAR,@p_dt_mov,112) 
                           ,@p_cd_cia_aerea_aux
                           ,@p_nro_rdev                           ,@p_arquivo 
                           ,@p_date_process
                           ,@p_user_process
                           ,'19000101'
                           ,' '
                           ,'0'
                           ,'19000101'
                           ,0 )
                     
                -- CREAR LINEAS PARA CADA HEADER CREADO EL HEADER
                DECLARE cur_cia_selo CURSOR FOR
                SELECT nro_selo
                FROM #TABLE_DEV 
                WHERE cd_cia_aerea = @p_cd_cia_aerea_aux
                ORDER BY 1
                 
                SELECT @p_max_nro_selo = MAX(nro_selo) FROM #TABLE_DEV WHERE cd_cia_aerea = @p_cd_cia_aerea_aux
                
                OPEN cur_cia_selo 
                FETCH NEXT FROM cur_cia_selo INTO @p_nro_selo
                
                IF @@FETCH_STATUS = 0 
                BEGIN
                    SELECT @p_cd_cia_aerea_ant 	= @p_cd_cia_aerea_aux
                    ,@p_nro_selo_inicial		= @p_nro_selo
                    ,@p_nro_selo_ant			= @p_nro_selo
                END 
                
                WHILE @@FETCH_STATUS = 0
                BEGIN
                    IF (@p_nro_selo <> @p_nro_selo_ant)
                    BEGIN
                        IF (SUBSTRING(@p_nro_selo,1,2) <> SUBSTRING(@p_nro_selo_ant,1,2)) 
							OR (CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo)), 7)) <> CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_ant)), 7)) + 1 )
                           	OR (@p_max_nro_selo = @p_nro_selo)
                        BEGIN
                            IF (@p_max_nro_selo = @p_nro_selo) 
							AND ((CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo)), 7)) = CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_ant)), 7)) + 1 ))
                                SELECT @p_nro_selo_final 	= @p_nro_selo
                            ELSE
                                SELECT @p_nro_selo_final 	= @p_nro_selo_ant
                          
                            SELECT @p_crear_linea	= 1
                        END 
                    END 
                    
                    IF @p_crear_linea	= 1
                    BEGIN
                        SELECT @p_qtd_selos = CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_final)),7)) - CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_inicial)),7)) + 1
                        INSERT INTO pax_dev_selo_line_u VALUES (
                           @p_cd_aerop
                           ,@p_cd_terminal
                           ,CONVERT(VARCHAR,@p_dt_mov,112)
                           ,@p_cd_cia_aerea_aux
                           ,@p_nro_rdev
                           ,@p_nro_selo_inicial
                           ,@p_nro_selo_final
                           ,@p_qtd_selos
                           ,@p_date_process
                           ,@p_user_process
                           ,'19000101'
			                ,SPACE(1)
                           ,'0'
                           ,'19000101'
                           ,0)

						UPDATE  pax_selo_u
						SET       	 
							tp_fat				= ' '
							,cd_motivo			= ' '
							,cd_cia_aerea		= ' '
							,selo_status		= '0'
							,item_fat			= ' '
							,nro_rste			= ' '
							,date_changed		= @p_date_process
							,user_id_changed	= @p_user_process	
							,dt_mov				= CASE WHEN CONVERT(VARCHAR, dt_confirma,112) = '19000101' THEN date_created ELSE dt_confirma END
							,chgstamp			= chgstamp + 1
						FROM  
							pax_selo_u 
						WHERE nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
							and selo_status 		<> '2'
							and billing_line_id		= 0

                        SELECT @p_nro_selo_inicial 	= @p_nro_selo
                               ,@p_crear_linea		= 0
                    END
                
                    SELECT @p_nro_selo_ant = @p_nro_selo
                    -- LEER NUEVO SELO
                    FETCH NEXT FROM cur_cia_selo INTO @p_nro_selo
                END

				IF @p_nro_selo_ant <> @p_nro_selo_final
				BEGIN
					--PRINT 'CREAR NUEVA LINEA'
	                INSERT INTO pax_dev_selo_line_u VALUES (
	                       @p_cd_aerop
	                       ,@p_cd_terminal
	                       ,CONVERT(VARCHAR,@p_dt_mov,112)
	                       ,@p_cd_cia_aerea
	                       ,@p_nro_rdev
	                       ,@p_max_nro_selo
	                       ,@p_max_nro_selo
	                       ,1
	                       ,@p_date_process
	                       ,@p_user_process
	                       ,'19000101'
	                       ,SPACE(1)
	                       ,'0'
	                       ,'19000101'
	                       ,0)
				END


                CLOSE cur_cia_selo
                DEALLOCATE cur_cia_selo

              
                -- LEER NUEVO HEADER
                FETCH NEXT FROM cur_cia INTO @p_cd_cia_aerea_aux
            END
        
            CLOSE cur_cia 
            DEALLOCATE cur_cia 

			-- colocar los selos disponibles			

            DROP INDEX #TABLE_DEV.IX_NRO_SELO 
            DROP TABLE #TABLE_DEV 

       END

       COMMIT TRANSACTION 
       SELECT @msg 	= 'FIM PROCESO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(10) + CHAR(13)

    END
    ELSE
    BEGIN
		ROLLBACK TRANSACTION

    END
    PRINT @msg 
    SELECT @msg =  CHAR(10)+ CHAR(13)
    PRINT @msg 

	PROXIMO_ARQUIVO:

    --  LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
    FETCH  NEXT FROM  cur_arq
    INTO  @p_cd_aerop 
		,@p_cd_terminal 
		,@p_dt_mov_arq       
		,@p_hh_mm_arq   
		,@w_tp_selo
		,@p_selo_status   
		,@p_arquivo        
		,@p_cd_motivo     
		,@p_status_arq   
		,@p_tp_coletor

END
CLOSE   cur_arq
DEALLOCATE cur_arq

-- ELIMINAR TABLAS TEMPORALES

SET NOCOUNT OFF
RETURN 0


GO

/****** Object:  StoredProcedure [dbo].[gsp_reprocessa_selos_arq]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_reprocessa_selos_arq    Script Date: 19/09/2008 15:20:03 ******/

CREATE Proc [dbo].[gsp_reprocessa_selos_arq]
As
Set NoCount On
/* Variaveis de Trabalho Interno */
Declare 
  @p_nro_selo           Char(10)
 ,@p_tp_natureza        Char(1)
 ,@descp_selo_status    Varchar(50)
 ,@p_cd_aerop           Char(4)
 ,@p_cd_terminal   Char(10)
 ,@p_selo_status_ind      char(1)
 ,@p_dt_mov        Datetime
 ,@p_selo_status   Char(1)
 ,@p_cd_motivo     Char(2)
 ,@p_arquivo        Char(255)
 ,@p_tp_coletor    Char(16)
/* Variáveis para as Regras */
         ,@interno_selo_status  char(1)
 ,@interno_dt_mov       datetime
 ,@msg         Varchar (200)
/* Monta o Cursor em cima da tabela carregada e verifica se o registro é válido */
Declare selos_arquivo Cursor For
Select 
  nro_selo 
 ,tp_natureza  = Substring(nro_selo,1,1)
 ,dt_mov
 ,cd_aerop     = cd_aerop_destino
 ,cd_terminal  = cd_terminal_destino
 ,selo_status
 ,selo_status_ind
 ,cd_motivo
 ,arquivo
 ,tp_coletor
From
 pax_discrep_selo_u
 /* Abre a Transaçao */ 
 Begin Transaction
 
 Open selos_arquivo
 Fetch Next From selos_arquivo Into
  @p_nro_selo     
 ,@p_tp_natureza  
 ,@p_dt_mov
 ,@p_cd_aerop           
 ,@p_cd_terminal   
 ,@p_selo_status   
 ,@p_selo_status_ind
 ,@p_cd_motivo     
 ,@p_arquivo       
 ,@p_tp_coletor    
 While @@Fetch_Status = 0
  Begin
  Select @descp_selo_status = Case When @p_selo_status = 2 Then ' Utilizaçao'
     When @p_selo_status = 3 Then ' Devoluçao'
     When @p_selo_status = 4 Then ' Cancelamento' Else '' End 
 /* Trabalhando com as regras Prevista */
 /* Validacao para qualquer tipo de status */
 /* A regra (a) de todos os tipos de selos_status estao aqui abaixo */
 If Not Exists (Select * from pax_selo_u where nro_selo = @p_nro_selo)
   Begin
     Select @msg = 'TODOS:N' ,@p_selo_status_ind = 'E'
     Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
                          , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
     Goto Next
   End 
 Else 
   /* Demais Situaçoes */ 
   Begin 
    /* Busca os valores para poder ser feita a validaçao */  
    Select @interno_selo_status = selo_status
   ,@interno_dt_mov      = dt_mov
    from pax_selo_u where nro_selo = @p_nro_selo
     /* Regra 12 */
   /* As Regras (b),(e),(f),(g) sao iguais para todos os demais selos Status */
   /* SubRegra (b) */

/* Verificar com MONUZ

     IF ( @p_dt_mov < @interno_dt_mov  )
     BEGIN
	--                SELECT 'JMUNOZ ', 'ERRO1 1'
	INSERT INTO pax_selos_arquivo_log_processo
	VALUES (@p_linha, @p_arquivo, GETDATE(), 'Data de movimento anterior à última data de movimento registrada para o selo!')
	SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
	GOTO NEXT
     END
*/

      If @interno_selo_status = '0'
        Begin
         Select @msg = 'TODOS:0' ,@p_selo_status_ind = 'E'
         Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
         Goto Next
        End 
    /* SubRegra (e) */
       If @interno_selo_status = '4' 
        Begin
         Select @msg = 'TODOS:4' ,@p_selo_status_ind = 'E'
         Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
         Goto Next
        End 
    /* SubRegra (f) */
       If @interno_selo_status = '5'
        Begin
         Select @msg = 'TODOS:5' ,@p_selo_status_ind = 'E'
         Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
  Goto Next
        End 
    /* SubRegra (g) */
       If @interno_selo_status = '9'
        Begin
         Select @msg = 'TODOS:9' ,@p_selo_status_ind = 'E'
         Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
  Goto Next
        End 
     /* Utilizaçao */
     If @p_selo_status = '2'
       Begin
 
         /* SubRegra (c) */
         If @interno_selo_status = '2' 
            Begin
             Select @msg = 'SS2:2' ,@p_selo_status_ind = 'E'
             Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
             Goto Next
            End 
         /* SubRegra (d) */
         If @interno_selo_status = '3'
            Begin
             Select @msg = 'SS2:3' ,@p_selo_status_ind = 'E'
             Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
             Goto Next
            End 
      End 
     /* Devoluçao */
     If @p_selo_status = '3'
      Begin
         /* SubRegra (c) */
         If @interno_selo_status = '2'
            Begin
             Select @msg = 'SS3:2' ,@p_selo_status_ind = 'E'
             Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
             Goto Next
            End 
         /* SubRegra (d) */
         If @interno_selo_status = '3'
            Begin
             Select @msg = 'SS3:3' ,@p_selo_status_ind = 'E'
             Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
             Goto Next
            End 
      End     
     /* Cancelamento */
     If @p_selo_status = '4'
      Begin
         /* SubRegra (c) */
         If @interno_selo_status = '2'
            Begin
             Select @msg = 'SS4:2' ,@p_selo_status_ind = 'E'
             Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
             Goto Next
            End 
         /* SubRegra (d) */
         If @interno_selo_status = '3'
            Begin
             Select @msg = 'SS4:4'  ,@p_selo_status_ind = 'E'
             Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                        @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
             Goto Next
            End 
      End     
   End 
 /* Caso esteja tudo correto o processo atualiza o status do selo como utilizado */
 /* e atualiza o status do selo na discrepancia */
    Select @msg = 'TODOS:1' ,@p_selo_status_ind = 'C'
    Exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                               @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
    Update 
     pax_selo_u
    Set 
     cd_aerop_utilizacao    = @p_cd_aerop
           ,cd_terminal_utilizacao = @p_cd_terminal       
    ,dt_mov                 = @p_dt_mov
    ,selo_status            = @p_selo_status       
    ,cd_motivo            = @p_cd_motivo         
    ,tp_coletor     = @p_tp_coletor        
     Where 
     nro_selo    = @p_nro_selo          
 and tp_natureza = @p_tp_natureza     
 Next:
 Fetch Next From selos_arquivo Into
  @p_nro_selo     
 ,@p_tp_natureza  
 ,@p_dt_mov
 ,@p_cd_aerop           
 ,@p_cd_terminal   
 ,@p_selo_status   
 ,@p_selo_status_ind
 ,@p_cd_motivo     
 ,@p_arquivo       
 ,@p_tp_coletor    
  End 
  Close selos_arquivo
  Deallocate selos_arquivo
  
  /* Fecha a Transaçao */
  Commit Transaction


GO

/****** Object:  StoredProcedure [dbo].[gsp_sel_dropdowndw_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_sel_dropdowndw_selos    Script Date: 19/09/2008 15:20:03 ******/

CREATE Proc [dbo].[gsp_sel_dropdowndw_selos] (@p_campo char(10))
As
If @p_campo = 'cd_motivo'
  Begin
    Select 
	  code  	= Ltrim(Rtrim(cd_motivo))
	 ,descp  = Ltrim(Rtrim(cd_motivo)) + ' - ' + Ltrim(Rtrim(ds_motivocnc))
    From 
	 GEACutcx..cor_motivocnc_selo_u (NOLOCK)
   End 




GO

/****** Object:  StoredProcedure [dbo].[gsp_select]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_select    Script Date: 19/09/2008 15:20:03 ******/

CREATE proc [dbo].[gsp_select] as
Select 
	 nro_selo
	 ,selo_status_ind
	 ,cd_cia_aerea
	 ,discrepancia
 from pax_discrep_selo_u (NOLOCK)




GO

/****** Object:  StoredProcedure [dbo].[gsp_transfere_rpax_emb_voo]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/****** Object:  Procedure dbo.gsp_transfere_rpax_emb_voo    Script Date: 19/09/2008 15:21:39 ******/

CREATE PROCEDURE [dbo].[gsp_transfere_rpax_emb_voo] 
(
  @p_mes SmallInt,
  @p_ano Int 
)
As

  Create Table #w_tbl_ret
  (
    ano		        int,
    mes		        smallint,

    cd_aerop 	    char (4),
    cd_terminal     char (10),
    cd_cia_aerea    char (3),
    tp_natureza     char (1),

    pax_dom_fat     int,
    pax_int_fat     int,
    pax_tot_fat     int,
    pax_dom_vista   int,
    pax_int_vista   int,
    pax_tot_vista   int,
    pax_colo        int,
    pax_transito    int,
    pax_conexao_dom int,
    pax_conexao_int int,
    pax_iac2110     int,
    pax_tot_isento  int,
    pax_total       int 
  )

  Declare @w_dt_inicial Datetime,
          @w_dt_final   Datetime

  Select @w_dt_inicial = Substring ( LTrim ( Str ( @p_mes + 100 ) ), 2, 2 ) + '/01/' + LTrim ( Str ( @p_ano ) )
  Select @w_dt_final   = Dateadd ( dd, -1, Dateadd (mm, 1, @w_dt_inicial) )

  Insert Into #w_tbl_ret
  Select @p_ano,
         @p_mes,  
         cd_aerop,
         cd_terminal,
         cd_cia_aerea,
         tp_natureza,

         Sum ( pax_dom_fat ),
         Sum ( pax_int_fat ),
         Sum ( pax_tot_fat ),
         Sum ( pax_dom_vista ),
         Sum ( pax_int_vista ),
         Sum ( pax_tot_vista ),
         Sum ( pax_colo ),
         Sum ( pax_transito ),
         Sum ( pax_conexao_dom ),
         Sum ( pax_conexao_int ),
         Sum ( pax_iac2110 ),
         Sum ( pax_tot_isento ),
         Sum ( pax_total )
    From rpax_emb_voo_u (nolock)
   Where dt_voo         Between @w_dt_inicial AND @w_dt_final 	
     AND inactive_ind         = '0'
   Group By
         cd_aerop,
         cd_terminal,
         cd_cia_aerea,
         tp_natureza

  Select *
    From #w_tbl_ret
  Drop   Table #w_tbl_ret



GO

/****** Object:  StoredProcedure [dbo].[gsp_upa_email_arquivo_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE   PROCEDURE [dbo].[gsp_upa_email_arquivo_selos] 
(
				@boleto			VarChar	(8000) = '',
				@nome_arquivo	VarChar	(100),
				@p_dt_operacao	Datetime,
				@flgEmailAdmin	Char(1),
				@p_str_erro 	Char	(255) OUTPUT
				
)
AS

Declare
	@w_data_hoje 				Datetime,
	@w_tp_receita_aux			Char	(2),
	@w_body						VarChar (8000),
	@w_line_br					VarChar (5),
	@w_emails_to	 			VarChar (255),
	@w_email_from				Char	(255),
	@w_recv_acct_id_aux			Char	(17),
	@w_ds_cliente				Char	(80),
	@w_recv_entity_id_aux		Char	(5),
	@w_grp_email_list 			Char	(255),
	@TituloEmail				Char	(255),
	@AEROP						VarChar	(4),
	@DESCRICAO					VarChar	(50),
	@DT_MOV						DateTime,
	@DT_INCONSISTENCIA			DateTime,
	@QTD_CONSOLIDADO			Int,
	@VALOR_CONSOLIDADO			DECIMAL(20, 2),
	@QTD_ANALITICO				Int,
	@VALOR_ANALITICO			DECIMAL(20, 2)

Select 	@w_tp_receita_aux			= '',
		@w_recv_acct_id_aux			= '',
		@w_recv_entity_id_aux 		= '',
		@w_grp_email_list			= '',
		@w_body 					= '',
		@w_email_from				= 'faturamento@infraero.gov.br',
		@w_line_br					= '<br>',
		@p_dt_operacao				= CONVERT(CHAR(10), GETDATE(),20)

if @flgEmailAdmin = '0'
begin
	-- Seta email do cliente
	--Select @w_emails_to				= 'filmixgeovane@gmail.com'
	--Select @w_emails_to				= 'geovanecosta@infraero.gov.br'
	Select @w_emails_to				= 'sandroleo@infraero.gov.br,adias@infraero.gov.br,alexandrerocha@infraero.gov.br,nilson_vasconcelos@infraero.gov.br'

	Select @TituloEmail = 'INFRAERO - Email de Faturamento - Boleto Número: ' + @boleto

	-- Criando corpo do email..
	Select @w_body =
		@w_line_br
		+ 'Prezado(s),' + @w_line_br + @w_line_br
		+ 'Foi gerado com sucesso o arquivo de conferência de selos do boleto número: ' + @boleto + '.'
		+ @w_line_br + @w_line_br
		+ 'Para acessar o arquivo, favor entre no link abaixo para salvar o mesmo.'
		+ @w_line_br + @w_line_br
		+ 'http://www.infraero.gov.br/boletos/selos/' + @nome_arquivo + '.txt.zip'
		+ @w_line_br + @w_line_br 
		+ 'Atenciosamente,'
		+ @w_line_br + @w_line_br
		+ 'Infraero Aeroportos - Empresa de Infra-Estrutura Aeroportuária'
		+ @w_line_br
end
else
begin
	-- Seta email do Administrador
	--Select @w_emails_to				= 'filmixgeovane@gmail.com',
	--Select @w_emails_to				= 'geovanecosta@infraero.gov.br'
	Select @w_emails_to				= 'sandroleo@infraero.gov.br,adias@infraero.gov.br,alexandrerocha@infraero.gov.br,nilson_vasconcelos@infraero.gov.br'

	Select @TituloEmail = 'INFRAERO - Inconsistencias no Email de Faturamento - Boleto Número: ' + @boleto
	
	-- Criando corpo do email..
	Select @w_body =
		@w_line_br
		+ 'Prezado(s),' + @w_line_br + @w_line_br
		+ 'Houve problemas no processamento do arquivo de conferência de selos do boleto número: ' + @boleto + '.'
		+ @w_line_br + @w_line_br
		+ 'Há divergencias nos valores Consolidado X Analitico.'
		+ ' Para acessar o arquivo, favor entre no link abaixo para salvar o mesmo.'
		+ @w_line_br + @w_line_br
		+ 'http://www.infraero.gov.br/boletos/selos/' + @nome_arquivo + '.txt.zip'
		+ @w_line_br + @w_line_br
		
		-- Buscando linhas com dados das inconsistencias..
		DECLARE @idt_campo INT,
				@qtd_campo INT

		-- Inicialização das variáveis
		SET @idt_campo = 0

		SELECT   @qtd_campo = MAX(IDT_CAMPO) - 1
		FROM     GEACupax..gtb_resultado_dados_arquivo_selos

		-- Laço
		WHILE @idt_campo <= @qtd_campo
		BEGIN
			-- Carregando os valores na variáveis
		  SELECT   TOP 1
				    @AEROP = AEROP,
					@DESCRICAO = DESCRICAO,
					@DT_MOV = DT_MOV,
					@DT_INCONSISTENCIA = DT_INCONSISTENCIA,
					@QTD_CONSOLIDADO = QTD_CONSOLIDADO,
					@VALOR_CONSOLIDADO = VALOR_CONSOLIDADO,
					@QTD_ANALITICO = QTD_ANALITICO,
					@VALOR_ANALITICO = VALOR_ANALITICO
		  FROM     GEACupax..gtb_resultado_dados_arquivo_selos
		  WHERE    IDT_CAMPO > @idt_campo
		  ORDER BY IDT_CAMPO

			Select @w_body = @w_body
			+ 'BOLETO: ' + @boleto
			+ @w_line_br
			+ 'AEROP: ' + @AEROP
			+ @w_line_br
			+ 'DESCRICAO: ' + @DESCRICAO
			+ @w_line_br
			+ 'DT_MOV: ' + CONVERT(varchar, @DT_MOV, 112)
			+ @w_line_br
			+ 'DT_INCONSISTENCIA: ' + CONVERT(varchar, @DT_INCONSISTENCIA, 112)
			+ @w_line_br
			+ 'QTD_CONSOLIDADO: ' + CONVERT(varchar, @QTD_CONSOLIDADO, 112)
			+ @w_line_br
			+ 'VALOR_CONSOLIDADO: ' + CONVERT(varchar, @VALOR_CONSOLIDADO, 112)
			+ @w_line_br
			+ 'QTD_ANALITICO: ' + CONVERT(varchar, @QTD_ANALITICO, 112)
			+ @w_line_br
			+ 'VALOR_ANALITICO: ' + CONVERT(varchar, @VALOR_ANALITICO,  112)
			+ @w_line_br + @w_line_br

			Select @idt_campo = @idt_campo + 1
		END

		Select @w_body = @w_body
		+ 'Atenciosamente,'
		+ @w_line_br + @w_line_br
		+ 'Infraero Aeroportos - Empresa de Infra-Estrutura Aeroportuária'
		+ @w_line_br
end

-- Insere os dados do email a enviar..
Insert Into GEACrrcv..gtb_ctrl_email_viagens_u (email_from, email_to, email_subject, email_status, email_body, user_id_created, date_created)
Values ( @w_email_from, @w_emails_to, @TituloEmail, 'C', @w_body, Suser_Sname (), GetDate ())

-- Insere registro de controle de processamento..
Insert Into GEACrrcv..gtb_ctrl_emails_AR Values ('EMAIL_FATUR_SELOS', @p_dt_operacao, Suser_Sname (), Getdate (), 0)

Return 0
GO

/****** Object:  StoredProcedure [dbo].[gsp_upa_gera_arquivo_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[gsp_upa_gera_arquivo_selos]
(
	@flgEmailAdmin				CHAR(1)
)
AS

DECLARE
  @cd_cia_aerea					CHAR(3)
, @qtdlinhas					INT
, @ano							VARCHAR(4)
, @mes							VARCHAR(2)
, @dia							VARCHAR(2)
, @hora							VARCHAR(2)
, @minutos						VARCHAR(2)
, @servidor						VARCHAR(10)
, @user							VARCHAR(20)
, @password						VARCHAR(20)
, @nro_boleto					CHAR(7)
, @cia_iata						VARCHAR(4)
, @ret							INT
, @nome_arquivo					VARCHAR(100)
, @nome_arquivo_original		VARCHAR(100)
, @nome_arquivo_original_aux	VARCHAR(100)
, @nome_arquivo_destino			VARCHAR(100)
, @nome_servidor				VARCHAR(100)
, @nome_arquivo_zipado			VARCHAR(100)
, @texto						VARCHAR(500)
, @p_str_erro 					CHAR(255)
, @data_email					DATETIME

select @servidor = server_id from DBSctlg.dbo.WIJ_SERVERS

IF(@servidor = '')
begin
	Select @servidor = 'SQLSSII'
end

-- Pega a Cia Aerea
select @cd_cia_aerea = substring(Descricao, 75, 3)
from GEACupax..gtb_resumo_dados_arquivo_selos
where substring(Descricao, 1, 1) = '1'

if(@cd_cia_aerea = '' or @cd_cia_aerea is NULL)
begin
	select @cd_cia_aerea = substring(Descricao, 75, 3)
	from GEACupax..gtb_resumo_dados_arquivo_selos
	where substring(Descricao, 1, 1) = '2'
end

if(@cd_cia_aerea = '' or @cd_cia_aerea is NULL)
begin
	select @cd_cia_aerea = substring(Descricao, 75, 3)
	from GEACupax..gtb_resumo_dados_arquivo_selos
	where substring(Descricao, 1, 1) = '3'
end

if(@cd_cia_aerea = '' or @cd_cia_aerea is NULL)
begin
	select @cd_cia_aerea = substring(Descricao, 75, 3)
	from GEACupax..gtb_resumo_dados_arquivo_selos
	where substring(Descricao, 1, 1) = '4'
end

-- Pega o Nro Boleto
select @nro_boleto = substring(Descricao, 14, 7)
from GEACupax..gtb_resumo_dados_arquivo_selos
where substring(Descricao, 1, 1) = '0'

select @cia_iata = sigla_iata
from GEACutcx..cor_cia_aerea_u (nolock)
where cd_cia_aerea = @cd_cia_aerea

if(@cia_iata = '' or @cia_iata is null)
begin
	Select @cia_iata = @cd_cia_aerea
end

if(@servidor = 'SQLSSII')
begin
	Select @user = 'AR_SISTEMA'
	Select @password = 'infraar'
end
else
begin
	if(@servidor = 'SQLSSDSV')
	begin
		Select @user = 'DBS'
		Select @password = 'sqlssdsv'
	end
end

-- Cria nome do arquivo..
Select @ano				= year(getdate())
Select @mes				= month(getdate())
Select @dia				= day(getdate())
Select @hora			= DATEPART(hh, GETDATE())
Select @minutos			= DATEPART(mi, GETDATE())

--Select @nome_servidor = '\\s-sean217\geac\selos\'
--Select @nome_servidor = '\\10.0.17.218\selos$\TXT\'
Select @nome_servidor = '\\10.0.17.218\drivef$\Selos\TXT\'

Select @nome_arquivo_original_aux = @cia_iata
	+ substring(@ano, 3, 2)
	+ @mes
	+ @dia
	+ @hora
	+ @minutos
	+ '-'
	+ @nro_boleto

Select @nome_arquivo_original = @nome_arquivo_original_aux + '.txt_TEMP'

Select @nome_arquivo = @nome_servidor + @nome_arquivo_original
Select @nome_arquivo_destino = replace(@nome_arquivo_original, '.txt_TEMP', '.txt')

Select @texto = 'BCP "Select Descricao + substring(ltrim(str(ID + 10000000)),2 ,7) from GEACupax..gtb_resumo_dados_arquivo_selos order by ID" queryout '
				+ ltrim(rtrim(@nome_arquivo))
				+ ' -S' + ltrim(rtrim(@servidor))
				+ ' -U' + ltrim(rtrim(@user))
				+ ' -P' + ltrim(rtrim(@password))
				+ ' -c -t \t -r \n'

-- TESTA SE O USUARIO PODE EXECUTAR BCP NO SERVIDOR
BEGIN TRY
    
    Exec master..xp_cmdshell @texto
    --print '@texto = ' + @texto
    
END TRY
BEGIN CATCH -- CASO TENHA PROBLEMAS.. ENCAMINHA EMAIL PARA ADMIN
    
    print 'Problemas no BCP!'
    
END CATCH

if (@ret <> 0)     /* verifica o sucesso do BCP - out */
 begin
	print ' - Falha na criacao do arquivo TXT - '
	-- Seta o Fim do Job
	Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'
 end
else
begin
	-- Cria nome do arquivo zip
	/*Select @nome_arquivo_zipado = replace(@nome_arquivo, '.txt', '.zip')

	exec INFRAERO..gsp_Compacta_arquivos @nome_arquivo, @nome_arquivo_zipado*/

	-- RENOMEANDO O ARQUIVO PARA .TXT
	-- TESTA SE O USUARIO PODE EXECUTAR RENAME NO SERVIDOR
	BEGIN TRY
		
		Exec sp_ReplaceFileOrDirNames @nome_servidor, @nome_arquivo_original, @nome_arquivo_destino

		-- ENVIA EMAIL PARA CLIENTE COM OS DADOS DO ARQUIVO GERADO
		Select @data_email = GetDate()
		exec gsp_upa_email_arquivo_selos @nro_boleto, @nome_arquivo_original_aux, @data_email, @flgEmailAdmin, @p_str_erro OUTPUT

		print 'Arquivo de demonstrativo do Boleto: ' + convert(char(10), @nro_boleto) + '. Gerado com sucesso.'
		
	END TRY
	BEGIN CATCH -- CASO TENHA PROBLEMAS.. ENCAMINHA EMAIL PARA ADMIN
		
		print 'Problemas no Replace do Arquivo e na geração do email!'
		
	END CATCH
end
GO

/****** Object:  StoredProcedure [dbo].[gsp_upa_resumo_arquivo_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[gsp_upa_resumo_arquivo_selos]
(
	@boleto						VARCHAR(8000) = ''
	, @cd_cia_aerea				VARCHAR(4) = null
	, @dtInicio					DATETIME = null
	, @dtFinal					DATETIME = null
	, @dtVencInicio				DATETIME = null
	, @dtVencFinal				DATETIME = null
	, @tpSistema				VARCHAR(2) = 'PI'
)
AS

DECLARE
 @ano							VARCHAR(4)
, @mes							VARCHAR(2)
, @dia							VARCHAR(2)
, @hora							VARCHAR(2)
, @minutos						VARCHAR(2)
, @segundos						VARCHAR(2)
, @cmdSQL						VARCHAR(8000)
, @ARRAY						VARCHAR(8000)
, @S							VARCHAR(8000)
, @somaTotalBoleto				DECIMAL(20, 2)
, @GeraArquivo					INT
, @qtdConsolidado				INT
, @qtdAnalitico					INT
, @qtdPassageiro				INT
, @DescSistema					VARCHAR(20)
, @DadoAerop					VARCHAR(4)
, @DadoQuantity					INT
, @DadoValor					INT
, @DadoDtSelo					DATETIME
, @DadoAnaliticoValorTotal		FLOAT
, @DadoConsolidadoValorTotal	FLOAT
, @SelectTableAntiga			INT
, @fl_habilitado				VARCHAR(1)
, @fl_processa					INT
, @geraArquivoAux				INT
, @CountDesc					INT

-- Verifica se o Job esta Habilitado
select @fl_habilitado = isnull(descp,'0')
from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u)
where  tbl_code = 'CJPP'
AND code 		= '1'

if (@fl_habilitado = '0' OR @fl_habilitado is null)
begin
	print 'Processo em Execução. Aguarde a conclusão para Nova execução.' + char(13)
	return 2
end

-- Seta o Início do Job
Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '0'

-- PREPARA VARIAVEIS PARA PROCESSAMENTO
Select @boleto = dbo.RetiraCaracterEspecial(ltrim(rtrim(@boleto)))
Select @cd_cia_aerea = ltrim(rtrim(@cd_cia_aerea))
Select @dtInicio = ltrim(rtrim(@dtInicio))
Select @dtFinal = ltrim(rtrim(@dtFinal))
Select @dtVencInicio = ltrim(rtrim(@dtVencInicio))
Select @dtVencFinal = ltrim(rtrim(@dtVencFinal))
Select @tpSistema = ltrim(rtrim(@tpSistema))

-- VERIFICANDO AS DATAS DO PERIODO
if(
	(@dtInicio is not null and @dtInicio <> '') and (@dtFinal is null or @dtFinal = '')-- INICIAL CERTA E FINAL ERRADA
	or
	(@dtInicio is null or @dtInicio = '') and (@dtFinal is not null and @dtFinal <> '')-- FINAL CERTA E INICIAL ERRADA
)
begin
	print 'Erro. Favor informar as datas inicial e final do periodo corretamente.'
	-- Seta o Fim do Job
	Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'

	return 1
end
else
begin
	-- Validando as datas iniciais e finais
	if( (@dtInicio > @dtFinal) )
	begin
		print 'Erro. Data Inicial do período maior que a Final. Favor corrigir.'
		-- Seta o Fim do Job
		Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'

		return 1	
	end

	if( DATEDIFF(DAY, @dtInicio, @dtFinal) > 15 )
	begin
		print 'Erro. Data Final do período maior que a Inicial superior a 15 dias.'
		-- Seta o Fim do Job
		Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'

		return 1		
	end
end

-- VERIFICANDO AS DATAS DE VENCIMENTO
if(
	(@dtVencInicio is not null and @dtVencInicio <> '') and (@dtVencFinal is null or @dtVencFinal = '')-- INICIAL CERTA E FINAL ERRADA
	or
	(@dtVencInicio is null or @dtVencInicio = '') and (@dtVencFinal is not null and @dtVencFinal <> '')-- FINAL CERTA E INICIAL ERRADA
)
begin
	print 'Erro. Favor informar as datas inicial e final de vencimento corretamente.'
	-- Seta o Fim do Job
	Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'

	return 1
end
else
begin
	-- Validando as datas iniciais e finais de vencimento
	if( (@dtVencInicio > @dtVencFinal) )
	begin
		print 'Erro. Data Inicial de Vencimento maior que a Final. Favor corrigir.'
		-- Seta o Fim do Job
		Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'

		return 1	
	end

	if( DATEDIFF(DAY, @dtVencInicio, @dtVencFinal) > 15 )
	begin
		print 'Erro. Data Final de vencimento maior que a Inicial superior a 15 dias.'
		-- Seta o Fim do Job
		Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'

		return 1		
	end
end

-- VERIFICANDO SE HÁ MAIS DE UM BOLETO PARA PROCESSAR
CREATE TABLE #ARRAY ( ITEM_ARRAY VARCHAR(8000) )

-- TABELA AUXILIAR PARA EXCLUIR DADOS REPETIDOS
CREATE TABLE #AUXILIAR ( ITEM_AUX VARCHAR(8000) )

if(ltrim(rtrim(@boleto)) <> '')
begin
	Select @ARRAY = @boleto + ',' 
	
	WHILE LEN(@ARRAY) > 0
	begin
	   Select @S = LTRIM(SUBSTRING(@ARRAY, 1, CHARINDEX(',', @ARRAY) - 1))
	   Insert into #ARRAY (ITEM_ARRAY) values (@S)
	   Select @ARRAY = SUBSTRING(@ARRAY, CHARINDEX(',', @ARRAY) + 1, LEN(@ARRAY))
	end
end

-- TESTA SE EXISTE ALGUM DADO PARA PESQUISAR - ADICIONAR MAIS BOLETOS
if(
	((@dtVencInicio is not null and @dtVencInicio <> '') and (@dtVencFinal is not null and @dtVencFinal <> '')) or
	((@dtInicio is not null and @dtInicio <> '') and (@dtFinal is not null and @dtFinal <> '')) or
	(@cd_cia_aerea is not null and @cd_cia_aerea <> '')
  )
begin
	Select @cmdSQL = 'Select distinct TOP 299 a.nu_boleto_ss
						From GEACrrcv..gtb_docs_boleto_ctrl a
						Where 1 = 1 '
		
	if ((@dtVencInicio is not null and @dtVencInicio <> '') and (@dtVencFinal is not null and @dtVencFinal <> ''))
	begin
		Select @cmdSQL = @cmdSQL + ' AND (dt_vencimento >= ''' + convert(varchar(8), @dtVencInicio, 112) + ''''
		Select @cmdSQL = @cmdSQL + ' AND dt_vencimento <= ''' + convert(varchar(8), @dtVencFinal, 112) + ''')'
	end

	if ((@dtInicio is not null and @dtInicio <> '') and (@dtFinal is not null and @dtFinal <> ''))
	begin
		Select @cmdSQL = @cmdSQL + ' AND (dt_inicio_periodo >= ''' + convert(varchar(8), @dtInicio, 112) + ''''
		Select @cmdSQL = @cmdSQL + ' AND dt_final_periodo <= ''' + convert(varchar(8), @dtFinal, 112) + ''')'
	end

	if(@tpSistema is not null and @tpSistema <> '')
	begin
		Select @cmdSQL = @cmdSQL + ' AND a.tp_sistema = ''' + @tpSistema + ''''
	end

	if(@cd_cia_aerea is not null and @cd_cia_aerea <> '')
	begin
		Select @cmdSQL = @cmdSQL + ' AND a.ds_cliente LIKE ''%' + @cd_cia_aerea + '%'''
	end

	Select @cmdSQL = @cmdSQL + ' ORDER BY a.nu_boleto_ss'

	Insert into #ARRAY
	Exec (@cmdSQL)
end

-- INICIO - RETIRA BOLETOS DUPLICADOS e VAZIOS DO ARRAY
insert into #AUXILIAR
select ITEM_ARRAY from #ARRAY group by ITEM_ARRAY having count(ITEM_ARRAY) > 1

Delete from #ARRAY where ITEM_ARRAY in
(select ITEM_ARRAY from #ARRAY group by ITEM_ARRAY having count(ITEM_ARRAY) > 1)

insert into #ARRAY
Select * from #AUXILIAR

Delete from #ARRAY where ltrim(rtrim(ITEM_ARRAY)) = '' or ltrim(rtrim(cast(ITEM_ARRAY as integer))) = '0'
-- FINAL - RETIRA BOLETOS DUPLICADOS e VAZIOS DO ARRAY

TRUNCATE TABLE GEACupax..gtb_resultado_dados_arquivo_selos

Declare CursorBoleto cursor for
Select ITEM_ARRAY From #ARRAY

Open CursorBoleto

Fetch next From CursorBoleto into @boleto

While (@@fetch_status <> -1)
begin
	-- ************************************************************************************************
	-- INICIO - VERIFICANDO O CONSOLIDADO X ANALITICO
	-- ************************************************************************************************
	
	-- SELO FÍSICO
	Select @GeraArquivo	= 0, @geraArquivoAux = 0, @qtdPassageiro = 0
	Select @DescSistema = 'SELO FÍSICO'
	Select @qtdAnalitico = ISNULL( COUNT(a.billing_line_id), 0) From GEACupax..pax_selo_u a (nolock) Where billing_line_id = @boleto
	
	/*Select @qtdConsolidado = SUM(quantity) From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
	 Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema group by base_fat*/
	 
	 select @qtdConsolidado = ISNULL( SUM(quantity), 0) from DBSrrcv..zud_billing_doc_line_z
		where recv_doc_id = right('0000000000000' + convert(varchar, @boleto), 9)
		and extnd_descp <> ''
		and substring(extnd_descp, 6, 4) = 'SELO'
		and quantity > 0

	print '/ @@qtdAnalitico = '
	print @qtdAnalitico
	
	print '/ @qtdConsolidado = '
	print @qtdConsolidado

	if(@qtdAnalitico <> @qtdConsolidado)
	begin
		-- VARRE A VIEW DE DADOS DE GERAÇÃO DOS BOLETOS
		Declare CursorDivFisico cursor for
		Select substring(recv_entity_name, 1, 4), ISNULL( sum(quantity), 0) From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
				Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema
				group by substring(recv_entity_name, 1, 4) order by substring(recv_entity_name, 1, 4)

		Open CursorDivFisico

		Fetch next From CursorDivFisico into @DadoAerop, @DadoQuantity

		-- COMPARA OS DADOS DA VIEW COM OS DADOS ANALITICOS DOS SELOS
		While (@@fetch_status <> -1)
		begin
			Select @DadoValor = ISNULL( count(cd_aerop), 0)
				From GEACupax..pax_selo_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop
				group by cd_aerop order by cd_aerop

			-- Se encontrar divergencias.. Inclui os dados do aeroporto..
			if(@DadoValor <> @DadoQuantity)
			begin
				Select @DadoDtSelo = dt_mov
				From GEACupax..pax_selo_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop
				group by cd_aerop, dt_mov order by cd_aerop, dt_mov

				Select @DadoAnaliticoValorTotal =
					((Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where 
					a.item_fat = b.item_id and
					convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and
					b.curr_code = 'R$'))
				From GEACupax..pax_selo_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop

				Select @DadoConsolidadoValorTotal = sum(recv_doc_line_amt)
				From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
					 Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema
				and substring(recv_entity_name, 1, 4) = @DadoAerop

				Insert into gtb_resultado_dados_arquivo_selos 
				Select @boleto, @DadoAerop, @DescSistema, GetDate(), @DadoDtSelo, @DadoQuantity, @DadoConsolidadoValorTotal, @DadoValor, (@DadoAnaliticoValorTotal * @DadoValor)
		
				Select @geraArquivoAux = 1

				Select @GeraArquivo = @GeraArquivo + 1
			end

			Fetch next From CursorDivFisico into @DadoAerop, @DadoQuantity
		end

		Close CursorDivFisico
		Deallocate CursorDivFisico
	end

	-- SELO ELETRÔNICO
	Select @DescSistema = 'SELO ELETRÔNICO'
	Select @qtdAnalitico = ISNULL( COUNT(a.billing_line_id), 0) From GEACupax..pax_selo_electronico_u a (nolock) Where billing_line_id = @boleto
	
	/*Select @qtdConsolidado = sum(quantity) From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
	 Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema group by base_fat*/
	 
	 select @qtdConsolidado = ISNULL( SUM(quantity), 0) from DBSrrcv..zud_billing_doc_line_z
		where recv_doc_id = right('0000000000000' + convert(varchar, @boleto), 9)
		and extnd_descp <> ''
		and substring(extnd_descp, 6, 4) = 'SELE'
		and quantity > 0
	
	print '/ @@qtdAnalitico = '
	print @qtdAnalitico
	
	print '/ @qtdConsolidado = '
	print @qtdConsolidado

	if(@qtdAnalitico <> @qtdConsolidado)
	begin
		-- VARRE A VIEW DE DADOS DE GERAÇÃO DOS BOLETOS
		Declare CursorDivEletronico cursor for
		Select substring(recv_entity_name, 1, 4), ISNULL( sum(quantity), 0) From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
			 Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema
			group by substring(recv_entity_name, 1, 4) order by substring(recv_entity_name, 1, 4)

		Open CursorDivEletronico

		Fetch next From CursorDivEletronico into @DadoAerop, @DadoQuantity

		-- COMPARA OS DADOS DA VIEW COM OS DADOS ANALITICOS DOS SELOS
		While (@@fetch_status <> -1)
		begin

			Select @DadoValor = ISNULL( count(cd_aerop), 0)
				From GEACupax..pax_selo_electronico_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop
				group by cd_aerop order by cd_aerop

			-- Se encontrar divergencias.. Inclui os dados do aeroporto..
			if(@DadoValor <> @DadoQuantity)
			begin
				Select @DadoDtSelo = dt_mov
				From GEACupax..pax_selo_electronico_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop
				group by cd_aerop, dt_mov order by cd_aerop, dt_mov

				Select @DadoAnaliticoValorTotal =
					((Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where 
					a.item_fat = b.item_id and
					convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and
					b.curr_code = 'R$'))
				From GEACupax..pax_selo_electronico_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop

				Select @DadoConsolidadoValorTotal = sum(recv_doc_line_amt)
				From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
					 Where T1.nu_boleto_ss = convert(varchar(20), @boleto, 112)
					and base_fat = @DescSistema and substring(recv_entity_name, 1, 4) = 
					convert(varchar(4), @DadoAerop, 112)
				
				Insert into gtb_resultado_dados_arquivo_selos 
				Select @boleto, @DadoAerop, @DescSistema, GetDate(), @DadoDtSelo, @DadoQuantity, @DadoConsolidadoValorTotal, @DadoValor, (@DadoAnaliticoValorTotal * @DadoValor)

				Select @geraArquivoAux = 1

				Select @GeraArquivo = @GeraArquivo + 1
			end

			Fetch next From CursorDivEletronico into @DadoAerop, @DadoQuantity
		end

		Close CursorDivEletronico
		Deallocate CursorDivEletronico
	end

	-- RPE
	Select @DescSistema = 'RPE'
	Select @qtdAnalitico = ISNULL( sum(a.pax_total), 0) From GEACupax..rpax_itens_u a (nolock) Where billing_line_id = @boleto

	/*Select @qtdConsolidado = sum(quantity) From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
	 Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema --group by base_fat*/
	 
	 select @qtdConsolidado = ISNULL( SUM(quantity), 0) from DBSrrcv..zud_billing_doc_line_z
		where recv_doc_id = right('0000000000000' + convert(varchar, @boleto), 9)
		and extnd_descp <> ''
		and substring(extnd_descp, 6, 4) = 'RPAX'
		and quantity > 0
		
	print '/ @@qtdAnalitico = '
	print @qtdAnalitico
	
	print '/ @qtdConsolidado = '
	print @qtdConsolidado

	if(@qtdAnalitico <> @qtdConsolidado)
	begin
		-- VARRE A VIEW DE DADOS DE GERAÇÃO DOS BOLETOS
		Declare CursorDivRPE cursor for
		Select substring(T1.recv_entity_name, 1, 4), ISNULL( sum(T1.quantity), 0) From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
				 Where T1.nu_boleto_ss = @boleto and T1.base_fat = @DescSistema
				group by substring(T1.recv_entity_name, 1, 4) order by substring(T1.recv_entity_name, 1, 4)

		Open CursorDivRPE

		Fetch next From CursorDivRPE into @DadoAerop, @DadoQuantity

		-- COMPARA OS DADOS DA VIEW COM OS DADOS ANALITICOS DOS SELOS
		While (@@fetch_status <> -1)
		begin
			Select @DadoValor = ISNULL( sum(pax_total), 0) From GEACupax..rpax_itens_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop
				group by cd_aerop order by cd_aerop

			-- Se encontrar divergencias.. Inclui os dados do aeroporto..
			if(@DadoValor <> @DadoQuantity)
			begin
				Select @DadoDtSelo = dt_voo
				From GEACupax..rpax_itens_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop
				group by cd_aerop, dt_voo order by cd_aerop, dt_voo

				Select @DadoAnaliticoValorTotal = 0.0

				Select @DadoAnaliticoValorTotal =
					@DadoAnaliticoValorTotal + ((Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_fat = b.item_id and
					convert(varchar(8),a.dt_voo,112) between b.eff_date and b.expiration_date and
					b.curr_code = 'R$') * (a.pax_total))
				From GEACupax..rpax_itens_u a (nolock)
				Where billing_line_id = @boleto and cd_aerop = @DadoAerop

				Select @DadoConsolidadoValorTotal = sum(recv_doc_line_amt)
				From GEACrpt.dbo.gvw_demonstrativo_faturamento_pax T1
					 Where T1.nu_boleto_ss = @boleto and base_fat = @DescSistema
				and substring(recv_entity_name, 1, 4) = @DadoAerop
				
				Insert into gtb_resultado_dados_arquivo_selos 
				Select @boleto, @DadoAerop, @DescSistema, GetDate(), @DadoDtSelo, @DadoQuantity, @DadoConsolidadoValorTotal, @DadoValor, @DadoAnaliticoValorTotal
		
				Select @geraArquivoAux = 1

				Select @GeraArquivo = @GeraArquivo + 1
			end

			Fetch next From CursorDivRPE into @DadoAerop, @DadoQuantity
		end

		Close CursorDivRPE
		Deallocate CursorDivRPE
	end
		
	-- Chama boleto no caso de problemas..
	if (@geraArquivoAux = 1)
	begin
	
		print 'Chamando metodo: Exec gsp_upa_resumo_aux_arquivo_selos ' + @boleto
	
		Exec gsp_upa_resumo_aux_arquivo_selos @boleto
	end

	-- ************************************************************************************************
	-- FINAL - VERIFICANDO O CONSOLIDADO X ANALITICO
	-- ************************************************************************************************
	if(@GeraArquivo = 0)
	begin
		-- TRUNCA AS TABLES QUE SERÃO USADAS NO PROCESSO
		Select @fl_processa = 0

		-- TESTA SE EXISTEM DADOS A PROCESSAR
		-- SELO FÍSICO
		Select @fl_processa = @fl_processa + ISNULL( COUNT(billing_line_id), 0)
			From GEACupax..pax_selo_u
			Where billing_line_id = @boleto

		-- SELO ELETRÔNICO
		Select @fl_processa = @fl_processa + ISNULL( COUNT(billing_line_id), 0)
			From GEACupax..pax_selo_electronico_u
			Where billing_line_id = @boleto

		-- RPE
		Select @fl_processa = @fl_processa + ISNULL( COUNT(billing_line_id), 0)
			From GEACupax..rpax_itens_u a
			Where billing_line_id = @boleto

		-- CREDITO CIA AEREA
		Select @fl_processa = @fl_processa + ISNULL( COUNT(nu_boleto_ss), 0)
			From GEACrpt..gvw_upa_creditos_empresas_aereas a
			Where nu_boleto_ss = @boleto

		if(@fl_processa > 0)
		begin	
			TRUNCATE TABLE GEACupax..gtb_resumo_dados_arquivo_selos
			Select @somaTotalBoleto = 0.0

			-- ATRIBUINDO VALORES PARA VARIAVEIS DE GERAÇÃO DO ARQUIVO
			Select @ano = year(getdate())
			Select @mes = month(getdate())
			Select @dia = day(getdate())
			Select @hora = DATEPART(hh, GETDATE())
			Select @minutos = DATEPART(mi, GETDATE())
			Select @segundos = DATEPART(ss, GETDATE())

			if(len(@mes) = 1) Select @mes = '0' + @mes

			if(len(@dia) = 1) Select @dia = '0' + @dia

			if(len(@hora) = 1) Select @hora = '0' + @hora

			if(len(@minutos) = 1) Select @minutos = '0' + @minutos

			if(len(@segundos) = 1) Select @segundos = '0' + @segundos

			-- Cabecalho ------------------------------------------------------------------------------
			Insert into GEACupax..gtb_resumo_dados_arquivo_selos
			Select '0' + @dia + @mes + substring(@ano, 3, 2) + @hora + @minutos + @segundos	+ dbo.FormataCampo(@boleto, 7, '2') + dbo.FormataCampo('', 11, '1')

			------------------------------ SELO FÍSICO --------------------------------------------
			-- Testa se a tabela usada será a historica
			Select @SelectTableAntiga = ISNULL( COUNT(billing_line_id), 0)
				From GEACupax..pax_selo_u_historica
				Where billing_line_id = @boleto
			
			Select @cmdSQL = 'Select ''1*'''
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.billing_line_id, 112), 7, ''2'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(14), a.nro_selo, 112), 14, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop_utilizacao, 112), 4, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_mov,112), 8, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(6), a.nro_rste,112), 6, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 5, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(2), a.tp_coletor,112), 2, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ ''1'''
				Select @cmdSQL = @cmdSQL + '+ ''0'''
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
					(Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where 
					a.item_fat = b.item_id AND
					convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$''), 7)'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
					(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where 
					a.item_fat = b.item_id AND
					convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$''), 7)'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''SELO FISICO'', 20, ''1'')'
				Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 7, ''1'')'
			
			-- Inclui tabela antiga para processamento..
			if(@SelectTableAntiga = 0)
			begin
				Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_u a (NOLOCK index = pax_selo_fatura)'
			end
			else
			begin
				Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_u_historica a (NOLOCK)'
			end

			Select @cmdSQL = @cmdSQL + ' Where a.billing_line_id = ' + @boleto
			Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_mov'
		
			Insert into GEACupax..gtb_resumo_dados_arquivo_selos
			Exec (@cmdSQL)

			-- Inclui tabela antiga para processamento..
			if(@SelectTableAntiga = 0)
			begin
				Select 	@somaTotalBoleto = @somaTotalBoleto +
						(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
						Where a.item_fat = b.item_id and
						convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
				From GEACupax..pax_selo_u a (nolock)
				Where  a.billing_line_id = @boleto
			end
			else
			begin
				Select 	@somaTotalBoleto = @somaTotalBoleto +
						(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
						Where a.item_fat = b.item_id and
						convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
				From GEACupax..pax_selo_u_historica a (nolock)
				Where  a.billing_line_id = @boleto
			end

			------------------------------ SELO ELETRONICO ------------------------------------------
			-- Testa se a tabela usada será a historica
			Select @SelectTableAntiga = ISNULL( COUNT(billing_line_id), 0)
				From GEACupax..pax_selo_electronico_u_historica
				Where billing_line_id = @boleto

			Select @cmdSQL = 'Select ''2*'''
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.billing_line_id, 112), 7, ''2'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(14), a.nro_selo_electronico, 112), 14, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop_utilizacao, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_mov,112), 8, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 6, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(voo_rea, 5, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(2), a.tp_coletor,112), 2, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ ''0'''
			Select @cmdSQL = @cmdSQL + '+ ''1'''
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
					(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_fat = b.item_id AND
					convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$''), 7)'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
					(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_fat = b.item_id AND
					convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$''), 7)'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''SELO ELETRONICO'', 20, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 7, ''1'')'
			
			-- Inclui tabela antiga para processamento..
			if(@SelectTableAntiga = 0)
			begin
				Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_electronico_u a (NOLOCK index = pax_selo_electronico_fatura)'
			end
			else
			begin
				Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_electronico_u_historica a (NOLOCK)'
			end

			Select @cmdSQL = @cmdSQL + ' Where '
			Select @cmdSQL = @cmdSQL + ' a.billing_line_id = ' + @boleto
			Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_mov'

			Insert into GEACupax..gtb_resumo_dados_arquivo_selos
			Exec (@cmdSQL)

			-- Inclui tabela antiga para processamento..
			if(@SelectTableAntiga = 0)
			begin
				Select 	@somaTotalBoleto = @somaTotalBoleto +
						(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
							Where a.item_fat = b.item_id and
							convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
				From GEACupax..pax_selo_electronico_u a (nolock)
				Where  a.billing_line_id = @boleto
			end
			else
			begin
				Select 	@somaTotalBoleto = @somaTotalBoleto +
						(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
							Where a.item_fat = b.item_id and
							convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
				From GEACupax..pax_selo_electronico_u_historica a (nolock)
				Where  a.billing_line_id = @boleto
			end
			
			-- Soma quantidade de passageiros	
			select @qtdPassageiro = @qtdPassageiro +
			ISNULL( (count(Descricao) - 1), 0) from GEACupax..gtb_resumo_dados_arquivo_selos

			--------------------------------------- RPE ----------------------------------------------
			Select @cmdSQL = 'Select ''3*'''
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.billing_line_id, 112), 7, ''2'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 14, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_voo,112), 8, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 6, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(5), nro_voo, 112), 5, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 2, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ ''0'''
			Select @cmdSQL = @cmdSQL + '+ ''0'''
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.pax_total, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
						(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_fat = b.item_id AND
					convert(varchar(8),a.dt_voo,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$''), 7)'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
					(Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_fat = b.item_id AND
					convert(varchar(8),a.dt_voo,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$'') * (a.pax_total), 7)'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''RPE'', 20, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 7, ''1'')'
			Select @cmdSQL = @cmdSQL + ' From GEACupax..rpax_itens_u a (NOLOCK index = rpax_fatura)'
			Select @cmdSQL = @cmdSQL + ' Where '
			Select @cmdSQL = @cmdSQL + ' a.billing_line_id = ' + @boleto
			Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_voo'

			Insert into GEACupax..gtb_resumo_dados_arquivo_selos
			Exec (@cmdSQL)

			Select 	@somaTotalBoleto = @somaTotalBoleto +
					(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
						Where a.item_fat = b.item_id and
						convert(varchar(8),a.dt_voo,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$') * (a.pax_total)
			From GEACupax..rpax_itens_u a (nolock)
			Where  a.billing_line_id = @boleto
			
			-- Soma quantidade de passageiros	
			select @qtdPassageiro = @qtdPassageiro +
				ISNULL(sum(pax_total), 0 ) From GEACupax..rpax_itens_u
				where billing_line_id = @boleto

			---------------------- CREDITOS CIA AEREA -----------------------------------------------
			Select @cmdSQL = 'Select ''4*'''
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.nu_boleto_ss, 112), 7, ''2'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 14, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_mov,112), 8, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 6, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 5, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 2, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ ''0'''
			Select @cmdSQL = @cmdSQL + '+ ''0'''
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''0'', 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
						((Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_id = b.item_id AND
					convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$'') * -1), 7)'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
					((Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
					Where a.item_id = b.item_id AND
					convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
					b.curr_code = ''R$'') * (a.qtde) * -1), 7)'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''CREDITO CIA AEREA'', 20, ''1'')'
			Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(((a.qtde) * -1), 7)'
			Select @cmdSQL = @cmdSQL + ' From GEACrpt..gvw_upa_creditos_empresas_aereas a (nolock)'
			Select @cmdSQL = @cmdSQL + ' Where '
			Select @cmdSQL = @cmdSQL + ' a.nu_boleto_ss = ' + @boleto
			Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_mov'

			Insert into GEACupax..gtb_resumo_dados_arquivo_selos
			Exec (@cmdSQL)

			Select 	@somaTotalBoleto = @somaTotalBoleto +
				((Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
						Where a.item_id = b.item_id and
						convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$') * (a.qtde) * -1)
			From GEACrpt..gvw_upa_creditos_empresas_aereas a (nolock)
			Where  a.nu_boleto_ss = @boleto
			
			Select @CountDesc = count(Descricao) - 1 From GEACupax..gtb_resumo_dados_arquivo_selos

			-- Trailer ------------------------------------------------------------------------------
			Insert into GEACupax..gtb_resumo_dados_arquivo_selos
			Select '9' + dbo.FormataCampo((Select count(Descricao) - 1 From GEACupax..gtb_resumo_dados_arquivo_selos), 7, '2')
					+ dbo.FormataCampo( convert(varchar, @qtdPassageiro, 112), 7, '2')
					+ dbo.FormataCampo(dbo.FormataValorFloat(@somaTotalBoleto, 20), 20, '2')
					+ convert(varchar(16), dbo.FormataCampo('', 16, '1'), 112)

			print 'Exec gsp_upa_gera_arquivo_selos 0!'

			Exec gsp_upa_gera_arquivo_selos '0'
		end
	end

	Fetch next From CursorBoleto into @boleto	
end

-- Seta o Fim do Job
Exec GEACCOMMON..usp_upd_dropdowndw 'CJPP', '1', '1'
GO

/****** Object:  StoredProcedure [dbo].[gsp_upa_resumo_aux_arquivo_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[gsp_upa_resumo_aux_arquivo_selos]
(
	@boleto						VARCHAR(200)
)
AS

DECLARE
 @somaTotalBoleto				DECIMAL(20, 2)
, @ano							VARCHAR(4)
, @mes							VARCHAR(2)
, @dia							VARCHAR(2)
, @hora							VARCHAR(2)
, @minutos						VARCHAR(2)
, @segundos						VARCHAR(2)
, @cmdSQL						VARCHAR(8000)
, @SelectTableAntiga			INT
, @qtdPassageiro				INT

TRUNCATE TABLE GEACupax..gtb_resumo_dados_arquivo_selos
Select @somaTotalBoleto = 0.0, @qtdPassageiro = 0

-- ATRIBUINDO VALORES PARA VARIAVEIS DE GERAÇÃO DO ARQUIVO
Select @ano = year(getdate())
Select @mes = month(getdate())
Select @dia = day(getdate())
Select @hora = DATEPART(hh, GETDATE())
Select @minutos = DATEPART(mi, GETDATE())
Select @segundos = DATEPART(ss, GETDATE())

if(len(@mes) = 1) Select @mes = '0' + @mes

if(len(@dia) = 1) Select @dia = '0' + @dia

if(len(@hora) = 1) Select @hora = '0' + @hora

if(len(@minutos) = 1) Select @minutos = '0' + @minutos

if(len(@segundos) = 1) Select @segundos = '0' + @segundos

-- Cabecalho ------------------------------------------------------------------------------
Insert into GEACupax..gtb_resumo_dados_arquivo_selos
Select '0' + @dia + @mes + substring(@ano, 3, 2) + @hora + @minutos + @segundos	+ dbo.FormataCampo(@boleto, 7, '2') + dbo.FormataCampo('', 11, '1')

------------------------------ SELO FÍSICO --------------------------------------------
-- Testa se a tabela usada será a historica
Select @SelectTableAntiga = COUNT(billing_line_id)
	From GEACupax..pax_selo_u_historica
	Where billing_line_id = @boleto

Select @cmdSQL = 'Select ''1*'''
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.billing_line_id, 112), 7, ''2'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(14), a.nro_selo, 112), 14, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop_utilizacao, 112), 4, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_mov,112), 8, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(6), a.nro_rste,112), 6, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 5, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(2), a.tp_coletor,112), 2, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ ''1'''
	Select @cmdSQL = @cmdSQL + '+ ''0'''
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
		(Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where 
		a.item_fat = b.item_id AND
		convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$''), 7)'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
		(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where 
		a.item_fat = b.item_id AND
		convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$''), 7)'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''SELO FISICO'', 20, ''1'')'
	Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 7, ''1'')'

-- Inclui tabela antiga para processamento..
if(@SelectTableAntiga = 0)
begin
	Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_u a (NOLOCK index = pax_selo_fatura)'
end
else
begin
	Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_u_historica a (NOLOCK)'
end

Select @cmdSQL = @cmdSQL + ' Where a.billing_line_id = ' + @boleto
Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_mov'

Insert into GEACupax..gtb_resumo_dados_arquivo_selos
Exec (@cmdSQL)

-- Inclui tabela antiga para processamento..
if(@SelectTableAntiga = 0)
begin
	Select 	@somaTotalBoleto = @somaTotalBoleto +
			(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
			Where a.item_fat = b.item_id and
			convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
	From GEACupax..pax_selo_u a (nolock)
	Where  a.billing_line_id = @boleto
end
else
begin
	Select 	@somaTotalBoleto = @somaTotalBoleto +
			(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
			Where a.item_fat = b.item_id and
			convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
	From GEACupax..pax_selo_u_historica a (nolock)
	Where  a.billing_line_id = @boleto
end

------------------------------ SELO ELETRONICO ------------------------------------------
-- Testa se a tabela usada será a historica
Select @SelectTableAntiga = isnull( COUNT(billing_line_id), 0)
	From GEACupax..pax_selo_electronico_u_historica
	Where billing_line_id = @boleto

Select @cmdSQL = 'Select ''2*'''
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.billing_line_id, 112), 7, ''2'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(14), a.nro_selo_electronico, 112), 14, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop_utilizacao, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_mov,112), 8, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 6, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(voo_rea, 5, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(2), a.tp_coletor,112), 2, ''1'')'
Select @cmdSQL = @cmdSQL + '+ ''0'''
Select @cmdSQL = @cmdSQL + '+ ''1'''
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
		(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where a.item_fat = b.item_id AND
		convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$''), 7)'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
		(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where a.item_fat = b.item_id AND
		convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$''), 7)'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''SELO ELETRONICO'', 20, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 7, ''1'')'

-- Inclui tabela antiga para processamento..
if(@SelectTableAntiga = 0)
begin
	Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_electronico_u a (NOLOCK index = pax_selo_electronico_fatura)'
end
else
begin
	Select @cmdSQL = @cmdSQL + ' From GEACupax..pax_selo_electronico_u_historica a (NOLOCK)'
end

Select @cmdSQL = @cmdSQL + ' Where '
Select @cmdSQL = @cmdSQL + ' a.billing_line_id = ' + @boleto
Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_mov'

Insert into GEACupax..gtb_resumo_dados_arquivo_selos
Exec (@cmdSQL)

-- Soma quantidade de passageiros	
select @qtdPassageiro = @qtdPassageiro +
	ISNULL( (count(Descricao) - 1), 0) from GEACupax..gtb_resumo_dados_arquivo_selos

-- Inclui tabela antiga para processamento..
if(@SelectTableAntiga = 0)
begin
	Select 	@somaTotalBoleto = @somaTotalBoleto +
			(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
				Where a.item_fat = b.item_id and
				convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
	From GEACupax..pax_selo_electronico_u a (nolock)
	Where  a.billing_line_id = @boleto
end
else
begin
	Select 	@somaTotalBoleto = @somaTotalBoleto +
			(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
				Where a.item_fat = b.item_id and
				convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$')
	From GEACupax..pax_selo_electronico_u_historica a (nolock)
	Where  a.billing_line_id = @boleto
end

--------------------------------------- RPE ----------------------------------------------
Select @cmdSQL = 'Select ''3*'''
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.billing_line_id, 112), 7, ''2'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 14, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_voo,112), 8, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 6, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(5), nro_voo, 112), 5, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 2, ''1'')'
Select @cmdSQL = @cmdSQL + '+ ''0'''
Select @cmdSQL = @cmdSQL + '+ ''0'''
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.pax_total, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
			(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where a.item_fat = b.item_id AND
		convert(varchar(8),a.dt_voo,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$''), 7)'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
		(Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where a.item_fat = b.item_id AND
		convert(varchar(8),a.dt_voo,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$'') * (a.pax_total), 7)'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''RPE'', 20, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 7, ''1'')'
Select @cmdSQL = @cmdSQL + ' From GEACupax..rpax_itens_u a (NOLOCK index = rpax_fatura)'
Select @cmdSQL = @cmdSQL + ' Where '
Select @cmdSQL = @cmdSQL + ' a.billing_line_id = ' + @boleto
Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_voo'

Insert into GEACupax..gtb_resumo_dados_arquivo_selos
Exec (@cmdSQL)

Select 	@somaTotalBoleto = @somaTotalBoleto +
		(Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
			Where a.item_fat = b.item_id and
			convert(varchar(8),a.dt_voo,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$') * (a.pax_total)
From GEACupax..rpax_itens_u a (nolock)
Where  a.billing_line_id = @boleto

-- Soma quantidade de passageiros	
Select @qtdPassageiro = @qtdPassageiro +
	ISNULL( sum(pax_total), 0) From GEACupax..rpax_itens_u
	where billing_line_id = @boleto

---------------------- CREDITOS CIA AEREA -----------------------------------------------
Select @cmdSQL = 'Select ''4*'''
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(7), a.nu_boleto_ss, 112), 7, ''2'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 14, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_aerop, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(8), a.dt_mov,112), 8, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 6, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 5, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(1), a.tp_natureza, 112), 1, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo('''', 2, ''1'')'
Select @cmdSQL = @cmdSQL + '+ ''0'''
Select @cmdSQL = @cmdSQL + '+ ''0'''
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''0'', 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat (
			((Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where a.item_id = b.item_id AND
		convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$'') * -1), 7)'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(
		((Select distinct MAX(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
		Where a.item_id = b.item_id AND
		convert(varchar(8),a.dt_mov,112) BETWEEN b.eff_date AND b.expiration_date AND
		b.curr_code = ''R$'') * (a.qtde) * -1), 7)'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(convert(varchar(4), a.cd_cia_aerea, 112), 4, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataCampo(''CREDITO CIA AEREA'', 20, ''1'')'
Select @cmdSQL = @cmdSQL + '+ dbo.FormataValorFloat(((a.qtde) * -1), 7)'
Select @cmdSQL = @cmdSQL + ' From GEACrpt..gvw_upa_creditos_empresas_aereas a (nolock)'
Select @cmdSQL = @cmdSQL + ' Where '
Select @cmdSQL = @cmdSQL + ' a.nu_boleto_ss = ' + @boleto
Select @cmdSQL = @cmdSQL + ' ORDER BY a.dt_mov'

Insert into GEACupax..gtb_resumo_dados_arquivo_selos
Exec (@cmdSQL)

Select 	@somaTotalBoleto = @somaTotalBoleto +
	((Select distinct Max(b.unit_price) From DBSrrcv..zud_price_list_z b (nolock)
			Where a.item_id = b.item_id and
			convert(varchar(8),a.dt_mov,112) between b.eff_date and b.expiration_date and b.curr_code = 'R$') * (a.qtde) * -1)
From GEACrpt..gvw_upa_creditos_empresas_aereas a (nolock)
Where  a.nu_boleto_ss = @boleto

-- Trailer ------------------------------------------------------------------------------
Insert into GEACupax..gtb_resumo_dados_arquivo_selos
Select '9' + dbo.FormataCampo((Select count(Descricao) - 1 From GEACupax..gtb_resumo_dados_arquivo_selos), 7, '2')
		+ dbo.FormataCampo( convert(varchar, @qtdPassageiro, 112) , 7, '2')
		+ dbo.FormataCampo(dbo.FormataValorFloat(@somaTotalBoleto, 20), 20, '2')
		+ convert(varchar(16), dbo.FormataCampo('', 16, '1'), 112)

print 'Chamando Exec gsp_upa_gera_arquivo_selos 1!'

Exec gsp_upa_gera_arquivo_selos '1'
GO

/****** Object:  StoredProcedure [dbo].[gsp_upd_item_selos]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_upd_item_selos    Script Date: 19/09/2008 15:20:03 ******/


CREATE proc [dbo].[gsp_upd_item_selos] (
   @p_selo_inicial           		char(10)
  ,@p_selo_final             		char(10)
  ,@p_dt_mov                 		datetime
  ,@p_cd_aerop_utilizacao    	char(4)
  ,@p_cd_terminal_utilizacao 	char(10))
As
Declare  @p_item_fat    char(26)
Select 
 	@p_item_fat = item_id  
from 
 GEACutcx..cor_item_pax_u  (NOLOCK)
where 
        cd_aerop 		= @p_cd_aerop_utilizacao 
    and cd_terminal 	= @p_cd_terminal_utilizacao 
    and tp_natureza 	= Substring(@p_selo_inicial,1,1)
    and dt_vigencia 	<= @p_dt_mov

Update 
 pax_selo_u 
Set
 item_fat = @p_item_fat
Where 
 nro_selo Between @p_selo_inicial and @p_selo_final
and billing_line_id = 0




GO

/****** Object:  StoredProcedure [dbo].[gsp_upd_pax_selo_fat]    Script Date: 01/05/2011 18:05:13 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_upd_pax_selo_fat    Script Date: 19/09/2008 15:20:03 ******/


CREATE PROCEDURE [dbo].[gsp_upd_pax_selo_fat] (
	 @p_bl_id    			Integer,
	 @p_billing_int_type   		Char (1),
	 @p_billing_user_1   		Char (10),
	-- @p_nro_selo Char (10) )
	 @p_tp_natureza   		char (1),  
	 @p_dt_mov    			datetime, 
	 @p_cd_aerop_utilizacao  	Char (4), 
	 @p_cd_terminal_utilizacao  	Char (10), 
	 @p_item_fat    			Char (26), 
	 @p_cd_cia_aerea   		char (3), 
	 @p_tp_fat    			char (1), 	
	 @p_selo_ini    			char (10) = '', 
	 @p_selo_fin    			char (10) = ''
)
AS
DECLARE  @tot_actualilzadas REAL
/*  ORIGINAL */
IF LTRIM(RTRIM(@p_selo_ini)) = '' AND LTRIM(RTRIM(@p_selo_fin)) = ''
BEGIN
    UPDATE
      GEACupax..pax_selo_u
    SET
      billing_line_id   	= @p_bl_id
      ,billing_int_date   	= GETDATE ()
      ,billing_int_type   	= @p_billing_int_type
      ,billing_user_1   	= @p_billing_user_1
      ,date_changed  	= GETDATE ()
      ,user_id_changed  	= suser_sname()
    WHERE      
               tp_natureza   		= @p_tp_natureza 
       and  dt_mov   		= @p_dt_mov 
       and  cd_aerop_utilizacao  	= @p_cd_aerop_utilizacao 
       and  cd_terminal_utilizacao  	= @p_cd_terminal_utilizacao 
       and  item_fat   		= @p_item_fat 
       and  cd_cia_aerea   		= @p_cd_cia_aerea 
       and  tp_fat    		= @p_tp_fat 
END
/* FIM ORIGINAL */
ELSE
BEGIN
    UPDATE
      GEACupax..pax_selo_u
    SET
      billing_line_id   	= @p_bl_id
      ,billing_int_date   	= GETDATE ()
      ,billing_int_type   	= @p_billing_int_type
      ,billing_user_1   	= @p_billing_user_1
      ,date_changed  	= GETDATE ()
      ,user_id_changed  	= suser_sname()
    WHERE      
                   nro_selo   >= @p_selo_ini
           and  nro_selo   <= @p_selo_fin
END




GO

/****** Object:  StoredProcedure [dbo].[gsp_upd_pax_selo_fatura]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_upd_pax_selo_fatura    Script Date: 19/09/2008 15:20:03 ******/


CREATE PROCEDURE [dbo].[gsp_upd_pax_selo_fatura] (
 @p_bl_id    Integer,
 @p_billing_int_type   Char (1),
 @p_billing_user_1   Char (10),
 @p_cd_aerop   Char (4), 
 @p_cd_terminal   Char (10), 
 @p_cd_cia_aerea   char (3),
 @p_tp_natureza    char (1),  
 @p_dt_incial    datetime, 
 @p_dt_final    datetime, 
 @p_item_fat    Char (26) )
AS
UPDATE
  GEACupax..pax_selo_u
SET
  billing_line_id   = @p_bl_id,
  billing_int_date  = GETDATE (),
  billing_int_type  = @p_billing_int_type,
  billing_user_1    = @p_billing_user_1,
  date_changed     = GETDATE (),
  user_id_changed   = suser_sname()
WHERE      
  billing_line_id = 0 And
  selo_status = '2' And
  dt_mov between @p_dt_incial And @p_dt_final And
  item_fat = @p_item_fat And
  @p_cd_aerop = CASE WHEN LTRIM ( RTRIM (cd_aerop_utilizacao) ) = '' THEN cd_aerop ELSE cd_aerop_utilizacao End And
  @p_cd_terminal = CASE WHEN LTRIM ( RTRIM (cd_terminal_utilizacao) ) = '' THEN cd_terminal ELSE cd_terminal_utilizacao END And
  cd_cia_aerea = @p_cd_cia_aerea And
  tp_natureza = @p_tp_natureza




GO

/****** Object:  StoredProcedure [dbo].[gsp_upd_rpax_itens_fat]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_upd_rpax_itens_fat    Script Date: 19/09/2008 15:20:04 ******/

CREATE PROCEDURE [dbo].[gsp_upd_rpax_itens_fat] (
 @p_bl_id Integer,
 @p_billing_int_type Char (1),
 @p_billing_user_1 Char (10),
 @p_cd_aerop char (4),
 @p_cd_terminal char (10),
 @p_cd_cia_aerea char (3),
 @p_nro_voo char (5),
 @p_dt_voo datetime,
 @p_hr_voo char (5),
 @p_tp_rpax char (1),
 @p_tp_natureza char (1),
 @p_tp_voo char (1),
 @p_tp_fat char (1) )
AS
Update
  rpax_itens_u
Set
  billing_line_id = @p_bl_id,
  billing_int_date = getdate (),
  billing_int_type = @p_billing_int_type,
  billing_user_1 = @p_billing_user_1
Where      
  cd_aerop = @p_cd_aerop And
  cd_terminal = @p_cd_terminal And
  cd_cia_aerea = @p_cd_cia_aerea And
  nro_voo = @p_nro_voo And
  dt_voo = @p_dt_voo And
  hr_voo = @p_hr_voo And
  tp_rpax = @p_tp_rpax And
  tp_natureza = @p_tp_natureza And
  tp_voo = @p_tp_voo And
  tp_fat = @p_tp_fat



GO

/****** Object:  StoredProcedure [dbo].[gsp_upd_selo_from_boleto]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_upd_selo_from_boleto    Script Date: 19/09/2008 15:20:04 ******/

CREATE PROCEDURE [dbo].[gsp_upd_selo_from_boleto] (
				@p_nu_boleto_ss Int )
As

declare @user_id	char(30)

set @user_id = rtrim(suser_sname())

Update
	GEACupax..pax_selo_u 
Set
  	billing_line_id 	= 0,
	billing_int_type	= '',	
  	date_changed 		= getdate (),
	user_id_changed 	= @user_id,
	chgstamp			= chgstamp + 1
where
  billing_line_id = @p_nu_boleto_ss


Update
  GEACupax..rpax_itens_u
Set
  billing_line_id = 0,
  date_changed = getdate ()
where
  billing_line_id = @p_nu_boleto_ss

Update
  GEACupax..pax_selo_elec_u
Set
  billing_line_id = 0,
  date_changed = getdate ()
where
  billing_line_id = @p_nu_boleto_ss

Update
  GEACupax..pax_selo_electronico_u
Set
	billing_line_id = 0,
	billing_int_type = '',
	date_changed = getdate (),
	user_id_changed 	= @user_id,
	chgstamp			= chgstamp + 1
where
  billing_line_id = @p_nu_boleto_ss


-- MRP 15/05/2007 - Atualiza o registro referente a crédito para cia aérea
Update
  GEACupax..pax_cred_cia_u
Set
  processado   = 'N',
  nu_boleto_ss = 0
Where
  nu_boleto_ss = @p_nu_boleto_ss




GO

/****** Object:  StoredProcedure [dbo].[gsp_valida_existem_selos]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_valida_existem_selos    Script Date: 19/09/2008 15:20:04 ******/

CREATE Proc [dbo].[gsp_valida_existem_selos] (
	@p_nro_selo_inicial        char(10)
         	,@p_nro_selo_final         char(10))
as
/* Inicio das Validaçoes Verifica se selos existem */
If Not Exists (Select * from pax_selo_u (NOLOCK)  where   nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final )
Begin
        Select ret_code    = 'ERRO' 
               ,ret_message = 'Intervalo de Selos Inexistente'
End 
Else 
Begin
        Set RowCount 1 
        Select ret_code    		= 'OK'
                   ,ret_message 	= 'Para: ' + rtrim(a.cd_cia_aerea) + ' - '+ rtrim(b. no_cia_aerea)
        From  pax_selo_u a (nolock INDEX = P_pax_selo_u)
             Left Join GEACutcx..cor_cia_aerea_u b (NOLOCK INDEX  = P_cor_cia_aerea_u )
             On a.cd_cia_aerea 	= b.cd_cia_aerea 
             where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
        Set RowCount 0
End



GO

/****** Object:  StoredProcedure [dbo].[gsp_valida_ins_selos_arq]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_valida_ins_selos_arq    Script Date: 19/09/2008 15:20:05 ******/


/*
EXEC gsp_valida_ins_selos_arq 'SBBR1_F_051202-165639_C07_600.TXT'
*/

CREATE PROCEDURE  [dbo].[gsp_valida_ins_selos_arq]
	( @arquivo		VARCHAR(255) = '%' )
AS

/*
Marcelo Reis Palma
Data: 20/11/2003
Descrição:

Rotina atualizada para a carga de selos eletrônicos.
*/


/*
jose Muñoz
Data: 04/12/2003
Descrição:

Rotina atualizada para colocar novos campos de informação ao processar os arquivos.


Discrepancias
1          Selo Inexistente
2          Selo Pendente de recebimento
3          Selo em processo de transferencia entre aeroportos
4          Selo não distribuido
5          RSTE não concluido
6          Selo já cancelado
7          Selo já utilizado
8          Selo já faturado
9          Selo de teste
10         Data de leitura maior que a data do processamento do arquivo
11         Data de leitura menor que a última data de movimento do selo
12         Selo já devolvido

*/


-- DECLARA VARIÁVEIS 
DECLARE
	@p_cd_aerop      			CHAR(4)
	,@p_cd_terminal   			CHAR(10)
	,@p_dt_mov        			DATETIME
	,@p_dt_temp					DATETIME
	,@p_hh_mm   				CHAR(6)
	,@p_selo_status   			CHAR(1)
	,@p_cd_motivo     			CHAR(2)
	,@p_arquivo       			VARCHAR(255)
	,@p_status_arq   			CHAR(1)
	,@p_linha   				VARCHAR(255)
	,@p_nro_selo  				CHAR(9)
	,@p_tp_natureza  			CHAR(1)
	,@p_dt_mov_str				VARCHAR(8)
	,@p_tp_coletor  			CHAR(2)
	,@p_date_process			DATETIME
	,@p_user_process 			CHAR(30)
	,@p_dt_mov_arq				DATETIME
	,@p_hh_mm_arq 				CHAR(6)
	,@p_nro_rste  				CHAR(6)
	,@p_cd_situacao_rste 		CHAR(1)
	,@p_execute       			VARCHAR(255)
	,@p_tp_fat					CHAR(1)
	,@cd_aerop      			CHAR(4)
	,@p_selo_status_ind       	CHAR(1)
	,@interno_selo_status   	CHAR(1)
	,@interno_dt_mov        	DATETIME
	,@msg          				VARCHAR (200)
	,@nr_total_lineas_arq    	REAL
	,@nr_total_selos_validos    REAL
	,@nr_total_selos_discrep	REAL
	,@nr_total_lineas_err    	REAL
	,@nr_total_selos_invalidos	REAL
	,@nr_qtd_discrepancias_tra 	REAL
	,@nr_qtd_duplicados			REAL
	,@copy    					VARCHAR (255)
	,@int_error             	INTEGER
	,@linea     				VARCHAR (255)
	,@p_nro_selo_aux  			CHAR(10)
	,@p_nro_selo_aux_ant  		CHAR(10)
	,@p_cd_cia_aerea			CHAR(3)
	,@p_cd_cia_aerea_ant		CHAR(3)
	,@p_crear_intervalo			INT
	,@p_item_fat				CHAR(26)
	,@p_billing_line_id    		REAL
	,@fl_habilitado 			CHAR(1)
	,@p_nro_selo_elec			CHAR (20)
	,@w_tp_selo					CHAR (1)
	,@w_cd_cia_aerea			CHAR (3)
	,@w_dt_confirma				DATETIME
	,@w_prefixo_cia_aerea		CHAR (2)
	,@w_cd_aerop				CHAR (4)
	,@w_cd_terminal				CHAR (1)
	,@w_item_fat				CHAR (26)
	,@w_voo_rea					CHAR(4)
	,@w_dt_voo_rea				DATETIME
	,@w_hh_voo_rea				CHAR(6)
	,@error_bcp					SMALLINT
	,@v_status_arq				CHAR(1)
	,@int_insert_discrepancia	SMALLINT
	,@w_discrepancia			CHAR(10)
	,@w_selo_status_aux			CHAR(1)
	,@w_tp_coletor_aux			CHAR(16)
	,@w_dt_confirma_aux			DATETIME
	,@w_aerop_utilizacao		CHAR(4)
	,@w_billing_line_id			REAL
	,@cont 						INT 
	,@v_ano_remesa				INTEGER
	,@sql                   varchar(3000)


SET NOCOUNT ON

/*
IF suser_sname() <> 'DBS'
BEGIN
        SELECT @msg = 'Processo desahilitado TEMPORALMENTE.'
        PRINT @msg
		SET NOCOUNT OFF
        RETURN 3
END
*/

-- VERIFICA SE PROCESSO ESTÁ HABILITADO
SELECT @fl_habilitado = ISNULL(descp,'0') FROM GEACCOMMON..dropdowndw_u (NOLOCK)
WHERE  tbl_code = 'CSEL'
AND code = '1'
IF @fl_habilitado = '0' OR @fl_habilitado IS NULL
BEGIN
    SET @msg = 'Processo desahilitado, Verificar tabelas genericas [CSEL]. codigo = 1, Descrição = 0.'
    PRINT @msg
    RETURN 3
END
-- FIM VERIFICA SE PROCESSO ESTÁ HABILITADO


-- VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO
EXEC psp_verificar_proceso 'gsp_valida_ins_selos_arq', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de criar as requisições se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de reprocessamento das discrepâncias se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END
-- FIM VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO


-- COPIA ARQUIVOS QUE CAÍRAM NA PASTA "Selo_erroes_BCP" PARA SEREM REPROCESSADOS
SET @p_execute = 'master..xp_cmdshell ''Copy \\S-SEAN217\DriveF\Selo_erroes_BCP\*.*  \\S-SEAN217\DriveF\Selo'''
EXECUTE  (@p_execute)

SET @p_execute = 'master..xp_cmdshell ''del \\S-SEAN217\DriveF\Selo_erroes_BCP\*.*  /Q'''
EXECUTE  (@p_execute)


-- CRIA TABELA TEMPORÁRIA PARA GUARDAR OS ARQUIVOS ATUAIS DA PASTA "Selo"
CREATE TABLE #TEMP (LINEA VARCHAR(255) NULL)

set @sql = 'INSERT INTO #TEMP EXEC master..xp_cmdshell ''dir \\S-SEAN217\DriveF\Selo\*.* /B'''
exec (@sql)

DELETE FROM #TEMP WHERE LINEA IS NULL


-- VERIFICA SE EXISTE A TABELA "pax_selos_table_1" ONDE FICARÃO TEMPORARIAMENTE OS SELOS DE CADA ARQUIVO A SER PROCESSADO
IF NOT EXISTS (SELECT 1 FROM sysobjects WHERE name = 'pax_selos_table_1')
BEGIN
    SET @msg = 'Não é possível realizar o processo porque não existe a tabela de armazenamento temporário dos dados a ser processados "pax_selos_table_1". '
    PRINT @msg
    RETURN 3
	
	/*  CRIA A TABELA "pax_selos_table_1" CASO NÃO EXISTA
		CREATE TABLE pax_selos_table_1 (linha VARCHAR(255))
		GRANT ALL ON pax_selos_table_1 TO geaccarga
	*/
END


-- INICIA ALGUMAS VARIÁVEIS
SELECT @p_date_process      	= GETDATE()
	,@p_user_process 			= suser_sname()

PRINT @p_date_process
PRINT ' '

SET @w_dt_confirma   			= CONVERT ( CHAR (10), @p_date_process, 101 )


-- DECLARA CURSOR DE ARQUIVOS A PROCESSAR
DECLARE cur_arq CURSOR FOR
SELECT 
	cd_aerop 
	,cd_terminal 
	,dt_mov 
	,hh_mm 
	,tp_selo
	,selo_status 
	,arquivo 
	,cd_motivo 
	,status_arq 
	,tp_coletor
FROM 
	GEACupax..pax_baixa_selo_u   (NOLOCK index = IX_STATUS_ARQ)
WHERE 
		status_arq 	= '0'
	AND tp_selo in ('E', 'F', 'C')
	AND	arquivo		LIKE @arquivo
ORDER BY dt_mov, arquivo

-- ABRE CURSOR DE ARQUIVOS A PROCESSAR
OPEN cur_arq 

-- PRIMEIRA LEITURA DO  CURSOR DE ARQUIVOS A PROCESSAR
FETCH  NEXT FROM  cur_arq
INTO @p_cd_aerop 
	,@p_cd_terminal 
	,@p_dt_mov_arq       
	,@p_hh_mm_arq   
	,@w_tp_selo
	,@p_selo_status   
	,@p_arquivo        
	,@p_cd_motivo     
	,@p_status_arq   
	,@p_tp_coletor

WHILE @@FETCH_STATUS = 0 -- LÊ ARQUIVO A SER PROCESSADO ENQUANTO NÃO FOR FIM
BEGIN
    -- LIMPA TABELA QUE GUARDARÁ TEMPORARIAMENTE OS SELOS DO ARQUIVO QUE ESTÁ SENDO PROCESSADO
    DELETE pax_selos_table_1

    SELECT 	@int_error = 0
    		,@p_execute = 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_1 in \\S-SEAN217\DriveF\Selo\' + ltrim(rtrim(@p_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''

    EXECUTE  (@p_execute)
    IF @@ERROR <> 0
    BEGIN
       SELECT @int_error 			= 1
			,@nr_total_lineas_err	= 1
			,@error_bcp				= 1
       GOTO SEGUIR
    END

    BEGIN TRANSACTION 
    SET @msg = 'INICIO PROCESSO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + CHAR(10)
    PRINT @msg 
    PRINT ' '

    SELECT 	@nr_total_lineas_arq		= 0
		,@nr_total_selos_validos		= 0
		,@nr_total_selos_invalidos		= 0
		,@nr_total_lineas_err			= 0
		,@nr_total_selos_discrep		= 0
		,@error_bcp						= 0

     
    -- VERIFICA SE O ARQUIVO ATUAL EXISTE NA TABELA QUE GUARDOU OS ARQUIVOS DAS PASTAS Selo + Selo_erroes
    SELECT @linea = LINEA FROM #TEMP WHERE LTRIM(RTRIM(LINEA)) = LTRIM(RTRIM(@p_arquivo))
    IF @@ROWCOUNT = 0
    BEGIN
		SELECT @int_error 			= 1
			,@nr_total_lineas_err	= @nr_total_lineas_err + 1
		GOTO SEGUIR
    END

	-- BUSCA QUANTIDADE DE LINHAS DO ARQUIVO
	SELECT @nr_total_lineas_arq = COUNT(1) FROM GEACupax..pax_selos_table_1 (NOLOCK)
	IF @nr_total_lineas_arq  = 0
	BEGIN
       	SELECT	@int_error 					= 1
			,@nr_total_lineas_err			= 0
			,@nr_total_selos_validos		= 0
			,@nr_total_lineas_arq			= 0
			,@nr_total_selos_discrep		= 0
			,@nr_total_selos_invalidos		= 0
			,@nr_qtd_discrepancias_tra 		= 0
			,@nr_qtd_duplicados				= 0
			,@error_bcp						= 1
		GOTO SEGUIR
	END
	
	-- BUSCAR CANTIDAD DE LINEAS DUPLICADAS
	
	CREATE TABLE #TEMP_2 (SELO CHAR(20), CANTIDAD INTEGER)
	
	IF @w_tp_selo = 'C'
	BEGIN
		-- SELO FISICO
		INSERT INTO #TEMP_2
		SELECT  SUBSTRING(A.linha, 14,10), COUNT(1) - 1
		FROM GEACupax..pax_selos_table_1 A (NOLOCK)
		WHERE EXISTS (SELECT 1 FROM GEACupax..pax_selos_table_1 B (NOLOCK)
				WHERE SUBSTRING(B.linha, 14,10) = SUBSTRING(A.linha, 14,10)
					AND LEFT( B.linha, 13) <> LEFT( A.linha, 13))
		GROUP BY SUBSTRING(A.linha, 14,10)
		
		SELECT @nr_qtd_duplicados = ISNULL(SUM(CANTIDAD),0) FROM #TEMP_2 (NOLOCK)
	END
	ELSE
	BEGIN
		-- SELO ELETRONICO
		INSERT INTO #TEMP_2
		SELECT  SUBSTRING(A.linha, 11,20), COUNT(1) - 1
		FROM GEACupax..pax_selos_table_1 A (NOLOCK)
		WHERE EXISTS (SELECT 1 FROM GEACupax..pax_selos_table_1 B (NOLOCK)
				WHERE SUBSTRING(B.linha, 11,20) = SUBSTRING(A.linha, 11,20)
					AND LEFT( B.linha, 10) <> LEFT( A.linha, 10))
		GROUP BY SUBSTRING(A.linha, 11,20)
		
		SELECT @nr_qtd_duplicados = ISNULL(SUM(CANTIDAD),0) FROM #TEMP_2 (NOLOCK)
	END
	
	DROP TABLE #TEMP_2 
	
    IF @p_selo_status = '3' 
    BEGIN
         CREATE TABLE #TABLE_DEV (	cd_cia_aerea	CHAR(3)
									,nro_selo 		CHAR(10))
		
         CREATE INDEX IX_NRO_SELO ON #TABLE_DEV (cd_cia_aerea, nro_selo)
    END

    -- DECLARACION DE CURSOR DE SELOS A PROCESAR
    DECLARE selos_cur CURSOR STATIC FOR
    SELECT linha  
    FROM pax_selos_table_1 -- (NOLOCK)
	    
    OPEN selos_cur
    
    FETCH NEXT FROM selos_cur
    INTO @p_linha
    
    WHILE @@FETCH_STATUS = 0 -- LÊ SELO A SER PROCESSADO ENQUANTO NÃO FOR FIM
    BEGIN

		/*SELO FÍSICO *************************************************************************************************************************************************************/	
		IF @w_tp_selo = 'C'
		BEGIN
			
			SELECT 	@p_nro_selo  			= SUBSTRING(@p_linha, 14,9)
				,@p_tp_natureza  			= SUBSTRING(@p_linha, 14,1)
				,@int_insert_discrepancia 	= 0
						
			-- PROCESAR LOS SELOS Y VERIFICAR SI EXISTEN DISCREPANCIAS
				
			-- Validando a data da leitura do selo
			IF ISDATE(SUBSTRING(@p_linha, 1,6)) = 0
			BEGIN
				INSERT INTO pax_selos_arquivo_log_processo
				VALUES (@p_linha, @p_arquivo, GETDATE(), 'A data nao é válida, favor Verificar')
				SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
				GOTO NEXT
			END
	        
			SELECT 	@p_dt_mov_str 	= CASE WHEN @p_selo_status = '4' THEN CONVERT(VARCHAR, @p_dt_mov_arq, 112)  ELSE CONVERT(VARCHAR(8), CONVERT(DATETIME, SUBSTRING(@p_linha, 1,6)),112) END
				,@p_hh_mm  			= CASE WHEN @p_selo_status = '4' THEN @p_hh_mm_arq ELSE SUBSTRING(@p_linha, 7,6) END
				,@p_dt_mov 			= @p_dt_mov_str + ' ' + SUBSTRING(@p_hh_mm,1,2) + ':' +  SUBSTRING(@p_hh_mm,3,2) + ':' + SUBSTRING(@p_hh_mm,5,2)
		        
			--   Validando o Número do Selo 
			IF ISNUMERIC(SUBSTRING(@p_nro_selo,3,7)) = 0 
			BEGIN
			    INSERT INTO pax_selos_arquivo_log_processo
			    VALUES (@p_linha, @p_arquivo, GETDATE(), 'O Registro nao é um número válido, Favor Verificar')
			    SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
			    GOTO NEXT
			END
			
			-- Validando a natureza
	        IF @p_tp_natureza NOT IN ('D','I','S') 
	        BEGIN
	            INSERT INTO pax_selos_arquivo_log_processo
	            VALUES (@p_linha, @p_arquivo, GETDATE(), 'A natureza nao é válida, favor verificar')
	            SELECT @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
	            GOTO NEXT
	        END
			 
	        --   Trabalhando com as regras Prevista 
	        --   Validacao para qualquer tipo de status 
	        --   A regra (a) de todos os tipos de selos_status estao aqui abaixo 
	        
			SET @v_ano_remesa	= year(@p_dt_mov) - 1
			
			SELECT 	TOP 1
				@cd_aerop 				= cd_aerop 
				,@p_billing_line_id 	= billing_line_id 
				,@p_tp_fat				= tp_fat
				,@interno_selo_status  	= selo_status
				,@interno_dt_mov       	= dt_mov
				,@v_ano_remesa			= ano_remesa
			FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)  
			WHERE nro_selo 				= @p_nro_selo
				AND ano_remesa			<= @v_ano_remesa		
				AND selo_status			= '1'
			ORDER BY ano_remesa 
				
			IF @@ROWCOUNT = 0
			BEGIN
				/* VERIFICAR SE O SELO E DA REMESA DO ANO ACTUAL*/
				SET @v_ano_remesa	= year(@p_dt_mov)
				
				/* VERIFICAR SE O SELO EXISTE */
				SELECT 	@cd_aerop 			= cd_aerop 
					,@p_billing_line_id 	= billing_line_id 
					,@p_tp_fat				= tp_fat
					,@interno_selo_status  	= selo_status
					,@interno_dt_mov       	= dt_mov
				FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)  
				WHERE nro_selo 				= @p_nro_selo
				AND ano_remesa				= @v_ano_remesa				
				
		        IF @@ROWCOUNT = 0
		        BEGIN
		            SELECT @msg = '1', @p_selo_status_ind = 'E'
		            EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
		                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
		            SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
		            GOTO NEXT
		        END 
			END
			
			-- VALIDA SE É UM SELO DE TESTE (SOLIMAR 29/10/2004)
			IF @interno_selo_status = '7'
			BEGIN
		                SELECT @msg = 'TODOS:T', @p_selo_status_ind = 'E' 
		                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
		                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
		                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
		                GOTO NEXT
			END				
			
            -- VALIDAR SI JA FOI FATURADO OU SE TEM  BOLETO GERADO
            IF @p_billing_line_id <> 0 AND @p_tp_fat = 'F'
            BEGIN
                SELECT @msg = '8', @p_selo_status_ind = 'E'
                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
            END
			
            --  VALIDAR SI NRO_RSTE ESTA CONCLUIDO
            SELECT @p_cd_situacao_rste 	= B.cd_situacao_rste 
                   ,@p_nro_rste 		= B.nro_rste
			FROM GEACupax..pax_entrega_selo_line_u A (NOLOCK INDEX = ix_consulta)
			INNER JOIN GEACupax..pax_entrega_selo_ctrl_u B (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
            ON B.cd_aerop 			= A.cd_aerop
                AND B.cd_terminal 	= A.cd_terminal
                AND B.dt_entrega  	= A.dt_entrega
                AND B.hh_entrega  	= A.hh_entrega
                AND B.cd_cia_aerea 	= A.cd_cia_aerea
                AND B.nro_rste		= A.nro_rste
            WHERE A.cd_aerop 		= @cd_aerop
                AND (A.nro_selo_inicial <= @p_nro_selo and  A.nro_selo_final >= @p_nro_selo)
				and B.ano_remesa		= @v_ano_remesa	
				AND B.cd_situacao_rste 	= '1'
			
            IF @@ROWCOUNT = 0 
            BEGIN
                SELECT @msg = '5', @p_selo_status_ind = 'E'
                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
            END
			
           	--  Regra 12
           	--   As Regras (b),(e),(f),(g) sao iguais para todos os demais selos Status 
				
           	--   SubRegra (b) 
            
			-- VALIDA A DATA DO MOVIMENTO. NÃO PODE SER ANTERIOR À DATA DO ÚLTIMO MOVIMENTO DO SELO ( MRP 12/11/2003 )
			IF ( @p_dt_mov < @interno_dt_mov  )
        	BEGIN
                SELECT @msg = '11', @p_selo_status_ind = 'E'
                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
                                  , @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
        	END
				
			IF ( @p_dt_mov > @p_date_process  )        	BEGIN
                SELECT @msg = '10' ,@p_selo_status_ind = 'E'                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
        	END
			
            IF @interno_selo_status = '0'
            BEGIN
                SELECT @msg = '2' ,@p_selo_status_ind = 'E'
                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
            END 
        	
            --   SubRegra (e) 
            IF @interno_selo_status = '4'
            BEGIN
                SELECT @msg = '6',@p_selo_status_ind = 'E'
                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
            END 
            
            --   SubRegra (f) 
            IF @interno_selo_status = '5'
            BEGIN
                 SELECT @msg = '3',@p_selo_status_ind = 'E'
                 EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                            @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                 SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                 GOTO NEXT
            END 
            
           --   SubRegra (g) 
            IF @interno_selo_status = '9'
            BEGIN
                SELECT @msg = '4',@p_selo_status_ind = 'E'
                EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                GOTO NEXT
            END 
                        
            --   Utilizaçao 
            IF @p_selo_status = '2'
            BEGIN
                --   SubRegra (c)
                IF @interno_selo_status = '2' 
                BEGIN
                    SELECT @msg = '7',@p_selo_status_ind = 'E'
                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                                @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                    GOTO NEXT
                END 
               
                --   SubRegra (d)
                IF @interno_selo_status = '3'
                BEGIN
                    SELECT @msg = '4',@p_selo_status_ind = 'E'
                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                                    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                    GOTO NEXT
                END 
            END 
			
            --   Devoluçao
            IF @p_selo_status = '3'
            BEGIN
               --   SubRegra (c) 
                IF @interno_selo_status = '2'
                BEGIN
                    SELECT @msg = '7',@p_selo_status_ind = 'E'
                    EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
                                                @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
                    SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
           			GOTO NEXT
           		END 
				
				--  SubRegra (d) 
				IF @interno_selo_status = '3'
				BEGIN
					SELECT @msg = '12',@p_selo_status_ind = 'E'
					EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
					    @p_nro_selo, @p_selo_status_ind, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
					SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
					GOTO NEXT
				END 
			END     
			
			--  Cancelamento 
			IF @p_selo_status = '4'
			BEGIN
				--  SubRegra (d)
				IF @interno_selo_status = '3'
				BEGIN
					SELECT @msg = '12', @p_selo_status_ind = 'E'
					EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
					@p_nro_selo, '', '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
					SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
					GOTO NEXT
				END 
				
				
				IF @interno_selo_status = '4'
				BEGIN
					SELECT @msg = 'SS4:4', @p_selo_status_ind = 'E'
					EXEC gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status,
					@p_nro_selo, '', '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @p_date_process, @p_user_process
					SELECT @nr_total_selos_discrep = @nr_total_selos_discrep + 1
					GOTO NEXT
				END 
				
				IF @interno_selo_status = '2'
				BEGIN
					SET @p_dt_mov = @interno_dt_mov
				END
				
				IF @interno_selo_status IN ('0', '1', '3')
				BEGIN
					SET @p_dt_mov = CONVERT(VARCHAR, @p_dt_mov_arq, 112) + ' 23:59:00.000'
				END
			END     
			
	        --  BUSCAR EL ITEM    
	       	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	        FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	        WHERE cd_aerop      		= @p_cd_aerop 
	            AND cd_terminal     	= @p_cd_terminal 
	            AND tp_natureza     	= @p_tp_natureza 
	            AND dt_vigencia			<= @p_dt_mov
	            AND inactive_ind		= '0'
	        ORDER BY   dt_vigencia DESC
			
	        --  Caso esteja tudo correto o processo atualiza o status do selo como utilizado 
	        UPDATE GEACupax..pax_selo_u
	        SET
                	cd_aerop_utilizacao     	= @p_cd_aerop
                	,cd_terminal_utilizacao  	= @p_cd_terminal       
        	,dt_mov                  	= @p_dt_mov
                	,item_fat					= CASE WHEN tp_fat = 'F' THEN @p_item_fat ELSE item_fat END
                	,selo_status             	= @p_selo_status       
                	,cd_motivo             		= @p_cd_motivo  
                	,tp_coletor  				= @p_tp_coletor        
                	,date_changed				= @p_date_process
                	,user_id_changed			= @p_user_process
                	,chgstamp					= chgstamp + 1
	        WHERE 
	                nro_selo      		= @p_nro_selo          
					AND ano_remesa		= @v_ano_remesa
	                AND tp_natureza  	= @p_tp_natureza     
			
	        IF @p_selo_status = '3'
	        BEGIN
	            SELECT @p_cd_cia_aerea = cd_cia_aerea 
				FROM GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)  
				WHERE nro_selo 		= @p_nro_selo
				and ano_remesa		= @v_ano_remesa
	            INSERT INTO #TABLE_DEV  VALUES(@p_cd_cia_aerea, @p_nro_selo)
	        END			
	        SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1  
		
		END
		/*SELO ELETRÔNICO*************************************************************************************************************************************************************/	
		ELSE -- SELO ELETRÔNICO ( MRP 20/11/2003 )
		BEGIN
		    -- Busca dados do selo na linha do arquivo
		    SELECT 	@p_nro_selo_elec 				= SUBSTRING (@p_linha, 11, 20)
		    		,@p_tp_natureza 				= SUBSTRING (@p_linha, 11, 1)
		    		,@p_dt_mov_str 					= '20' + SUBSTRING (@p_linha, 1, 6) -- data da leitura feita no coletor Lenox
		    		,@p_hh_mm 						= SUBSTRING (@p_linha, 7, 4) + '00' -- hora da leitura feita no coletor Lenox
					,@int_insert_discrepancia 		= 0
					,@w_cd_aerop					= SUBSTRING (@p_nro_selo_elec, 8, 4)
					,@w_cd_terminal					= '1' -- FIXO (VERIFICAR)
					,@w_prefixo_cia_aerea 			= SUBSTRING (@p_nro_selo_elec, 2, 2)

		    -- Busca a cia aérea
		    SELECT @w_cd_cia_aerea 	= LTRIM(RTRIM(cd_cia_aerea))
			FROM GEACutcx..cor_cia_aerea_u (NOLOCK INDEX = ix_sigla_iata)
			WHERE sigla_iata = @w_prefixo_cia_aerea 
              AND inactive_ind = 0
			
		    -- VALIDA A CIA AÉREA
		    IF ( @w_cd_cia_aerea = '' OR @w_cd_cia_aerea IS NULL)
		    BEGIN
				SELECT @msg = 'Prefixo da companhia aérea inválido. Favor verificar: ' + @w_prefixo_cia_aerea  
				PRINT @msg
				SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia				= '9'
                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				GOTO NEXT
		    END
	
		    -- VALIDA A NATUREZA
		    IF @p_tp_natureza NOT IN ('D','I','S') 
		    BEGIN
				SELECT @msg = 'A natureza não é válida, favor verificar: ' + @p_tp_natureza
				PRINT @msg
				SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia				= '10'
                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				GOTO NEXT
		    END
	    
		    -- VALIDA A DATA DO MOVIMENTO
		    IF ISDATE(@p_dt_mov_str) = 0
		    BEGIN
				SELECT @msg = 'A data não é válida, favor Verificar: ' + @p_dt_mov_str
				PRINT @msg
				SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia				= '4'
                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				GOTO NEXT
		    END
		    ELSE
		    BEGIN
				SELECT @p_dt_mov = @p_dt_mov_str + ' ' + SUBSTRING(@p_hh_mm,1,2) + ':' +  SUBSTRING(@p_hh_mm,3,2) + ':' + SUBSTRING(@p_hh_mm,5,2)
		    END 

				SELECT @w_voo_rea			= SUBSTRING (@p_nro_selo_elec, 4, 4)
					,@w_dt_voo_rea		= @p_dt_mov_str
					,@w_hh_voo_rea		= '000000'

	
		    -- Busca o item associado ao aeroporto
		    Select
			      @w_item_fat = item_id
		    From
			      GEACutcx..cor_item_pax_u (NOLOCK INDEX = P_cor_item_pax_u)
		    Where
		      cd_aerop 		= @p_cd_aerop And --antes do dia 13/09/2004 fazia busca pela variável @w_cd_aerop
		      cd_terminal 	= @p_cd_terminal And  --antes do dia 13/09/2004 fazia busca pela variável @w_cd_terminal
		 tp_natureza 	= @p_tp_natureza And
		      dt_vigencia 	= ( Select Max (dt_vigencia) From GEACutcx..cor_item_pax_u  (NOLOCK INDEX  = P_cor_item_pax_u)
					      Where	cd_aerop 	= @p_cd_aerop 	And  --antes do dia 13/09/2004 fazia busca pela variável @w_cd_aerop
							cd_terminal 	= @p_cd_terminal And  --antes do dia 13/09/2004 fazia busca pela variável @w_cd_terminal
							tp_natureza 	= @p_tp_natureza And
							dt_vigencia 	<=  @p_dt_mov )
	
		    IF ( @@ROWCOUNT = 0 ) OR ( @w_item_fat IS NULL ) 
		    BEGIN
				SELECT @msg = 'Não encontrou item para faturar para: ' + @p_cd_aerop + ' - ' + @p_cd_terminal + ' - ' + @p_tp_natureza
				PRINT @msg
				SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia		= '6'
                			SELECT @nr_total_selos_discrep 	= @nr_total_selos_discrep + 1
				GOTO NEXT
		    END
	
		    -- VERIFICA SE O SELO JÁ EXISTE
		    SELECT @w_selo_status_aux		= ISNULL(selo_status, NULL) 
				,@w_tp_coletor_aux	= ISNULL(tp_coletor, NULL)
				,@w_dt_confirma_aux	= dt_confirma
				,@p_dt_temp 		= DATEADD (hh, 12, dt_mov )
				,@w_aerop_utilizacao	= cd_aerop_utilizacao
				,@w_billing_line_id	= billing_line_id -- 14/09/2004
			FROM  GEACupax..pax_selo_elec_u (NOLOCK INDEX = PK_pax_selo_elec_u)
			WHERE  nro_selo_elec = @p_nro_selo_elec 

			IF @@ROWCOUNT > 0
--			IF @w_selo_status_aux IS NOT NULL
		    	BEGIN
				-- início inclusão em 14/09/2004
				IF @w_billing_line_id <> 0
				BEGIN
				    SELECT @msg = 'Selo já foi faturado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
				    PRINT @msg
				    SELECT @int_insert_discrepancia 	= 1 
						,@w_discrepancia	= '2'
		                		,@nr_total_selos_discrep= @nr_total_selos_discrep + 1
				    GOTO NEXT
				END
				-- fim inclusão em 14/09/2004

				IF  @w_selo_status_aux = '2' 
				BEGIN
                    				/*comentado por Solimar 17/06/2004
					IF @p_dt_mov > @p_dt_temp  AND @w_tp_coletor_aux = '01' 
				             BEGIN                     
						SELECT @msg = 'Hora de utilização do selo passa das doze horas permitidas: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '13'
				                	SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						GOTO NEXT

					END		

					IF @w_tp_coletor_aux = '01' AND @w_dt_confirma_aux = '19000101'
					BEGIN
						SELECT @msg = 'Selo já utilizado: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '1'
		                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						GOTO NEXT
					END

					IF @w_tp_coletor_aux = '01' AND @w_dt_confirma_aux <> '19000101'
					BEGIN
						SELECT @msg = 'Selo já confirmado: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '7'
		                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						GOTO NEXT
					END*/

					--incluído por Solimar
					IF @p_dt_mov > @p_dt_temp  AND @w_tp_coletor_aux = '01' 
		             BEGIN                     
						SELECT @msg = 'Selo já utilizado: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '1'
				                	SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						GOTO NEXT

					END	

					--incluído por Solimar, 20/08/2004, devido leitura indevida feita em SBBR, sendo selo já confirmado em SBRF
					IF @w_dt_confirma_aux <> '19000101' AND @w_aerop_utilizacao <> @p_cd_aerop
					BEGIN                     
						SELECT @msg = 'Selo já confirmado em outro aeroporto: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia		= '7'
				                	SELECT @nr_total_selos_discrep 	= @nr_total_selos_discrep + 1
						GOTO NEXT

					END	
					ELSE
					BEGIN
						UPDATE GEACupax..pax_selo_elec_u
						SET tp_coletor 			= CASE WHEN tp_coletor = '9' THEN '01' ELSE tp_coletor END
							,dt_mov			= @p_dt_mov --(Solimar 16/09/2004) antes @w_dt_voo_rea
							,cd_aerop_utilizacao 	= @p_cd_aerop	 --(Solimar 06/08/2004)
							,cd_terminal_utilizacao	= @p_cd_terminal --(Solimar 06/08/2004)
							,item_fat 		= @w_item_fat	--(Solimar 23/08/2004)
							,date_changed		= @p_date_process
							,user_id_changed	= @p_user_process
							,chgstamp			= chgstamp + 1
						WHERE nro_selo_elec 	= @p_nro_selo_elec
						
						SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1  
						GOTO NEXT
					END
				END

				IF @w_selo_status_aux = '4' 
				BEGIN
					SELECT @msg = 'Selo já cancelado: ' + @p_nro_selo_elec
					PRINT @msg
					SELECT @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '8'
	                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					GOTO NEXT
				END

				IF @w_selo_status_aux = '5' 
				BEGIN
					/* trecho excluído 06/08/2004
					IF @w_tp_coletor_aux <> '9' 
					BEGIN
						SELECT @msg = 'Selo já foi transferido: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '12'
		                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						GOTO NEXT*/
					--trecho incluído 06/08/2004
					IF @w_tp_coletor_aux = '01' 
					BEGIN
						SELECT @msg = 'Selo já utilizado: ' + @p_nro_selo_elec
						PRINT @msg
						SELECT @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '1'
		                			SELECT @nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						GOTO NEXT
					--fim trecho incluído 06/08/2004
					END
					ELSE
					BEGIN
						UPDATE GEACupax..pax_selo_elec_u
						SET tp_coletor 			= '01'
							,dt_mov			= @p_dt_mov --(Solimar 16/09/2004) antes @w_dt_voo_rea
							,cd_aerop_utilizacao 	= @p_cd_aerop	 --(Solimar 06/08/2004)
							,cd_terminal_utilizacao	= @p_cd_terminal --(Solimar 06/08/2004)
							,item_fat 		= @w_item_fat	--(Solimar 23/08/2004)
							,date_changed		= @p_date_process
							,user_id_changed	= @p_user_process
							,chgstamp			= chgstamp + 1
						WHERE nro_selo_elec 	= @p_nro_selo_elec

						SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1  
						GOTO NEXT
					END
				END
			END	

		    --  Caso esteja tudo correto, insere na tabela de selo eletrônico como utilizado
		    INSERT INTO GEACupax..pax_selo_elec_u (
				nro_selo_elec,        
				tp_natureza, 
				dt_mov,                                                 
				selo_status, 
				cd_motivo, 
				tp_fat, 
				cd_cia_aerea, 
				tp_unid, 
				cd_aerop, 
				cd_terminal, 
				tp_unid_destino, 
				cd_aerop_destino, 
				cd_terminal_destino, 
				dt_confirma,                                            
				cd_aerop_utilizacao, 
				cd_terminal_utilizacao, 
				nfm,                  
		
				nro_rste, 
				tp_coletor,       
				item_fat,                   
				billing_line_id, 
				billing_int_date,                                       
				billing_int_type, 
				billing_user_1, 
				voo_rea,
				dt_voo_rea,
				hh_voo_rea,
				date_created,                                           
				user_id_created,                
				date_changed,                                           
				user_id_changed,                
				inactive_ind, 
				active_date,                                            
				chgstamp) 
		    VALUES (
				@p_nro_selo_elec,        
				@p_tp_natureza, 
				@p_dt_mov,                                                 
				'2', 			-- UTILIZADO
				'', 
				'F', 
				@w_cd_cia_aerea, 
				'A', 			-- Unidade
				@w_cd_aerop, 
				@w_cd_terminal, 
				'A',  			-- Unidade Destino
				'',   			-- Aeroporto Destino (cd_aerop_destino)
				'',   			-- Terminal Destino (cd_terminal_destino)
				'19000101', 	-- Data de confirmação                                       
				--'',			-- Aeroporto Utilização (06/08/2004 Solimar)
				--'', 			-- Terminal Utilização (06/08/2004 Solimar)
				@p_cd_aerop, 		-- Aeroporto Utilização (06/08/2004 Solimar)
				@p_cd_terminal,	-- Terminal Utilização (06/08/2004 Solimar)
				'',                  
				'', 
				@p_tp_coletor,
				@w_item_fat,                 
				0, 				-- billing_line_id
				'19000101', 	-- billing_int_date
				'',				-- billing_int_type, 
				'',				-- billing_user_1
				@w_voo_rea,
				@w_dt_voo_rea,
				@w_hh_voo_rea,

				@p_date_process,                                           
				@p_user_process,                
				'19000101', 	-- date_changed
				'',				-- user_id_changed
				0, 				-- inactive_ind
				@p_date_process,-- active_date
				0) 
	
		    SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1  

		END

        NEXT:
		IF @int_insert_discrepancia = 1
		BEGIN
			EXEC psp_insert_disc_selo_elec 
			@p_cd_aerop
			,@p_cd_terminal
			,@p_dt_mov
			,@p_selo_status
			,@p_nro_selo_elec
			,'E'
			,@w_cd_cia_aerea
			,@w_discrepancia
			,' '
			,@p_arquivo
			,@p_tp_coletor
			,@p_date_process
			,@p_user_process
			,'19000101'
			,' '
			,'0'
			,@p_date_process
			,0

			SET @int_insert_discrepancia = 0

		END

        FETCH NEXT FROM selos_cur
        INTO @p_linha

    END

    CLOSE selos_cur
    DEALLOCATE selos_cur

    UPDATE GEACupax..pax_baixa_selo_u 
    SET status_arq   		= '1'
		,qtd_selos   		= @nr_total_selos_validos
		,qtd_lineas_arq		= @nr_total_lineas_arq
		,qtd_discrepancias	= @nr_total_selos_discrep
		,qtd_lineas_erro	= @nr_total_selos_invalidos
		,qtd_duplicados		= @nr_qtd_duplicados
		,date_changed   	= @p_date_process
		,user_id_changed  	= @p_user_process

    WHERE  cd_aerop 		= @p_cd_aerop
        AND cd_terminal 	= @p_cd_terminal
        AND dt_mov  		= @p_dt_mov_arq
        AND hh_mm  			= @p_hh_mm_arq
        AND arquivo			= @p_arquivo
        
    SEGUIR:

    IF @int_error = 0
    BEGIN
        -- SI ES UNA DEVOLUSAO, CREAR EL REGISTRO EN LA ACTIVIDAD DE DEVOLUCOES.
        IF @p_selo_status = '3'
        BEGIN
            DECLARE @p_cd_cia_aerea_aux	CHAR(3)
                ,@p_nro_selo_ant		CHAR(10)
                ,@p_nro_selo_inicial	CHAR(10)
                ,@p_nro_selo_final		CHAR(10)
                ,@p_crear_linea			INT
                ,@p_nro_rdev_number		INT
				,@p_nro_rdev			CHAR(6)

                ,@p_qtd_selos			INT 
                ,@p_max_nro_selo		CHAR(10)
        
        
                -- CREAR LOS HEADERS
            DECLARE cur_cia CURSOR FOR
            SELECT DISTINCT(cd_cia_aerea)
            FROM #TABLE_DEV ORDER BY 1
                    
            OPEN cur_cia 
            FETCH NEXT FROM cur_cia INTO @p_cd_cia_aerea_aux
            
            WHILE @@FETCH_STATUS = 0
            BEGIN
                SELECT @p_nro_rdev_number = ISNULL(MAX(STR(nro_rdev)) + 1, 1) 
                FROM pax_dev_selo_ctrl_u (NOLOCK INDEX = P_pax_dev_selo_ctrl_u)
                WHERE cd_aerop		= @p_cd_aerop
                AND cd_terminal		= @p_cd_terminal
                AND cd_cia_aerea	= @p_cd_cia_aerea_aux

                SELECT @p_nro_rdev = RIGHT(CONVERT(CHAR(7), 1000000 + @p_nro_rdev_number),6)
                
                INSERT INTO pax_dev_selo_ctrl_u VALUES (
                           @p_cd_aerop
                           ,@p_cd_terminal
                           ,CONVERT(VARCHAR,@p_dt_mov,112) 
                           ,@p_cd_cia_aerea_aux
                           ,@p_nro_rdev
                           ,@p_arquivo 
                           ,@p_date_process
                           ,@p_user_process
                           ,'19000101'
                           ,' '
                           ,'0'
                           ,'19000101'
           ,0 )
                     
                -- CREAR LINEAS PARA CADA HEADER CREADO EL HEADER
                DECLARE cur_cia_selo CURSOR FOR
                SELECT nro_selo
                FROM #TABLE_DEV 
                WHERE cd_cia_aerea = @p_cd_cia_aerea_aux
                ORDER BY 1
                 
                SELECT @p_max_nro_selo = MAX(nro_selo) FROM #TABLE_DEV WHERE cd_cia_aerea = @p_cd_cia_aerea_aux
                
                OPEN cur_cia_selo 
                FETCH NEXT FROM cur_cia_selo INTO @p_nro_selo
                
                IF @@FETCH_STATUS = 0 
                BEGIN
                    SELECT @p_cd_cia_aerea_ant 	= @p_cd_cia_aerea_aux
                    ,@p_nro_selo_inicial		= @p_nro_selo
                    ,@p_nro_selo_ant			= @p_nro_selo
                END 
                
                WHILE @@FETCH_STATUS = 0
                BEGIN
                    IF (@p_nro_selo <> @p_nro_selo_ant)
                    BEGIN
                        IF (SUBSTRING(@p_nro_selo,1,2) <> SUBSTRING(@p_nro_selo_ant,1,2)) 
							OR (CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo)), 7)) <> CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_ant)), 7)) + 1 )
                           	OR (@p_max_nro_selo = @p_nro_selo)
                        BEGIN

                            IF (@p_max_nro_selo = @p_nro_selo) 
							AND ((CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo)), 7)) = CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_ant)), 7)) + 1 ))
                                SELECT @p_nro_selo_final 	= @p_nro_selo
                            ELSE
                                SELECT @p_nro_selo_final 	= @p_nro_selo_ant
                          
                            SELECT @p_crear_linea	= 1
                        END 
                    END 
                    
                    IF @p_crear_linea	= 1
                    BEGIN
                        SELECT @p_qtd_selos = CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_final)),7)) - CONVERT(INT, RIGHT(LTRIM(RTRIM(@p_nro_selo_inicial)),7)) + 1
                        INSERT INTO pax_dev_selo_line_u VALUES (
                           @p_cd_aerop
                           ,@p_cd_terminal
                           ,CONVERT(VARCHAR,@p_dt_mov,112)
                           ,@p_cd_cia_aerea_aux
                           ,@p_nro_rdev
                           ,@p_nro_selo_inicial
                           ,@p_nro_selo_final
                           ,@p_qtd_selos
                           ,@p_date_process
                           ,@p_user_process
                           ,'19000101'
			                ,SPACE(1)
                           ,'0'
                           ,'19000101'
                           ,0)

						
		UPDATE  pax_selo_u
		SET       	 
			tp_fat			= ' '
			,cd_motivo		= ' '
			,cd_cia_aerea		= ' '
--			,selo_status		= '0' --substituído por Solimar em 28/10/2004
			,selo_status		= '3'
			,item_fat		= ' '
--			,nro_rste		= ' ' --substituído por Solimar em 28/10/2004
			,nro_rste		= @p_nro_rdev
			,date_changed		= @p_date_process
			,user_id_changed	= @p_user_process	
			,dt_mov			= CASE WHEN CONVERT(VARCHAR, dt_confirma,112) = '19000101' THEN date_created ELSE dt_confirma END
			,chgstamp		= chgstamp + 1
		FROM  
			pax_selo_u 
		WHERE nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
			and ano_remesa			= @v_ano_remesa
			and selo_status 		<> '2'
			and billing_line_id		= 0
						

        SELECT @p_nro_selo_inicial 	= @p_nro_selo
               	,@p_crear_linea		= 0

        END
                
                    SELECT @p_nro_selo_ant = @p_nro_selo
                    -- LEER NUEVO SELO
                    FETCH NEXT FROM cur_cia_selo INTO @p_nro_selo
                END

				IF @p_nro_selo_ant <> @p_nro_selo_final
				BEGIN
					--PRINT 'CREAR NUEVA LINEA'
	                INSERT INTO pax_dev_selo_line_u VALUES (
	                  @p_cd_aerop
	          ,@p_cd_terminal
	                       ,CONVERT(VARCHAR,@p_dt_mov,112)
	                       ,@p_cd_cia_aerea
	                       ,@p_nro_rdev
	                       ,@p_max_nro_selo
	                       ,@p_max_nro_selo
	                       ,1
	                       ,@p_date_process
	                       ,@p_user_process
	                       ,'19000101'
	                       ,SPACE(1)
	                       ,'0'
	                       ,'19000101'
	                       ,0)
				END


                CLOSE cur_cia_selo
                DEALLOCATE cur_cia_selo

              
                -- LEER NUEVO HEADER
                FETCH NEXT FROM cur_cia INTO @p_cd_cia_aerea_aux
            END
        
            CLOSE cur_cia 
            DEALLOCATE cur_cia 

			-- colocar los selos disponibles			

            DROP INDEX #TABLE_DEV.IX_NRO_SELO 
            DROP TABLE #TABLE_DEV 

       END

       COMMIT TRANSACTION 
       SELECT @msg 	= 'FIM PROCESO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(10) + CHAR(13)
       SELECT @copy 	= 'copy \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\DriveF\Selo_procesado'
       EXEC master..xp_cmdshell @copy
       SELECT @copy 	= 'DEL \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
       EXEC master..xp_cmdshell @copy

    END
    ELSE
    BEGIN
		ROLLBACK TRANSACTION
		IF @error_bcp				= 1
			SELECT @v_status_arq	= '3'
		ELSE
			SELECT @v_status_arq	= '2'

		UPDATE GEACupax..pax_baixa_selo_u 
        SET status_arq   			= @v_status_arq
			,qtd_selos   			= @nr_total_selos_validos
			,qtd_lineas_arq			= @nr_total_lineas_arq
			,qtd_discrepancias		= @nr_total_selos_discrep
			,qtd_lineas_erro		= @nr_total_selos_invalidos
			,date_changed   		= @p_date_process
			,user_id_changed  		= @p_user_process
       WHERE cd_aerop  				= @p_cd_aerop
		AND cd_terminal  			= @p_cd_terminal
		AND dt_mov  				= @p_dt_mov_arq
		AND hh_mm  					= @p_hh_mm_arq
		AND arquivo					= @p_arquivo


	
		IF @error_bcp				= 1
		BEGIN
			SELECT @msg 	= 'ARQUIVO COM ERROR DE CARGA DE TABLA TEMPORAL (BCP): ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + 'Verificar pasta "Selo_erroes_BCP"'
	             ,@copy 	= 'copy \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\DriveF\Selo_erroes_BCP'
		END
		ELSE
		BEGIN
			SELECT @msg 	= 'ARQUIVO COM ERROR: ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + 'Verificar pasta "Selo_erroes"'
	             ,@copy 	= 'copy \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\DriveF\Selo_erroes'
		END

		EXEC master..xp_cmdshell @copy

		SELECT @copy 	= 'DEL \\S-SEAN217\DriveF\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
		EXEC master..xp_cmdshell @copy

    END
    
    SELECT @msg =  CHAR(10)+ CHAR(13)
    PRINT @msg 

	PROXIMO_ARQUIVO:

    --  LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
    FETCH  NEXT FROM  cur_arq
    INTO  @p_cd_aerop 
		,@p_cd_terminal 
		,@p_dt_mov_arq       
		,@p_hh_mm_arq   
		,@w_tp_selo
		,@p_selo_status   
		,@p_arquivo        
		,@p_cd_motivo     
		,@p_status_arq   
		,@p_tp_coletor

END
CLOSE   cur_arq
DEALLOCATE cur_arq

-- ELIMINAR TABLAS TEMPORALES
DROP TABLE #TEMP

SET NOCOUNT OFF
RETURN 0







GO

/****** Object:  StoredProcedure [dbo].[gsp_valida_ins_selos_conf_ii]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_valida_ins_selos_conf_ii    Script Date: 19/09/2008 15:20:05 ******/







CREATE PROCEDURE  [dbo].[gsp_valida_ins_selos_conf_ii]
		( @p_arquivo		varchar(255) = '%')
AS


/*
drop proc gsp_valida_ins_selos_conf_ii 
gsp_procura_arq_conf_selos_e

gsp_valida_ins_selos_conf_ii 'RG061206045000-2127SBPA.TXT'

06/04/2004 : JOSE MUÑOZ
CAMBIO EN LA ESTRUCTURA DE LOS ARCHIVOS RECIBIDOS E IMPLEMENTACION DE NUEVAS REGLAS
02/07/2004 : SOLIMAR (complementações de mensagens na ocorrência de erros e 
preenchimento efetivo dos campos de aeroporto e terminal de utilização, vôo realizado, data 
e hora do vôo realizado)
31/08/2004 : SOLIMAR (inclusão da variável @error_bcp e controle de erros do comando bcp)

11/12/2004: JOSE MUÑOZ
CAMBIO PARA PERMITIR EL PROCESO DE LOS SELOS ELECTRONICOS DE 10 DIGITOS
dbo.gsp_procura_arq_conf_selos_e

gsp_valida_ins_selos_conf_ii 'WJ050712064500-9700SBGL.txt'

28/09/2006 : JOSE MUÑOZ
- colocar empresa ONE para processar os arquivos.

27/02/2008 : JOSE MUÑOZ
- colocar empresa TIB para processar os arquivos.

22/04/2008 : JOSE MUÑOZ
- colocar empresa SLX para processar os arquivos.

17/12/2008: Adaili Dias
- Incluida Cia aerea AZUL - cd_cia_aerea: AZL - sigla_iata: AD

12/01/2009: Adaili Dias
- Alterada Cia aerea AZUL - cd_cia_aerea: AZU - sigla_iata: AD
E-MAIL: Lawrence Pinto/SEDE/INFRAERO 12/01/2009 09:45

*/

set nocount on

-- DECLARACION DE VARIABLES 
declare
	 @p_linha   				varchar(255)   
	,@p_date_process			datetime
	,@p_user_process 			char(30)
	,@p_execute       			varchar(255)
	,@nr_total_selos_invalidos 	real
	,@msg          				varchar (200)
	,@nr_total_selos_validos    real
	,@copy    					varchar (255)
	,@int_error                 integer
    ,@fl_habilitado 			char(1)
	,@w_voo_rea					char(4)
	,@w_dt_voo_rea				datetime
	,@w_hh_voo_rea				char(6)
	,@w_status_actual			char(1)
	,@w_natureza 				char (1)
	,@w_nro_voo  				char (4)
	,@w_cd_aerop 				char (4)
	,@w_cd_terminal				char (1)
	,@w_dt_voo   				char (6)
	,@w_hr_voo   				char (4)
	,@w_status   				char (1)
	,@w_dt_confirma				datetime
	,@w_item_fat 				char (26)
	,@w_cd_aerop_utilizacao 	char (4)
	,@w_cd_terminal_utilizacao 	char (1)
	,@w_billing_line_id			int
	,@w_cd_cia_aerea			char (3)
	,@w_dt_arquivo				datetime
	,@w_arquivo					char (255)
	,@w_qtd_selos				int
	,@w_status_arq				char (1)
	,@w_keep_file 				int
	,@w_dt_mov_str				char (30)
	,@w_dt_mov					datetime
	,@w_status_selo 			char (1)
	,@w_count					integer
	,@w_tp_linea				char(1)
	,@w_cont_linea				integer
	,@w_data_hotran				datetime
	,@w_hora_hotran				char(6)
	,@w_voo_arquivo				char(4)
	,@w_discrepancia			char(1)
	,@int_insert_discrepancia	integer
	,@w_chgstamp				integer
	,@error_bcp					smallint
	,@v_len_linea				smallint
	,@w_nro_selo 				char (14)
	,@v_tp_selo					char(2)
	,@v_rowcount				smallint
	,@v_cd_cia_aerea			char(2)
	,@v_hh_mov					char (6)
	,@v_execute				varchar(255)

select   @p_date_process 	= GETDATE()
	,@p_user_process 		= SUSER_SNAME()


print char(13) + char(10)

-- VERifICAR SI EL PROCESO ESTA HABILITADO
select @fl_habilitado = isnull(descp,'0') 
from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u)
where  tbl_code = 'CSEL'
AND code 		= '1'

if @fl_habilitado = '0' OR @fl_habilitado is null
begin
	set @msg = 'Processo desabilitado. Verificar tabelas genéricas [CSEL]. codigo = 1, Descrição = 0.' + char(13)
	print @msg 
	return 3
end
-- FIM VERifICAR SI EL PROCESO ESTA HABILITADO
-- VERifICA SE REPROCESSAMENTO DE DISCREPÂNCIAS ESTÁ EM EXECUÇÃO
declare @cont int 
exec psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont output
if @cont > 0
begin
    set @msg = 'O reprocessamento de discrepâncias está em execução.'
    print @msg
    return 3
end
-- FIM VERifICA SE REPROCESSAMENTO DE DISCREPÂNCIAS ESTÁ EM EXECUÇÃO


exec psp_verificar_proceso 'gsp_procura_arq_conf_selos_e', @cont output
if @cont > 1
begin
    set @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    print @msg
    return 3
end

-- O processo está bloqueando a si mesmo e fica travado por isso esta sendo comentada a linha baixo. Adaili em 12/07/2006

exec psp_verificar_proceso 'gsp_valida_ins_selos_conf_ii', @cont output
if @cont > 1
begin
    set @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    print @msg
    return 3
end


exec psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont output
if @cont > 0
begin
    set @msg = 'O Processo de criar as requisições se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    print @msg
    return 3
end

exec psp_verificar_proceso 'psp_ins_arq_selo_elec', @cont output
if @cont > 0
begin
    set @msg = 'O Processo de baixa de selos se está executando neste estes momento e estos dois processos não se podem executar simultaneamente.'
    print @msg
    return 3
end


-- CREAR TABLAS TEMPORALES
create table #TEMP (LINEA varchar(255) null)

set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\Tam\Selo\*.* /B'' '
insert into #TEMP 
exec (@v_execute)


set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\Gol\Selo\*.* /B'' ' 
insert into #TEMP 
exec (@v_execute)


set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\Web\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)


set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\VRG\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)

set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\Lap\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)


set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\one\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)

set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\pantanal\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)

set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\trip\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)

set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\sete\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)

set @v_execute = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\Azul\Selo\*.* /B''' 
insert into #TEMP 
exec (@v_execute)


delete from #TEMP where LINEA is null

update #TEMP 
set LINEA = UPPER(LINEA)

--create table pax_selos_table_conf (linha varchar(255))
--GRANT ALL ON pax_selos_table_conf TO geaccarga

-- DECLARACION DE cursor DE ARCHIVOS A PROCESAR
declare cur_arq cursor local STATIC for
select
	cd_cia_aerea,
	dt_arquivo,
	upper(arquivo),
	qtd_selos,
	status_arq
from 
	GEACupax..pax_conf_baixa_selo_u with (nolock index = ix_status_arquivo)
where 
	status_arq 		= '0'
AND arquivo 		like @p_arquivo 
order by substring(arquivo,3,12)

-- ABRIR cursor DE ARCHIVOS A PROCESAR
open cur_arq 

-- PRIMERA LECTURA DEL  cursor DE ARCHIVOS A PROCESAR
fetch  next from cur_arq into @w_cd_cia_aerea, @w_dt_arquivo, @w_arquivo, @w_qtd_selos, @w_status_arq

print 'Inicio'

while @@fetch_status = 0
begin
    -- INDICA SE O ARQUIVO DEVE SER MANTIDO NO DIRETÓRIO DE ORIGEM
    set @w_keep_file = 0

    truncate table pax_selos_table_conf

    begin transaction CONF

    set @msg = 'INÍCIO PROCESSO ARQUIVO : ' + ltrim(rtrim(@w_arquivo)) + char(13) + char(10)
    print @msg 
    print ' '

    select LINEA from #TEMP where ltrim(rtrim(LINEA)) = ltrim(rtrim(@w_arquivo))
    if @@rowcount = 0
    begin
		select @msg = 'Arquivo está como pendente, porém, não foi encontrado na pasta de origem' + char(13) + char(10)
			,@int_error = 1
		goto SEGUIR
    end

    select 	@nr_total_selos_invalidos  	= 0
		,@nr_total_selos_validos    	= 0
		,@int_error 					= 0
		,@error_bcp						= 0
		,@w_cd_aerop_utilizacao 		= substring(@w_arquivo, 20,4)
		,@w_cd_terminal_utilizacao 		= '1'
		,@w_voo_arquivo					= substring(@w_arquivo, 16,4)

    /* -- Tratamento de exceção for da Regra para a empresa TIB (08) EM SBEG -- Adaili Dias em 05/04/2010 --*/
    If @w_cd_aerop_utilizacao = 'SBEG' and @w_cd_cia_aerea = 'TIB' --'08' 
	   Set @w_cd_terminal_utilizacao = '2'

	-- Carrega as linhas do arquivo

	select @p_execute = case 
						when @w_cd_cia_aerea = 'TAM' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\Tam\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'GLO' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\Gol\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'WEB' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\Web\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\Vrg\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'LAP' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\Lap\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'ONE' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\one\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'PTN' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\pantanal\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'TIB' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\trip\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'SLX' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\sete\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						when @w_cd_cia_aerea = 'AZU' then 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\SSH\Azul\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
						else '' end
	select @p_execute
    execute  (@p_execute)
    if @@error <> 0
    begin
		select @msg = 'Erro no comando BCP. ' + @w_cd_cia_aerea
			,@int_error 	= 1
			,@error_bcp 	= 1
		goto SEGUIR
    end

    select @w_count = count(1) from pax_selos_table_conf(nolock)
    if @w_count = 0
    begin
		select @msg = 'Não foi carregado nenhum selo no comando BCP. ' + @w_cd_cia_aerea
			,@int_error = 1
			,@error_bcp = 1
		goto SEGUIR
    end

    -- DECLARA cursor DE SELOS A PROCESSAR
    declare selos_cur cursor local for
    select ltrim(rtrim(linha))
    from pax_selos_table_conf (nolock)
    order by linha
    
    open selos_cur
    
    fetch next from selos_cur
    into @p_linha

	select @w_cont_linea = 0
    
    while @@fetch_status = 0
    begin
--		set @msg = 'Linha de processamento: ' + @p_linha + char (13) + char (10) 
--		print @msg 
	
		select @w_tp_linea				= substring (@p_linha,  1, 1)
			,@w_cont_linea				= @w_cont_linea + 1
			,@int_insert_discrepancia 	= 0
			,@w_discrepancia			= ''
			,@v_tp_selo					= ''
	
		if @w_tp_linea = '0'  -- LINHA DE HEADER
		begin
			if @w_cont_linea > 1
			begin
				select @msg = 'Linha com erro no arquivo: mais de uma linha de cabeçalho.' + char(13) + char(10)
			    	,@int_error = 1
				goto SEGUIR
			end
				
			-- OBTER DATA E HORA DO VÔO
			select @w_hora_hotran = substring (@p_linha,  8, 4) + '00'
				  ,@w_data_hotran = substring (@p_linha,  2, 6) + ' ' + substring (@p_linha,  8, 2) + ':' + substring (@p_linha,  10, 2) + ':00.000'
      end
		if @w_tp_linea = '1'  -- LINHA DE DETALHE
		begin
			if @w_cont_linea < 2
			begin
				select @msg =  'Linha com erro no arquivo: linha de detalhe menor que dois.' + char(13) + char(10)
					,@int_error = 1
				goto SEGUIR
			end

			/* VERifICAR EL TIPO DE SELO 
				20 DIGITOS
				10 DIGITOS  */				

			set @v_len_linea = LEN(@p_linha)

			if @v_len_linea <> 18 AND @v_len_linea <> 22
			begin
				select @msg = 'Linha do arquivo não é válida: ' + @p_linha + char (10) + char (13)
					,@int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '14'
				goto PROXIMO
			end
			else
			begin
				if substring(@p_linha,2,1) <> '*'
				begin
					select @msg = 'Linha do arquivo não é válida: ' + @p_linha + char (10) + char (13)
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '14'
					goto PROXIMO
				end

				if @v_len_linea = 18 /* SELO DE 10 DIGITOS */ 
				begin
					
					select @w_nro_selo 		= substring (@p_linha,  3, 10)
						,@w_natureza 		= case when substring (@p_linha,  3, 1) = '0' then 'D'
											 	   when substring (@p_linha,  3, 1) = '1' then 'I'
												   else	substring (@p_linha,  3, 1) end
						,@w_cd_aerop 		= substring (ltrim(rtrim(@w_arquivo)),20, 4)
						,@w_cd_terminal		= '1'
						,@w_status   		= substring (@p_linha, 13, 1)
						,@w_voo_rea			= @w_voo_arquivo
						,@w_dt_voo_rea		= @w_data_hotran
						,@w_hh_voo_rea		= @w_hora_hotran
						,@v_tp_selo			= '10'
						,@v_cd_cia_aerea	= substring (@p_linha,  4, 2)
					
                    /* -- Tratamento de exceção for da Regra para a empresa TIB (08) EM SBEG -- Adaili Dias em 05/04/2010 --*/
                    If @w_cd_aerop = 'SBEG' and @v_cd_cia_aerea = '08' 
					   Set @w_cd_terminal = '2'

				end
				else  /* SELO DE 14 DIGITOS */
				begin
					
					select @w_nro_selo 		= substring (@p_linha,  3, 14)
						,@w_natureza 		= case when substring (@p_linha,  3, 1) = '0' then 'D'
											 	   when substring (@p_linha,  3, 1) = '1' then 'I'
												   else	substring (@p_linha,  3, 1) end
						,@w_cd_aerop 		= substring (ltrim(rtrim(@w_arquivo)),20, 4)
						,@w_cd_terminal		= '1'
						,@w_status   		= substring (@p_linha, 17, 1)
						,@w_voo_rea			= @w_voo_arquivo
						,@w_dt_voo_rea		= @w_data_hotran
						,@w_hh_voo_rea		= @w_hora_hotran
						,@v_tp_selo			= '14'
						,@v_cd_cia_aerea	= substring (@p_linha,  4, 2)

                    /* -- Tratamento de exceção for da Regra para a empresa TIB (08) EM SBEG -- Adaili Dias em 05/04/2010 --*/
                    If @w_cd_aerop = 'SBEG' and @v_cd_cia_aerea = '08' 
					   Set @w_cd_terminal = '2'

					
					if NOT EXISTS (select 1 from GEACutcx..cor_cia_aerea_u (nolock index = ix_cd_cia_num)
									where cd_cia_num 	= @v_cd_cia_aerea
									AND inactive_ind	= '0')
					begin
						select @msg = 'Cia Aerea não é válida' + @v_cd_cia_aerea + char (10) + char (13)
							,@int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '15'
						goto PROXIMO
					end
				end
						
				if NOT EXISTS (select 1 from GEACutcx..cor_cia_aerea_u (nolock index = ix_cd_cia_num)
								where cd_cia_num 	= @v_cd_cia_aerea
								AND inactive_ind	= '0')
				begin
					select @msg = 'Cia Aerea não é válida' + @v_cd_cia_aerea + char (10) + char (13)
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '15'
					goto PROXIMO
				end
			end
			
			if @w_natureza NOT IN ('D','I')
			begin
				select @msg = 'A natureza não é válida, favor verificar. "' + @w_natureza + '"' + char (10) + char (13)
					,@int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '10'
				goto PROXIMO
			end
				        							
			if @w_status NOT IN ('U','T','C')
			begin
				select @msg = 'status de selo inválido: ' + @w_status + char (10) + char (13)
					,@int_insert_discrepancia 	= 1 
					,@w_discrepancia				= '3'
				goto PROXIMO
			end
			
			if 	@v_tp_selo			= '10'
			begin
				set @w_dt_mov = convert(varchar,@w_data_hotran,112)
-- ALterado por Pedro em 04/01/2006
				if IsDate (@w_data_hotran) = 0 
				begin
					select @msg = 'Data do selo (' + @w_data_hotran + ') inválida: ' + @w_nro_selo + char (10) + char (13)
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '4'
					goto PROXIMO
				end
-- FIM ALTERACAO
			end
			else
			begin
-- ALterado por Pedro em 04/01/2006
				set @w_dt_mov = convert(char(04),@w_data_hotran,112) + substring (@p_linha,  10, 4)
--				set @w_dt_mov = convert(varchar(4),YEAR(GETDATE())) + substring (@p_linha,  10, 4)
-- FIM ALTERACAO
				if ( IsDate (convert(char(04),@w_data_hotran,112) + substring (@p_linha,  10, 4)) = 0 )
				begin
					select @msg = 'Data do selo (' + convert(char(04),@w_data_hotran,112) + substring (@p_linha,  10, 4) + ') inválida: ' + @w_nro_selo + char (10) + char (13)
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '4'
					goto PROXIMO
				end
			end
			
		    -- Busca o item associado ao aeroporto de utilização
			select @w_item_fat = LTRIM(RTRIM(item_id))
			from GEACutcx..cor_item_pax_u a(nolock index = P_cor_item_pax_u)
			where a.cd_aerop 			= @w_cd_aerop_utilizacao
				AND a.cd_terminal 		= @w_cd_terminal_utilizacao
				AND a.tp_natureza 		= @w_natureza
				AND RIGHT(RTRIM(a.item_id),1) <> 'V'
				AND a.dt_vigencia 	= ( select MAX (dt_vigencia) from GEACutcx..cor_item_pax_u  b(nolock index  = P_cor_item_pax_u)
									where b.cd_aerop 			= @w_cd_aerop_utilizacao
									AND b.cd_terminal 			= @w_cd_terminal_utilizacao
									AND b.tp_natureza 			= @w_natureza
									AND b.dt_vigencia 			<=  @w_dt_mov
									AND RIGHT(RTRIM(b.item_id),1) <> 'V')

/*			
			select @w_item_fat = isnull(A.item_id, null) 
			from GEACutcx..cor_item_pax_u A (nolock index = P_cor_item_pax_u)
			where
				A.cd_aerop 		= @w_cd_aerop_utilizacao And
				A.cd_terminal 	= @w_cd_terminal_utilizacao And
				A.tp_natureza 	=  @w_natureza And
				A.dt_vigencia 	= ( select MAX (dt_vigencia) 
									from GEACutcx..cor_item_pax_u B (nolock index = P_cor_item_pax_u)
				      				where	B.cd_aerop 	= @w_cd_aerop_utilizacao
									AND B.cd_terminal 	= @w_cd_terminal_utilizacao
									AND B.tp_natureza 	= @w_natureza
									AND B.dt_vigencia 	< @w_dt_mov )
*/
					
			if ( @@rowcount = 0 ) OR ( @w_item_fat is null )
			begin
				select @msg = 'Não encontrou item para faturar para: ' + @w_cd_aerop_utilizacao + ' - ' + @w_cd_terminal_utilizacao + ' - ' + @w_natureza + '. Linha: ' + rtrim (@p_linha) + char(13)
					,@int_insert_discrepancia = 1 
					,@w_discrepancia	= '6'
				goto PROXIMO
			end
			-- FIM Busca o item associado ao aeroporto de utilização
			
			-- Busca os dados do selo já lido
			select @w_dt_confirma 		= dt_confirma
               ,@w_billing_line_id 		= billing_line_id
               ,@w_status_actual		= selo_status
               ,@w_chgstamp				= chgstamp
			from pax_selo_electronico_u (nolock index = nro_selo_electronico)
			where nro_selo_electronico  	= @w_nro_selo
				and cd_aerop               	= @w_cd_aerop_utilizacao
				and cd_terminal           	= @w_cd_terminal_utilizacao
				and year(dt_mov)			= year(@w_dt_arquivo)
				
			
			select @v_rowcount = @@rowcount 
			
			if @v_rowcount = 0 -- SELO NÃO ENCONTRADO. INSERE SELO.
			begin
				
				select @w_status_selo = case when @w_status = 'U' then '2'
											 when @w_status = 'T' then '5'
											 when @w_status = 'C' then '4'
										else 'X' end
				insert into pax_selo_electronico_u 
					( cd_aerop, 
					cd_terminal, 
					dt_mov, 
					nro_selo_electronico, 
					tp_natureza, 
					selo_status, 
					cd_motivo, 
					tp_fat, 
					cd_cia_aerea, 
					tp_unid, 
					dt_confirma, 
					cd_aerop_utilizacao, 
					cd_terminal_utilizacao, 
					tp_coletor, 
					item_fat, 
					billing_line_id, 
					billing_int_date, 
					billing_int_type, 
					billing_user_1, 
					voo_rea,
					dt_voo_rea,
					hh_voo_rea,
					hh_mov,
					date_created, 
					user_id_created, 
					date_changed, 
					user_id_changed, 
					inactive_ind, 
					active_date, 
					chgstamp ) 
				values (@w_cd_aerop_utilizacao,
					@w_cd_terminal_utilizacao,
					@w_dt_mov,                                                 
					@w_nro_selo,
					@w_natureza, 
					@w_status_selo,
					'', 
					'F', 
					@w_cd_cia_aerea, 
					'A', 						-- Unidade
					@w_dt_arquivo,     			-- Data de confirmação                                       
					@w_cd_aerop_utilizacao,		-- Aeroporto Utilização 
					@w_cd_terminal_utilizacao, 	-- Terminal Utilização
					'9',				-- TIPO DE COLETOR ( CRIADO POR ARQUIVO DE CONFIRMACAO DA CIA. )
					@w_item_fat,                   
					0, 					-- billing_line_id
					'19000101', 		-- billing_int_date
					'',					-- billing_int_type, 
					'',					-- billing_user_1
					@w_voo_rea,
					@w_dt_voo_rea,
					@w_hh_voo_rea,
					@w_hora_hotran,
					@p_date_process,                                           
					@p_user_process,                
					'19000101', 		-- date_changed
					'',					-- user_id_changed
					0, 					-- inactive_ind
					@p_date_process,	-- active_date
					0) 
						
				if @@rowcount = 1
				begin
					select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' Incluido com êxito.' + char(13) + char(10)
				end
				else
				begin
					select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' Erro ao incluir.' + char(13) + char(10)
					print @msg 
				end
				goto PROXIMO
			end
	
			-- SELO ENCONTRADO	
				
			if @w_billing_line_id <> 0
			begin
				select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' já foi faturado. Não são permitidas novas alterações.' + char (13) + char(10)
			    select @int_insert_discrepancia 	= 1 
					,@w_discrepancia	= '2'
			    goto PROXIMO
			end

			if @w_status_actual = '4'
			begin
				select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' já foi cancelado. Não são permitidas novas alterações.' + char (13) + char(10)			    select @int_insert_discrepancia 	= 1 
					,@w_discrepancia	= '8'
			    goto PROXIMO
			end
			
			if ( @w_status = 'U' )
			begin
				select @w_status_selo = '2'
				
				if @w_status_actual = '2' AND @w_dt_confirma <> '19000101'
				begin
					select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' já foi confirmado. Não são permitidas novas alterações.' + char (13) + char(10)
					select @int_insert_discrepancia = 1 
						,@w_discrepancia	= '7'
               goto PROXIMO
				end
			end
			
			if ( @w_status = 'T' )
			begin
				select @w_status_selo = '5'
			
				if @w_status_actual = '5'
				begin
					select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' já foi confirmado. Não são permitidas novas alterações.' + char (13) + char(10)
					select @int_insert_discrepancia = 1 
						,@w_discrepancia	= '12'
				    goto PROXIMO
				end
				
				if @w_status_actual = '2' AND @w_dt_confirma <> '1900-01-01' 
				begin
					print 'SELO JA CONFIRMADO'
				end
				else
				begin
					select @msg = 'Selo ' + @w_nro_selo + ' já utilizado - Erro ao incluir transferência na tabela de log.'
					print @msg 
				end
				goto PROXIMO			    					
			end
			
			if ( @w_status = 'C' )
			begin
				select @w_status_selo = '4'
			end


			update GEACupax..pax_selo_electronico_u
			set	 dt_mov 				= case	when tp_coletor = '01' then dt_mov 
												when tp_coletor = '9' then @w_dt_arquivo end 
				,selo_status 			= @w_status_selo
				,dt_confirma 			= case	when dt_confirma <> '19000101' then dt_confirma 
											when dt_confirma = '19000101' then @w_dt_arquivo end 
				,cd_aerop_utilizacao 	= @w_cd_aerop_utilizacao
				,cd_terminal_utilizacao = @w_cd_terminal_utilizacao
				,item_fat 				= @w_item_fat
				,voo_rea 				= @w_voo_rea
				,dt_voo_rea 			= @w_dt_voo_rea
				,hh_voo_rea 			= @w_hh_voo_rea
				,date_changed 			= @p_date_process
				,user_id_changed 		= @p_user_process
				,chgstamp 				= chgstamp + 1
			where nro_selo_electronico  	= @w_nro_selo
				and cd_aerop               	= @w_cd_aerop_utilizacao
				and cd_terminal           	= @w_cd_terminal_utilizacao
				and year(dt_mov)			= year(@w_dt_arquivo)



			if @@rowcount = 1
			begin
				select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' Alterado com êxito.' + char(13) + char(10)
			end
			else
			begin
				select @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ convert(varchar,@w_dt_mov,103) +'/'+ @w_nro_selo + ' Erro ao alterar.'  + char(13) + char(10)
			end
		end
		if @w_tp_linea = '2'  -- LINEA DE FIN DE PAGINA
		begin
			if @w_cont_linea < 3
			begin
				select @msg = 'Linha com erro no arquivo: Linha de fim de página menor que 3.' + char(13) + char(10)
					,@int_error = 1
				goto SEGUIR
			end
			--CRITICAR SE A QUANTIDADE DE SELOS DO RODAPÉ ESTÁ OK!!!!!
		end

		if @w_tp_linea NOT IN ('0', '1', '2')
		begin
			select @msg = 'Tipo de linha diferente de 0, 1 ou 2.' + char(13) + char(10)
				,@int_error = 1
         -- ALterado por Pedro em 04/01/2006
         close selos_cur
         deallocate selos_cur
         -- Fim Alteração
			goto SEGUIR
		end
			
		PROXIMO:
		
		set @nr_total_selos_validos = @nr_total_selos_validos + 1
		
		print @msg
		if @int_insert_discrepancia = 1
		begin
			exec psp_insert_disc_selo_elec 
			@w_cd_aerop_utilizacao 		
			,@w_cd_terminal_utilizacao
			,@w_dt_mov
			,@w_status
			,@w_nro_selo
			,'E'
			,@w_cd_cia_aerea
			,@w_discrepancia
			,' '
			,@w_arquivo
			,'09'
			,@p_date_process
			,@p_user_process
			,'19000101'
			,' '
			,'0'
			,@p_date_process
			,0

			select   @int_insert_discrepancia  	= 0
				,@nr_total_selos_invalidos 		= @nr_total_selos_invalidos + 1
		end
	
		fetch next from selos_cur into @p_linha 
    end
    close selos_cur
    deallocate selos_cur
       
    SEGUIR:
    if @int_error = 0
    begin
		commit transaction CONF
	
		select @msg = 'Selos Processados     : ' + convert ( char (10),@nr_total_selos_validos) + char(13)+ char(10)
		print @msg
		select @msg = 'Selos não Processados : ' + convert ( char (10),@nr_total_selos_invalidos) + char(13) + char(10)
		print @msg
		select @msg = 'FIM PROCESSO ARQUIVO : ' + ltrim(rtrim(@w_arquivo)) + char(13) + char(10)
	
	   	update GEACupax..pax_conf_baixa_selo_u
	   	set status_arq   		= '1'
		    ,qtd_selos   		= @nr_total_selos_validos - 2
		    ,date_changed   	= @p_date_process
		    ,user_id_changed    = @p_user_process
	   	where  cd_cia_aerea 	= @w_cd_cia_aerea
		    AND dt_arquivo 		= @w_dt_arquivo
		    AND arquivo  		= @w_arquivo

		select @copy = 'master..xp_cmdshell ' + case when @w_cd_cia_aerea = 'TAM' then '''copy \\S-SEAN217\SSH\Tam\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'GLO' then '''copy \\S-SEAN217\SSH\Gol\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'WEB' then '''copy \\S-SEAN217\SSH\web\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' then '''copy \\S-SEAN217\SSH\Vrg\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'LAP' then '''copy \\S-SEAN217\SSH\Lap\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'ONE' then '''copy \\S-SEAN217\SSH\one\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'PTN' then '''copy \\S-SEAN217\SSH\pantanal\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'TIB' then '''copy \\S-SEAN217\SSH\trip\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'SLX' then '''copy \\S-SEAN217\SSH\sete\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							when @w_cd_cia_aerea = 'AZU' then '''copy \\S-SEAN217\SSH\Azul\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_procesados'''
							else '' end

		exec (@copy)
	
		select @copy = 'master..xp_cmdshell ' + case when @w_cd_cia_aerea = 'TAM' then '''DEL \\S-SEAN217\SSH\Tam\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'GLO' then '''DEL \\S-SEAN217\SSH\Gol\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'WEB' then '''DEL \\S-SEAN217\SSH\web\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' then '''DEL \\S-SEAN217\SSH\vrg\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'LAP' then '''DEL \\S-SEAN217\SSH\Lap\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'ONE' then '''DEL \\S-SEAN217\SSH\one\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'PTN' then '''DEL \\S-SEAN217\SSH\pantanal\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'TIB' then '''DEL \\S-SEAN217\SSH\trip\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'SLX' then '''DEL \\S-SEAN217\SSH\sete\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							when @w_cd_cia_aerea = 'AZU' then '''DEL \\S-SEAN217\SSH\Azul\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
							else '' end

		exec (@copy)

    end
    else
    begin
		rollback transaction CONF
		if @error_bcp = 0
		begin
			update GEACupax..pax_conf_baixa_selo_u
		        set status_arq   	= '2'
			    ,qtd_selos   		= 0
			    ,date_changed  		= @p_date_process
			    ,user_id_changed	= @p_user_process
			where  cd_cia_aerea    	= @w_cd_cia_aerea
				AND dt_arquivo 		= @w_dt_arquivo
				AND arquivo  		= @w_arquivo
	
			-- copia arquivo para pasta de erros
			select @msg = 'ARQUIVO COM ERROR: ' + ltrim(rtrim(@w_arquivo)) + char(13) + 'Verificar pasta "ConfSelo_erroes" - ' + @msg

			select @copy = 'master..xp_cmdshell ' + case when @w_cd_cia_aerea = 'TAM' then '''copy \\S-SEAN217\SSH\Tam\Selo\' + ltrim(rtrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'GLO' then '''copy \\S-SEAN217\SSH\Gol\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'WEB' then '''copy \\S-SEAN217\SSH\web\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' then '''copy \\S-SEAN217\SSH\Vrg\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'LAP' then '''copy \\S-SEAN217\SSH\Lap\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'ONE' then '''copy \\S-SEAN217\SSH\one\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'PTN' then '''copy \\S-SEAN217\SSH\pantanal\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'TIB' then '''copy \\S-SEAN217\SSH\trip\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'SLX' then '''copy \\S-SEAN217\SSH\sete\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								when @w_cd_cia_aerea = 'AZU' then '''copy \\S-SEAN217\SSH\Azul\Selo\' + rtrim(ltrim(@w_arquivo)) + ' \\S-SEAN217\ConfSelo_erroes'''
								else '' end


			exec (@copy)

			select @copy = 'master..xp_cmdshell ' + case when @w_cd_cia_aerea = 'TAM' then '''DEL \\S-SEAN217\SSH\Tam\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'GLO' then '''DEL \\S-SEAN217\SSH\Gol\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'WEB' then '''DEL \\S-SEAN217\SSH\web\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'VRG' or @w_cd_cia_aerea = 'VRN' then '''DEL \\S-SEAN217\SSH\vrg\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'LAP' then '''DEL \\S-SEAN217\SSH\Lap\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'ONE' then '''DEL \\S-SEAN217\SSH\one\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'PTN' then '''DEL \\S-SEAN217\SSH\pantanal\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'TIB' then '''DEL \\S-SEAN217\SSH\trip\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'SLX' then '''DEL \\S-SEAN217\SSH\sete\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								when @w_cd_cia_aerea = 'AZU' then '''DEL \\S-SEAN217\SSH\Azul\Selo\' + rtrim(ltrim(@w_arquivo)) + ' /Q'''
								else '' end

			exec (@copy)
		end
		else
		begin
			-- erro no comando bcp, mantém o arquivo na pasta Selo para processamento posterior
			select @msg = 'ARQUIVO ' + ltrim(rtrim(@w_arquivo)) + char(13) + 'Será processado posteriormente - ' + @msg 		
		end
		print @msg
		select @int_error 				= 0
			,@error_bcp 				= 0
			,@nr_total_selos_validos  	= 0	
    end
	
    select @msg = ''    
	
    PROXIMO_ARQ:
	
    print @msg + char(13) + char(10)

    --  LECTURA DEL  cursor DE ARCHIVOS A PROCESAR
    fetch next from cur_arq into @w_cd_cia_aerea, @w_dt_arquivo, @w_arquivo, @w_qtd_selos, @w_status_arq
end

close   cur_arq
deallocate cur_arq

-- ELIMINAR TABLAS TEMPORALES
drop table #TEMP

set nocount off
return 0






GO

/****** Object:  StoredProcedure [dbo].[gsp_valida_ins_selos_conf_iii]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_valida_ins_selos_conf_iii    Script Date: 19/09/2008 15:20:05 ******/

CREATE PROCEDURE  [dbo].[gsp_valida_ins_selos_conf_iii]
		( @p_arquivo		VARCHAR(255) = '%')
AS

/*
06/04/2004 : JOSE MUÑOZ
CAMBIO EN LA ESTRUCTURA DE LOS ARCHIVOS RECIBIDOS E IMPLEMENTACION DE NUEVAS REGLAS
02/07/2004 : SOLIMAR (complementações de mensagens na ocorrência de erros e 
preenchimento efetivo dos campos de aeroporto e terminal de utilização, vôo realizado, data 
e hora do vôo realizado)
31/08/2004 : SOLIMAR (inclusão da variável @error_bcp e controle de erros do comando bcp)

11/12/2004: JOSE MUÑOZ
CAMBIO PARA PERMITIR EL PROCESO DE LOS SELOS ELECTRONICOS DE 10 DIGITOS

*/

-- DECLARACION DE VARIABLES 
DECLARE
	 @p_linha   				VARCHAR(255)   
	,@p_date_process			DATETIME
	,@p_user_process 			CHAR(30)
	,@p_execute       			VARCHAR(255)
	,@nr_total_selos_invalidos 	REAL
	,@msg          				VARCHAR (200)
	,@nr_total_selos_validos    REAL
	,@copy    					VARCHAR (255)
	,@int_error                 INTEGER
    ,@fl_habilitado 			CHAR(1)
	,@w_voo_rea					CHAR(4)
	,@w_dt_voo_rea				DATETIME
	,@w_hh_voo_rea				CHAR(6)
	,@w_status_actual			CHAR(1)
	,@w_natureza 				CHAR (1)
	,@w_nro_voo  				CHAR (4)
	,@w_cd_aerop 				CHAR (4)
	,@w_cd_terminal				CHAR (1)
	,@w_dt_voo   				CHAR (6)
	,@w_hr_voo   				CHAR (4)


	,@w_status   				CHAR (1)
	,@w_dt_confirma				DATETIME
	,@w_item_fat 				CHAR (26)
	,@w_cd_aerop_utilizacao 	CHAR (4)
	,@w_cd_terminal_utilizacao 	CHAR (1)
	,@w_nro_selo 				CHAR (20)
	,@w_billing_line_id			INT
	,@w_cd_cia_aerea			CHAR (3)
	,@w_dt_arquivo				CHAR (6)
	,@w_arquivo					CHAR (255)
	,@w_qtd_selos				INT
	,@w_status_arq				CHAR (1)
	,@w_keep_file 				INT
	,@w_dt_mov_str				CHAR (30)
	,@w_dt_mov					DATETIME
	,@w_status_selo 			CHAR (1)
	,@w_count					INTEGER
	,@w_tp_linea				CHAR(1)
	,@w_cont_linea				INTEGER
	,@w_data_hotran				DATETIME
	,@w_hora_hotran				CHAR(6)
	,@w_voo_arquivo				CHAR(4)
	,@w_discrepancia			CHAR(1)
	,@int_insert_discrepancia	INTEGER
	,@w_chgstamp				integer
	,@error_bcp					SMALLINT
	,@v_len_linea				SMALLINT
	,@w_nro_selo_10				CHAR(10)
	,@v_tp_selo					CHAR(2)
	,@v_rowcount				SMALLINT
	,@v_cd_cia_aerea			CHAR(2)

SELECT   @p_date_process 	= GETDATE()
	,@p_user_process 		= suser_sname()

PRINT CHAR(13) + CHAR(10)

-- VERIFICAR SI EL PROCESO ESTA HABILITADO
SELECT @fl_habilitado = ISNULL(descp,'0') 
FROM GEACCOMMON..dropdowndw_u (NOLOCK INDEX = PK_dropdowndw_u)
WHERE  tbl_code = 'CSEL'
AND code 		= '1'

IF @fl_habilitado = '0' OR @fl_habilitado IS NULL
BEGIN
	SELECT @msg = 'Processo desabilitado. Verificar tabelas genéricas [CSEL]. codigo = 1, Descrição = 0.' + CHAR(13)
	PRINT @msg 
	RETURN 3
END
-- FIM VERIFICAR SI EL PROCESO ESTA HABILITADO

-- VERIFICA SE REPROCESSAMENTO DE DISCREPÂNCIAS ESTÁ EM EXECUÇÃO
DECLARE @cont INT 
EXEC psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont OUTPUT
IF @cont > 0
BEGIN
    SELECT @msg = 'O reprocessamento de discrepâncias está em execução.'
    PRINT @msg
    RETURN 3
END
-- FIM VERIFICA SE REPROCESSAMENTO DE DISCREPÂNCIAS ESTÁ EM EXECUÇÃO

SET NOCOUNT ON


-- CREAR TABLAS TEMPORALES
CREATE TABLE #TEMP (LINEA VARCHAR(255) NULL)

INSERT INTO #TEMP 
EXEC master..xp_cmdshell 'dir \\S-SEAN217\DriveF\SSH\Tam\Selo\*.* /B' 

DELETE FROM #TEMP WHERE LINEA IS NULL

--CREATE TABLE pax_selos_table_conf (linha VARCHAR(255))
--GRANT ALL ON pax_selos_table_conf TO geaccarga

-- DECLARACION DE CURSOR DE ARCHIVOS A PROCESAR
DECLARE cur_arq CURSOR FOR
SELECT
	cd_cia_aerea,
	dt_arquivo,
	arquivo,
	qtd_selos,
	status_arq
FROM 
	GEACupax..pax_conf_baixa_selo_u (NOLOCK INDEX = ix_status_arquivo)
WHERE 
	status_arq 		= '0'
AND arquivo 		like @p_arquivo 
AND SUBSTRING(arquivo, 3,6) < '041201'

-- ABRIR CURSOR DE ARCHIVOS A PROCESAR
OPEN cur_arq 

-- PRIMERA LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
FETCH  NEXT FROM cur_arq INTO @w_cd_cia_aerea, @w_dt_arquivo, @w_arquivo, @w_qtd_selos, @w_status_arq
WHILE @@FETCH_STATUS = 0
BEGIN
    -- INDICA SE O ARQUIVO DEVE SER MANTIDO NO DIRETÓRIO DE ORIGEM
    SELECT @w_keep_file = 0

    TRUNCATE TABLE pax_selos_table_conf

    BEGIN TRANSACTION 

    SELECT @msg = 'INÍCIO PROCESSO ARQUIVO : ' + LTRIM(RTRIM(@w_arquivo)) + CHAR(13) + CHAR(10)
    PRINT @msg 
    PRINT ' '

    SELECT LINEA FROM #TEMP WHERE LTRIM(RTRIM(LINEA)) = LTRIM(RTRIM(@w_arquivo))
    IF @@ROWCOUNT = 0
    BEGIN
		SELECT @msg = 'Arquivo está como pendente, porém, não foi encontrado na pasta Tam/Selo' + CHAR(13) + CHAR(10)
			,@int_error = 1
		GOTO SEGUIR
    END

    SELECT 	@nr_total_selos_invalidos  	= 0
		,@nr_total_selos_validos    	= 0
		,@int_error 					= 0
		,@error_bcp						= 0
		,@w_cd_aerop_utilizacao 		= SUBSTRING(@w_arquivo, 20,4)
		,@w_cd_terminal_utilizacao 		= '1'
		,@w_voo_arquivo					= SUBSTRING(@w_arquivo, 16,4)


    -- Carrega as linhas do arquivo
    SELECT @p_execute = 'master..xp_cmdshell ''bcp GEACupax..pax_selos_table_conf in \\S-SEAN217\DriveF\SSH\Tam\Selo\' + ltrim(rtrim(@w_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
    EXECUTE  (@p_execute)
    IF @@ERROR <> 0
    BEGIN
		SELECT @msg = 'Erro no comando BCP.'
			,@int_error 	= 1
			,@error_bcp 	= 1
		GOTO SEGUIR
    END

    SELECT @w_count = COUNT(1) FROM pax_selos_table_conf(NOLOCK)
    IF @w_count = 0
    BEGIN
		SELECT @msg = 'Não foi carregado nenhum selo no comando BCP.'
			,@int_error = 1
			,@error_bcp = 1
		GOTO SEGUIR
    END

    -- DECLARA CURSOR DE SELOS A PROCESSAR
    DECLARE selos_cur CURSOR FOR
    SELECT LTRIM(RTRIM(linha))
    FROM pax_selos_table_conf (NOLOCK)
	ORDER BY linha
    
    OPEN selos_cur
    
    FETCH NEXT FROM selos_cur
    INTO @p_linha

	SELECT @w_cont_linea = 0
    
    WHILE @@FETCH_STATUS = 0
    BEGIN
		SELECT @msg = 'Linha de processamento: ' + @p_linha + Char (13) + Char (10) 
		PRINT @msg 
	
		SELECT @w_tp_linea				= SUBSTRING (@p_linha,  1, 1)
			,@w_cont_linea				= @w_cont_linea + 1
			,@int_insert_discrepancia 	= 0
			,@w_discrepancia			= ''
			,@v_tp_selo					= ''
	
		IF @w_tp_linea = '0'  -- LINHA DE HEADER
		BEGIN
			IF @w_cont_linea > 1
			BEGIN
				SELECT @msg = 'Linha com erro no arquivo: mais de uma linha de cabeçalho.' + CHAR(13) + CHAR(10)
			    	,@int_error = 1
				GOTO SEGUIR
			END
				
			-- OBTER DATA E HORA DO VÔO
			SELECT @w_hora_hotran = SUBSTRING (@p_linha,  8, 4) + '00'
				  ,@w_data_hotran = SUBSTRING (@p_linha,  2, 6) + ' ' + SUBSTRING (@p_linha,  8, 2) + ':' + SUBSTRING (@p_linha,  10, 2) + ':00.000'
				
		END
				
		IF @w_tp_linea = '1'  -- LINHA DE DETALHE
		BEGIN
			IF @w_cont_linea < 2
			BEGIN
				SELECT @msg =  'Linha com erro no arquivo: linha de detalhe menor que dois.' + CHAR(13) + CHAR(10)
					,@int_error = 1
				GOTO SEGUIR
			END

			/* VERIFICAR EL TIPO DE SELO 
				20 DIGITOS
				10 DIGITOS  */				

			SET @v_len_linea = LEN(@p_linha)

			IF @v_len_linea <> 18 AND @v_len_linea <> 27
			BEGIN
				SELECT @msg = 'Linha do arquivo não é válida: ' + @p_linha + Char (10) + Char (13)
					,@int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '14'
				GOTO PROXIMO
			END
			ELSE
			BEGIN
				IF @v_len_linea = 18 /* SELO DE 10 DIGITOS */ 
				BEGIN
					IF SUBSTRING(@p_linha,2,1) <> '*'
					BEGIN
						SELECT @msg = 'Linha do arquivo não é válida: ' + @p_linha + Char (10) + Char (13)
							,@int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '14'
						GOTO PROXIMO
					END
					
					SELECT @w_nro_selo_10 	= SUBSTRING (@p_linha,  3, 10)
						,@w_natureza 		= CASE WHEN SUBSTRING (@p_linha,  3, 1) = '0' THEN 'D'
											 	   WHEN SUBSTRING (@p_linha,  3, 1) = '1' THEN 'I'
												   ELSE	SUBSTRING (@p_linha,  3, 1) END
						,@w_cd_aerop 		= SUBSTRING (LTRIM(RTRIM(@w_arquivo)),20, 4)
						,@w_cd_terminal		= '1'
						,@w_status   		= SUBSTRING (@p_linha, 13, 1)
						,@w_voo_rea			= @w_voo_arquivo
						,@w_dt_voo_rea		= @w_data_hotran
						,@w_hh_voo_rea		= @w_hora_hotran
						,@v_tp_selo			= '10'
						,@v_cd_cia_aerea	= SUBSTRING (@p_linha,  4, 2)
					
					IF NOT EXISTS (SELECT * FROM GEACutcx..cor_cia_aerea_u 
									WHERE cd_cia_num 	= @v_cd_cia_aerea
									AND inactive_ind	= '0')
					BEGIN
						SELECT @msg = 'Cia Aerea não é válida' + @v_cd_cia_aerea + Char (10) + Char (13)
							,@int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '15'
						GOTO PROXIMO
					END
				END
				ELSE  /* SELO DE 20 DIGITOS */
				BEGIN
					SELECT @w_nro_selo 	= SUBSTRING (@p_linha,  2, 20)
						,@w_natureza 	= SUBSTRING (@p_linha,  2, 1)
						,@w_cd_aerop 	= SUBSTRING (@p_linha,  9, 4)
						,@w_cd_terminal	= '1'
						,@w_dt_voo   	= SUBSTRING (@p_linha, 20, 2) + SUBSTRING (@p_linha, 18, 2) + SUBSTRING (@p_linha, 16, 2)
						,@w_status   	= SUBSTRING (@p_linha, 22, 1)
						,@w_voo_rea		= @w_voo_arquivo
						,@w_dt_voo_rea	= @w_data_hotran
						,@w_hh_voo_rea	= @w_hora_hotran
						,@v_tp_selo			= '20'
				END
			END
			
			IF @w_natureza NOT IN ('D','I')
			BEGIN
				SELECT @msg = 'A natureza não é válida, favor verificar. "' + @w_natureza + '"' + Char (10) + Char (13)
					,@int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '10'
				GOTO PROXIMO
			END
				        							
			IF @w_status NOT IN ('U','T','C')
			BEGIN
				SELECT @msg = 'Status de selo inválido: ' + @w_status + Char (10) + Char (13)
					,@int_insert_discrepancia 	= 1 
					,@w_discrepancia				= '3'
				GOTO PROXIMO
			END
			
			IF 	@v_tp_selo			= '10'
			BEGIN
				SELECT @w_dt_mov = @w_data_hotran
			END
			ELSE
			BEGIN
				IF ( IsDate (@w_dt_voo) = 0 )
				BEGIN
					SELECT @msg = 'Data do selo (' + @w_dt_voo + ') inválida: ' + @w_nro_selo + Char (10) + Char (13)
						,@int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '4'
					GOTO PROXIMO
				END
				-- MONTA A DATA DO MOVIMENTO
				SELECT @w_dt_mov = Convert (Datetime, @w_dt_voo)
			END
			
		    -- Busca o item associado ao aeroporto de utilização
			SELECT @w_item_fat = ISNULL(item_id, NULL) 
			FROM GEACutcx..cor_item_pax_u (NOLOCK INDEX = P_cor_item_pax_u)
			WHERE
				cd_aerop 		= @w_cd_aerop_utilizacao And
				cd_terminal 	= @w_cd_terminal_utilizacao And
				tp_natureza 	=  @w_natureza And
				dt_vigencia 	= ( SELECT MAX (dt_vigencia) 
									FROM GEACutcx..cor_item_pax_u (NOLOCK INDEX = P_cor_item_pax_u)
				      				WHERE	cd_aerop 	= @w_cd_aerop_utilizacao 
									AND cd_terminal 	= @w_cd_terminal_utilizacao
									AND tp_natureza 	= @w_natureza 
									AND dt_vigencia 	< @w_dt_mov )
					
			IF ( @@ROWCOUNT = 0 ) OR ( @w_item_fat IS NULL )
			BEGIN
				SELECT @msg = 'Não encontrou item para faturar para: ' + @w_cd_aerop_utilizacao + ' - ' + @w_cd_terminal_utilizacao + ' - ' + @w_natureza + '. Linha: ' + RTrim (@p_linha) + CHAR(13)
					,@int_insert_discrepancia = 1 
					,@w_discrepancia	= '6'
				GOTO PROXIMO
			END
			-- FIM Busca o item associado ao aeroporto de utilização
			
			-- Busca os dados do selo já lido
			IF @v_tp_selo =  10
			BEGIN
				SELECT @w_dt_confirma 		= dt_confirma
					,@w_billing_line_id 	= billing_line_id
					,@w_status_actual		= selo_status
					,@w_chgstamp			= chgstamp
				FROM pax_selo_electronico_u (NOLOCK INDEX = P_pax_selo_electronico_u)
				WHERE cd_aerop							= @w_cd_aerop_utilizacao
					and cd_terminal						= @w_cd_terminal_utilizacao
					and CONVERT(VARCHAR, dt_mov, 112)	= CONVERT(VARCHAR, @w_data_hotran, 112)
					and nro_selo_electronico 			= @w_nro_selo_10
				
				SELECT @v_rowcount = @@Rowcount 
			END
			ELSE
			BEGIN
				SELECT @w_dt_confirma 		= dt_confirma
					,@w_billing_line_id 	= billing_line_id
					,@w_status_actual		= selo_status
					,@w_chgstamp			= chgstamp
				FROM pax_selo_elec_u (NOLOCK INDEX = PK_pax_selo_elec_u)
				WHERE nro_selo_elec = @w_nro_selo
				
				SELECT @v_rowcount = @@Rowcount 
			END
			
			IF @v_rowcount = 0 -- SELO NÃO ENCONTRADO. INSERE SELO.
			BEGIN
				
				SELECT @w_status_selo = CASE WHEN @w_status = 'U' THEN '2'
											 WHEN @w_status = 'T' THEN '5'
											 WHEN @w_status = 'C' THEN '4'
										ELSE 'X' END
				
				-- INSERE SELO ELETRÔNICO
				IF @v_tp_selo = '10'
				BEGIN
					INSERT INTO pax_selo_electronico_u 
						( cd_aerop, 
						cd_terminal, 
						dt_mov, 
						nro_selo_electronico, 
						tp_natureza, 
						selo_status, 
						cd_motivo, 
						tp_fat, 
						cd_cia_aerea, 
						tp_unid, 
						dt_confirma, 
						cd_aerop_utilizacao, 
						cd_terminal_utilizacao, 
						tp_coletor, 
						item_fat, 
						billing_line_id, 
						billing_int_date, 
						billing_int_type, 
						billing_user_1, 
						voo_rea,
						dt_voo_rea,
						hh_voo_rea,
						date_created, 
						user_id_created, 
						date_changed, 
						user_id_changed, 
						inactive_ind, 
						active_date, 
						chgstamp ) 
					VALUES (@w_cd_aerop_utilizacao,
						@w_cd_terminal_utilizacao,
						@w_dt_mov,                                                 
						@w_nro_selo_10,        
						@w_natureza, 
						@w_status_selo,
						'', 
						'F', 
						@w_cd_cia_aerea, 
						'A', 						-- Unidade
						@w_dt_arquivo,     			-- Data de confirmação                                       
						@w_cd_aerop_utilizacao,		-- Aeroporto Utilização 
						@w_cd_terminal_utilizacao, 	-- Terminal Utilização
						'9',				-- TIPO DE COLETOR ( CRIADO POR ARQUIVO DE CONFIRMACAO DA CIA. )
						@w_item_fat,                   
						0, 					-- billing_line_id
						'19000101', 		-- billing_int_date
						'',					-- billing_int_type, 
						'',					-- billing_user_1
						@w_voo_rea,
						@w_dt_voo_rea,
						@w_hh_voo_rea,
						@p_date_process,                                           
						@p_user_process,                
						'19000101', 		-- date_changed
						'',					-- user_id_changed
						0, 					-- inactive_ind
						@p_date_process,	-- active_date
						0) 
						
					IF @@ROWCOUNT = 1
					BEGIN
						SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1
					END
					ELSE
					BEGIN
						SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' Erro ao incluir.'
						PRINT @msg 
					END
					
				END
				ELSE
				BEGIN
					INSERT INTO GEACupax..pax_selo_elec_u (
						nro_selo_elec,        
						tp_natureza, 
						dt_mov,                                                 
						selo_status, 
						cd_motivo, 
						tp_fat, 
						cd_cia_aerea, 
						tp_unid, 
						cd_aerop, 
						cd_terminal, 
						tp_unid_destino, 
						cd_aerop_destino, 
						cd_terminal_destino, 
						dt_confirma,                                            
						cd_aerop_utilizacao, 
						cd_terminal_utilizacao, 
						nfm,                  
						nro_rste, 
						tp_coletor,       
						item_fat,                   
						billing_line_id, 
						billing_int_date,                                       
						billing_int_type, 
						billing_user_1, 
						voo_rea,
						dt_voo_rea,
						hh_voo_rea,
						date_created,                                           
						user_id_created,                
						date_changed,                                           
						user_id_changed,                
						inactive_ind, 
						active_date,                                            
						chgstamp) 
					VALUES (
						@w_nro_selo,        
						@w_natureza, 
						@w_dt_mov,                                                 
						@w_status_selo, 	-- UTILIZADO
						'', 
						'F', 
						@w_cd_cia_aerea, 
						'A', 				-- Unidade
						@w_cd_aerop, 
						@w_cd_terminal, 
						'A',  				-- Unidade Destino
						'',   				-- Aeroporto Destino (cd_aerop_destino)
						'',   				-- Terminal Destino (cd_terminal_destino)
						@w_dt_arquivo,     		-- Data de confirmação                                       
						@w_cd_aerop_utilizacao,		-- Aeroporto Utilização 
						@w_cd_terminal_utilizacao, 	-- Terminal Utilização
						'',                  
						'', 
						'9',				-- TIPO DE COLETOR ( CRIADO POR ARQUIVO DE CONFIRMACAO DA CIA. )
						@w_item_fat,                   
						0, 					-- billing_line_id
						'19000101', 		-- billing_int_date
						'',					-- billing_int_type, 
						'',					-- billing_user_1
						@w_voo_rea,
						@w_dt_voo_rea,
						@w_hh_voo_rea,
						@p_date_process,                                           
						@p_user_process,                
						'19000101', 		-- date_changed
						'',					-- user_id_changed
						0, 					-- inactive_ind
						@p_date_process,	-- active_date
						0) 
						
					IF @@ROWCOUNT = 1
					BEGIN
						SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1
					END
					ELSE
					BEGIN
						SELECT @msg = 'Selo ' + @w_nro_selo + ' Erro ao incluir.'
						PRINT @msg 
					END
				END

				GOTO PROXIMO

			END
	
			-- SELO ENCONTRADO	
				
			IF @w_billing_line_id <> 0
			BEGIN
				IF @v_tp_selo = 10
				BEGIN
					SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' já foi faturado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
				END 
				ELSE
				BEGIN
			    	SELECT @msg = 'Selo: ' + RTrim (@w_nro_selo) + ' já foi faturado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
				END
			    SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia	= '2'
			    GOTO PROXIMO
			END
			
			IF @w_status_actual = '4'
			BEGIN
				IF @v_tp_selo = 10
				BEGIN
					SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' já foi cancelado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
				END
				ELSE
				BEGIN
			    	SELECT @msg = 'Selo: ' + RTrim (@w_nro_selo) + ' já foi cancelado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
			    END
			    SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia	= '8'
			    GOTO PROXIMO
			END
			
			IF ( @w_status = 'U' )
			BEGIN
				SELECT @w_status_selo = '2'
				
				IF @w_status_actual = '2' AND @w_dt_confirma <> '19000101'
				BEGIN
					IF @v_tp_selo = 10
					BEGIN
						SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' já foi confirmado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
					END
					ELSE
					BEGIN
						SELECT @msg = 'Selo: ' + RTrim (@w_nro_selo) + ' já foi confirmado. Não são permitidas novas alterações.' + Char (13) + CHAR(10)
					END	
					SELECT @int_insert_discrepancia = 1 
						,@w_discrepancia	= '7'
				    GOTO PROXIMO
				END
			END
			
			IF ( @w_status = 'T' )
			BEGIN
				SELECT @w_status_selo = '5'
			
				IF @w_status_actual = '5'
				BEGIN
					IF @v_tp_selo = 10
					BEGIN
						SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' já foi transferido.' + Char (13) + CHAR(10)
					END
					ELSE
					BEGIN
				    	SELECT @msg = 'Selo: ' + RTrim (@w_nro_selo) + ' já foi transferido.' + Char (13) + CHAR(10)
				    END
					SELECT @int_insert_discrepancia = 1 
						,@w_discrepancia	= '12'
				    GOTO PROXIMO
				END
				
				IF @w_status_actual = '2' AND @w_dt_confirma <> '1900-01-01' 
				BEGIN
					-- INSERE DADOS DA TRANSFERÊNCIA DO SELO NA TABELA DE LOG PARA HISTÓRICO
					-- E MANTÉM O SELO COM STATUS DE UTILIZADO E JÁ CONFIRMADO
					IF @v_tp_selo = '10'
					BEGIN
						INSERT INTO pax_selo_electronico_log_u 
							( cd_aerop, 
							cd_terminal, 
							dt_mov, 
							nro_selo_electronico, 
							tp_natureza, 
							selo_status, 
							cd_motivo, 
							tp_fat, 
							cd_cia_aerea, 
							tp_unid, 
							dt_confirma, 
							cd_aerop_utilizacao, 
							cd_terminal_utilizacao, 
							tp_coletor, 
							item_fat, 
							billing_line_id, 
							billing_int_date, 
							billing_int_type, 
							billing_user_1, 
							voo_rea,
							dt_voo_rea,
							hh_voo_rea,
							date_created, 
							user_id_created, 
							date_changed, 
							user_id_changed, 
							inactive_ind, 
							active_date, 
							chgstamp ) 
						VALUES (@w_cd_aerop_utilizacao,
							@w_cd_terminal_utilizacao,
							@w_dt_mov,                                                 
							@w_nro_selo_10,        
							@w_natureza, 
							@w_status_selo,
							'', 
							'F', 
							@w_cd_cia_aerea, 
							'A', 						-- Unidade
							@w_dt_arquivo,     			-- Data de confirmação                                       
							@w_cd_aerop_utilizacao,		-- Aeroporto Utilização 
							@w_cd_terminal_utilizacao, 	-- Terminal Utilização
							'9',				-- TIPO DE COLETOR ( CRIADO POR ARQUIVO DE CONFIRMACAO DA CIA. )
							@w_item_fat,                   
							0, 					-- billing_line_id
							'19000101', 		-- billing_int_date
							'',					-- billing_int_type, 
							'',					-- billing_user_1
							@w_voo_rea,
							@w_dt_voo_rea,
							@w_hh_voo_rea,
							@p_date_process,                                           
							@p_user_process,                
							'19000101', 		-- date_changed
							'',					-- user_id_changed
							0, 					-- inactive_ind
							@p_date_process,	-- active_date
							0) 
							
						IF @@ROWCOUNT = 1
						BEGIN
							SELECT @nr_total_selos_validos = @nr_total_selos_validos + 1
						END
						ELSE
						BEGIN
							SELECT @msg = 'Selo ' + @w_nro_selo + ' Erro ao incluir.'
							PRINT @msg 
						END
						
					END
					ELSE
					BEGIN
						INSERT INTO GEACupax..pax_selo_elec_log_u (
							nro_selo_elec,        
							tp_natureza, 
							dt_mov,                                                 
							selo_status, 
							cd_motivo, 
							tp_fat, 
							cd_cia_aerea, 
							tp_unid, 
							cd_aerop, 
							cd_terminal, 
							tp_unid_destino, 
							cd_aerop_destino, 
							cd_terminal_destino, 
							dt_confirma,                                            
							cd_aerop_utilizacao, 
							cd_terminal_utilizacao, 
							nfm,                  
							nro_rste, 
							tp_coletor,       
							item_fat,                   
							billing_line_id, 
							billing_int_date,                                       
							billing_int_type, 
							billing_user_1, 
							voo_rea,
							dt_voo_rea,
							hh_voo_rea,
							date_created,                                           
							user_id_created,                
							date_changed,                                           
							user_id_changed,                
							inactive_ind, 
							active_date,                                            
							chgstamp) 
						VALUES (
							@w_nro_selo,        
							@w_natureza, 
							@w_dt_mov,                                                 
							@w_status_selo, 	-- TRANSFERIDO ('5')
							'', 
							'F', 
							@w_cd_cia_aerea, 
							'A', 				-- Unidade
							@w_cd_aerop, 
							@w_cd_terminal, 
							'A',  				-- Unidade Destino
							'',   				-- Aeroporto Destino (cd_aerop_destino)
							'',   				-- Terminal Destino (cd_terminal_destino)
							@w_dt_arquivo,     		-- Data de confirmação                                       
							@w_cd_aerop_utilizacao,		-- Aeroporto Utilização 
							@w_cd_terminal_utilizacao, 	-- Terminal Utilização
							'',                  
							'', 
							'9',				-- TIPO DE COLETOR ( CRIADO POR ARQUIVO DE CONFIRMACAO DA CIA. )
							@w_item_fat,                   							0, 					-- billing_line_id
							'19000101', 		-- billing_int_date
							'',					-- billing_int_type, 
							'',					-- billing_user_1
							@w_voo_rea,
							@w_dt_voo_rea,
							@w_hh_voo_rea,	
							@p_date_process,                                           	
							@p_user_process,                
							'19000101', 		-- date_changed
							'',					-- user_id_changed
							0, 					-- inactive_ind
							@p_date_process,	-- active_date
							@w_chgstamp + 1) 
											
						IF @@ROWCOUNT = 1
						BEGIN
							SELECT @msg = 'Selo ' + @w_nro_selo + ' já utilizado - Transferência guardada no log.'
								,@nr_total_selos_validos = @nr_total_selos_validos + 1
						END
					END
				END
				ELSE
				BEGIN
					SELECT @msg = 'Selo ' + @w_nro_selo + ' já utilizado - Erro ao incluir transferência na tabela de log.'
					PRINT @msg 
				END
				GOTO PROXIMO			    					
			END
			
			IF ( @w_status = 'C' )
			BEGIN
				SELECT @w_status_selo = '4'
			END
			
			IF @v_tp_selo	= '10'
			BEGIN
				UPDATE GEACupax..pax_selo_electronico_u
				SET	 dt_mov 				= CASE	WHEN tp_coletor = '01' THEN dt_mov 
													WHEN tp_coletor = '9' THEN @w_dt_arquivo END 
					,selo_status 			= @w_status_selo
					,dt_confirma 			= CASE	WHEN dt_confirma <> '19000101' THEN dt_confirma 
												WHEN dt_confirma = '19000101' THEN @w_dt_arquivo END 
					,cd_aerop_utilizacao 	= @w_cd_aerop_utilizacao
					,cd_terminal_utilizacao = @w_cd_terminal_utilizacao
					,item_fat 				= @w_item_fat
					,voo_rea 				= @w_voo_rea
					,dt_voo_rea 			= @w_dt_voo_rea
					,hh_voo_rea 			= @w_hh_voo_rea
					,date_changed 			= @p_date_process
					,user_id_changed 		= @p_user_process
					,chgstamp 				= chgstamp + 1
				WHERE cd_aerop							= @w_cd_aerop_utilizacao
					and cd_terminal						= @w_cd_terminal_utilizacao
					and CONVERT(VARCHAR, dt_mov, 112)	= CONVERT(VARCHAR, @w_data_hotran, 112)
					and nro_selo_electronico 			= @w_nro_selo_10
					
				IF @@ROWCOUNT = 1
				BEGIN
					SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' Alterado com êxito.' + CHAR(13) + CHAR(10)
						,@nr_total_selos_validos = @nr_total_selos_validos + 1
				END
				ELSE
				BEGIN
					SELECT @msg = 'Selo: ' + @w_cd_aerop_utilizacao +'/'+ @w_cd_terminal_utilizacao +'/'+ @w_dt_mov +'/'+ @w_nro_selo_10 + ' Erro ao alterar.'  + CHAR(13) + CHAR(10)
				END
			END
			ELSE
			BEGIN
				UPDATE GEACupax..pax_selo_elec_u
				SET	 dt_mov 				= CASE	WHEN tp_coletor = '01' THEN dt_mov 
													WHEN tp_coletor = '9' THEN @w_dt_arquivo END 
					,selo_status 			= @w_status_selo
					,dt_confirma 			= CASE	WHEN dt_confirma <> '19000101' THEN dt_confirma 
												WHEN dt_confirma = '19000101' THEN @w_dt_arquivo END 
					,cd_aerop_utilizacao 	= @w_cd_aerop_utilizacao
					,cd_terminal_utilizacao = @w_cd_terminal_utilizacao
					,item_fat 				= @w_item_fat
					,voo_rea 				= @w_voo_rea
					,dt_voo_rea 			= @w_dt_voo_rea
					,hh_voo_rea 			= @w_hh_voo_rea
					,date_changed 			= @p_date_process
					,user_id_changed 		= @p_user_process
					,chgstamp 				= chgstamp + 1
				WHERE nro_selo_elec 		= @w_nro_selo
					
				IF @@ROWCOUNT = 1
				BEGIN
					SELECT @msg = 'Selo ' + @w_nro_selo + ' Alterado com êxito.' + CHAR(13) + CHAR(10)
						,@nr_total_selos_validos = @nr_total_selos_validos + 1
				END
				ELSE
				BEGIN
					SELECT @msg = 'Selo ' + @w_nro_selo + ' Erro ao alterar.'  + CHAR(13) + CHAR(10)
					PRINT @msg 
				END
			END
		END
		IF @w_tp_linea = '2'  -- LINEA DE FIN DE PAGINA
		BEGIN
			IF @w_cont_linea < 3
			BEGIN
				SELECT @msg = 'Linha com erro no arquivo: Linha de fim de página menor que 3.' + CHAR(13) + CHAR(10)
					,@int_error = 1
				GOTO SEGUIR
			END
			--CRITICAR SE A QUANTIDADE DE SELOS DO RODAPÉ ESTÁ OK!!!!!
		END

		IF @w_tp_linea NOT IN ('0', '1', '2')
		BEGIN
			SELECT @msg = 'Tipo de linha diferente de 0, 1 ou 2.' + CHAR(13) + CHAR(10)
				,@int_error = 1
			GOTO SEGUIR
		END
			
		PROXIMO:
		PRINT @msg
		IF @int_insert_discrepancia = 1
		BEGIN
			EXEC psp_insert_disc_selo_elec 
			@w_cd_aerop_utilizacao 		
			,@w_cd_terminal_utilizacao
			,@w_dt_mov
			,@w_status
			,@w_nro_selo
			,'E'
			,@w_cd_cia_aerea
			,@w_discrepancia
			,' '
			,@w_arquivo
			,'09'
			,@p_date_process
			,@p_user_process
			,'19000101'
			,' '
			,'0'
			,@p_date_process
			,0

			SELECT   @int_insert_discrepancia  	= 0
				,@nr_total_selos_invalidos 		= @nr_total_selos_invalidos + 1
		END
	
		FETCH NEXT FROM selos_cur INTO @p_linha 
    END
    CLOSE selos_cur
    DEALLOCATE selos_cur
       
    SEGUIR:
    IF @int_error = 0
    BEGIN
		COMMIT TRANSACTION
	
		SELECT @msg = 'Selos Processados     : ' + CONVERT ( CHAR (10),@nr_total_selos_validos) + CHAR(13)+ CHAR(10)
		PRINT @msg
		SELECT @msg = 'Selos não Processados : ' + CONVERT ( CHAR (10),@nr_total_selos_invalidos) + CHAR(13) + CHAR(10)
		PRINT @msg
		SELECT @msg = 'FIM PROCESSO ARQUIVO : ' + LTRIM(RTRIM(@w_arquivo)) + CHAR(13) + CHAR(10)
	
	   	UPDATE GEACupax..pax_conf_baixa_selo_u
	   	SET status_arq   		= '1'
		    ,qtd_selos   		= @nr_total_selos_validos
		    ,date_changed   	= @p_date_process
		    ,user_id_changed    = @p_user_process
	   	WHERE  cd_cia_aerea 	= @w_cd_cia_aerea
		    AND dt_arquivo 		= @w_dt_arquivo
		    AND arquivo  		= @w_arquivo
	
		SELECT @copy 	= 'copy \\S-SEAN217\DriveF\SSH\Tam\Selo\' + RTRIM(LTRIM(@w_arquivo)) + ' \\S-SEAN217\DriveF\ConfSelo_procesado'
		EXEC master..xp_cmdshell @copy
	
		SELECT @copy 	= 'DEL \\S-SEAN217\DriveF\SSH\Tam\Selo\' + RTRIM(LTRIM(@w_arquivo)) + ' /Q'
		EXEC master..xp_cmdshell @copy

    END
    ELSE
    BEGIN
		ROLLBACK TRANSACTION
		IF @error_bcp = 0
		BEGIN
			UPDATE GEACupax..pax_conf_baixa_selo_u
		        SET status_arq   	= '2'
			    ,qtd_selos   		= 0
			    ,date_changed  		= @p_date_process
			    ,user_id_changed	= @p_user_process
			WHERE  cd_cia_aerea    	= @w_cd_cia_aerea
				AND dt_arquivo 		= @w_dt_arquivo
				AND arquivo  		= @w_arquivo
	
			-- copia arquivo para pasta de erros
			SELECT @msg = 'ARQUIVO COM ERROR: ' + LTRIM(RTRIM(@w_arquivo)) + CHAR(13) + 'Verificar pasta "ConfSelo_erroes" - ' + @msg
			SELECT @copy = 'copy \\S-SEAN217\DriveF\SSH\Tam\Selo\' + LTRIM(RTRIM(@w_arquivo)) + ' \\S-SEAN217\DriveF\ConfSelo_erroes'
			EXEC master..xp_cmdshell @copy
			SELECT @copy = 'DEL \\S-SEAN217\DriveF\SSH\Tam\Selo\' + LTRIM(RTRIM(@w_arquivo)) + ' /Q'
			EXEC master..xp_cmdshell @copy
		END
		ELSE
		BEGIN
			-- erro no comando bcp, mantém o arquivo na pasta Selo para processamento posterior
			SELECT @msg = 'ARQUIVO ' + LTRIM(RTRIM(@w_arquivo)) + CHAR(13) + 'Será processado posteriormente - ' + @msg 		
		END
		PRINT @msg
		SELECT @int_error 				= 0
			,@error_bcp 				= 0
			,@nr_total_selos_validos  	= 0	
    END

    SELECT @msg = ''    

    PROXIMO_ARQ:

    PRINT @msg + CHAR(13) + CHAR(10)

    --  LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
    FETCH NEXT FROM cur_arq INTO @w_cd_cia_aerea, @w_dt_arquivo, @w_arquivo, @w_qtd_selos, @w_status_arq
END

CLOSE   cur_arq
DEALLOCATE cur_arq

-- ELIMINAR TABLAS TEMPORALES
DROP TABLE #TEMP

SET NOCOUNT OFF
RETURN 0



GO

/****** Object:  StoredProcedure [dbo].[gsp_verifica_tp_faturamento_aerop]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.gsp_verifica_tp_faturamento_aerop    Script Date: 19/09/2008 15:20:05 ******/


CREATE  Proc [dbo].[gsp_verifica_tp_faturamento_aerop] (
	@p_cd_aerop  		char(4)
           	,@p_terminal  		char(10)
           	,@p_dt_vigencia   	datetime)
As

Declare @p_dt_vigencia_format 	datetime 

/*
Select @p_dt_vigencia_format = Convert(DateTime, Substring (@p_dt_vigencia, 4, 3) +
                      Substring (@p_dt_vigencia, 1, 3) +
                      Substring (@p_dt_vigencia, 7, 4))
*/

If Not Exists (select * from GEACutcx..cor_tpfatur_selo_u (NOLOCK  INDEX = P_cor_tpfatur_selo_u) 
                   where   cd_aerop       = @p_cd_aerop  
                    and terminal      	= @p_terminal  
                    and dt_vigencia  	<= @p_dt_vigencia)
begin
    Select 'ERRO','Nao foi cadastrado o Tipo de Faturamento para esse Aerporto/Terminal'
    Return
End 
Else
Begin 
     select 'OK', tp_fatur_pax 
     from GEACutcx..cor_tpfatur_selo_u (NOLOCK  INDEX = P_cor_tpfatur_selo_u) 
     where cd_aerop       		= @p_cd_aerop  
    	and terminal      		= @p_terminal  
    	and dt_vigencia  	<= @p_dt_vigencia
End 





GO

/****** Object:  StoredProcedure [dbo].[migra_pax_selo_electronico_log_u]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.migra_pax_selo_electronico_log_u    Script Date: 19/09/2008 15:20:05 ******/
CREATE     PROC [dbo].[migra_pax_selo_electronico_log_u]
AS

DECLARE @ROWCOUNT INTEGER
SET @ROWCOUNT = 1
WHILE @ROWCOUNT <> 0
BEGIN
	INSERT INTO S_SEBN67.GEACupax.dbo.pax_selo_electronico_log_u
	SELECT TOP 5000 A.* FROM pax_selo_electronico_log_u A (nolock)
	WHERE A.dt_mov		> '20050430'
		and NOT EXISTS (SELECT 1 FROM S_SEBN67.GEACupax.dbo.pax_selo_electronico_log_u B
					WHERE B.cd_aerop 				= A.cd_aerop
						and B.cd_terminal  			= A.cd_terminal
						and B.dt_mov  				= A.dt_mov
						and B.nro_selo_electronico  = A.nro_selo_electronico
						and B.billing_line_id		= A.billing_line_id
						and B.hh_mov  				= A.hh_mov
						and B.date_changed			= A.date_changed)
	SELECT @ROWCOUNT = @@ROWCOUNT
END







GO

/****** Object:  StoredProcedure [dbo].[migra_pax_selo_electronico_u]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.migra_pax_selo_electronico_u    Script Date: 19/09/2008 15:20:06 ******/
CREATE      PROC [dbo].[migra_pax_selo_electronico_u]
AS


DECLARE @ROWCOUNT INTEGER
SET @ROWCOUNT = 1
WHILE @ROWCOUNT <> 0
BEGIN
	INSERT INTO S_SEBN67.GEACupax.dbo.pax_selo_electronico_u
	SELECT TOP 10000 A.* FROM pax_selo_electronico_u A (nolock)
	WHERE A.dt_mov		> '20050430'
		and NOT EXISTS (SELECT 1 FROM S_SEBN67.GEACupax.dbo.pax_selo_electronico_u B
					WHERE B.cd_aerop 				= A.cd_aerop
						and B.cd_terminal  			= A.cd_terminal
						and B.dt_mov  				= A.dt_mov
						and B.nro_selo_electronico  = A.nro_selo_electronico
						and B.hh_mov  				= A.hh_mov)
	SELECT @ROWCOUNT = @@ROWCOUNT
END







GO

/****** Object:  StoredProcedure [dbo].[migra_pax_selo_log_u]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.migra_pax_selo_log_u    Script Date: 19/09/2008 15:20:06 ******/



CREATE    PROC [dbo].[migra_pax_selo_log_u]
AS


DECLARE @ROWCOUNT INTEGER
SET @ROWCOUNT = 1
WHILE @ROWCOUNT <> 0
BEGIN
	INSERT INTO S_SEBN67.GEACupax.dbo.pax_selo_log_u
	SELECT TOP 25000 A.* FROM pax_selo_log_u A (nolock)
	WHERE A.dt_mov		> '20050430'
		and NOT EXISTS (SELECT 1 FROM S_SEBN67.GEACupax.dbo.pax_selo_log_u B
					WHERE B.nro_selo				= A.nro_selo 
						AND B.tp_natureza			= A.tp_natureza
						AND B.dt_mov				= A.dt_mov
						AND B.selo_status			= A.selo_status
						AND B.date_changed			= A.date_changed
						AND B.billing_line_id		= A.billing_line_id)
	SELECT @ROWCOUNT = @@ROWCOUNT
END






GO

/****** Object:  StoredProcedure [dbo].[migra_pax_selo_u]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.migra_pax_selo_u    Script Date: 19/09/2008 15:20:06 ******/




CREATE     PROC [dbo].[migra_pax_selo_u]
AS

DECLARE @ROWCOUNT INTEGER

SET @ROWCOUNT = 1
WHILE @ROWCOUNT <> 0
BEGIN
	INSERT INTO S_SEBN67.GEACupax.dbo.pax_selo_u
	SELECT TOP 50000 A.* FROM pax_selo_u A (nolock)
	WHERE A.dt_mov		> '20050430'
		and NOT EXISTS (SELECT 1 FROM S_SEBN67.GEACupax.dbo.pax_selo_u B
						WHERE B.nro_selo				= A.nro_selo)
	SELECT @ROWCOUNT = @@ROWCOUNT
END




GO

/****** Object:  StoredProcedure [dbo].[psp_act_data_history]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_act_data_history    Script Date: 19/09/2008 15:20:06 ******/
CREATE PROC [dbo].[psp_act_data_history]
(		@p_user_id						CHAR(10)
		,@p_cd_aerop					CHAR(4)
		,@p_cd_terminal					CHAR(10)
		,@p_dt_mov						DATETIME
		,@p_nro_selo_electronico		CHAR(10)
		,@p_hh_mov						CHAR(6)
)
AS

DECLARE @data_process VARCHAR(8)
SET @data_process = CONVERT(VARCHAR,GETDATE(),112)
UPDATE pax_selo_elec_dup__history_u 
SET dt_mov 							= @p_dt_mov
WHERE user_id						= @p_user_id
	AND cd_aerop					= @p_cd_aerop
	AND cd_terminal					= @p_cd_terminal
	AND dt_mov						= '19000101'
	AND nro_selo_electronico		= @p_nro_selo_electronico
	AND hh_mov						= @p_hh_mov
	AND CONVERT(VARCHAR,dt_time,112)= @data_process



GO

/****** Object:  StoredProcedure [dbo].[psp_ajusta_discrepancias]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ajusta_discrepancias    Script Date: 19/09/2008 15:20:06 ******/



--exec psp_ajusta_discrepancias
-- select count (1) from pax_discrep_selo_u 
CREATE           PROC [dbo].[psp_ajusta_discrepancias]
	(@p_cd_aerop_destino  	varchar(4) 	= '%'
	,@p_selo				varchar(10)	= '%')	
AS

set nocount on
declare @nro_selo_inicial 	char(10)
	,@nro_selo_final		char(10)
	,@ano_remesa 			integer
	,@ano_remesa_dis 	   	integer
	,@p_ano_remesa_dist		integer
	,@nro_selo_dis			char(10)
	,@ROWCOUNT				INT
	,@p_nro_selo			char(10)
	,@ano_remesa_selo		INT
	,@p_arquivo				char(40)

	,@p_cd_aerop			char(4)
	,@p_cd_terminal			char(10)
	,@p_dt_entrega			datetime
	,@p_hh_entrega 			char(6)
	,@p_cd_cia_aerea 		char(3)
	,@p_nro_rste			char(6)
	,@count_linea			int
	,@count_total			int
	,@str					varchar(255)


DECLARE CUR_XX_SELO INSENSITIVE CURSOR FOR
SELECT nro_selo
	,arquivo
FROM pax_discrep_selo_u (NOLOCK)
WHERE cd_aerop_destino 	like @p_cd_aerop_destino
and nro_selo			like @p_selo
and dt_mov				> '20070101'
order by nro_selo

OPEN CUR_XX_SELO 

SET @count_linea			= 0
SET @count_total			= @@CURSOR_ROWS

FETCH NEXT FROM CUR_XX_SELO INTO @p_nro_selo, @p_arquivo
set @nro_selo_final = ''
WHILE @@FETCH_STATUS = 0
BEGIN
	set @str = ''
	SELECT @ano_remesa_dis  	= ano_remesa
		,@nro_selo_dis			= nro_selo  
	FROM pax_discrep_selo_u (nolock index = IX_nro_selo) 
	where nro_selo = @p_nro_selo

	select @ano_remesa_selo 	= ano_remesa
		,@p_cd_aerop			= cd_aerop
		,@p_cd_terminal			= cd_terminal
		,@p_cd_cia_aerea 		= cd_cia_aerea
		,@p_nro_rste			= nro_rste
	from pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
	where nro_selo = @p_nro_selo
	
	SET @ROWCOUNT = @@ROWCOUNT
	
	IF (@ROWCOUNT = 1) 
	BEGIN 
		if (@ano_remesa_selo <> @ano_remesa_dis)
		begin
			update pax_discrep_selo_u
			set ano_remesa = @ano_remesa_selo
			where nro_selo = @p_nro_selo
			and ano_remesa	= @ano_remesa_dis
			set @str = 'Atualizado'
		end
	END
	ELSE
	BEGIN
		select @ano_remesa_selo 	= ano_remesa
			,@p_cd_aerop			= cd_aerop
			,@p_cd_terminal			= cd_terminal
			,@p_cd_cia_aerea 		= cd_cia_aerea
			,@p_nro_rste			= nro_rste
		from pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
		where nro_selo 	= @p_nro_selo
		AND selo_status	= '1'

		SET @ROWCOUNT = @@ROWCOUNT

		IF (@ROWCOUNT = 1) 
		BEGIN 
			if (@ano_remesa_selo <> @ano_remesa_dis)
			begin 
				update pax_discrep_selo_u
				set ano_remesa 	= @ano_remesa_selo
				where nro_selo 	= @p_nro_selo
				and ano_remesa	= @ano_remesa_dis
				set @str = 'Atualizado'
			end
		END	
	END

	SET @count_linea			= @count_linea + 1
	set @str = LTRIM(RTRIM(STR(@count_total))) + '/'+ LTRIM(RTRIM(STR(@count_linea))) + ' --> ' + @p_nro_selo + ' -> '+ @str
	--print @str
	FETCH NEXT FROM CUR_XX_SELO INTO @p_nro_selo, @p_arquivo
END
CLOSE CUR_XX_SELO 
DEALLOCATE CUR_XX_SELO 


set nocount off





GO

/****** Object:  StoredProcedure [dbo].[psp_ajusta_dt_confirma]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ajusta_dt_confirma    Script Date: 19/09/2008 15:20:06 ******/




CREATE   PROC [dbo].[psp_ajusta_dt_confirma]
AS

DECLARE @row 			integer
		,@err 			real
		,@con 			real
		,@str 			varchar(200)
		,@nro_selo		CHAR(10)
		,@selo_status	CHAR(1)
		,@date_created	DATETIME
		,@dt_confirma	DATETIME
		,@chgstamp		SMALLINT
		,@dt_proceso	DATETIME
		,@user			CHAR(30)
		,@ciclo 		smallint
		,@nro_ult_selo	CHAR(10)


SET NOCOUNT ON

SELECT @dt_proceso 		= GETDATE()
		,@user			= 'MUNOZ (AJU. DATA CANCELAMENTO)'
		,@ciclo			= 1
		,@nro_ult_selo	= ''

SELECT @str = 'INICIO DE PROCESO ' + CONVERT(VARCHAR, GETDATE(), 120) + CHAR(10) + CHAR(13)
PRINT @str

DECLARE cur_selo_jm CURSOR FOR
SELECT nro_selo, selo_status, date_created, dt_confirma, chgstamp
FROM TEMP_SELO_JMUNOZ_20040204 (NOLOCK INDEX = IX_NRO_SELO)

EMPEZAR:

IF @ciclo > 2100
	GOTO FIM

SELECT @row = 1
	,@con 	= 0
	,@str 	= ''


SET ROWCOUNT 10000

TRUNCATE TABLE TEMP_SELO_JMUNOZ_20040204
INSERT INTO TEMP_SELO_JMUNOZ_20040204
SELECT nro_selo, selo_status, date_created, dt_confirma, chgstamp
FROM pax_selo_u (NOLOCK)
WHERE dt_confirma ='19000101'

SELECT @str = 'CICLO : ' + LTRIM(RTRIM(@ciclo)) +'  ENCONTRADOS ' + LTRIM(RTRIM(STR(@@ROWCOUNT))) + CHAR(13) + CHAR(10)
PRINT @str 

SET ROWCOUNT 0

OPEN cur_selo_jm
FETCH NEXT FROM cur_selo_jm INTO @nro_selo, @selo_status, @date_created, @dt_confirma, @chgstamp
WHILE @@FETCH_STATUS = 0
BEGIN

	BEGIN TRANSACTION

	IF @selo_status = 0 
	BEGIN
		UPDATE pax_selo_u
		SET dt_mov 				= CASE WHEN CONVERT(VARCHAR, dt_confirma,112) = '19000101' THEN date_created ELSE dt_confirma END
			,dt_confirma		= CASE WHEN CONVERT(VARCHAR, dt_confirma,112) = '19000101' THEN date_created ELSE dt_confirma END
			,user_id_changed 	= @user
			,date_changed		= @dt_proceso
			,chgstamp			= chgstamp + 1
		WHERE nro_selo 		= @nro_selo
		AND selo_status 	= 0
		AND	@dt_confirma 	= '19000101'
	END
	ELSE
	BEGIN
		UPDATE pax_selo_u
		SET dt_confirma			= date_created
			,user_id_changed 	= @user
			,date_changed		= @dt_proceso
			,chgstamp			= chgstamp + 1
		WHERE nro_selo 	= @nro_selo
	END

	SELECT @row = @@ROWCOUNT, @err = @@ERROR 
	
	IF (@row > 0) AND (@err = 0) 
	BEGIN
		DELETE pax_selo_log_u
		WHERE nro_selo 							= @nro_selo
		AND selo_status 						= @selo_status
		AND chgstamp							= @chgstamp 
		
		SELECT @row = @@ROWCOUNT, @err = @@ERROR 
	END			

	SELECT @con = @con + 1	

	IF @err <> 0
	BEGIN
	   ROLLBACK TRANSACTION
	   SELECT @str = 'ROLLBACK ' + RIGHT(STR(10000000 + @con),7) + '  ' + CONVERT(VARCHAR, GETDATE(), 120) + CHAR(13) + CHAR(10)
	   PRINT @str
	   SELECT @con = 0
	   GOTO SALIR
	END
	ELSE
	BEGIN
	   COMMIT TRANSACTION
--	   SELECT @str = 'COMMIT ' + RIGHT(STR(10000000 + @con),7) + ' ' + @nro_selo 	+ '  ' + CONVERT(VARCHAR, GETDATE(), 120) + CHAR(13) + CHAR(10)
--	   PRINT @str
	END

	FETCH NEXT FROM cur_selo_jm INTO @nro_selo, @selo_status, @date_created, @dt_confirma, @chgstamp

END

SALIR:

SELECT @nro_ult_selo = @nro_selo

CLOSE cur_selo_jm

SET ROWCOUNT 1
IF EXISTS(SELECT nro_selo FROM pax_selo_u (NOLOCK)
WHERE dt_confirma ='19000101')
BEGIN
	SET ROWCOUNT 0
	SELECT @ciclo = @ciclo + 1
   	GOTO EMPEZAR
END

FIM:
DEALLOCATE cur_selo_jm

SET ROWCOUNT 0

SET NOCOUNT OFF
SELECT @str = 'FIM DE PROCESO' + CONVERT(VARCHAR, GETDATE(), 120) + CHAR(13) + CHAR(10)
PRINT @str






GO

/****** Object:  StoredProcedure [dbo].[psp_ajusta_item_selo_aerop]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ajusta_item_selo_aerop    Script Date: 19/09/2008 15:20:07 ******/



CREATE    proc [dbo].[psp_ajusta_item_selo_aerop]
			(@p_cd_aerop		varchar(4) = '%')
as

/*
exec psp_ajusta_item_selo_aerop 'SBBH'
sp_spaceused pax_selo_electronico_u
sp_helpindex pax_selo_electronico_u

select 
	cd_aerop 
	,convert(varchar(20), date_prc, 120)
	,qtd
	,convert(varchar(20), data_ini, 120)
	,convert(varchar(20), data_fim, 120)
	,datediff(mi, data_ini, data_fim)
from pax_salida_ajuste_item_munoz
order by date_prc,data_ini

select distinct a.cd_aerop 
from GEACutcx..cor_tpfatur_selo_u a
where a.tp_fatur_pax = '1'
and not exists (Select 1 from pax_salida_ajuste_item_munoz b
							where b.cd_aerop						= a.cd_aerop
							and convert(varchar(8), date_prc, 112) 	= convert(varchar(8), getdate(),112))
and a.cd_aerop	like @p_cd_aerop

Select * from pax_salida_ajuste_item_munoz b

*/

set nocount on

declare @v_item_dom_vista		varchar(26)
	,@v_item_dom_faturado		varchar(26)
	,@v_item_int_vista			varchar(26)
	,@v_item_int_faturado		varchar(26)
	,@v_item_isento				varchar(26)
	,@v_cd_aerop_aux			char(4)
	,@v_dt_ini					datetime
	,@v_dt_fim					datetime
	,@v_dt_ini_aux				datetime
	,@count_selos				int
	,@strmsg					varchar(255)

set @v_dt_ini		= getdate()

declare cur_aerop insensitive cursor for
select distinct a.cd_aerop 
from GEACutcx..cor_tpfatur_selo_u a
where a.tp_fatur_pax = '1'
and not exists (Select 1 from pax_salida_ajuste_item_munoz b
				where b.cd_aerop						= a.cd_aerop
				and convert(varchar(8), date_prc, 112) 	= convert(varchar(8), getdate(),112))
and a.cd_aerop	like @p_cd_aerop

order by 1

open cur_aerop
fetch next from cur_aerop into @v_cd_aerop_aux
while @@fetch_status = 0
begin
	set @v_dt_ini_aux				= getdate()
	set @count_selos  				= 0

	/* busca item de selo domestico a vista */
	select top 1 @v_item_dom_vista = item_id
	from GEACutcx..cor_item_pax_u
	where cd_aerop 		= @v_cd_aerop_aux
	and cd_terminal		= '1'
	and tp_natureza		= 'D'
	and inactive_ind 	= '0'
	and right(rtrim(ltrim(item_id)),1) = 'V'
	order by dt_vigencia desc
	
	/* busca item de selo domestico faturado */
	select top 1 @v_item_dom_faturado = item_id
	from GEACutcx..cor_item_pax_u
	where cd_aerop 		= @v_cd_aerop_aux
	and cd_terminal		= '1'
	and tp_natureza		= 'D'
	and inactive_ind 	= '0'
	and right(rtrim(ltrim(item_id)),1) <> 'V'
	order by dt_vigencia desc
	
	/* busca item de selo internacional a vista */
	select top 1 @v_item_int_vista = item_id
	from GEACutcx..cor_item_pax_u
	where cd_aerop 		= @v_cd_aerop_aux
	and cd_terminal		= '1'
	and tp_natureza		= 'I'
	and inactive_ind 	= '0'
	and right(rtrim(ltrim(item_id)),1) = 'V'
	order by dt_vigencia desc
	
	/* busca item de selo internacional faturado */
	select top 1 @v_item_int_faturado = item_id
	from GEACutcx..cor_item_pax_u
	where cd_aerop 		= @v_cd_aerop_aux
	and cd_terminal		= '1'
	and tp_natureza		= 'I'
	and inactive_ind 	= '0'
	and right(rtrim(ltrim(item_id)),1) <> 'V'
	order by dt_vigencia desc

	/*
	update pax_selo_u
	set item_fat = case when tp_fat = 'A' and tp_natureza = 'D' then @v_item_dom_vista
						when tp_fat = 'A' and tp_natureza = 'I' then @v_item_int_vista
						when tp_fat = 'F' and tp_natureza = 'D' then @v_item_dom_faturado
						when tp_fat = 'F' and tp_natureza = 'I' then @v_item_int_faturado
						else item_fat end
	,chgstamp			= chgstamp + 1
	,user_id_changed	= 'Ajuste de Item'
	,date_changed		= getdate()
	where billing_line_id		= 0
	and selo_status				= '2'
	and cd_aerop_utilizacao 	= @v_cd_aerop_aux
	and cd_terminal_utilizacao 	= '1'
	and tp_natureza				<> 'S'
	*/
	

	/* Domestico a Vista*/
	if not (@v_item_dom_vista is null )
	begin
		update pax_selo_u
		set item_fat 		= @v_item_dom_vista
		,chgstamp			= chgstamp + 1
		,user_id_changed	= 'Ajuste de Item'
		,date_changed		= @v_dt_ini
		where billing_line_id		= 0
		and selo_status				= '2'
		and cd_aerop_utilizacao 	= @v_cd_aerop_aux
		and cd_terminal_utilizacao 	= '1'
		and tp_natureza				= 'D'
		and tp_fat					= 'A'
		and item_fat 				<> @v_item_dom_vista
	
		set @count_selos = @count_selos + @@rowcount
	end
	
	/* Domestico  Faturado*/
	if not (@v_item_dom_faturado is null) 
	begin
		update pax_selo_u
		set item_fat 		= @v_item_dom_faturado
		,chgstamp			= chgstamp + 1
		,user_id_changed	= 'Ajuste de Item'
		,date_changed		= @v_dt_ini
		where billing_line_id		= 0
		and selo_status				= '2'
		and cd_aerop_utilizacao 	= @v_cd_aerop_aux
		and cd_terminal_utilizacao 	= '1'
		and tp_natureza				= 'D'
		and tp_fat					= 'F'
		and item_fat 				<> @v_item_dom_faturado
	
		set @count_selos = @count_selos + @@rowcount
	end

	/* Internacional a Vista*/
	if not (@v_item_int_vista is null) 
	begin
		update pax_selo_u
		set item_fat 		= @v_item_int_vista
		,chgstamp			= chgstamp + 1
		,user_id_changed	= 'Ajuste de Item'
		,date_changed		= @v_dt_ini
		where billing_line_id		= 0
		and selo_status				= '2'
		and cd_aerop_utilizacao 	= @v_cd_aerop_aux
		and cd_terminal_utilizacao 	= '1'
		and tp_natureza				= 'I'
		and tp_fat					= 'A'
		and item_fat 				<> @v_item_int_vista
	
		set @count_selos = @count_selos + @@rowcount
	end

	/* Internacional a Faturado*/
	if not (@v_item_int_faturado is null) 
	begin
		update pax_selo_u
		set item_fat 		= @v_item_int_faturado
		,chgstamp			= chgstamp + 1
		,user_id_changed	= 'Ajuste de Item'
		,date_changed		= @v_dt_ini
		where billing_line_id		= 0
		and selo_status				= '2'
		and cd_aerop_utilizacao 	= @v_cd_aerop_aux
		and cd_terminal_utilizacao 	= '1'
		and tp_natureza				= 'I'
		and tp_fat					= 'F'
		and item_fat 				<> @v_item_int_faturado
	
		set @count_selos = @count_selos + @@rowcount
	end
/*
	update pax_selo_electronico_u
	set item_fat 		= @v_item_dom_faturado
	,chgstamp			= chgstamp + 1
	,user_id_changed	= 'Ajuste de Item'
	,date_changed		= @v_dt_ini
	where billing_line_id		= 0
	and selo_status				= '2'
	and cd_aerop_utilizacao		= @v_cd_aerop_aux
	and cd_terminal_utilizacao	= '1'
	and tp_natureza				= 'D'
	and tp_fat					= 'F'
	and item_fat 				<> @v_item_dom_faturado

	set @count_selos = @count_selos + @@rowcount

	update pax_selo_electronico_u
	set item_fat 		= @v_item_int_faturado
	,chgstamp			= chgstamp + 1
	,user_id_changed	= 'Ajuste de Item'
	,date_changed		= @v_dt_ini
	where billing_line_id		= 0
	and selo_status				= '2'
	and cd_aerop_utilizacao		= @v_cd_aerop_aux
	and cd_terminal_utilizacao 	= '1'
	and tp_natureza				= 'I'
	and tp_fat					= 'F'
	and item_fat 				<> @v_item_int_faturado
*/

	set @v_dt_fim					= getdate()

/*
	create table pax_salida_ajuste_item_munoz
		(	cd_aerop 	varchar(4)
			,date_prc	datetime
			,qtd		int
			,data_ini	datetime
			,data_fim	datetime
			)
*/
	
	select @v_cd_aerop_aux aerop
		,@count_selos qtd
		,@v_dt_ini_aux 				dat_ini
		,@v_dt_fim 					dat_fim
		,@v_item_dom_vista			item_dom_vista
		,@v_item_dom_faturado		item_dom_faturado
		,@v_item_int_vista			item_int_vista
		,@v_item_int_faturado		item_int_faturado

	insert into pax_salida_ajuste_item_munoz
	select @v_cd_aerop_aux aerop
		,@v_dt_ini
		,@count_selos qtd
		,@v_dt_ini_aux dat_ini
		,@v_dt_fim dat_fim

	set @strmsg		= @v_cd_aerop_aux +' - '+ rtrim(ltrim(str(@count_selos)))
	 +' / '+ convert(varchar(20), @v_dt_ini_aux, 120)
	 +' / '+ convert(varchar(20), @v_dt_fim, 120)
	 +' - '+ rtrim(ltrim(str(datediff(mi, @v_dt_ini_aux, @v_dt_fim))))

	print @strmsg

	fetch next from cur_aerop into @v_cd_aerop_aux
end
close cur_aerop
deallocate cur_aerop

set @v_dt_fim					= getdate()

select 'TOTAL TEMPO', @v_dt_fim, @v_dt_ini, datediff(mi, @v_dt_ini, @v_dt_fim)

set nocount off






GO

/****** Object:  StoredProcedure [dbo].[psp_ajusta_item_selo_elec]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ajusta_item_selo_elec    Script Date: 19/09/2008 15:20:07 ******/
CREATE proc [dbo].[psp_ajusta_item_selo_elec]
as
declare @v_cd_aerop_aux		char(4)
declare cur_aerop_ii insensitive cursor for
select distinct a.cd_aerop 
from GEACutcx..cor_tpfatur_selo_u a
where a.tp_fatur_pax = '1'
order by 1

open cur_aerop_ii
fetch next from cur_aerop_ii into @v_cd_aerop_aux
while @@fetch_status = 0
begin

	update pax_selo_electronico_u
	set item_fat 			= replace(item_fat,'V','')
		,chgstamp			= chgstamp + 1
		,user_id_changed	= 'Ajuste de Item'
		,date_changed		= getdate()
	from pax_selo_electronico_u a
	where cd_aerop		= @v_cd_aerop_aux
	and exists (select 1 from pax_selo_electronico_u_erro_item b 
				where b.cd_aerop 			= a.cd_aerop 
				and b.cd_terminal 			= a.cd_terminal 
				and b.dt_mov 				= a.dt_mov
				and b.nro_selo_electronico 	= a.nro_selo_electronico)
		
	fetch next from cur_aerop_ii into @v_cd_aerop_aux
end
close cur_aerop_ii
deallocate cur_aerop_ii



GO

/****** Object:  StoredProcedure [dbo].[psp_ajusta_qtd_linha_arquivo]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ajusta_qtd_linha_arquivo    Script Date: 19/09/2008 15:20:07 ******/
CREATE proc [dbo].[psp_ajusta_qtd_linha_arquivo](
		@p_arquivo 	varchar(255) 	= '%',
		@p_saida	char(1) 		= 'N' )
as

/*
exec psp_ajusta_qtd_linha_arquivo '0061_T_071029-085254_U00_105.TXT', 'S'
*/

set nocount on
declare @v_arquivo 			varchar(255)
	,@v_qtd_lineas_arq		integer
	,@v_qtd_lineas_arq_aux	integer
	,@v_qtd_arq				integer
	,@v_dt_proceso			datetime
	,@v_dt_inicio			datetime
	,@v_strmessage			varchar(255)

set @v_dt_proceso = getdate()
create table #table_salida_xx (secuencia 	integer identity
						,data			datetime
						,mensaje		varchar(255))

declare cur_arquivos_xx insensitive cursor for
select arquivo
	,qtd_lineas_arq
from pax_baixa_selo_u (nolock)
where arquivo like @p_arquivo
open cur_arquivos_xx
fetch next from cur_arquivos_xx into @v_arquivo, @v_qtd_lineas_arq
set @v_qtd_arq = @@cursor_rows
insert into #table_salida_xx values (@v_dt_proceso, 'Incio do Proceso')
while @@fetch_status = 0
begin
	set @v_dt_proceso 	= getdate()	
	select @v_arquivo arquivo, @v_qtd_lineas_arq qtd_lineas_arq
	select @v_qtd_lineas_arq_aux = COUNT(1)
	from pax_selos_coletados_u (nolock)
	where  arquivo 				= @v_arquivo
	AND nro_linha				>= 3
	AND left(linha,1)			<> '#'
	and substring(arquivo,8,2) 	>= '06'
	if @v_qtd_lineas_arq <> @v_qtd_lineas_arq_aux 
	begin
		update pax_baixa_selo_u
		set qtd_lineas_arq 			= @v_qtd_lineas_arq_aux
			,qtd_selos				= @v_qtd_lineas_arq_aux - (qtd_discrepancias + qtd_discrepancias_tra + qtd_duplicados)
		where  arquivo 				= @v_arquivo
		set @v_strmessage = 'Arquivo processado ' + ltrim(rtrim(@v_arquivo)) + ' qtd linha = ' + ltrim(rtrim(str(@v_qtd_lineas_arq))) + ' qtd linha do arquivo = '+ ltrim(rtrim(str(@v_qtd_lineas_arq_aux)) + ' (Atualizado)')
		insert into #table_salida_xx values  (@v_dt_proceso,  @v_strmessage)
	end
	else
	begin
		set @v_strmessage = 'Arquivo processado ' + ltrim(rtrim(@v_arquivo)) + ' qtd linha = ' + ltrim(rtrim(str(@v_qtd_lineas_arq))) + ' qtd linha do arquivo = '+ ltrim(rtrim(str(@v_qtd_lineas_arq_aux)))
		insert into #table_salida_xx values  (@v_dt_proceso,  @v_strmessage)
	end
	fetch next from cur_arquivos_xx into @v_arquivo, @v_qtd_lineas_arq
end 
close cur_arquivos_xx
deallocate cur_arquivos_xx
set @v_dt_proceso = getdate()	
insert into #table_salida_xx values  (@v_dt_proceso,   'Fim de Processo')
if @p_saida = 'S'
begin
	select * from #table_salida_xx order by 1
end
drop table #table_salida_xx 
set nocount off


GO

/****** Object:  StoredProcedure [dbo].[psp_ajusta_status_selos]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_ajusta_status_selos    Script Date: 19/09/2008 15:20:07 ******/


CREATE  PROCEDURE [dbo].[psp_ajusta_status_selos]
AS
DECLARE @row integer
DECLARE @err real
DECLARE @con real
DECLARE @str varchar(200)
BEGIN
	SELECT @str = 'INICIO DE PROCESO '+ CHAR(13)
	SELECT @row = 1
	,@con = 0
	,@str = ''
	SET NOCOUNT ON
	WHILE @row <> 0
	BEGIN
		BEGIN TRANSACTION
		SET ROWCOUNT 5000
		UPDATE pax_selo_u
		SET selo_status  = B.selo_status
		,user_id_changed = suser_sname()
		,date_changed  = GETDATE()
		From  pax_selo_log_u   A (NOLOCK)
		INNER JOIN pax_selo_log_u   B (NOLOCK) 
		ON B.nro_selo  = A.nro_selo 
		AND B.date_changed = A.date_changed 
		AND B.date_changed = (SELECT MAX(C.date_changed) 
								FROM pax_selo_log_u  C (NOLOCK) 
								WHERE C.nro_selo = B.nro_selo
								GROUP BY C.nro_selo )

		SELECT @row = @@ROWCOUNT, @err = @@ERROR ,@con = @con + @@ROWCOUNT
		IF @err <> 0
		BEGIN
			ROLLBACK TRANSACTION
			SELECT @str = 'ROLLBACK ' + LTRIM(RTRIM(STR(@con)))+ CHAR(13)
			PRINT @str
			GOTO SALIR
		END
		ELSE
			BEGIN
			COMMIT TRANSACTION
			SELECT @str = 'COMMIT ' + LTRIM(RTRIM(STR(@con)))+ CHAR(13)
			PRINT @str  
		END
	END
	SALIR:
	SET ROWCOUNT 0
	SET NOCOUNT OFF
	SELECT @str = 'FIM DE PROCESO' + CHAR(13)
	PRINT @str
END



GO

/****** Object:  StoredProcedure [dbo].[psp_altera_status_selo]    Script Date: 01/05/2011 18:05:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_altera_status_selo    Script Date: 19/09/2008 15:20:07 ******/


/*
exec psp_altera_status_selo 'JJ061113085700-3216SBSP.TXT', '5', '2'
"psp_altera_status_selo '" + strarquivo + "', '5', '2'" 


exec psp_altera_status_selo 'JJ061120075000-3039SBSP.TXT', '5', '2'

*/

CREATE   proc [dbo].[psp_altera_status_selo]
(			@p_arquivo			varchar(255)
			,@p_status_atual	char(1)
			,@p_status_novo		char(1)
)
AS
set nocount on
/* Declarar variables */
Declare @v_cd_aerop			char(4)
	,@v_cd_terminal			char(1)
	,@v_cd_cia_aerea		char(3)
	,@v_dt_voo				datetime	
	,@v_voo_rea				char(4)
	,@v_date_changed		datetime
	,@v_user_id_changed		varchar(30)
	,@v_count				integer
	,@v_error				integer
	,@v_str_error			varchar(255)
	,@p_execute				varchar(255)
	,@sql					varchar(3000)
	,@v_pasta_arquivos		varchar(255)


/* Verificar se o arquivo existe */
if not exists (select 1 from pax_conf_baixa_selo_u (nolock)
where arquivo = @p_arquivo)
begin
	select @v_error			= 1
		,@v_str_error		= 'Arquivo não Exite.'
	goto salir 
end

/* Verificar Cia Aerea */
select @v_cd_cia_aerea = cd_cia_aerea
from GEACutcx..cor_cia_aerea_u (nolock)
where sigla_iata = substring(@p_arquivo, 1,2)
  and inactive_ind = 0

if @@rowcount = 0
begin
	select @v_error			= 1
		,@v_str_error		= 'Cia Aerea não cadastrada.'
	goto salir 
end

/* Procurar pasta de arquivo processados */
exec GEACCOMMON..psp_buscar_valor_tab_gen 'TDIR', 'CSELO_PROC', @v_pasta_arquivos output
if @v_pasta_arquivos = ''
begin
	select @v_error			= 1
		,@v_str_error		= 'Pasta de Arquivos processados não existe ou usuario não tem acceso a essa pasta.'
	goto salir 
end

/*
CREATE TABLE TEMP_SELO_TRASFERIDO (selo varchar(255))
grant all on TEMP_SELO_TRASFERIDO to public
*/

delete TEMP_SELO_TRASFERIDO
set @p_execute = 'TYPE ' + @v_pasta_arquivos + '\' + @p_arquivo 
set @sql = 'master..xp_cmdshell ''' + @p_execute + ''''
insert into TEMP_SELO_TRASFERIDO exec  (@sql)

delete from TEMP_SELO_TRASFERIDO where selo is null
delete from TEMP_SELO_TRASFERIDO where left(selo,1) <> '1'
delete from TEMP_SELO_TRASFERIDO where substring(selo,17,1) <> 'T'
delete from TEMP_SELO_TRASFERIDO where left(selo,1) <> '1'
update TEMP_SELO_TRASFERIDO set selo = substring(selo, 3, 14)

--	and year(dt_voo_rea)					= year(@v_dt_voo)
--	and substring(nro_selo_electronico,8,4)	= substring(@p_arquivo,  5,4)
--	and voo_rea								= @v_voo_rea

/* Ajustar parámetros */
select @v_cd_aerop			= substring(@p_arquivo, 20,4)
	,@v_dt_voo				= substring(@p_arquivo,  3,6)
	,@v_cd_terminal			= '1'
	,@v_voo_rea				= substring(@p_arquivo,  16,4)
	,@v_date_changed		= getdate()
	,@v_user_id_changed		= suser_sname()
	,@v_error				= 0
	,@v_str_error			= ''
	,@v_count				= 0

if @p_status_atual	= '5' and @p_status_novo = '2'
begin
	update pax_selo_electronico_u
	set selo_status 		= '2'
		,date_changed		= @v_date_changed
		,user_id_changed	= @v_user_id_changed
		,chgstamp			= chgstamp + 1
	from pax_selo_electronico_u a (index = IDX02_BI)
	where a.cd_aerop			= @v_cd_aerop
	and a.cd_terminal			= @v_cd_terminal
	and a.cd_cia_aerea			= @v_cd_cia_aerea
	and a.selo_status			= @p_status_atual
	and a.billing_line_id		= 0
	and exists (select 1 from TEMP_SELO_TRASFERIDO b(nolock)
				where b.selo = a.nro_selo_electronico)

	set @v_count = @@rowcount
end

salir:

if @v_error = 0
begin
	set @v_str_error = rtrim(ltrim(str(@v_count))) + ' Selos Alterados.' 
end

select 	@v_error, @v_str_error	

delete TEMP_SELO_TRASFERIDO

set nocount off




GO

/****** Object:  StoredProcedure [dbo].[psp_alterar_status_selo]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_alterar_status_selo    Script Date: 19/09/2008 15:20:08 ******/


/*
EXECUTE SQLSSIII.GEACupax.dbo.psp_alterar_status_selo  'D50284297', '1', 'X', 'SBBR', '1', '20070703 00:00:00', 2007
*/

CREATE PROC [dbo].[psp_alterar_status_selo] 
(		@p_nro_selo				CHAR(10)
		,@p_selo_status			CHAR(1)
		,@p_selo_status_novo	CHAR(1)
		,@p_cd_aerop			CHAR(4)
		,@p_cd_terminal			CHAR(10)
		,@p_dt_mov				DATETIME	
		,@p_ano_remesa			integer
)
as

set nocount on

--DECLARACION DE VARIABLES 

DECLARE @v_selo_status			CHAR(1)
		,@bln_error				SMALLINT
		,@msg					VARCHAR(255)		
		,@v_billing_line_id		INTEGER
		,@v_user_id_changed		CHAR(30)
		,@v_date_changed		DATETIME
		,@v_tp_fat				CHAR(1)
		,@p_tp_natureza			CHAR(1)
		,@p_cd_motivo			CHAR(2)
		,@p_item_fat			CHAR(26)
		,@p_tp_coletor			CHAR(2)

-- VALIDACIONES

BEGIN TRANSACTION 

SELECT @v_selo_status 			= selo_status
		,@v_billing_line_id		= billing_line_id
		,@v_user_id_changed		= suser_sname()
		,@v_date_changed		= GETDATE()
		,@v_tp_fat				= tp_fat
		,@p_tp_natureza			= tp_natureza
FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
WHERE nro_selo 		= @p_nro_selo
and ano_remesa		= @p_ano_remesa

IF @@ROWCOUNT = 0
BEGIN 
	SELECT @bln_error 	= 1
		,@msg			= 'O selo não exite.'
	GOTO SALIR
END

IF @p_selo_status <> @v_selo_status
BEGIN
	SELECT @bln_error 	= 1
		,@msg			= 'Não é a situação atual do Selo.'
	GOTO SALIR
END

IF @v_billing_line_id <> 0
BEGIN
	SELECT @bln_error 	= 1
		,@msg			= 'O selo já tem boleto gerado, não se pode modificar sua situação.'
	GOTO SALIR
END


IF (@p_selo_status = '4' AND @p_selo_status_novo = '2') 
	or (@p_selo_status = @p_selo_status_novo)
	or (@p_selo_status = '1' AND @p_selo_status_novo = '0') 
	or (@p_selo_status = '2' AND @p_selo_status_novo = '1') 
	or (@p_selo_status = '2' AND @p_selo_status_novo = '3') 
	or (@p_selo_status = '1' AND @p_selo_status_novo = 'X') 
BEGIN 

	/* 	001 ALTERA ITEM 
		RESPONSAVEL MUNOZ
		DATA DE ALTERAÇÃO 21/001/2007 */
	if @v_tp_fat = 'A' and @p_tp_natureza in ('D','I')
	begin
		SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
		FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
		WHERE cd_aerop      		= @p_cd_aerop 		    AND cd_terminal     	= @p_cd_terminal 
		    AND tp_natureza     	= @p_tp_natureza 
		    AND dt_vigencia			<= @p_dt_mov
			and inactive_ind		= '0'
			AND RIGHT(RTRIM(item_id),1) = 'V'
		ORDER BY   dt_vigencia DESC
	end
	else
	begin
		SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
		FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
		WHERE cd_aerop      		= @p_cd_aerop 
		    AND cd_terminal     	= @p_cd_terminal 
		    AND tp_natureza     	= @p_tp_natureza 
		    AND dt_vigencia			<= @p_dt_mov
			and inactive_ind		= '0'
			AND RIGHT(RTRIM(item_id),1) <> 'V'
		ORDER BY   dt_vigencia DESC
	end
	/* FIM 001 ALTERA ITEM */

	/*  Alterado 21/01/2008
		Responsavel Munoz
	--  BUSCAR EL ITEM    
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
		AND cd_terminal     	= @p_cd_terminal 
		AND tp_natureza     	= @p_tp_natureza 
		AND dt_vigencia			<= @p_dt_mov
		AND inactive_ind		= '0'
	ORDER BY   dt_vigencia DESC
	*/
	SELECT @p_cd_motivo			= 'NA'
		,@p_tp_coletor			= '03'

	--  Caso esteja tudo correto o processo atualiza o status do selo como utilizado 
	UPDATE GEACupax..pax_selo_u
	SET
		cd_aerop_utilizacao     	= CASE WHEN @p_selo_status_novo in ('0','3') THEN ' ' ELSE @p_cd_aerop END
		,cd_terminal_utilizacao  	= CASE WHEN @p_selo_status_novo in ('0','3') THEN ' ' ELSE @p_cd_terminal END
		,dt_mov                  	= @p_dt_mov
		,item_fat					= CASE WHEN @p_selo_status_novo in ('0','3') THEN ' ' 
											ELSE CASE WHEN @v_tp_fat = 'F' THEN @p_item_fat ELSE item_fat END
									  END
		,selo_status             	= @p_selo_status_novo
		,cd_motivo             		= @p_cd_motivo
		,tp_coletor  				= @p_tp_coletor
		,date_changed				= @v_date_changed
		,user_id_changed			= @v_user_id_changed
		,chgstamp					= chgstamp + 1
	WHERE 
		nro_selo      		= @p_nro_selo          
		and ano_remesa		= @p_ano_remesa
END 
ELSE
BEGIN
	SELECT @bln_error 	= 1
		,@msg			= 'Tipo de Alteração não permitida.'
	GOTO SALIR
END

SALIR:
IF @bln_error 	= 1
BEGIN
	ROLLBACK TRANSACTION
END 
ELSE
BEGIN
	COMMIT TRANSACTION
	SELECT @bln_error = 0 , @msg = 'Selo Atualizado sem problemas.'
END

SELECT @bln_error, @msg


set nocount off







GO

/****** Object:  StoredProcedure [dbo].[psp_analisa_arquivo_selos]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analisa_arquivo_selos    Script Date: 19/09/2008 15:20:08 ******/


--drop procedure psp_analisa_arquivo_selos
--EXEC psp_analisa_arquivo_selos '\\s-sewn48\DriveF\SELO', 'SBRJ_1_1_U_NA_23052004-114234_0_401.TXT'
--EXEC psp_analisa_arquivo_selos '\\s-sewn48\DriveF\SELO_PROCESADO', 'SBSV_1_1_U_NA_17062004-013601_1_401.TXT'
--EXEC psp_analisa_arquivo_selos '\\s-sewn48\DriveF\CONFSELO_PROCESADO', 'JJ040702063000-2832SBGR.TXT'
--EXEC psp_analisa_arquivo_selos '\\s-sewn14\Tam\Selo', 'JJ040501230000-2352SBRJ.TXT'
CREATE PROC [dbo].[psp_analisa_arquivo_selos]
(		 @p_ruta			VARCHAR (255)
		,@p_arquivo			VARCHAR (255)
)

AS

SET NOCOUNT ON

DECLARE @p_tp_selo				char(1)
		,@p_selo_status			char(1)
		,@p_nro_selo			char(10)
		,@p_nro_selo_elec		char(20)
		,@p_exec				char(255)
		,@p_qtd_lineas_arq		INTEGER
		,@msg					VARCHAR(255)
		,@p_count				SMALLINT


IF not EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_PRO_SELO' AND xtype = 'U')
	RAISERROR 26000 'NAO EXIXTE TABELA TEMPORARIA [TEMP_PRO_SELO].'
	
-- CREATE TABLE dbo.TEMP_PRO_SELO (LINEA VARCHAR(255) )
-- CREATE INDEX IX_NRO_SELO ON TEMP_PRO_SELO (LINEA)
-- GRANT ALL ON TEMP_PRO_SELO TO geaccarga

DELETE TEMP_PRO_SELO 

SELECT @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

IF @p_ruta = '' OR @p_arquivo = ''
BEGIN
	PRINT 'PARÂMETROS INCOMPLETOS'
	GOTO SEGUIR
END

IF SUBSTRING(@p_arquivo,1,2) = 'SB'
BEGIN
  SELECT @p_tp_selo = SUBSTRING(@p_arquivo, 31, 1)
  IF @p_tp_selo NOT IN ('0', '1')
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
end
ELSE
BEGIN
  SELECT @p_tp_selo = '9'
  IF SUBSTRING(@p_arquivo,20,2) <> 'SB'
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
END


--SELECT @p_exec = 'master..xp_cmdshell ''dir ' + @p_ruta + '\' + @p_arquivo + ' /B'''

--INSERT INTO TEMP_PRO_SELO
--EXEC (@p_exec) 

--DELETE TEMP_PRO_SELO
--WHERE LEFT(LINEA, 2) = 'Ou' OR LEFT(LINEA, 2) = '--'
	
--SELECT @p_count = COUNT(1) FROM TEMP_PRO_SELO
--IF @p_count = 0
--BEGIN
--	PRINT 'ARQUIVO NO EXISTE'
--	GOTO SEGUIR
--END

--TRUNCATE TABLE TEMP_PRO_SELO

--SELECT @p_exec = 'master..xp_cmdshell ''bcp GEACupax..TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + ' -c -t\t -r\n -SSQLSSIII -Ugeaccarga -Pcargageac'''


SELECT @p_exec = 'BULK INSERT TEMP_PRO_SELO FROM ''' + @p_ruta + '\' + @p_arquivo + ''' WITH 
		(
			FIELDTERMINATOR = ''\t'',
			ROWTERMINATOR = ''\n''
		)'

--SELECT @p_exec 
EXECUTE  (@p_exec)
IF @@ERROR <> 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO'
	GOTO SEGUIR
END

SELECT @p_qtd_lineas_arq = COUNT(1) 
FROM TEMP_PRO_SELO (NOLOCK)
IF @p_qtd_lineas_arq = 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO (NÃO CARREGOU ARQUIVO TEMPORÁRIO ERRO DE BCP)'
	GOTO SEGUIR
END

-- SELECT @msg = 'CANTIDAD DE LINEAS DEL ARQUIVO ' + LTRIM(RTRIM(STR(@p_qtd_lineas_arq))) + CHAR(10) + CHAR(13)
-- PRINT @msg


IF @p_tp_selo = '0'
BEGIN
	Select 'Arquivo: ' + @p_ruta + '\' + @p_arquivo
	select 'Estado da requisição do processamento do arquivo: ' + 
		substring(b.descp,1,15)
		from pax_baixa_selo_u a (nolock)
		INNER JOIN GEACCOMMON..dropdowndw_u b (NOLOCK INDEX = PK_dropdowndw_u)
		    ON 	b.tbl_code 	= 'ESRQ'
		    AND b.code 		= a.status_arq
		where arquivo = @p_arquivo
	Select 'Quantidade de linhas do arquivo: ' + convert(char(10),@p_qtd_lineas_arq)
	select 'Quantidade de selos válidos: ' + 
		(select	convert(char(10),count(*))
			FROM TEMP_PRO_SELO A (NOLOCK)
			INNER JOIN pax_selo_u B (NOLOCK)
			ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9)) 
	Select 'Quantidade de discrepâncias: ' + 
		(select	convert(char(10),count(*))
			FROM TEMP_PRO_SELO A (NOLOCK)
			INNER JOIN pax_discrep_selo_u B (NOLOCK)
			ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9)) 
	select 'Quantidade de linhas duplicadas no arquivo: ' + 
		(select convert(char(10),sum(b.Nro_vezes) - count(b.Nro_vezes)) from
			(select count(*) Nro_vezes
				from TEMP_PRO_SELO a
				group by SUBSTRING(a.LINEA, 14,9)
				having count(*) > 1) b)
	Select 'Resumo do Status atual dos selos:'
	SELECT	substring(C.descp,5,11) Status
		,substring(D.descp,1,15) Tipo_coletor
		,count(*) Qtde_selos
	FROM (select distinct SUBSTRING(E.LINEA, 14,9) nro_selo from TEMP_PRO_SELO E (NOLOCK)) A
	INNER JOIN pax_selo_u B (NOLOCK)
	ON B.nro_selo	= A.nro_selo 
	LEFT JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	LEFT JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	ON D.tbl_code 	= 'TPCL'
	AND D.code	= B.tp_coletor
	group by substring(C.descp,5,11) 
		,substring(D.descp,1,15) 
	ORDER BY substring(C.descp,5,11) 
		,substring(D.descp,1,15) 

	Select 'Resumo das Discrepâncias:'
	SELECT G.cd_aerop
	,substring(D.descp,5,11) status_atual
	,convert(char(10),F.dt_mov,120) dt_mov
	,substring(F.tp_coletor,1,2)
	,B.discrepancia
	,substring(C.msg,1,30) descrição
	,substring(E.descp,5,11) status_baixa
	,count(*)
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_u G (NOLOCK)
	ON G.nro_selo = SUBSTRING(A.LINEA, 14,9) 
	INNER JOIN pax_discrep_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 	
	inner join pax_tbl_messages_selos C (NOLOCK) 
	on B.discrepancia = C.msg_id +':'+C.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	ON D.tbl_code 	= 'STSL'
	AND D.code	= B.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
	ON E.tbl_code 	= 'STSL'
	AND E.code	= B.selo_status_ind
	INNER JOIN pax_selo_u F (NOLOCK) 
	ON B.nro_selo = F.nro_selo
	group by G.cd_aerop
	,substring(D.descp,5,11)
	,convert(char(10),F.dt_mov,120)
	,substring(F.tp_coletor,1,2)
	,B.discrepancia
	,substring(C.msg,1,30) 
	,substring(E.descp,5,11)

	Select 'Detalhe do Status atual dos selos:'
	SELECT A.Selo 
		,substring(C.descp,5,11) Status
		,dt_mov,date_changed
	FROM (select distinct SUBSTRING(E.LINEA, 14,9) Selo from TEMP_PRO_SELO E (NOLOCK)) A 
	INNER JOIN pax_selo_u B (NOLOCK)
	ON B.nro_selo	= A.Selo 
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	ORDER BY A.Selo ,substring(C.descp,5,11)  

	Select 'Detalhes das Discrepâncias:'
	SELECT SUBSTRING(A.LINEA, 14,9) selo 
	,substring(D.descp,5,11) status_atual
	,convert(char(10),F.dt_mov,120) dt_mov
	,substring(F.tp_coletor,1,2)
	,B.discrepancia
	,substring(C.msg,1,30) descrição
	,substring(E.descp,5,11) status_baixa
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_discrep_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 	
	inner join pax_tbl_messages_selos C (NOLOCK) 
	on B.discrepancia = C.msg_id +':'+C.selo_status
	left JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	ON D.tbl_code 	= 'STSL'
	AND D.code	= B.selo_status
	left JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
	ON E.tbl_code 	= 'STSL'
	AND E.code	= B.selo_status_ind
	INNER JOIN pax_selo_u F (NOLOCK) 
	ON B.nro_selo = F.nro_selo 
	ORDER BY SUBSTRING(A.LINEA, 14,9)

	Select 'Detalhe dos selos duplicados no arquivo:'	
	Select SUBSTRING(LINEA, 14,9) Selo,count(*) Nro_vezes from TEMP_PRO_SELO Nro_vezes
		group by SUBSTRING(LINEA, 14,9)
		having count(*) > 1


END
IF @p_tp_selo = '1'
BEGIN
	Select 'Arquivo: ' + @p_ruta + '\' + @p_arquivo
	select 'Quantidade de linhas do arquivo: ' + convert(char(10),@p_qtd_lineas_arq)
	select 'Status do arquivo: ' + status_arq from pax_baixa_selo_u where arquivo = @p_arquivo
	--Select 'Status atual dos selos:'
	SELECT SUBSTRING(A.LINEA, 11,20) Selo
		,substring(C.descp,1,15) Status
		,B.dt_mov dt_mov
		,B.tp_coletor
		,B.dt_confirma
		,B.cd_aerop_utilizacao
		,B.cd_terminal_utilizacao
		,B.date_changed
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	
	Select 'Qtde selos por status:'
	SELECT substring(C.descp,1,15) Status, count(*) Qtde_selos
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	group by substring(C.descp,1,15)
	order by substring(C.descp,1,15)

	Select 'Qtde selos existentes:'
	SELECT  count(*)
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)

	Select 'Quantidade de discrepâncias: ' + 
		(select	convert(char(10),count(*))
			from pax_discrep_selo_elec_u (NOLOCK)
			where arquivo	= @p_arquivo)
	
	Select 'Detalhes das Discrepâncias:'
	SELECT B.nro_selo_elec
	,substring(D.descp,5,11) status_atual
	,F.dt_mov
	,substring(F.tp_coletor,1,2)
	,B.discrepancia
	,substring(C.descp,1,30) descrição
	,substring(E.descp,5,11) status_baixa
	from pax_discrep_selo_elec_u B (NOLOCK)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	ON C.tbl_code 	= 'DSEL'
	AND C.code	= B.discrepancia
	left JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	ON D.tbl_code 	= 'STSL'
	AND D.code	= B.selo_status
	left JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
	ON E.tbl_code 	= 'STSL'
	AND E.code	= B.selo_status_ind
	INNER JOIN pax_selo_elec_u F (NOLOCK) 
	ON B.nro_selo_elec = F.nro_selo_elec 
	where B.arquivo	= @p_arquivo	
	ORDER BY B.nro_selo_elec

	/*Select 'Linhas com erro:'
	select substring(a.linha,1,30)
		,substring(C.descp,1,15) Status
		,convert(char(10),b.dt_mov,120)
		,substring(D.descp,1,15) Tipo_coletor
		,a.dt_processo
		,substring(a.obs,1,30)
 	from pax_selos_arquivo_log_processo a (nolock)
	inner join pax_selo_elec_u b (nolock)
	on b.nro_selo_elec = substring(a.linha,11,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	   ON 	C.tbl_code 	= 'STSL'
	   AND C.code 		= b.selo_status
	left JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	D.tbl_code 	= 'TPCL'
	    AND D.code 		= b.tp_coletor
	where a.arquivo = @p_arquivo*/

	Select 'Linhas com erro:'
	select 	substring(C.descp,1,15) Status
		,substring(D.descp,1,15) Tipo_coletor
		,substring(a.obs,1,30)Motivo_erro
		,count(*) Qtde_erros
 	from pax_selos_arquivo_log_processo a (nolock)
	inner join pax_selo_elec_u b (nolock)
	on b.nro_selo_elec = substring(a.linha,11,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	   ON 	C.tbl_code 	= 'STSL'
	   AND C.code 		= b.selo_status
	left JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	D.tbl_code 	= 'TPCL'
	    AND D.code 		= b.tp_coletor
	where a.arquivo = @p_arquivo
	group by substring(C.descp,1,15),substring(D.descp,1,15),substring(a.obs,1,30)
	order by substring(C.descp,1,15),substring(D.descp,1,15),substring(a.obs,1,30)

END
IF @p_tp_selo = '9'
BEGIN
	Select @p_ruta + @p_arquivo
	select convert(char(10),@p_qtd_lineas_arq) + ' linhas'
	select convert(char(10),@p_qtd_lineas_arq-2) + ' selos'

	SELECT SUBSTRING(A.LINEA, 2,20) Linha
		,SUBSTRING(C.descp,1,15) Status
		,B.dt_mov
		,substring(D.descp,1,15) Tipo_coletor
		,B.dt_confirma
		,B.cd_aerop
		,B.cd_aerop_utilizacao
		,B.item_fat
		,B.voo_rea
		,B.dt_voo_rea
		,B.hh_voo_rea
	FROM TEMP_PRO_SELO A (NOLOCK)
	left JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 2,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	ON C.tbl_code 	= 'STSL'
    	AND C.code	= B.selo_status
	left JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	D.tbl_code 	= 'TPCL'
	    AND D.code 		= B.tp_coletor

END

SEGUIR:	
--DELETE TEMP_PRO_SELO
--DROP TABLE 	TEMP_PRO_SELO


SET NOCOUNT OFF







GO

/****** Object:  StoredProcedure [dbo].[psp_analisa_quincena]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analisa_quincena    Script Date: 19/09/2008 15:20:08 ******/




CREATE   PROC [dbo].[psp_analisa_quincena] 
		(@dt_inicio		varchar(10)
		,@dt_fim		varchar(10)
		,@cd_aerop		varchar(4) = '%')
AS

/*
exec psp_analisa_quincena '2007-05-16', '2007-05-31', 'SBBR'
*/
declare @dt_i		varchar(23)
		,@dt_f		varchar(23)

select @dt_i		= @dt_inicio 	+ ' 00:00:00.000' 
	,@dt_f			= @dt_fim		+ ' 23:59:59.999' 

print @dt_i
print @dt_f

create table #relatorio (
	cd_aerop		char(4)
	,fis_tot		int 
	,ele_tot		int 
	,fis_per		int 
	,ele_per		int 
	,fis_for_per	int 
	,ele_for_per	int)


if @cd_aerop <> '%'
begin
	insert into #relatorio 
	select cd_aerop_utilizacao
		,count(1) 
		,0
		,0
		,0
		,0
		,0
	from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							<= @dt_f
	and dt_mov							> '20051101'
	and tp_natureza						in ('D','I')
	and cd_aerop_utilizacao				= @cd_aerop 
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,COUNT(1)
		,0
		,0
		,0
		,0
	from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							<= @dt_f
	and dt_mov							> '20051101'
	and cd_aerop_utilizacao				= @cd_aerop 
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,COUNT(1)
		,0
		,0
		,0
	from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							between @dt_i and  @dt_f
	and tp_natureza						in ('D','I')
	and cd_aerop_utilizacao				= @cd_aerop
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,0
		,COUNT(1)
		,0
		,0
	from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
	where billing_line_id 		= 0
	and selo_status				= '2'
	and dt_mov					between @dt_i and  @dt_f
	and cd_aerop_utilizacao		= @cd_aerop
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,0
		,0
		,COUNT(1)
		,0
	from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							< @dt_i
	and dt_mov							> '20051101'
	and tp_natureza						in ('D','I')
	and cd_aerop_utilizacao				= @cd_aerop
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,0
		,0
		,0
		,COUNT(1)
	from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
	where billing_line_id 		= 0
	and selo_status				= '2'
	and dt_mov					< @dt_i
	and cd_aerop_utilizacao		= @cd_aerop
	group by cd_aerop_utilizacao
end
else
begin
	insert into #relatorio 
	select cd_aerop_utilizacao
		,count(1) 
		,0
		,0
		,0
		,0
		,0
	from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							<= @dt_f
	and dt_mov							> '20051101'
	and tp_natureza						in ('D','I')
	and cd_aerop_utilizacao				like @cd_aerop 
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,COUNT(1)
		,0
		,0
		,0
		,0
	from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							<= @dt_f
	and dt_mov							> '20051101'
	and cd_aerop_utilizacao				like @cd_aerop 
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,COUNT(1)
		,0
		,0
		,0
	from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							between @dt_i and  @dt_f
	and tp_natureza						in ('D','I')
	and cd_aerop_utilizacao				like @cd_aerop
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,0
		,COUNT(1)
		,0
		,0
	from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
	where billing_line_id 		= 0
	and selo_status				= '2'
	and dt_mov					between @dt_i and  @dt_f
	and cd_aerop_utilizacao		like @cd_aerop
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,0
		,0
		,COUNT(1)
		,0
	from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 				= 0
	and selo_status						= '2'
	and dt_mov							< @dt_i
	and dt_mov							> '20051101'
	and tp_natureza						in ('D','I')
	and cd_aerop_utilizacao				like @cd_aerop
	group by cd_aerop_utilizacao
	UNION
	select cd_aerop_utilizacao
		,0
		,0
		,0
		,0
		,0
		,COUNT(1)
	from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
	where billing_line_id 		= 0
	and selo_status				= '2'
	and dt_mov					< @dt_i
	and dt_mov							> '20051101'
	and cd_aerop_utilizacao		like @cd_aerop
	group by cd_aerop_utilizacao
end



/* SELECT * FROM #relatorio */

select 	cd_aerop	
	,sum(fis_tot) 'Total Selos Fisicos'
	,sum(ele_tot) 'Total Selos Eletronicos'
	,sum(fis_per) 'Total Selos Fisicos dentro da Quinzena'
	,sum(ele_per) 'Total Selos Eletronicos dentro da Quinzena'
	,sum(fis_for_per) 'Total Selos Fisicos fora da Quinzena'
	,sum(ele_for_per) 'Total Selos eletronicos fora da Quinzena'
from #relatorio 
group by cd_aerop
order by cd_aerop

drop table #relatorio





GO

/****** Object:  StoredProcedure [dbo].[psp_analise_aerop_diario]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analise_aerop_diario    Script Date: 19/09/2008 15:20:08 ******/


CREATE procedure [dbo].[psp_analise_aerop_diario]
	(@p_cd_aerop			char(4)
	,@p_dt_mov				datetime
	,@p_cd_cia_aerea		char(3))
as

/* 
exec psp_analise_aerop_diario 'SBBR', '20070608', 'TAM' 

sp_help pax_selo_electronico_u
sp_helpindex pax_selo_electronico_u

*/


create table #temp_salida_1 
		(cd_aerop 		char(4)
		,dt_mov			datetime
		,nro_voo		char(5))

insert into #temp_salida_1
select distinct cd_aerop_utilizacao
		,convert(varchar(8), dt_mov, 112)
		,voo_rea
from pax_selo_electronico_u (nolock index = IDX02_BI)
where cd_aerop			 				= @p_cd_aerop
and cd_terminal							= '1'
and cd_cia_aerea						= @p_cd_cia_aerea
and convert(varchar(8), dt_mov, 112)	= @p_dt_mov

select * from #temp_salida_1 order by 1,2,3

drop table #temp_salida_1



GO

/****** Object:  StoredProcedure [dbo].[psp_analise_aerop_quinzena]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analise_aerop_quinzena    Script Date: 19/09/2008 15:20:08 ******/


-- exec psp_analise_aerop_quinzena 'SBBR', '20071101', '20071115', 'S'
-- exec psp_analise_aerop_quinzena 'SBBR', '20071101', '20071115', 'S'
-- exec psp_analise_aerop_quinzena 'SBCF', '20080101', '20080115', 'S', 'S'
-- exec psp_analise_aerop_quinzena 'SBSP', '20080416', '20080430', 'S'
-- exec psp_analise_aerop_quinzena 'SBVT', '20080416', '20080430', 'S'

CREATE    procedure [dbo].[psp_analise_aerop_quinzena]
	(@p_cd_aerop			char(4)
	,@p_dt_mov_ini			datetime
	,@p_dt_mov_fim			datetime
	,@p_fl_atualizar		char(1)	= 'N'
	,@p_fl_faturado			char(1)	= 'N') -- N não Faturado, S so faturados, T todos os selos
as

declare @p_today datetime
	,@p_dt_mov_ini_char		varchar(8)
	,@p_dt_mov_fim_char		varchar(8)
	,@v_billing_line_id		int
	,@v_user				varchar(30)

select @p_dt_mov_ini_char	= convert(varchar(8), @p_dt_mov_ini, 112)
	,@p_dt_mov_fim_char		= convert(varchar(8), @p_dt_mov_fim, 112)
	,@v_user				= suser_sname()

select @p_dt_mov_fim	= dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim))
	,@p_today			= getdate()

if @p_fl_atualizar = 'S'
begin

	begin tran analise_quinzena_aux

	/* criar tabela temporal com o valor em reais de cada item */
	select b.item_id, b.unit_price
	into #temp_price
	from GEACutcx..cor_item_pax_u a(nolock)
	inner join DBSrrcv..zud_price_list_z b (nolock)
	on b.price_list_id	= a.price_list_id
	and b.curr_code		= a.curr_code
	and b.item_id		= a.item_id
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and convert ( Datetime, CONVERT(VARCHAR, b.eff_date,112) ) <= Convert ( Datetime, CONVERT(VARCHAR, @p_today,112) )
	and Convert ( Datetime, CONVERT(VARCHAR, b.expiration_date, 112) ) >= Convert ( Datetime, CONVERT(VARCHAR, @p_today, 112) )
	and a.inactive_ind	= '0' 

	create index ix_item_id on #temp_price (item_id)


	/* criar tabela temporaria para calculo de movimentos */
	create table #temp_ana_quinz_ss (
		cd_aerop			char(4)
		,dt_mov_ini			datetime
		,dt_mov_fim			datetime
		,cd_cia_aerea		char(3)
		,tp_natureza		char(1)
		,tot_fis_dom		int
		,tot_fis_int		int
		,tot_ele_dom		int
		,tot_ele_int		int
		,sub_tot_dom		int
		,sub_tot_int		int
		,sub_tot_pag		int
		,tot_ise			int
		,tot_con			int
		,tot_out			int
		,sub_tot_nao_pag	int	
		,tot_geral			int	
		,vl_total			float
		,billing_line_id	int)

	create index ix_billing_line_id on #temp_ana_quinz_ss (billing_line_id)
 
	/* excluir movimentos a ser atualizados*/
	delete from pax_val_quinz_mov_u
	where cd_aerop	= @p_cd_aerop
	and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
	and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char

	/* buscar informação das coneções*/
	insert into #temp_ana_quinz_ss
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza		
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,-1
	from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and a.dt_voo			between @p_dt_mov_ini and @p_dt_mov_fim

	/* buscar informação de selos físicos*/
	insert into #temp_ana_quinz_ss
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,0
		,0
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'S' then 1 else 0  end
		,0	
		,0	
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,1
		,isnull(b.unit_price, 0)
		,a.billing_line_id
	from pax_selo_nao_fat_u a(nolock index = IX_AEROP_DATA)
	left join #temp_price b (nolock index = ix_item_id) 
	on b.item_id 					= a.item_fat
	where a.cd_aerop_utilizacao		= @p_cd_aerop
	and a.dt_mov 					<= @p_dt_mov_fim
	and a.tp_natureza 				<> 'S'
/*
	if (@v_user = 'MUNOZ' or @v_user = 'SPAF_GAZZANEO') and @p_cd_aerop = 'SBSP'
	begin
		insert into #temp_ana_quinz_ss
		select
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_nao_fat_u a(nolock index = IX_AEROP_DATA)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.cd_aerop_utilizacao		= @p_cd_aerop
		and a.dt_mov 					<= @p_dt_mov_fim
	end
	else
	begin
		insert into #temp_ana_quinz_ss
		select
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_u a(nolock index = IDX01_BI)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.selo_status				= '2'
		and a.cd_aerop_utilizacao		= @p_cd_aerop
		and a.cd_terminal_utilizacao	= '1'
		and a.dt_mov 					<= @p_dt_mov_fim
	--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
	--	and a.billing_line_id 			= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end
	end
*/

	/* buscar informação de selos eletronicos*/
	insert into #temp_ana_quinz_ss
	select 	
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza
		,0
		,0
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,0	
		,0	
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,1
		,isnull(b.unit_price, 0)
		,a.billing_line_id
	from pax_selo_electronico_nao_fat_u a(nolock index = IX_AEROP_DATA)
	left join #temp_price b (nolock index = ix_item_id) 
	on b.item_id 					= a.item_fat
	where a.cd_aerop_utilizacao 	= @p_cd_aerop
	and a.dt_mov 					<= @p_dt_mov_fim
	and a.tp_natureza 				<> 'S'
	/*
	if (@v_user = 'MUNOZ' or @v_user = 'SPAF_GAZZANEO') and @p_cd_aerop = 'SBSP'
	begin 
		insert into #temp_ana_quinz_ss
		select 	
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_electronico_nao_fat_u a(nolock index = IX_AEROP_DATA)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.cd_aerop_utilizacao 	= @p_cd_aerop
		and a.dt_mov 					<= @p_dt_mov_fim
	end
	else
	begin
		insert into #temp_ana_quinz_ss
		select 	
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_electronico_u a(nolock index = IDX03_BI)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.cd_aerop_utilizacao 	= @p_cd_aerop
		and a.cd_terminal_utilizacao	= '1'
		and a.selo_status				= '2'
		and a.dt_mov 					<= @p_dt_mov_fim
	--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
	--	a.billing_line_id 		= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end
	end
	*/

	if @p_fl_faturado = 'S'
	begin
		delete #temp_ana_quinz_ss
		where billing_line_id 						= 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	if @p_fl_faturado = 'N'
	begin
		delete #temp_ana_quinz_ss
		where billing_line_id 						<> 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	insert into pax_val_quinz_mov_u
	select 	cd_aerop		= @p_cd_aerop
		,dt_mov_ini			= @p_dt_mov_ini
		,dt_mov_fim			= @p_dt_mov_fim
		,cd_cia_aerea		
		,sum(tot_fis_dom)
		,sum(tot_fis_int)
		,sum(tot_ele_dom)
		,sum(tot_ele_int)
		,sum(sub_tot_dom)
		,sum(sub_tot_int)
		,sum(sub_tot_pag)
		,sum(tot_ise)
		,sum(tot_con)
		,sum(tot_out)
		,sum(sub_tot_nao_pag)
		,sum(tot_geral)
		,sum(vl_total)
		,0
	from #temp_ana_quinz_ss
	group by cd_aerop, dt_mov_ini, dt_mov_fim, cd_cia_aerea

	drop index #temp_price.ix_item_id
	drop table #temp_price
	drop index #temp_ana_quinz_ss.ix_billing_line_id 
	drop table #temp_ana_quinz_ss

	commit tran analise_quinzena_aux
end

select 	a.cd_cia_aerea
	,a.cd_cia_aerea + ' - ' + rtrim(ltrim(b.no_cia_aerea))
	,a.tot_fis_dom 		tot_fis_dom
	,a.tot_ele_dom 		tot_ele_dom
	,a.sub_tot_dom 		sub_tot_dom
	,a.tot_fis_int 		tot_fis_int
	,a.tot_ele_int 		tot_ele_int
	,a.sub_tot_int 		sub_tot_int
	,a.sub_tot_pag 		sub_tot_pag
	,a.tot_ise 			tot_fis_ise
	,a.tot_con 			sub_tot_con
	,a.tot_out 			sub_tot_otr
	,a.sub_tot_nao_pag 	sub_tot_nao_pag
	,a.tot_geral 		tot_geral
	,a.vl_total			valor_reais
from pax_val_quinz_mov_u a (nolock)
inner join GEACutcx..cor_cia_aerea_u b(nolock index = P_cor_cia_aerea_u)
on b.cd_cia_aerea = a.cd_cia_aerea
where cd_aerop	= @p_cd_aerop
and dt_mov_ini	= @p_dt_mov_ini
and dt_mov_fim	= @p_dt_mov_fim
order by a.cd_cia_aerea, b.no_cia_aerea






GO

/****** Object:  StoredProcedure [dbo].[psp_analise_aerop_quinzena_aux]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analise_aerop_quinzena_aux    Script Date: 19/09/2008 15:20:09 ******/



--exec psp_analise_aerop_quinzena 'SBBR', '20071101', '20071115', 'S'
--exec psp_analise_aerop_quinzena 'SBBR', '20071101', '20071115', 'S'
--exec psp_analise_aerop_quinzena 'SBCF', '20080101', '20080115', 'S', 'S'
--exec psp_analise_aerop_quinzena_aux 'SBSP', '20080416', '20080430', 'S'

CREATE  procedure [dbo].[psp_analise_aerop_quinzena_aux]
	(@p_cd_aerop			char(4)
	,@p_dt_mov_ini			datetime
	,@p_dt_mov_fim			datetime
	,@p_fl_atualizar		char(1)	= 'N'
	,@p_fl_faturado			char(1)	= 'N') -- N não Faturado, S so faturados, T todos os selos
as

declare @p_today datetime
	,@p_dt_mov_ini_char		varchar(8)
	,@p_dt_mov_fim_char		varchar(8)
	,@v_billing_line_id		int
	,@v_user				varchar(30)

select @p_dt_mov_ini_char	= convert(varchar(8), @p_dt_mov_ini, 112)
	,@p_dt_mov_fim_char		= convert(varchar(8), @p_dt_mov_fim, 112)
	,@v_user				= suser_sname()

select @p_dt_mov_fim	= dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim))
	,@p_today			= getdate()

if @p_fl_atualizar = 'S'
begin

	begin tran analise_quinzena_aux

	/* criar tabela temporal com o valor em reais de cada item */
	select b.item_id, b.unit_price
	into #temp_price
	from GEACutcx..cor_item_pax_u a(nolock)
	inner join DBSrrcv..zud_price_list_z b (nolock)
	on b.price_list_id	= a.price_list_id
	and b.curr_code		= a.curr_code
	and b.item_id		= a.item_id
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and convert ( Datetime, CONVERT(VARCHAR, b.eff_date,112) ) <= Convert ( Datetime, CONVERT(VARCHAR, @p_today,112) )
	and Convert ( Datetime, CONVERT(VARCHAR, b.expiration_date, 112) ) >= Convert ( Datetime, CONVERT(VARCHAR, @p_today, 112) )
	and a.inactive_ind	= '0' 

	create index ix_item_id on #temp_price (item_id)

	/* criar tabela temporaria para calculo de movimentos */
	create table #temp_ana_quinz_ss (
		cd_aerop			char(4)
		,dt_mov_ini			datetime
		,dt_mov_fim			datetime
		,cd_cia_aerea		char(3)
		,tp_natureza		char(1)
		,tot_fis_dom		int
		,tot_fis_int		int
		,tot_ele_dom		int
		,tot_ele_int		int
		,sub_tot_dom		int
		,sub_tot_int		int
		,sub_tot_pag		int
		,tot_ise			int
		,tot_con			int
		,tot_out			int
		,sub_tot_nao_pag	int	
		,tot_geral			int	
		,vl_total			float
		,billing_line_id	int)

	create index ix_billing_line_id on #temp_ana_quinz_ss (billing_line_id)
 
	/* excluir movimentos a ser atualizados*/
	delete from pax_val_quinz_mov_u
	where cd_aerop	= @p_cd_aerop
	and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
	and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char

	/* buscar informação das coneções*/
	insert into #temp_ana_quinz_ss
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza		
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,-1
	from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and a.dt_voo			between @p_dt_mov_ini and @p_dt_mov_fim

	/* buscar informação de selos físicos*/
	if @v_user = 'MUNOZ'
	begin
		insert into #temp_ana_quinz_ss
		select
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_nao_fat_u a(nolock index = IX_AEROP_DATA)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.cd_aerop_utilizacao		= @p_cd_aerop
		and a.dt_mov 					<= @p_dt_mov_fim
	end
	else
	begin
		select
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_u a(nolock index = IDX01_BI)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.selo_status				= '2'
		and a.cd_aerop_utilizacao		= @p_cd_aerop
		and a.cd_terminal_utilizacao	= '1'
		and a.dt_mov 					<= @p_dt_mov_fim
	--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
	--	and a.billing_line_id 			= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end
	end

	/* buscar informação de selos eletronicos*/
	if @v_user = 'MUNOZ'
	begin 
		insert into #temp_ana_quinz_ss
		select 	
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_electronico_nao_fat_u a(nolock index = IX_AEROP_DATA)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.cd_aerop_utilizacao 	= @p_cd_aerop
		and a.dt_mov 					<= @p_dt_mov_fim
	end
	else
	begin
		insert into #temp_ana_quinz_ss
		select 	
			@p_cd_aerop
			,@p_dt_mov_ini	
			,@p_dt_mov_fim 
			,a.cd_cia_aerea 
			,a.tp_natureza
			,0
			,0
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' then 1 else 0  end
			,case when a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,0	
			,0	
			,case when a.tp_natureza = 'S' then 1 else 0  end	
			,1
			,isnull(b.unit_price, 0)
			,a.billing_line_id
		from pax_selo_electronico_u a(nolock index = IDX03_BI)
		left join #temp_price b (nolock index = ix_item_id) 
		on b.item_id 					= a.item_fat
		where a.cd_aerop_utilizacao 	= @p_cd_aerop
		and a.cd_terminal_utilizacao	= '1'
		and a.selo_status				= '2'
		and a.dt_mov 					<= @p_dt_mov_fim
	--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
	--	a.billing_line_id 		= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end
	end

	if @p_fl_faturado = 'S'
	begin
		delete #temp_ana_quinz_ss
		where billing_line_id 						= 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	if @p_fl_faturado = 'N'
	begin
		delete #temp_ana_quinz_ss
		where billing_line_id 						<> 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	insert into pax_val_quinz_mov_u
	select 	cd_aerop		= @p_cd_aerop
		,dt_mov_ini			= @p_dt_mov_ini
		,dt_mov_fim			= @p_dt_mov_fim
		,cd_cia_aerea		
		,sum(tot_fis_dom)
		,sum(tot_fis_int)
		,sum(tot_ele_dom)
		,sum(tot_ele_int)
		,sum(sub_tot_dom)
		,sum(sub_tot_int)
		,sum(sub_tot_pag)
		,sum(tot_ise)
		,sum(tot_con)
		,sum(tot_out)
		,sum(sub_tot_nao_pag)
		,sum(tot_geral)
		,sum(vl_total)
		,0
	from #temp_ana_quinz_ss
	group by cd_aerop, dt_mov_ini, dt_mov_fim, cd_cia_aerea

	salir:		

	drop index #temp_price.ix_item_id
	drop table #temp_price
	drop index #temp_ana_quinz_ss.ix_billing_line_id 
	drop table #temp_ana_quinz_ss

	commit tran analise_quinzena_aux
end

select 	a.cd_cia_aerea
	,a.cd_cia_aerea + ' - ' + rtrim(ltrim(b.no_cia_aerea))
	,a.tot_fis_dom 		tot_fis_dom
	,a.tot_ele_dom 		tot_ele_dom
	,a.sub_tot_dom 		sub_tot_dom
	,a.tot_fis_int 		tot_fis_int
	,a.tot_ele_int 		tot_ele_int
	,a.sub_tot_int 		sub_tot_int
	,a.sub_tot_pag 		sub_tot_pag
	,a.tot_ise 			tot_fis_ise
	,a.tot_con 			sub_tot_con
	,a.tot_out 			sub_tot_otr
	,a.sub_tot_nao_pag 	sub_tot_nao_pag
	,a.tot_geral 		tot_geral
	,a.vl_total			valor_reais
from pax_val_quinz_mov_u a (nolock)
inner join GEACutcx..cor_cia_aerea_u b(nolock index = P_cor_cia_aerea_u)
on b.cd_cia_aerea = a.cd_cia_aerea
where cd_aerop	= @p_cd_aerop
and dt_mov_ini	= @p_dt_mov_ini
and dt_mov_fim	= @p_dt_mov_fim
order by a.cd_cia_aerea, b.no_cia_aerea




GO

/****** Object:  StoredProcedure [dbo].[psp_analise_aerop_quinzena_old]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analise_aerop_quinzena_old    Script Date: 19/09/2008 15:20:09 ******/



--exec psp_analise_aerop_quinzena 'SBBR', '20071101', '20071115', 'S'
--exec psp_analise_aerop_quinzena 'SBBR', '20071101', '20071115', 'S'
--exec psp_analise_aerop_quinzena 'SBCF', '20080101', '20080115', 'S', 'S'

CREATE  procedure [dbo].[psp_analise_aerop_quinzena_old]
	(@p_cd_aerop			char(4)
	,@p_dt_mov_ini			datetime
	,@p_dt_mov_fim			datetime
	,@p_fl_atualizar		char(1)	= 'N'
	,@p_fl_faturado			char(1)	= 'N') -- N não Faturado, S so faturados, T todos os selos
as

declare @p_today datetime
	,@p_dt_mov_ini_char		varchar(8)
	,@p_dt_mov_fim_char		varchar(8)
	,@v_billing_line_id		int

select @p_dt_mov_ini_char	= convert(varchar(8), @p_dt_mov_ini, 112)
	,@p_dt_mov_fim_char		= convert(varchar(8), @p_dt_mov_fim, 112)

select @p_dt_mov_fim	= dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim))
	,@p_today			= getdate()

/*
if @p_fl_atualizar		= 'S'
begin
	if exists (select 1 from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id 	<> 0
		and selo_status			= '2'
		and dt_mov 				between @p_dt_mov_ini and @p_dt_mov_fim
		and tp_fat				= 'F')
	begin
		set @p_fl_atualizar		= 'N'
	end 
end
*/

if @p_fl_atualizar = 'S'
begin

	begin tran analise_quinzena

	/* criar tabela temporal com o valor em reais de cada item */
	select b.item_id, b.unit_price
	into #temp_price
	from GEACutcx..cor_item_pax_u a(nolock)
	inner join DBSrrcv..zud_price_list_z b (nolock)
	on b.price_list_id	= a.price_list_id
	and b.curr_code		= a.curr_code
	and b.item_id		= a.item_id
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and convert ( Datetime, CONVERT(VARCHAR, b.eff_date,112) ) <= Convert ( Datetime, CONVERT(VARCHAR, @p_today,112) )
	and Convert ( Datetime, CONVERT(VARCHAR, b.expiration_date, 112) ) >= Convert ( Datetime, CONVERT(VARCHAR, @p_today, 112) )
	and a.inactive_ind	= '0' 

	/* criar tabela temporaria para calculo de movimentos */
	create table #temp_ana_quinz_ss (
		cd_aerop			char(4)
		,dt_mov_ini			datetime
		,dt_mov_fim			datetime
		,cd_cia_aerea		char(3)
		,tp_natureza		char(1)
		,tot_fis_dom		int
		,tot_fis_int		int
		,tot_ele_dom		int
		,tot_ele_int		int
		,sub_tot_dom		int
		,sub_tot_int		int
		,sub_tot_pag		int
		,tot_ise			int
		,tot_con			int
		,tot_out			int
		,sub_tot_nao_pag	int	
		,tot_geral			int	
		,vl_total			float
		,billing_line_id	int)

	create index ix_billing_line_id on #temp_ana_quinz_ss (billing_line_id)
 
	/* excluir movimentos a ser atualizados*/
	delete from pax_val_quinz_mov_u
	where cd_aerop	= @p_cd_aerop
	and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
	and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char

	/* buscar informação das coneções*/
	insert into #temp_ana_quinz_ss
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza		
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,-1
	from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and a.dt_voo			between @p_dt_mov_ini and @p_dt_mov_fim
	
	/* buscar informação de selos físicos*/
	insert into #temp_ana_quinz_ss
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,0
		,0
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'S' then 1 else 0  end
		,0	
		,0	
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,1
		,isnull(b.unit_price, 0)
		,a.billing_line_id
	from pax_selo_u a(nolock index = IDX01_BI)
	left join #temp_price b
	on b.item_id 					= a.item_fat
	where a.selo_status				= '2'
	and a.cd_aerop_utilizacao		= @p_cd_aerop
	and a.cd_terminal_utilizacao	= '1'
	and a.dt_mov 					<= @p_dt_mov_fim
--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
--	and a.billing_line_id 			= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end

	/* buscar informação de selos eletronicos*/
	insert into #temp_ana_quinz_ss
	select 	
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza
		,0
		,0
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,0	
		,0	
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,1
		,isnull(b.unit_price, 0)
		,a.billing_line_id
	from pax_selo_electronico_u a(nolock index = IDX03_BI)
	left join #temp_price b
	on b.item_id 					= a.item_fat
	where a.cd_aerop_utilizacao 	= @p_cd_aerop
	and a.cd_terminal_utilizacao	= '1'
	and a.selo_status				= '2'
	and a.dt_mov 					<= @p_dt_mov_fim
--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
--	a.billing_line_id 		= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end

	if @p_fl_faturado = 'S'
	begin
		delete #temp_ana_quinz_ss
		where billing_line_id 						= 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	if @p_fl_faturado = 'N'
	begin
		delete #temp_ana_quinz_ss
		where billing_line_id 						<> 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	insert into pax_val_quinz_mov_u
	select 	cd_aerop		= @p_cd_aerop
		,dt_mov_ini			= @p_dt_mov_ini
		,dt_mov_fim			= @p_dt_mov_fim
		,cd_cia_aerea		
		,sum(tot_fis_dom)
		,sum(tot_fis_int)
		,sum(tot_ele_dom)
		,sum(tot_ele_int)
		,sum(sub_tot_dom)
		,sum(sub_tot_int)
		,sum(sub_tot_pag)
		,sum(tot_ise)
		,sum(tot_con)
		,sum(tot_out)
		,sum(sub_tot_nao_pag)
		,sum(tot_geral)
		,sum(vl_total)
		,0
	from #temp_ana_quinz_ss
	group by cd_aerop, dt_mov_ini, dt_mov_fim, cd_cia_aerea

	drop table #temp_price
	drop index #temp_ana_quinz_ss.ix_billing_line_id 
	drop table #temp_ana_quinz_ss

	commit tran analise_quinzena
end

select 	a.cd_cia_aerea
	,a.cd_cia_aerea + ' - ' + rtrim(ltrim(b.no_cia_aerea))
	,a.tot_fis_dom 		tot_fis_dom
	,a.tot_ele_dom 		tot_ele_dom
	,a.sub_tot_dom 		sub_tot_dom
	,a.tot_fis_int 		tot_fis_int
	,a.tot_ele_int 		tot_ele_int
	,a.sub_tot_int 		sub_tot_int
	,a.sub_tot_pag 		sub_tot_pag
	,a.tot_ise 			tot_fis_ise
	,a.tot_con 			sub_tot_con
	,a.tot_out 			sub_tot_otr
	,a.sub_tot_nao_pag 	sub_tot_nao_pag
	,a.tot_geral 		tot_geral
	,a.vl_total			valor_reais
from pax_val_quinz_mov_u a (nolock)
inner join GEACutcx..cor_cia_aerea_u b(nolock index = P_cor_cia_aerea_u)
on b.cd_cia_aerea = a.cd_cia_aerea
where cd_aerop	= @p_cd_aerop
and dt_mov_ini	= @p_dt_mov_ini
and dt_mov_fim	= @p_dt_mov_fim
order by a.cd_cia_aerea, b.no_cia_aerea





GO

/****** Object:  StoredProcedure [dbo].[psp_analise_aerop_quinzena_teste]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analise_aerop_quinzena_teste    Script Date: 19/09/2008 15:20:09 ******/


--exec psp_analise_aerop_quinzena_teste 'SBSP', '20080216', '20080229', 'S'
--exec psp_analise_aerop_quinzena_teste 'SBBR', '20071101', '20071115', 'S'
--exec psp_analise_aerop_quinzena_teste 'SBCF', '20080101', '20080115', 'S', 'S'

CREATE procedure [dbo].[psp_analise_aerop_quinzena_teste]
	(@p_cd_aerop			char(4)
	,@p_dt_mov_ini			datetime
	,@p_dt_mov_fim			datetime
	,@p_fl_atualizar		char(1)	= 'N'
	,@p_fl_faturado			char(1)	= 'N') -- N não Faturado, S so faturados, T todos os selos
as

	/* criar tabela para calculo de movimentos 
	create table tbl_ana_quinz_ss_mov (
		cd_aerop			char(4)
		,dt_mov_ini			datetime
		,dt_mov_fim			datetime
		,cd_cia_aerea		char(3)
		,tp_natureza		char(1)
		,tot_fis_dom		int
		,tot_fis_int		int
		,tot_ele_dom		int
		,tot_ele_int		int
		,sub_tot_dom		int
		,sub_tot_int		int
		,sub_tot_pag		int
		,tot_ise			int
		,tot_con			int
		,tot_out			int
		,sub_tot_nao_pag	int	
		,tot_geral			int	
		,vl_total			float
		,billing_line_id	int)

	create index ix_billing_line_id on tbl_ana_quinz_ss_mov (billing_line_id)

	*/


declare @p_today datetime
	,@p_dt_mov_ini_char		varchar(8)
	,@p_dt_mov_fim_char		varchar(8)
	,@v_billing_line_id		int

select @p_dt_mov_ini_char	= convert(varchar(8), @p_dt_mov_ini, 112)
	,@p_dt_mov_fim_char		= convert(varchar(8), @p_dt_mov_fim, 112)

select @p_dt_mov_fim	= dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim))
	,@p_today			= getdate()

if @p_fl_atualizar = 'S'
begin

	begin tran analise_quinzena

	/* criar tabela temporal com o valor em reais de cada item */
	select b.item_id, b.unit_price
	into #temp_price
	from GEACutcx..cor_item_pax_u a(nolock)
	inner join DBSrrcv..zud_price_list_z b (nolock)
	on b.price_list_id	= a.price_list_id
	and b.curr_code		= a.curr_code
	and b.item_id		= a.item_id
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and convert ( Datetime, CONVERT(VARCHAR, b.eff_date,112) ) <= Convert ( Datetime, CONVERT(VARCHAR, @p_today,112) )
	and Convert ( Datetime, CONVERT(VARCHAR, b.expiration_date, 112) ) >= Convert ( Datetime, CONVERT(VARCHAR, @p_today, 112) )
	and a.inactive_ind	= '0' 
	

	/* excluir movimentos a ser atualizados*/
	delete from pax_val_quinz_mov_u
	where cd_aerop	= @p_cd_aerop
	and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
	and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char

	/* buscar informação das coneções*/
	insert into tbl_ana_quinz_ss_mov
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza		
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,a.pax_conexao_dom + a.pax_conexao_int
		,a.pax_conexao_dom + a.pax_conexao_int
		,0
		,-1
	from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and a.dt_voo			between @p_dt_mov_ini and @p_dt_mov_fim
	
	/* buscar informação de selos físicos*/
	insert into tbl_ana_quinz_ss_mov
	select
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,0
		,0
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'S' then 1 else 0  end
		,0	
		,0	
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,1
		,isnull(b.unit_price, 0)
		,a.billing_line_id
	from pax_selo_u a(nolock index = IDX01_BI)
	left join #temp_price b
	on b.item_id 					= a.item_fat
	where a.selo_status				= '2'
	and a.cd_aerop_utilizacao		= @p_cd_aerop
	and a.cd_terminal_utilizacao	= '1'
	and a.dt_mov 					<= @p_dt_mov_fim
--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
--	and a.billing_line_id 			= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end

	/* buscar informação de selos eletronicos*/
	insert into tbl_ana_quinz_ss_mov
	select 	
		@p_cd_aerop
		,@p_dt_mov_ini	
		,@p_dt_mov_fim 
		,a.cd_cia_aerea 
		,a.tp_natureza
		,0
		,0
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' then 1 else 0  end
		,case when a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'D' or a.tp_natureza = 'I' then 1 else 0  end
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,0	
		,0	
		,case when a.tp_natureza = 'S' then 1 else 0  end	
		,1
		,isnull(b.unit_price, 0)
		,a.billing_line_id
	from pax_selo_electronico_u a(nolock index = IDX03_BI)
	left join #temp_price b
	on b.item_id 					= a.item_fat
	where a.cd_aerop_utilizacao 	= @p_cd_aerop
	and a.cd_terminal_utilizacao	= '1'
	and a.selo_status				= '2'
	and a.dt_mov 					<= @p_dt_mov_fim
--	and a.dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
--	a.billing_line_id 		= case when @p_fl_faturado = 'N' then 0 else a.billing_line_id end

	if @p_fl_faturado = 'S'
	begin
		delete tbl_ana_quinz_ss_mov
		where billing_line_id 						= 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	if @p_fl_faturado = 'N'
	begin
		delete tbl_ana_quinz_ss_mov
		where billing_line_id 						<> 0
		and cd_aerop								= @p_cd_aerop
		and convert(varchar(8), dt_mov_ini, 112)	= @p_dt_mov_ini_char
		and convert(varchar(8), dt_mov_fim, 112)	= @p_dt_mov_fim_char
	end

	insert into pax_val_quinz_mov_u
	select 	cd_aerop		= @p_cd_aerop
		,dt_mov_ini			= @p_dt_mov_ini
		,dt_mov_fim			= @p_dt_mov_fim
		,cd_cia_aerea		
		,sum(tot_fis_dom)
		,sum(tot_fis_int)
		,sum(tot_ele_dom)
		,sum(tot_ele_int)
		,sum(sub_tot_dom)
		,sum(sub_tot_int)
		,sum(sub_tot_pag)
		,sum(tot_ise)
		,sum(tot_con)
		,sum(tot_out)
		,sum(sub_tot_nao_pag)
		,sum(tot_geral)
		,sum(vl_total)
		,0
	from tbl_ana_quinz_ss_mov (index = P_tbl_ana_quinz_ss_mov)
	where cd_aerop		= @p_cd_aerop
	and dt_mov_ini		= @p_dt_mov_ini
	and dt_mov_fim		= @p_dt_mov_fim
	group by cd_aerop, dt_mov_ini, dt_mov_fim, cd_cia_aerea

	drop table #temp_price

	commit tran analise_quinzena
end

select 	a.cd_cia_aerea
	,a.cd_cia_aerea + ' - ' + rtrim(ltrim(b.no_cia_aerea))
	,a.tot_fis_dom 		tot_fis_dom
	,a.tot_ele_dom 		tot_ele_dom
	,a.sub_tot_dom 		sub_tot_dom
	,a.tot_fis_int 		tot_fis_int
	,a.tot_ele_int 		tot_ele_int
	,a.sub_tot_int 		sub_tot_int
	,a.sub_tot_pag 		sub_tot_pag
	,a.tot_ise 			tot_fis_ise
	,a.tot_con 			sub_tot_con
	,a.tot_out 			sub_tot_otr
	,a.sub_tot_nao_pag 	sub_tot_nao_pag
	,a.tot_geral 		tot_geral
	,a.vl_total			valor_reais
from pax_val_quinz_mov_u a (nolock)
inner join GEACutcx..cor_cia_aerea_u b(nolock index = P_cor_cia_aerea_u)
on b.cd_cia_aerea = a.cd_cia_aerea
where cd_aerop	= @p_cd_aerop
and dt_mov_ini	= @p_dt_mov_ini
and dt_mov_fim	= @p_dt_mov_fim
order by a.cd_cia_aerea, b.no_cia_aerea




GO

/****** Object:  StoredProcedure [dbo].[psp_analisis_selos_20070412_adc]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analisis_selos_20070412_adc    Script Date: 19/09/2008 15:20:09 ******/

--exec psp_analisis_selos_20070412_adc

CREATE   proc [dbo].[psp_analisis_selos_20070412_adc]
as

declare @v_ano		smallint

/*
drop table temp_selo_dist_analisis_pendente
create table dbo.temp_selo_dist_analisis_pendente (
		reg 			char(4)
		,cd_aerop		char(4)
		,cd_cia_aerea	char(3)
        ,no_cia_aerea char(40)
		,tp_natureza	char(3)
		,tot_2003		integer
		,tot_2004		integer
		,tot_2005		integer
		,tot_2006		integer
		,tot_2007		integer)

select * from temp_selo_dist_analisis_pendente

exec psp_analisis_selos_20070412_jm


select a.reg  
	,a.cd_aerop 
	,a.cd_cia_aerea 
	,b.no_cia_aerea
	,a.tp_natureza 
	,sum(a.tot_2003) '2003'   
	,sum(a.tot_2004) '2004'   
	,sum(a.tot_2005) '2005'   
	,sum(a.tot_2006) '2006'   
	,sum(a.tot_2007) '2007'   
from temp_selo_dist_analisis_pendente a(nolock)
left join GEACutcx..cor_cia_aerea_u	b (nolock)
on b.cd_cia_aerea	= a.cd_cia_aerea
group by a.reg, a.cd_aerop, a.cd_cia_aerea, b.no_cia_aerea, a.tp_natureza
order by a.reg, a.cd_aerop, a.cd_cia_aerea, b.no_cia_aerea, a.tp_natureza

select * from GEACutcx..cor_cia_aerea_u	b (nolock)

Select
b.centro,
a.cd_aerop,
a.cd_terminal,
a.cd_cia_aerea,
a.tp_natureza,
a.cd_aerop_utilizacao,
a.cd_terminal_utilizacao,
a.nro_rste,   
[2003] = case when year(a.dt_mov) = 2003 then count(1) else 0 end,
[2004] = case when year(a.dt_mov) = 2004 then count(1) else 0 end,
[2005] = case when year(a.dt_mov) = 2005 then count(1) else 0 end,
[2006] = case when year(a.dt_mov) = 2006 then count(1) else 0 end,
[2007] = case when year(a.dt_mov) = 2007 then count(1) else 0 end
from GEACupax..pax_selo_u a (nolock)
left join GEACrpt..gvw_desc_dependencia b (nolock)
on a.cd_aerop = b.sigla_dependencia 
where
a.selo_status = '1' and 
year(a.dt_mov) between '2003' and '2007'
group by a.dt_mov, b.centro,a.cd_aerop, a.cd_terminal, a.cd_cia_aerea, a.tp_natureza,a.cd_aerop_utilizacao,a.cd_terminal_utilizacao,a.nro_rste

*/

delete temp_selo_dist_analisis_pendente

set @v_ano = 2003

while @v_ano < 2008
begin
	insert into temp_selo_dist_analisis_pendente
	select 'SRGR'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBCG', 'SBSP', 'SBKP', 'SBGR')
	and cd_terminal		= '1'
	and selo_status		= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza


	insert into temp_selo_dist_analisis_pendente
	select 'SRGL'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBBH', 'SBVT', 'SBCF', 'SBGL', 'SBRJ')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza

	insert into temp_selo_dist_analisis_pendente
	select 'SRRF'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBFZ', 'SBRF', 'SBMO', 'SBTE', 'SBNT', 'SBJP')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza

	insert into temp_selo_dist_analisis_pendente
	select 'SRBE'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBBE', 'SBSL')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza

	insert into temp_selo_dist_analisis_pendente
	select 'SRPA'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBCT', 'SBFL', 'SBFI', 'SBJV', 'SBPA', 'SBNF', 'SBLO')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza

	insert into temp_selo_dist_analisis_pendente
	select 'SRBR'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBBR', 'SBGO', 'SBCY', 'SBUL')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza


	insert into temp_selo_dist_analisis_pendente
	select 'SRMN'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBBV', 'SBEG')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza


	insert into temp_selo_dist_analisis_pendente
	select 'SRSV'
		,a.cd_aerop
		,a.cd_cia_aerea
        ,'' -- b.no_cia_aerea
		,a.tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u a (nolock)
--   left join GEACutcx..cor_cia_aerea_u	b (nolock)
--          on a.cd_cia_aerea	= b.cd_cia_aerea
	where cd_aerop in ('SBSV', 'SBAR')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
	group by a.cd_aerop, a.cd_cia_aerea, a.tp_natureza


	set @v_ano = @v_ano + 1
end 


select a.reg  
	,a.cd_aerop 
	,a.cd_cia_aerea 
	,b.no_cia_aerea
	,a.tp_natureza 
	,sum(a.tot_2003) '2003'   
	,sum(a.tot_2004) '2004'   
	,sum(a.tot_2005) '2005'   
	,sum(a.tot_2006) '2006'   
	,sum(a.tot_2007) '2007'   
from temp_selo_dist_analisis_pendente a(nolock)
left join GEACutcx..cor_cia_aerea_u	b (nolock)
on b.cd_cia_aerea	= a.cd_cia_aerea
group by a.reg, a.cd_aerop, a.cd_cia_aerea, b.no_cia_aerea, a.tp_natureza
order by a.reg, a.cd_aerop, a.cd_cia_aerea, b.no_cia_aerea, a.tp_natureza








GO

/****** Object:  StoredProcedure [dbo].[psp_analisis_selos_20070412_jm]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_analisis_selos_20070412_jm    Script Date: 19/09/2008 15:20:10 ******/


-- exec psp_analisis_selos_20070412_jm

CREATE    proc [dbo].[psp_analisis_selos_20070412_jm]
as

declare @v_ano		smallint

/*
drop table temp_selo_dist_analisis_ja_20070412
create table dbo.temp_selo_dist_analisis_ja_20070412 (
		reg 			char(4)
		,cd_aerop		char(4)
		,cd_cia_aerea	char(3)
		,tp_natureza	char(3)
		,tot_2003		integer
		,tot_2004		integer
		,tot_2005		integer
		,tot_2006		integer
		,tot_2007		integer)

select * from temp_selo_dist_analisis_ja_20070412

exec psp_analisis_selos_20070412_jm

select * into temp_selo_dist_analisis_ja_20070412_ii from pax_selo_u where 1=2

select a.reg  
	,a.cd_aerop 
	,a.cd_cia_aerea 
	,b.no_cia_aerea
	,a.tp_natureza 
	,sum(a.tot_2003) '2003'   
	,sum(a.tot_2004) '2004'   
	,sum(a.tot_2005) '2005'   
	,sum(a.tot_2006) '2006'   
	,sum(a.tot_2007) '2007'   
from temp_selo_dist_analisis_ja_20070412 a(nolock)
left join GEACutcx..cor_cia_aerea_u	b (nolock)
on b.cd_cia_aerea	= a.cd_cia_aerea
group by a.reg, a.cd_aerop, a.cd_cia_aerea, b.no_cia_aerea, a.tp_natureza
order by a.reg, a.cd_aerop, a.cd_cia_aerea, b.no_cia_aerea, a.tp_natureza

select * from GEACutcx..cor_cia_aerea_u	b (nolock)


select 
	Reg = case when cd_aerop in ('SBCG', 'SBSP', 'SBKP', 'SBGR') then 'SBGR'
		when cd_aerop in ('SBBH', 'SBVT', 'SBCF', 'SBGL', 'SBRJ') then 'SRGL'
		when cd_aerop in ('SBFZ', 'SBRF', 'SBMO', 'SBTE', 'SBNT', 'SBJP') then 'SRRF'
		when cd_aerop in ('SBBE', 'SBSL') then 'SRBE'
		when cd_aerop in ('SBCT', 'SBFL', 'SBFI', 'SBJV', 'SBPA', 'SBNF', 'SBLO') then 'SRPA'
		when cd_aerop in ('SBBR', 'SBGO', 'SBCY', 'SBUL') then 'SBBR'
		when cd_aerop in ('SBBV', 'SBEG') then 'SRMN'
		when cd_aerop in ('SBSV', 'SBAR') then 'SRSV' else '' end
	,Aerop 		= cd_aerop
	,Cia		= cd_cia_aerea
	,Selo		= nro_selo
	,Remessa	= ano_remesa
	,Data_Mov	= dt_mov
from temp_selo_dist_analisis_ja_20070412_ii
where dt_mov < '20071101'
and cd_cia_aerea	<> 'FFF'
order by 1,2,3,4

select * from pax_selo_u where nro_selo = 'D50844279' and ano_remesa = 	'2007'


*/

delete temp_selo_dist_analisis_ja_20070412
delete temp_selo_dist_analisis_ja_20070412_ii

set @v_ano = 2003

while @v_ano < 2008
begin
	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRGR'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBCG', 'SBSP', 'SBKP', 'SBGR')
	and cd_terminal		= '1'
	and selo_status		= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza

	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRGL'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBBH', 'SBVT', 'SBCF', 'SBGL', 'SBRJ')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza

	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRRF'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBFZ', 'SBRF', 'SBMO', 'SBTE', 'SBNT', 'SBJP')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza

	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRBE'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBBE', 'SBSL')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza

	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRPA'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBCT', 'SBFL', 'SBFI', 'SBJV', 'SBPA', 'SBNF', 'SBLO')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza

	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRBR'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBBR', 'SBGO', 'SBCY', 'SBUL')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza


	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRMN'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBBV', 'SBEG')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza


	insert into temp_selo_dist_analisis_ja_20070412
	select 'SRSV'
		,cd_aerop
		,cd_cia_aerea
		,tp_natureza
		,case when @v_ano = 2003 then count(1) else 0 end
		,case when @v_ano = 2004 then count(1) else 0 end
		,case when @v_ano = 2005 then count(1) else 0 end
		,case when @v_ano = 2006 then count(1) else 0 end
		,case when @v_ano = 2007 then count(1) else 0 end
	from pax_selo_u (nolock)
	where cd_aerop in ('SBSV', 'SBAR')
	and cd_terminal	= '1'
	and selo_status	= '1'
	and year(dt_mov)	= @v_ano
    and billing_line_id = 0
	group by cd_aerop, cd_cia_aerea, tp_natureza

	if @v_ano = 2007
		insert into temp_selo_dist_analisis_ja_20070412_ii
		select * from pax_selo_u (nolock index = pax_selo_fatura)
		where billing_line_id = 0
		and selo_status		= '1'
		and year(dt_mov)	= @v_ano

	set @v_ano = @v_ano + 1
end 







GO

/****** Object:  StoredProcedure [dbo].[psp_async_rpc_direct]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_async_rpc_direct    Script Date: 19/09/2008 15:20:10 ******/

CREATE procedure [dbo].[psp_async_rpc_direct] 
(
    @p_arpc_req_name        varchar(30),
    @p_arpc_dest_srvr       varchar(30),
    @p_arpc_dest_dbname     varchar(30),
    @p_arpc_dest_sp_owner   varchar(30),
    @p_arpc_dest_sp_name    varchar(30),
    @p_arpc_uniq_key        varchar(40) out,
    @p_arpc_param_count     int,
    @p_arpc_param1          varchar(255) = null,
    @p_arpc_param2          varchar(255) = null,
    @p_arpc_param3          varchar(255) = null,
    @p_arpc_param4          varchar(255) = null,
    @p_arpc_param5          varchar(255) = null,
    @p_arpc_param6          varchar(255) = null,
    @p_arpc_param7          varchar(255) = null,
    @p_arpc_param8          varchar(255) = null,
    @p_arpc_param9          varchar(255) = null,
    @p_arpc_param10         varchar(255) = null,
    @p_arpc_param11         varchar(255) = null,
    @p_arpc_param12         varchar(255) = null,
    @p_arpc_param13         varchar(255) = null,
    @p_arpc_param14         varchar(255) = null,
    @p_arpc_param15         varchar(255) = null,
    @p_arpc_param16         varchar(255) = null,
    @p_arpc_param17         varchar(255) = null,
    @p_arpc_param18         varchar(255) = null,
    @p_arpc_param19         varchar(255) = null,
    @p_arpc_param20         varchar(255) = null,
    @p_arpc_param21         varchar(255) = null,
    @p_arpc_param22         varchar(255) = null,
    @p_arpc_param23         varchar(255) = null,
    @p_arpc_param24         varchar(255) = null,
    @p_arpc_param25         varchar(255) = null,
    @p_arpc_param26         varchar(255) = null,
    @p_arpc_param27         varchar(255) = null,
    @p_arpc_param28         varchar(255) = null,
    @p_arpc_param29         varchar(255) = null,
    @p_arpc_param30         varchar(255) = null,
    @p_arpc_param31         varchar(255) = null,
    @p_arpc_param32         varchar(255) = null,
    @p_arpc_param33         varchar(255) = null,
    @p_arpc_param34         varchar(255) = null,
    @p_arpc_param35         varchar(255) = null,
    @p_arpc_param36         varchar(255) = null,
    @p_arpc_param37         varchar(255) = null,
    @p_arpc_param38         varchar(255) = null,
    @p_arpc_param39         varchar(255) = null,
    @p_arpc_param40         varchar(255) = null,
    @p_arpc_param41         varchar(255) = null,
    @p_arpc_param42         varchar(255) = null,
    @p_arpc_param43         varchar(255) = null,
    @p_arpc_param44         varchar(255) = null,
    @p_arpc_param45         varchar(255) = null,
    @p_arpc_param46         varchar(255) = null,
    @p_arpc_param47         varchar(255) = null,
    @p_arpc_param48         varchar(255) = null,
    @p_arpc_param49         varchar(255) = null,
    @p_arpc_param50         varchar(255) = null,
    @p_arpc_param51         varchar(255) = null,
    @p_arpc_param52         varchar(255) = null,
    @p_arpc_param53         varchar(255) = null,
    @p_arpc_param54         varchar(255) = null,
    @p_arpc_param55         varchar(255) = null,
    @p_arpc_param56         varchar(255) = null,
    @p_arpc_param57         varchar(255) = null,
    @p_arpc_param58         varchar(255) = null,
    @p_arpc_param59         varchar(255) = null,
    @p_arpc_param60         varchar(255) = null,
    @p_arpc_param61         varchar(255) = null,
    @p_arpc_param62         varchar(255) = null,
    @p_arpc_param63         varchar(255) = null,
    @p_arpc_param64         varchar(255) = null
)
AS
exec DBSarpc.dbo.psp_async_rpc_direct1
    @p_arpc_req_name      = @p_arpc_req_name,          
    @p_arpc_dest_srvr     = @p_arpc_dest_srvr,
    @p_arpc_dest_dbname   = @p_arpc_dest_dbname,
    @p_arpc_dest_sp_owner = @p_arpc_dest_sp_owner,
    @p_arpc_dest_sp_name  = @p_arpc_dest_sp_name,
    @p_arpc_uniq_key      = @p_arpc_uniq_key out,
    @p_arpc_param_count   = @p_arpc_param_count,
    @p_arpc_param1        = @p_arpc_param1,
    @p_arpc_param2        = @p_arpc_param2,
    @p_arpc_param3        = @p_arpc_param3,
    @p_arpc_param4        = @p_arpc_param4,
    @p_arpc_param5        = @p_arpc_param5,
    @p_arpc_param6        = @p_arpc_param6,
    @p_arpc_param7        = @p_arpc_param7,
    @p_arpc_param8        = @p_arpc_param8,
    @p_arpc_param9        = @p_arpc_param9,
    @p_arpc_param10       = @p_arpc_param10,
    @p_arpc_param11       = @p_arpc_param11,
    @p_arpc_param12       = @p_arpc_param12,
    @p_arpc_param13       = @p_arpc_param13,
    @p_arpc_param14       = @p_arpc_param14,
    @p_arpc_param15       = @p_arpc_param15,
    @p_arpc_param16       = @p_arpc_param16,
    @p_arpc_param17       = @p_arpc_param17,
    @p_arpc_param18       = @p_arpc_param18,
    @p_arpc_param19       = @p_arpc_param19,
    @p_arpc_param20       = @p_arpc_param20,
    @p_arpc_param21       = @p_arpc_param21,
    @p_arpc_param22       = @p_arpc_param22,
    @p_arpc_param23       = @p_arpc_param23,
    @p_arpc_param24       = @p_arpc_param24,
    @p_arpc_param25       = @p_arpc_param25,
    @p_arpc_param26       = @p_arpc_param26,
    @p_arpc_param27       = @p_arpc_param27,
    @p_arpc_param28       = @p_arpc_param28,
    @p_arpc_param29       = @p_arpc_param29,
    @p_arpc_param30       = @p_arpc_param30,
    @p_arpc_param31       = @p_arpc_param31,
    @p_arpc_param32       = @p_arpc_param32,
    @p_arpc_param33       = @p_arpc_param33,
    @p_arpc_param34       = @p_arpc_param34,
    @p_arpc_param35       = @p_arpc_param35,
    @p_arpc_param36       = @p_arpc_param36,
    @p_arpc_param37       = @p_arpc_param37,
    @p_arpc_param38       = @p_arpc_param38,
    @p_arpc_param39       = @p_arpc_param39,
    @p_arpc_param40       = @p_arpc_param40,
    @p_arpc_param41       = @p_arpc_param41,
    @p_arpc_param42       = @p_arpc_param42,
    @p_arpc_param43       = @p_arpc_param43,
    @p_arpc_param44       = @p_arpc_param44,
    @p_arpc_param45       = @p_arpc_param45,
    @p_arpc_param46       = @p_arpc_param46,
    @p_arpc_param47       = @p_arpc_param47,
    @p_arpc_param48       = @p_arpc_param48,
    @p_arpc_param49       = @p_arpc_param49,
    @p_arpc_param50       = @p_arpc_param50,
    @p_arpc_param51       = @p_arpc_param51,
    @p_arpc_param52       = @p_arpc_param52,
    @p_arpc_param53       = @p_arpc_param53,
    @p_arpc_param54       = @p_arpc_param54,
    @p_arpc_param55       = @p_arpc_param55,
    @p_arpc_param56       = @p_arpc_param56,
    @p_arpc_param57       = @p_arpc_param57,
    @p_arpc_param58       = @p_arpc_param58,
    @p_arpc_param59       = @p_arpc_param59,
    @p_arpc_param60       = @p_arpc_param60,
    @p_arpc_param61       = @p_arpc_param61,
    @p_arpc_param62       = @p_arpc_param62,
    @p_arpc_param63       = @p_arpc_param63,
    @p_arpc_param64       = @p_arpc_param64



GO

/****** Object:  StoredProcedure [dbo].[psp_bus_cia_aerea]    Script Date: 01/05/2011 18:05:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_bus_cia_aerea    Script Date: 19/09/2008 15:20:10 ******/

/*
exec psp_bus_cia_aerea 'SBGR', '20070707'

*/

CREATE   proc [dbo].[psp_bus_cia_aerea]
(	@p_cd_aerop			char(4)
	,@p_data			datetime)
as

create table #table_xx_2
( 	cd_cia_aerea	char(4)	)

create index ix_001 on #table_xx_2 (cd_cia_aerea)

declare @v_selo_status	char(1)
	,@v_data_fim		datetime
	,@v_mes_dia			char(4)

select @v_selo_status	= '2'
	,@v_data_fim 		= dateadd(ms, -550, dateadd(dd, 1, @p_data))
	,@v_mes_dia			= substring(convert(varchar(8), @p_data,112),5,4)

set nocount on


insert into #table_xx_2
select  a.cd_cia_aerea
from pax_selo_u	a (nolock index = IDX01_BI)
where a.selo_status			= '2'
and a.cd_aerop_utilizacao	= @p_cd_aerop
and a.dt_mov 				between @p_data and @v_data_fim
and a.tp_fat				= 'F'


/*Buscar selos Eletronicos*/

insert into #table_xx_2
select  a.cd_cia_aerea
from pax_selo_electronico_u	a (nolock index = IDX02_BI)
where a.cd_aerop		= @p_cd_aerop
and year(a.dt_voo_rea)	= year(@p_data)
and substring(a.nro_selo_electronico,8,4) = @v_mes_dia
and a.selo_status		= @v_selo_status


/*Buscar RPE*/
insert into #table_xx_2
select  a.cd_cia_aerea
from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
where a.cd_aerop 		= @p_cd_aerop
and a.cd_terminal 		= '1'
and a.dt_voo			between @p_data and @v_data_fim
and a.inactive_ind		= '0'
and a.tp_voo			<> '2'

select distinct cd_cia_aerea from #table_xx_2 order by 1

drop index #table_xx_2.ix_001

drop table #table_xx_2

set nocount off



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_aeroporto]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_aeroporto    Script Date: 19/09/2008 15:20:10 ******/


CREATE  PROCEDURE [dbo].[psp_buscar_aeroporto]
               ( @p_cod_aerop           char(5) ) 
AS 

SELECT cd_aerop, no_aerop, inactive_ind
FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u)
WHERE cd_aerop = @p_cod_aerop





GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_billing_line_id]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_billing_line_id    Script Date: 19/09/2008 15:20:11 ******/


CREATE  PROCEDURE [dbo].[psp_buscar_billing_line_id]  
(   @p_cd_aerop   		CHAR(4)
  ,@p_cd_terminal  		CHAR(1)
  ,@p_cd_cia_aerea  	CHAR(3)
  ,@p_nro_voo   		CHAR(6)
  ,@p_dt_voo  			DATETIME
  ,@p_hr_voo  			CHAR(4)
)
AS
SET ROWCOUNT 1
SELECT billing_line_id  
FROM rpax_itens_u   (NOLOCK INDEX = P_rpax_itens_u)
WHERE cd_aerop  		= @p_cd_aerop
     AND cd_terminal  	= @p_cd_terminal
     AND cd_cia_aerea  	= @p_cd_cia_aerea
     AND nro_voo  		= @p_nro_voo
     AND dt_voo  		= @p_dt_voo
     AND hr_voo  		= @p_hr_voo
     AND billing_line_id      > 0

SET ROWCOUNT 0





GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_billing_line_id_selo]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_billing_line_id_selo    Script Date: 19/09/2008 15:20:11 ******/




CREATE  PROCEDURE [dbo].[psp_buscar_billing_line_id_selo]
               ( @p_nro_selo               char(10) ) 
AS 

SELECT 
	RIGHT(LTRIM(RTRIM( STR( billing_line_id + 1000000000))),9)
	,item_fat
FROM GEACupax..pax_selo_u   (NOLOCK INDEX = P_pax_selo_u)
WHERE nro_selo             	= @p_nro_selo 
and   billing_line_id		<> 0



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_cia_por_nro_rste]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_cia_por_nro_rste    Script Date: 19/09/2008 15:20:11 ******/



CREATE  PROCEDURE [dbo].[psp_buscar_cia_por_nro_rste]
(  @p_nro_rste  CHAR(6) )
 AS
SET ROWCOUNT 1

SELECT 
	cd_cia_aerea
	,nro_rste
FROM 
	GEACupax..pax_selo_u (NOLOCK)
WHERE
	nro_rste = @p_nro_rste
ORDER BY
	dt_mov DESC

SET ROWCOUNT 0




GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_ciaaerea]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_ciaaerea    Script Date: 19/09/2008 15:20:11 ******/

CREATE PROCEDURE [dbo].[psp_buscar_ciaaerea]
               ( @p_cd_cia_aerea           char(3) ) 
AS 
 
  SELECT cd_cia_aerea,no_cia_aerea
    FROM GEACutcx..cor_cia_aerea_u (NOLOCK INDEX = P_cor_cia_aerea_u)
   WHERE cd_cia_aerea = @p_cd_cia_aerea




GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_cli_for_fat_fam]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_cli_for_fat_fam    Script Date: 19/09/2008 15:20:11 ******/

/*
exec psp_buscar_cli_for_fat_fam 'PTB', 'PAX'
*/


CREATE  PROCEDURE [dbo].[psp_buscar_cli_for_fat_fam] 
(   @p_cd_cia_aerea CHAR(3)
  ,@p_commodity_code CHAR(3)
)
AS
DECLARE   @v_cd_formapgm CHAR(1)
SELECT   
      @v_cd_formapgm = ISNULL(B.cd_formapgm, ' ')
FROM 
     GEACutcx..cor_cia_aerea_u A (NOLOCK INDEX = P_cor_cia_aerea_u)
LEFT JOIN 
     GEACutcx..cor_cli_fatfam_u B (NOLOCK INDEX = P_cor_cli_fatfam_u)
ON
      B.recv_acct_id  	= A.recv_acct_id
	and B.inactive_ind	= '0'
WHERE  B.commodity_code 	= @p_commodity_code
    AND A.cd_cia_aerea 		= @p_cd_cia_aerea
    AND B.dt_vigencia 		= (SELECT MAX(C.dt_vigencia) 
        FROM GEACutcx..cor_cli_fatfam_u C (NOLOCK INDEX = P_cor_cli_fatfam_u)
        WHERE C.recv_acct_id  		= B.recv_acct_id
            AND  C.commodity_code 	= B.commodity_code
            AND  C.item_id_de  		= B.item_id_de
            AND  C.item_id_ate  	= B.item_id_ate)

IF @v_cd_formapgm IS NULL
     SELECT ''
ELSE
     SELECT @v_cd_formapgm





GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_distribucao]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_distribucao    Script Date: 19/09/2008 15:20:12 ******/

CREATE PROCEDURE [dbo].[psp_buscar_distribucao]
( @p_nro_selo  CHAR(10))
AS
    SELECT  cd_aerop   	AEROPORTO
	 ,cd_terminal   	TERMINAL
	 ,cd_cia_aerea   CIA_AEREA
	 ,dt_entrega      	DATA_ENTERGA             
	 ,nro_rste   	RSTE	
	 ,nro_selo_inicial  SELO_INICIAL
	 ,nro_selo_final  	SELO_FINAL
	 ,qtd_selos    QTD_SELOS
    FROM pax_entrega_selo_line_u (NOLOCK INDEX = P_pax_entrega_selo_line_u)
    WHERE nro_selo_inicial 	<= @p_nro_selo 
    AND nro_selo_final 		>= @p_nro_selo 



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_distribuicao_por_selo]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create proc [dbo].[psp_buscar_distribuicao_por_selo]
		(@p_nro_selo		varchar(10))
as 
select b.cd_aerop
	,b.cd_terminal
	,b.dt_entrega
	,b.hh_entrega
	,b.cd_cia_aerea
	,b.nro_rste
	,b.cd_situacao_rste
	,a.ano_remesa ano_remesa_line
	,a.nro_selo_inicial
	,a.nro_selo_final
	,a.qtd_selos
	,a.tp_fat
	,b.ano_remesa ano_remesa_ctrl
from pax_entrega_selo_line_u a with (nolock)
inner join pax_entrega_selo_ctrl_u b with (nolock)
on b.cd_aerop		= a.cd_aerop
and b.cd_terminal	= a.cd_terminal
and b.dt_entrega	= a.dt_entrega
and b.hh_entrega	= a.hh_entrega
and b.cd_cia_aerea	= a.cd_cia_aerea
and b.nro_rste		= a.nro_rste
where @p_nro_selo between a.nro_selo_inicial and a.nro_selo_final

select * from pax_selo_u (nolock) where nro_selo = @p_nro_selo

GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_forma_pgm]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_forma_pgm    Script Date: 19/09/2008 15:20:12 ******/


/*

EXEC psp_buscar_forma_pgm 'SBBE', '1', 'I', '20030901'

*/


CREATE  PROC [dbo].[psp_buscar_forma_pgm]
(	@p_cd_aerop     		CHAR(4)
	,@p_cd_terminal     	CHAR(10)
	,@p_tp_natureza     	CHAR(1)
	,@p_dt_vigencia			DATETIME
	,@p_cd_cia_aerea		CHAR(3)
)
AS
SELECT TOP 1
	A.item_id
	,C.recv_acct_id
	,D.cd_formapgm
FROM GEACutcx..cor_item_pax_u  A (NOLOCK)
	,GEACutcx..cor_cia_aerea_u C (NOLOCK INDEX = P_cor_cia_aerea_u)
	,GEACutcx..cor_cli_fatfam_u D (NOLOCK)
WHERE A.cd_aerop     	= @p_cd_aerop
 AND A.cd_terminal     	= @p_cd_terminal
 AND A.tp_natureza     	= @p_tp_natureza
 AND A.dt_vigencia     	= ( SELECT MAX(B.dt_vigencia)
							FROM GEACutcx..cor_item_pax_u B (NOLOCK)
							WHERE A.cd_aerop     	= B.cd_aerop
							AND A.cd_terminal     	= B.cd_terminal
							AND A.tp_natureza     	= B.tp_natureza
							AND A.dt_vigencia		<= @p_dt_vigencia
							AND B.inactive_ind		= '0')
AND C.cd_cia_aerea     	= @p_cd_cia_aerea
AND D.recv_acct_id 		= C.recv_acct_id
AND A.item_id BETWEEN D.item_id_de AND D.item_id_ate
ORDER BY D.dt_vigencia DESC




GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_indice]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_indice    Script Date: 19/09/2008 15:20:12 ******/

CREATE PROC [dbo].[psp_buscar_indice] 
(	@p_tabla	VARCHAR(50) = '%' )

AS

SELECT SUBSTRING(A.name,1,50) Tabla
	,SUBSTRING(B.name,1,50) Indice
	,C.keyno KeyOrden
	,D.name Columna 
FROM sysobjects A (NOLOCK)
INNER JOIN sysindexes B(NOLOCK)
ON B.id = A.id
INNER JOIN sysindexkeys C (NOLOCK)
ON C.id 	= B.id
AND C.indid 	= B.indid
INNER JOIN syscolumns D (NOLOCK)
ON D.id = C.id
AND D.colid = C.colid
WHERE A.name LIKE CASE WHEN @p_tabla = '%' THEN '%' ELSE '%' + @p_tabla + '%' END
AND SUBSTRING(B.name,1,1) <> '_'
ORDER BY A.name, B.name, C.keyno





GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_mt_aeronave]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_mt_aeronave    Script Date: 19/09/2008 15:20:12 ******/

CREATE PROCEDURE [dbo].[psp_buscar_mt_aeronave]
               ( @p_mt_aeronave          char(10) ) 
AS 
 
Select 
  mt_aeronave 
 ,tp_aeronave 
 ,nr_cap_max_pas
from 
 GEACutcx..cor_aeronave_u (NOLOCK INDEX = P_cor_aeronave_u)
where 
 mt_aeronave = @p_mt_aeronave




GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_nro_voos]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_nro_voos    Script Date: 19/09/2008 15:20:12 ******/

CREATE PROCEDURE [dbo].[psp_buscar_nro_voos]
(  @p_ciaaerea CHAR(3))
AS
SELECT
  SUBSTRING(nr_voo, 4, 7)
 ,nr_voo
FROM 
 GEACutcx..cor_nro_voo_tipo_voo_u (NOLOCK)
WHERE
 LEFT(nr_voo, 3) = @p_ciaaerea



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_num_boleto]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_num_boleto    Script Date: 19/09/2008 15:20:12 ******/



CREATE PROCEDURE [dbo].[psp_buscar_num_boleto] 
(		@p_billing_line_id       	Integer 
) 
AS 

SELECT 
	recv_doc_id
	,item_nbr
FROM 
	GEACbl..gtb_billing_line_u (NOLOCK index = PK_gtb_billing_line_u)
WHERE 
	billing_line_id       	= @p_billing_line_id
 







GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_qtd_selo_vista_nao_uti]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_qtd_selo_vista_nao_uti    Script Date: 19/09/2008 15:20:12 ******/
-- =============================================
-- Author:		José Antonio Muñoz
-- Create date: 09/06/2008
-- Description:	Verificar a quantidade de selos entregues a vista não utilizados
-- exec psp_buscar_qtd_selo_vista_nao_uti 'SBGL', 'LTU', 'I09639208', 'I09639210', 2007
-- =============================================
CREATE proc [dbo].[psp_buscar_qtd_selo_vista_nao_uti]
(
		@p_cd_aerop			char(4)
		,@p_cd_cia_aerea	char(4)
		,@p_str_selo_ini	char(10)
		,@p_str_selo_fim	char(10)
		,@p_ano_remesa		integer)

as
begin
	set nocount on 
	declare @v_qtd				integer
			,@v_dt_hoje			datetime

	set @v_dt_hoje			= getdate()

	select @v_qtd = count(1)
	from pax_selo_u a (nolock index = IDX02_BI)
	where  a.cd_cia_aerea	= @p_cd_cia_aerea
	and a.selo_status		= '1'
	and a.dt_mov			<= 	@v_dt_hoje
	and a.tp_fat			= 'A'
	and a.cd_aerop		= @p_cd_aerop
	and not exists (select 1 from pax_selo_u b (nolock index = P_pax_selo_u)
					where b.nro_selo	= a.nro_selo
					and b.ano_remesa	= a.ano_remesa
					and b.nro_selo		between @p_str_selo_ini and @p_str_selo_fim
					and b.ano_remesa	= @p_ano_remesa)



	if @@rowcount = 0
		set @v_qtd = 0

	select @v_qtd 

	set nocount off 
end


GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_superintendente]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_superintendente    Script Date: 19/09/2008 15:20:13 ******/
CREATE proc [dbo].[psp_buscar_superintendente] 
	(@p_cd_aerop		char(4))
as

/* exec psp_buscar_superintendente 'SBGR'*/

select 
	b.NOME
	,b.NOM_FUNCAO
	,b.E_MAIL
from INFRAERO..VIW_EMP_INTEGRASS b (nolock)
inner join GEACutcx..cor_aeroporto_u a (nolock index = P_cor_aeroporto_u)
on b.DEP_CODIGO = convert(int, cd_aerop_num)
where a.cd_aerop = @p_cd_aerop
and b.NOM_FUNCAO LIKE 'SUPERINT%'



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_tipo_fac]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_tipo_fac    Script Date: 19/09/2008 15:20:13 ******/

/*
exec psp_buscar_tipo_fac 'PTB', '20080221', 'PAX'
*/


CREATE  PROCEDURE [dbo].[psp_buscar_tipo_fac]
(  @p_cd_cia_aerea 		char(3)
	,@p_dt_vigencia 	datetime 
	,@p_commodity_code 	char(4))
AS
SELECT  
  A.recv_acct_id 
 ,dt_vigencia  	= CASE WHEN B.dt_vigencia  IS NULL THEN '19000101'  ELSE CONVERT(CHAR(8), B.dt_vigencia, 112)  END
 ,cd_formapgm   = CASE WHEN cd_formapgm  IS NULL THEN ' '   ELSE B.cd_formapgm     END
FROM 
     GEACutcx..cor_cia_aerea_u   A (NOLOCK INDEX = P_cor_cia_aerea_u)
LEFT JOIN GEACutcx..cor_cli_fatfam_u B (NOLOCK INDEX = P_cor_cli_fatfam_u)
ON B.recv_acct_id = A.recv_acct_id
and B.inactive_ind	= '0'
WHERE 
   A.cd_cia_aerea     		= @p_cd_cia_aerea
   AND B.commodity_code    	= @p_commodity_code
   AND CONVERT(CHAR(8),B.dt_vigencia, 112)  <= CONVERT(CHAR(8),@p_dt_vigencia, 112)
   AND B.dt_vigencia = (SELECT MAX( C.dt_vigencia )
	   FROM GEACutcx..cor_cli_fatfam_u C (NOLOCK INDEX = P_cor_cli_fatfam_u)
	   WHERE C.recv_acct_id     	= B.recv_acct_id
	   AND C.commodity_code    		= B.commodity_code
	   AND C.item_id_de     		= B.item_id_de
	   AND C.item_id_ate     		= B.item_id_ate
	   AND CONVERT(CHAR(8),C.dt_vigencia, 112)  <= CONVERT(CHAR(8),@p_dt_vigencia, 112) )



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_tipo_fatur]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_tipo_fatur    Script Date: 19/09/2008 15:20:13 ******/

CREATE PROCEDURE [dbo].[psp_buscar_tipo_fatur] 
               ( @p_cd_aerop         char(4)
                 ,@p_terminal         char(10)
                 ,@p_dt_vigencia DATETIME)
AS 
SET ROWCOUNT 1
    SELECT 
  A.cd_aerop 
 ,A.terminal 
 ,A.dt_vigencia 
 ,A.tp_fatur_pax 
 ,A.date_created 
 ,A.user_id_created 
 ,A.date_changed 
 ,A.user_id_changed 
 ,A.inactive_ind 
 ,A.active_date 
 ,A.chgstamp
    FROM 
 GEACutcx..cor_tpfatur_selo_u   A (NOLOCK)
    WHERE 
 A.cd_aerop        = @p_cd_aerop
     AND A.terminal          = @p_terminal
     AND A.dt_vigencia  <= @p_dt_vigencia
     ORDER BY 
 A.dt_vigencia DESC
SET ROWCOUNT 0



GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_tipos_cnc]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_buscar_tipos_cnc    Script Date: 19/09/2008 15:20:13 ******/

CREATE PROCEDURE [dbo].[psp_buscar_tipos_cnc] 
AS
SELECT cd_motivo
 ,ds_motivocnc
FROM 
 GEACutcx..cor_motivocnc_selo_u (NOLOCK)
WHERE
 inactive_ind = '0'




GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_tp_selo_fat_online]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_tp_selo_fat_online    Script Date: 19/09/2008 15:20:13 ******/
-- =============================================
-- Author:		José Antonio Muñoz
-- Create date: 09/06/2008
-- Description:	Verificar se uma distribuição tem selos entregues a vista
-- exec psp_buscar_tp_selo_fat_online 'SBBR', '1', '20080609', '150000', 'TAM', '000005'
-- =============================================
CREATE proc [dbo].[psp_buscar_tp_selo_fat_online]
(
		@p_cd_aerop			char(4)
		,@p_cd_terminal 	char(10)
		,@p_dt_entrega		datetime
		,@p_hh_entrega		char(6)
		,@p_cd_cia_aerea	char(4)
		,@p_nro_rste 		char(6))
as
begin
	set nocount on 
	declare @v_tp_fat			char (1)
			,@v_str_selo_ini	char (10)
			,@v_str_selo_fim	char (10)
	set @v_tp_fat	= ''
	select top 1 
		@v_tp_fat			= tp_fat
		,@v_str_selo_ini	= nro_selo_inicial
		,@v_str_selo_fim	= nro_selo_final
	from pax_entrega_selo_line_u (nolock index = P_pax_entrega_selo_line_u)
	where cd_aerop		= @p_cd_aerop
	and cd_terminal		= @p_cd_terminal
	and dt_entrega      = @p_dt_entrega        
	and hh_entrega		= @p_hh_entrega
	and cd_cia_aerea	= @p_cd_cia_aerea
	and nro_rste		= @p_nro_rste
	and tp_fat			= 'A'

	if @@rowcount = 0
		select @v_tp_fat	= ''
		,@v_str_selo_ini	= ''
		,@v_str_selo_fim	= ''

	select @v_tp_fat		
		,@v_str_selo_ini	
		,@v_str_selo_fim	

	set nocount off 
end


GO

/****** Object:  StoredProcedure [dbo].[psp_buscar_voos]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_buscar_voos    Script Date: 19/09/2008 15:20:14 ******/
CREATE procedure [dbo].[psp_buscar_voos]
as
select 
	cd_aerop
	,data_mov
	,cd_cia_aerea
	,nro_voo
	,numero
	,nro_voo_lista
	,sel_lid_dom_fis
	,sel_lid_dom_ele
	,sel_lid_int_fis
	,sel_lid_int_ele
	,sel_lid_tot
	,sel_conf_dom_ele
	,sel_conf_int_ele
	,sel_tot_fat
	,tot_rpe
	,cont_bilhetes
	,cont_man_voo
	,cont_pax_aero
	,tot_pax_ise
	,fl_voo_lib_fat
	,fl_dados_inconsistentes
	,chgstamp
from pax_fiscal_det_u (nolock)


GO

/****** Object:  StoredProcedure [dbo].[psp_cancela_selo]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_cancela_selo    Script Date: 19/09/2008 15:20:14 ******/



CREATE  PROCEDURE [dbo].[psp_cancela_selo] 
    	(@p_billing_line_id  		real)
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  
UPDATE pax_selo_u 
SET       
              billing_line_id   		= 0
             ,billing_int_date  		= '19000101' 
             ,billing_int_type  		= ' '
             ,billing_user_1  			= ' '
             ,date_changed  			= GETDATE()
             ,user_id_changed 			= suser_sname()
             ,chgstamp  				= chgstamp + 1
WHERE 
     billing_line_id = @p_billing_line_id






GO

/****** Object:  StoredProcedure [dbo].[psp_car_hist_selo]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_car_hist_selo    Script Date: 19/09/2008 15:20:14 ******/




/*

Exec psp_car_hist_selo  '19670326'

Exec psp_car_hist_selo  '20030126' -- 7
Exec psp_car_hist_selo  '20030127' -- 4
Exec psp_car_hist_selo  '20030718' -- 40
Exec psp_car_hist_selo  '20030719' -- 65
Exec psp_car_hist_selo  '20030721' -- 4
Exec psp_car_hist_selo  '20030722' -- 97
Exec psp_car_hist_selo  '20030724' -- 1
Exec psp_car_hist_selo  '20030726' -- 1
Exec psp_car_hist_selo  '20030728' -- 2
Exec psp_car_hist_selo  '20030730' -- 5
Exec psp_car_hist_selo  '20031101'

delete from pax_selo_u_historica

select min(dt_mov) from pax_selo_u (nolock index = pax_selo_electronico_fatura)
where billing_line_id <> 0


select * from pax_selo_u_trans
select * from pax_selo_u_historica

select * from pax_selo_log_u_trans
select * from pax_selo_log_u_historica


select * from pax_selo_u (nolock)
where nro_selo = 'D25127745' and ano_remesa = 2004

select * from pax_selo_log_u (nolock)
where nro_selo = 'D25127745' and ano_remesa = 2004



20011008

select top 10 convert(varchar(8), dt_mov, 112), count(1)
	 from pax_selo_u (nolock index = pax_selo_fatura)
	where billing_line_id		<> 0
	group by  convert(varchar(8), dt_mov, 112)
	order by 1


	and a.selo_status			= a.selo_status

*/


CREATE   proc [dbo].[psp_car_hist_selo] 
		(@p_data	datetime)
as
declare @row integer
declare @err real
declare @con real
declare @str varchar(200)

if suser_sname() <> 'MUNOZ'
	return 1

set nocount on

select @str = 'INICIO DE PROCESO ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
select @row = 1
	,@con = 0
	,@str = ''

print @str

while @row <> 0  
begin
	delete pax_selo_u_trans
	delete pax_selo_log_u_trans
	/* colocar registros en la tabla de transferencia */
	insert into pax_selo_u_trans
	select top 5000 a.* from pax_selo_u a (nolock index = pax_selo_fatura)
	where a.billing_line_id		<> 0
	and a.selo_status			= a.selo_status
	and a.dt_mov				< @p_data
	and not exists (select 1 from pax_selo_u_historica b (nolock index = P_pax_selo_u_historica)
					where  b.nro_selo			= a.nro_selo
					and b.ano_remesa 			= a.ano_remesa)

	select @row = @@rowcount, @err = @@ERROR ,@con = @con + @@rowcount
	if @row > 0
	begin
		begin transaction psp_car_hist_selo

		/* colocar registros de la tabla de transferencia en la tabla historica */
		insert into pax_selo_u_historica
		select * from pax_selo_u_trans
		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "insert into pax_selo_u_historica" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		
		/* Colocar registros del log en la tabla de transferencia */
		insert into pax_selo_log_u_trans
		select a.* from pax_selo_log_u a(nolock index = P_pax_selo_log_u)
		inner join pax_selo_u_trans b
		on b.nro_selo 		= a.nro_selo
		and b.ano_remesa 	= a.ano_remesa

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "insert into pax_selo_log_u_trans" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end

		/* Colocar registros del log de la tabla de transferencia en la tabla historica */
		insert into pax_selo_log_u_historica
		select * from pax_selo_log_u_trans
		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "insert into pax_selo_log_u_historica" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end

		/* eliminar registros de la tabla de selo original */		
		delete pax_selo_u
		from pax_selo_u a 
		where exists (select 1 from pax_selo_u_trans b (nolock)
					where  b.nro_selo			= a.nro_selo
					and b.ano_remesa 			= a.ano_remesa)

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "delete pax_selo_u" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end

		/* eliminar registros de la tabla de log original */		
		delete pax_selo_log_u
		from pax_selo_log_u a 
		where exists (select 1 from pax_selo_log_u_trans b (nolock)
					where  b.nro_selo			= a.nro_selo
					and b.ano_remesa 			= a.ano_remesa
					and b.tp_natureza			= a.tp_natureza
					and b.dt_mov				= a.dt_mov
					and b.selo_status			= a.selo_status
					and b.date_changed			= a.date_changed
					and b.billing_line_id		= a.billing_line_id)

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "delete pax_selo_log_u" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end

		/* eliminar registros de la tabla de transferencia de selos */		
		delete from pax_selo_u_trans
		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "delete from pax_selo_u_trans" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end

		/* eliminar registros de la tabla de transferencia de log */		
		delete from pax_selo_log_u_trans
		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo
			select @str = 'ROLLBACK "delete from pax_selo_log_u_trans" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		ELSE
		begin
			commit transaction psp_car_hist_selo
			select @str = 'COMMIT "commit transaction psp_car_hist_selo" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
		end
	end

	if @row < 2000
		goto SALIR
end

SALIR:
--set rowcount 0
set nocount off
--commit transaction psp_car_hist_selo
select @str = 'FIM DE PROCESO' + char(13) + char(10)
print @str









GO

/****** Object:  StoredProcedure [dbo].[psp_car_hist_selo_elec]    Script Date: 01/05/2011 18:05:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_car_hist_selo_elec    Script Date: 19/09/2008 15:20:14 ******/




/*

Exec psp_car_hist_selo_elec  '20041205'

delete from pax_selo_electronico_u_historica

select min(dt_mov) from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
where billing_line_id <> 0


select * from pax_selo_electronico_u_trans
select * from pax_selo_electronico_u_historica

20011008
*/


CREATE     proc [dbo].[psp_car_hist_selo_elec] 
		(@p_data	datetime)
as
declare @row integer
declare @err real
declare @con real
declare @str varchar(200)

if suser_sname() <> 'MUNOZ'
	return 1

set nocount on

select @str = 'INICIO DE PROCESO ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
select @row = 1
	,@con = 0
	,@str = ''

print @str

while @row <> 0  
begin
	delete pax_selo_electronico_u_trans
	/* colocar registros en la tabla de transferencia */
	insert into pax_selo_electronico_u_trans
	select top 5000 a.* from pax_selo_electronico_u a (nolock index = pax_selo_electronico_fatura)
	where a.billing_line_id		<> 0
	and a.selo_status			= a.selo_status
	and a.dt_mov				< @p_data
	and not exists (select 1 from pax_selo_electronico_u_historica b (nolock index = P_pax_selo_electronico_u_historica)
					where  b.cd_aerop			= a.cd_aerop
					and b.cd_terminal 			= a.cd_terminal
					and b.dt_mov 				= a.dt_mov
					and b.nro_selo_electronico	= a.nro_selo_electronico
					and b.hh_mov				= a.hh_mov)
	select @row = @@rowcount, @err = @@ERROR ,@con = @con + @@rowcount
	if @row > 0
	begin
		begin transaction psp_car_hist_selo_elec

		/* colocar registros de la tabla de transferencia en la tabla historica */
		insert into pax_selo_electronico_u_historica
		select * from pax_selo_electronico_u_trans

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo_elec
			select @str = 'ROLLBACK "insert into pax_selo_electronico_u_historica" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		
		/* eliminar registros de la tabla original */		
		delete pax_selo_electronico_u
		from pax_selo_electronico_u a 
		where exists (select 1 from pax_selo_electronico_u_trans b (nolock)
						where  b.cd_aerop			= a.cd_aerop
						and b.cd_terminal 			= a.cd_terminal
						and b.dt_mov 				= a.dt_mov
						and b.nro_selo_electronico	= a.nro_selo_electronico
						and b.hh_mov				= a.hh_mov)

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo_elec
			select @str = 'ROLLBACK "delete pax_selo_electronico_u" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		
		/* eliminar registros de la tabla de transferencia*/		
		delete from pax_selo_electronico_u_trans
		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo_elec
			select @str = 'ROLLBACK "delete from pax_selo_electronico_u_trans" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		ELSE
		begin
			commit transaction psp_car_hist_selo_elec
			select @str = 'COMMIT "commit transaction psp_car_hist_selo_elec" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
		end
	end
	if @row < 5000
		goto SALIR
end

SALIR:
--set rowcount 0
set nocount off
--commit transaction psp_car_hist_selo_elec
select @str = 'FIM DE PROCESO' + char(13) + char(10)
print @str







GO

/****** Object:  StoredProcedure [dbo].[psp_car_hist_selo_elec_log]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_car_hist_selo_elec_log    Script Date: 19/09/2008 15:20:14 ******/



/*

Exec psp_car_hist_selo_elec_log  '20041205'

delete from pax_selo_electronico_log_u_historica

select min(dt_mov) from pax_selo_electronico_log_u (nolock index = pax_selo_electronico_fatura)
where billing_line_id <> 0


select COUNT(1)  from pax_selo_electronico_log_u_trans
select COUNT(1) from pax_selo_electronico_log_u_historica

20011008
*/


CREATE    proc [dbo].[psp_car_hist_selo_elec_log]
		(@p_data	datetime)
as
declare @row integer
declare @err real
declare @con real
declare @str varchar(200)

if suser_sname() <> 'MUNOZ'
	return 1


set nocount on

select @str = 'INICIO DE PROCESO ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
select @row = 1
	,@con = 0
	,@str = ''

print @str


while @row <> 0  
begin
	delete pax_selo_electronico_log_u_trans
	/* colocar registros en la tabla de transferencia */
	insert into pax_selo_electronico_log_u_trans
	select top 10000 a.* from pax_selo_electronico_log_u a (nolock index = IDX_BOLETO_MOVIMENTO)
	where a.billing_line_id		= a.billing_line_id
	and a.dt_mov				< @p_data
	and not exists (select 1 from pax_selo_electronico_log_u_historica b (nolock index = P_pax_selo_electronico_log_u_historica)
					where  b.cd_aerop			= a.cd_aerop
					and b.cd_terminal 			= a.cd_terminal
					and b.dt_mov 				= a.dt_mov
					and b.nro_selo_electronico	= a.nro_selo_electronico
					and b.billing_line_id		= a.billing_line_id
					and b.hh_mov				= a.hh_mov
					and b.date_changed			= a.date_changed)
	select @row = @@rowcount, @err = @@ERROR ,@con = @con + @@rowcount
	if @row > 0
	begin
		begin transaction psp_car_hist_selo_elec_log
		/* colocar registros de la tabla de transferencia en la tabla historica */
		insert into pax_selo_electronico_log_u_historica
		select * from pax_selo_electronico_log_u_trans

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo_elec_log
			select @str = 'ROLLBACK "insert into pax_selo_electronico_log_u_historica" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		
		/* eliminar registros de la tabla original */		
		delete pax_selo_electronico_log_u
		from pax_selo_electronico_log_u a 
		where exists (select 1 from pax_selo_electronico_log_u_trans b (nolock)
					where  b.cd_aerop			= a.cd_aerop
					and b.cd_terminal 			= a.cd_terminal
					and b.dt_mov 				= a.dt_mov
					and b.nro_selo_electronico	= a.nro_selo_electronico
					and b.billing_line_id		= a.billing_line_id
					and b.hh_mov				= a.hh_mov
					and b.date_changed			= a.date_changed)

		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo_elec_log
			select @str = 'ROLLBACK "delete pax_selo_electronico_log_u" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		
		/* eliminar registros de la tabla de transferencia*/		
		delete from pax_selo_electronico_log_u_trans
		select @err = @@ERROR 
		IF @err <> 0
		begin
			rollback transaction psp_car_hist_selo_elec_log
			select @str = 'ROLLBACK "delete from pax_selo_electronico_log_u_trans" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
			GOTO SALIR
		end
		ELSE
		begin
			commit transaction psp_car_hist_selo_elec_log
			select @str = 'COMMIT "commit transaction psp_car_hist_selo_elec_log" ' + LTRIM(RTRIM(STR(@con))) + '  ' + CONVERT(VARchar, GETDATE(), 120) + char(13) + char(10)
			print @str
		end
	end
	if @row < 10000
		goto SALIR
end

SALIR:
--set rowcount 0
set nocount off
--commit transaction psp_car_hist_selo_elec_log
select @str = 'FIM DE PROCESO' + char(13) + char(10)
print @str



GO

/****** Object:  StoredProcedure [dbo].[psp_carga_rpax_sistea]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_carga_rpax_sistea    Script Date: 19/09/2008 15:20:15 ******/


--sp_helptext psp_carga_rpax_sistea
--drop proc psp_carga_rpax_sistea
--grant all on psp_carga_rpax_sistea to public
--exec psp_carga_rpax_sistea '\\S-SEWN48\DRIVEF\rpax_sistea','SBPS2004Out1Quin.txt'
CREATE PROC [dbo].[psp_carga_rpax_sistea] 
(		@p_ruta			VARCHAR(255)
		,@p_arquivo		VARCHAR(255)	)
AS

--DESHABILITAR CONTADOR DE LINEAS DE ACTUALIZACION
SET NOCOUNT ON

-- DECLARACION DE VARIABLES
DECLARE  @p_cd_aerop 			CHAR(4)
		,@p_cd_terminal 		CHAR(10)
		,@p_cd_cia_aerea 		CHAR(3)
		,@p_tp_natureza 		CHAR(1)
		,@p_periodo_de 			DATETIME
		,@p_periodo_ate			DATETIME
		,@p_dt_embarque_str		CHAR(10)
		,@p_dt_embarque			DATETIME
		,@p_pax_total			INT
		,@p_tp_fat				CHAR(1)
		,@p_execute				VARCHAR(255)
		,@p_ls_SQL             	VARCHAR(250)
		,@int_error            	INTEGER
		,@p_TEMP 				VARCHAR(20)
		,@p_TEMP_AUX 			VARCHAR(20)

		,@v_count 				INTEGER
		,@msg					VARCHAR(255)

BEGIN TRANSACTION 

-- ELIMINAR ESPACIOS DEL NOMBRE DEL ARQUIVO
SELECT @p_ruta			= LTRIM(RTRIM(@p_ruta))
		,@p_arquivo		= LTRIM(RTRIM(@p_arquivo))


--INICIALIZAR VARIABLES DE TRABAJO
SELECT @int_error = 0

-- CREAR TABLA TEMPORAL
IF EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_ARQ')
    DROP TABLE TEMP_ARQ 

CREATE TABLE TEMP_ARQ (  	
	cd_aerop 		CHAR(4)
	,dt_embarque	VARCHAR(10)
	,cd_cia_aerea	CHAR(3)
	,tp_natureza	CHAR(1)
	,tp_fat			CHAR(1)
	,pax_total		INT
	,cd_aerop_aux 	CHAR(4)
)

GRANT ALL ON TEMP_ARQ TO geaccarga

-- SELECT @p_execute = 'master..xp_cmdshell ''bcp GEACupax..TEMP_ARQ in ' + @p_ruta + '\' + @p_arquivo + ' -c -t\t -r\n -SSQLSSIII -Ugeaccarga -Pcargageac''' 
SELECT @p_execute = 'master..xp_cmdshell ''bcp GEACupax..TEMP_ARQ in ' + @p_ruta + '\' + @p_arquivo + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
-- INSERTAR ARCHIVO EN LA TABLA TEMPORAL

--SELECT @p_execute = 'BULK INSERT TEMP_ARQ FROM ''' + @p_ruta + '\' + @p_arquivo + ''' WITH 
--SELECT @p_execute = 'BULK INSERT TEMP_ARQ FROM ''\\S-SEWN48\DRIVEF\rpax_sistea\SBPS2004Out1Quin.txt'' WITH 
	--	(
		--	FIELDTERMINATOR = ''\t'',
			--ROWTERMINATOR = ''\n''
--		)'

EXECUTE  (@p_execute)
IF @@ERROR <> 0
BEGIN
   SELECT @int_error 	= 1
		,@msg			= 'Erro na carga de Arquivo Temporário de Processamento.'
   GOTO SALIR
END

SELECT @v_count = COUNT(1)
FROM GEACupax..TEMP_ARQ (NOLOCK)
IF @v_count = 0
BEGIN
   SELECT @int_error 	= 1
		,@msg			= 'Erro na carga de Arquivo Temporário de Processamento.'
   GOTO SALIR
END

-- DECLARAR CURSOR PARA TRABAJAR ARCHIVO
DECLARE cur_arq CURSOR FOR
SELECT 	cd_aerop 	
	,dt_embarque	
	,cd_cia_aerea	
	,tp_natureza	
	,tp_fat		
	,pax_total	
FROM TEMP_ARQ 

--ABRIR CURSOR
OPEN cur_arq 

--LEER PRIMER REGISTRO
FETCH NEXT FROM cur_arq  INTO @p_cd_aerop, @p_dt_embarque_str, @p_cd_cia_aerea, @p_tp_natureza, @p_tp_fat, @p_pax_total

--CICLO DE LECTURAS
WHILE @@FETCH_STATUS = 0
BEGIN

    SELECT @p_cd_terminal		= '1'
	,@p_periodo_de		= CASE WHEN CONVERT(INT, SUBSTRING(@p_dt_embarque_str, 1,2)) < 16 THEN SUBSTRING(@p_dt_embarque_str, 7,4) + SUBSTRING(@p_dt_embarque_str, 4,2) + '01'
                                  ELSE	SUBSTRING(@p_dt_embarque_str, 7,4) + SUBSTRING(@p_dt_embarque_str, 4,2) + '16' END
	,@p_periodo_ate		= CASE WHEN CONVERT(INT, SUBSTRING(@p_dt_embarque_str, 1,2)) < 16 THEN SUBSTRING(@p_dt_embarque_str, 7,4) + SUBSTRING(@p_dt_embarque_str, 4,2) + '15'
                                  ELSE	DATEADD(dd, -1, DATEADD(mm, 1, CONVERT(DATETIME, SUBSTRING(@p_dt_embarque_str, 7,4) + SUBSTRING(@p_dt_embarque_str, 4,2) + '01'))) END
	,@p_dt_embarque		= SUBSTRING(@p_dt_embarque_str, 7,4) + SUBSTRING(@p_dt_embarque_str, 4,2) + SUBSTRING(@p_dt_embarque_str, 1,2)


    -- EJECUTAR EL PROCESO DE CARGA ORIGINAL DE LA ACTIVIDAD DE EMBARQUE POR VOO
    SELECT @p_ls_SQL =   'psp_ins_data_embarque_dia '   +
		'  "' + @p_cd_aerop 		+ '"' + 
		', "' + @p_cd_terminal 		+ '"' +  
		', "' + @p_cd_cia_aerea 	+ '"' +  
		', "' + @p_tp_natureza 		+ '"' +  
		', "' + CONVERT(VARCHAR, @p_periodo_de, 112)	+ '"' +  
		', "' + CONVERT(VARCHAR, @p_periodo_ate, 112)	+ '"'

    EXEC (@p_ls_SQL)

    UPDATE rpax_emb_dia_u
    SET pax_total 			= @p_pax_total
    WHERE cd_aerop 			= @p_cd_aerop 	
	    AND cd_terminal		= @p_cd_terminal
	    AND cd_cia_aerea	= @p_cd_cia_aerea
	    AND tp_natureza		= @p_tp_natureza
	    AND periodo_de		= @p_periodo_de
	    AND periodo_ate		= @p_periodo_ate
	    AND dt_embarque		= @p_dt_embarque

  FETCH NEXT FROM cur_arq  INTO @p_cd_aerop, @p_dt_embarque_str, @p_cd_cia_aerea, @p_tp_natureza, @p_tp_fat, @p_pax_total
END

SALIR:

IF @int_error = 1
BEGIN
	ROLLBACK TRAN
	SELECT @msg = @msg + CHAR(10) + CHAR(13)
	PRINT @msg
	RETURN 3
END
ELSE
BEGIN
	COMMIT TRANSACTION 
	SELECT @msg = 'Processo concluído com êxito.' + CHAR(10) + CHAR(13)
	PRINT @msg
END

-- CERRAR Y ELIMINAR CURSOR
CLOSE cur_arq
DEALLOCATE cur_arq


--ELIMINAR TABLA TEMPORAL DE PROCESO
IF EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_ARQ')
    DROP TABLE TEMP_ARQ 


--HABILITAR CONTADOR DE LINEAS DE ACTUALIZACION
SET NOCOUNT OFF

RETURN 0




GO

/****** Object:  StoredProcedure [dbo].[psp_carga_rpax_sistea_1]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_carga_rpax_sistea_1    Script Date: 19/09/2008 15:20:15 ******/


CREATE PROC [dbo].[psp_carga_rpax_sistea_1]
(	@p_arquivo	VARCHAR(255))
AS

-- DECLARACION DE VARIABLES
DECLARE  @p_cd_aerop 	CHAR(4)
         ,@p_cd_terminal 			CHAR(10)
         ,@p_cd_cia_aerea 		CHAR(3)
         ,@p_tp_natureza 		CHAR(1)
         ,@p_periodo_de 		DATETIME
         ,@p_periodo_ate		DATETIME
         ,@p_dt_embarque		DATETIME
         ,@p_pax_total		INT
         ,@p_execute		VARCHAR(255)
         ,@LINEA			VARCHAR(250)
         ,@p_ls_SQL             	VARCHAR(250)
         ,@int_error            		INTEGER


--DESHABILITAR CONTADOR DE LINEAS DE ACTUALIZACION
SET NOCOUNT ON

-- ELIMINAR ESPACIOS DEL NOMBRE DEL ARQUIVO
SELECT @p_arquivo = LTRIM(RTRIM(@p_arquivo))

--INICIALIZAR VARIABLES DE TRABAJO
SELECT @int_error = 0

-- Cria a Tabela Temporária 
Create table #temp_table_process_adm 
          (cd_aerop 	  CHAR(4)
          ,dt_embarque	  CHAR(10)
          ,cd_cia_aerea   CHAR(3)
          ,tp_natureza 	  CHAR(1)
          ,nada           CHAR(1)
          ,pax_total	  INT
          ,cd_aerop_1 	  CHAR(4))


-- INSERTAR ARCHIVO EN LA TABLA TEMPORAL
SELECT @p_execute = 'BULK INSERT #temp_table_process_adm FROM "' + @p_arquivo + '" WITH (FIELDTERMINATOR = "\t",ROWTERMINATOR = "\n")'

EXECUTE  (@p_execute)
IF @@ERROR <> 0
BEGIN
   SELECT @int_error = 1
   GOTO SALIR
END

-- DECLARAR CURSOR PARA TRABAJAR ARCHIVO
DECLARE cur_arq CURSOR FOR
SELECT cd_aerop, Convert(dateTime, dt_embarque,103), cd_cia_aerea, tp_natureza, pax_total
FROM #temp_table_process_adm

Declare @p_dt_inicio_quin datetime
       ,@p_dt_fim_quin    datetime


--ABRIR CURSOR
OPEN cur_arq 

--LEER PRIMER REGISTRO
FETCH NEXT FROM cur_arq  INTO 
  	  @p_cd_aerop
	, @p_dt_embarque
	, @p_cd_cia_aerea
	, @p_tp_natureza
	, @p_pax_total  

--CICLO DE LECTURAS
WHILE @@FETCH_STATUS = 0
BEGIN
    -- CARGAR LAS VARIABLES

Select   @p_dt_inicio_quin = Case When @p_dt_embarque <= Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/15/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))) Then Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/01/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque)))))
            Else Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/16/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))) end 
        ,@p_dt_fim_quin = Case When @p_dt_embarque <= Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/15/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))) Then Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/15/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque)))))
            Else DateAdd(dd, -1, DateAdd(mm, +1, Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/01/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))))) end 

   /** Insere o Registro na tabela de Embarque por Dia **/
   Insert 
     rpax_emb_dia_u
   Values 
    (@p_cd_aerop
    ,'1'
    ,@p_cd_cia_aerea
    ,@p_tp_natureza
    ,@p_dt_inicio_quin
    ,@p_dt_fim_quin
    ,@p_dt_embarque
    ,@p_pax_total
    ,GetDate()
    ,suser_sname()
    ,'1900-01-01'
    ,''
    ,'1'
    ,'1900-01-01'
    ,1)

    FETCH NEXT FROM cur_arq   INTO 
  	  @p_cd_aerop
	, @p_dt_embarque
	, @p_cd_cia_aerea
	, @p_tp_natureza
	, @p_pax_total  
END

SALIR:
-- CERRAR Y ELIMINAR CURSOR
CLOSE cur_arq
DEALLOCATE cur_arq

--HABILITAR CONTADOR DE LINEAS DE ACTUALIZACION
SET NOCOUNT ON





GO

/****** Object:  StoredProcedure [dbo].[psp_carga_rpax_sistea_2]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_carga_rpax_sistea_2    Script Date: 19/09/2008 15:20:15 ******/


CREATE PROC [dbo].[psp_carga_rpax_sistea_2]
(	@p_arquivo	VARCHAR(255))
AS

-- DECLARACION DE VARIABLES
DECLARE  @p_cd_aerop 	CHAR(4)
         ,@p_cd_terminal 			CHAR(10)
         ,@p_cd_cia_aerea 		CHAR(3)
         ,@p_tp_natureza 		CHAR(1)
         ,@p_periodo_de 		DATETIME
         ,@p_periodo_ate		DATETIME
         ,@p_dt_embarque		DATETIME
         ,@p_pax_total		INT
         ,@p_execute		VARCHAR(255)
         ,@LINEA			VARCHAR(250)
         ,@p_ls_SQL             	VARCHAR(250)
         ,@int_error            		INTEGER


--DESHABILITAR CONTADOR DE LINEAS DE ACTUALIZACION
SET NOCOUNT ON

-- ELIMINAR ESPACIOS DEL NOMBRE DEL ARQUIVO
SELECT @p_arquivo = LTRIM(RTRIM(@p_arquivo))

--INICIALIZAR VARIABLES DE TRABAJO
SELECT @int_error = 0

-- Cria a Tabela Temporária 
Create table #temp_table_process_adm 
          (cd_aerop 	  CHAR(4)
          ,dt_embarque	  CHAR(10)
          ,cd_cia_aerea   CHAR(3)
          ,tp_natureza 	  CHAR(1)
          ,nada           CHAR(1)
          ,pax_total	  INT
          ,cd_aerop_1 	  CHAR(4))


-- INSERTAR ARCHIVO EN LA TABLA TEMPORAL
SELECT @p_execute = 'BULK INSERT #temp_table_process_adm FROM "' + @p_arquivo + '" WITH (FIELDTERMINATOR = "\t",ROWTERMINATOR = "\n")'

EXECUTE  (@p_execute)
IF @@ERROR <> 0
BEGIN
   SELECT @int_error = 1
   GOTO SALIR
END

-- DECLARAR CURSOR PARA TRABAJAR ARCHIVO
DECLARE cur_arq CURSOR FOR
SELECT cd_aerop, Convert(dateTime, dt_embarque,103), cd_cia_aerea, tp_natureza, pax_total
FROM #temp_table_process_adm

Declare @p_dt_inicio_quin datetime
       ,@p_dt_fim_quin    datetime


--ABRIR CURSOR
OPEN cur_arq 

--LEER PRIMER REGISTRO
FETCH NEXT FROM cur_arq  INTO 
  	  @p_cd_aerop
	, @p_dt_embarque
	, @p_cd_cia_aerea
	, @p_tp_natureza
	, @p_pax_total  

--CICLO DE LECTURAS
WHILE @@FETCH_STATUS = 0
BEGIN
    -- CARGAR LAS VARIABLES

Select   @p_dt_inicio_quin = Case When @p_dt_embarque <= Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/15/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))) Then Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/01/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque)))))
            Else Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/16/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))) end 
        ,@p_dt_fim_quin = Case When @p_dt_embarque <= Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/15/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))) Then Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/15/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque)))))
            Else DateAdd(dd, -1, DateAdd(mm, +1, Convert(Datetime, Rtrim(Convert(Char(2), (DatePart(mm, @p_dt_embarque)))) + '/01/' + Rtrim(Convert(Char(4), (DatePart(yyyy, @p_dt_embarque))))))) end 

Select @p_cd_aerop
      ,'1'
      ,@p_cd_cia_aerea
      ,@p_tp_natureza
      ,@p_dt_inicio_quin
      ,@p_dt_fim_quin
      ,@p_dt_embarque
      ,@p_pax_total
      ,GetDate()
      ,suser_sname()
      ,'1900-01-01'
      ,''
      ,'1'
      ,'1900-01-01'
      ,1

   /** Insere o Registro na tabela de Embarque por Dia 
   Insert 
     rpax_emb_dia_u
   Values 
    (@p_cd_aerop
    ,'1'
    ,@p_cd_cia_aerea
    ,@p_tp_natureza
    ,@p_dt_inicio_quin
    ,@p_dt_fim_quin
    ,@p_dt_embarque
    ,@p_pax_total
    ,GetDate()
    ,suser_sname()
    ,'1900-01-01'
    ,''
    ,'1'
    ,'1900-01-01'
    ,1) **/    

    FETCH NEXT FROM cur_arq   INTO 
  	  @p_cd_aerop
	, @p_dt_embarque
	, @p_cd_cia_aerea
	, @p_tp_natureza
	, @p_pax_total  
END

SALIR:
-- CERRAR Y ELIMINAR CURSOR
CLOSE cur_arq
DEALLOCATE cur_arq

--HABILITAR CONTADOR DE LINEAS DE ACTUALIZACION
SET NOCOUNT ON





GO

/****** Object:  StoredProcedure [dbo].[psp_carga_rpe]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_carga_rpe    Script Date: 19/09/2008 15:20:15 ******/






CREATE  PROCEDURE [dbo].[psp_carga_rpe]
(	@p_arquivo		VARCHAR(250) )
AS
DECLARE 	 @p_cd_aerop        		CHAR(4) 
                 ,@p_cd_terminal     		CHAR(10) 
                 ,@p_cd_cia_aerea    		CHAR(3) 
                 ,@p_dt_voo          		DATETIME 
                 ,@p_hr_voo          		CHAR(4) 
                 ,@p_nro_voo         		CHAR(5) 
                 ,@p_tp_natureza     		CHAR(1) 
                 ,@p_tp_voo          		CHAR(1) 
                 ,@p_pax_dom_fat     		INTEGER 
                 ,@p_pax_int_fat     		INTEGER 
                 ,@p_pax_tot_fat     		INTEGER 
                 ,@p_pax_dom_vista   		INTEGER 
                 ,@p_pax_int_vista   		INTEGER 
                 ,@p_pax_tot_vista   		INTEGER 
                 ,@p_pax_colo        		INTEGER 
                 ,@p_pax_transito    		INTEGER 
                 ,@p_pax_conexao_dom 		INTEGER 
                 ,@p_pax_conexao_int 		INTEGER 
                 ,@p_pax_iac2110     		INTEGER 
                 ,@p_pax_tot_isento  		INTEGER 
                 ,@p_pax_total       		INTEGER 
                 ,@p_emb_bagagem_dom 		INTEGER 
                 ,@p_emb_bagagem_int 		INTEGER 
                 ,@p_emb_carga_dom   		INTEGER 
                 ,@p_emb_carga_int   		INTEGER 
                 ,@p_emb_correio_dom 		INTEGER 
                 ,@p_emb_correio_int 		INTEGER 
                 ,@p_rpax_participa  		CHAR(15) 
                 ,@p_mt_aeronave     		CHAR(10) 
                 ,@p_com_voo_gen        	VARCHAR(250) 
                 ,@p_date_created    		DATETIME 
                 ,@p_user_id_created 		CHAR(30) 
                 ,@p_date_changed    		DATETIME 
                 ,@p_user_id_changed 		CHAR(30) 
                 ,@p_inactive_ind    		CHAR(1) 
                 ,@p_active_date     		DATETIME

                 ,@p_desem_pax_dom		INTEGER 
                 ,@p_desem_pax_int		INTEGER 
                 ,@p_desem_bagagem_dom		FLOAT
                 ,@p_desem_bagagem_int		FLOAT
                 ,@p_desem_carga_dom		FLOAT
                 ,@p_desem_carga_int		FLOAT
                 ,@p_desem_correio_dom		FLOAT
                 ,@p_desem_correio_int		FLOAT
                 ,@p_desem_pax_dom_conex	FLOAT 
                 ,@p_desem_pax_int_conex   	FLOAT
                 ,@p_desem_bagagem_dom_conex	FLOAT
                 ,@p_desem_bagagem_int_conex  	FLOAT
                 ,@p_desem_carga_dom_conex  	FLOAT
                 ,@p_desem_carga_int_conex   	FLOAT
                 ,@p_desem_correio_dom_conex  	FLOAT
                 ,@p_desem_correio_int_conex   	FLOAT


                 ,@p_linea	     		VARCHAR(400)
                 ,@p_erro 			INTEGER 
                 ,@p_mensaje        		VARCHAR(500) 
                 ,@p_cont_reg 			INTEGER 
                 ,@p_date_proceso 		DATETIME 
                 ,@p_user_proceso		CHAR(30) 
		 ,@p_bulk			VARCHAR(250) 

SET NOCOUNT ON
-- CREAR TABLA TEMPORAL DE PROCESOS.

IF EXISTS (SELECT * FROM sysobjects WHERE name = 'TEMP_PRO')
    DROP TABLE TEMP_PRO


CREATE TABLE TEMP_PRO (LINEA VARCHAR(400))

-- CARGAR INFORMACION DE ARCHIVO EN LA TABLA TEMPORAL DE PROCESOS

SELECT @p_mensaje = 'INICIO DO PROCESSO --> ARQUIVO : '+ @p_arquivo + CHAR(14) + CHAR(10)
PRINT @p_mensaje

SELECT @p_bulk = 'BULK INSERT TEMP_PRO FROM "' + @p_arquivo + '" WITH (FIELDTERMINATOR = "\t", ROWTERMINATOR = "\n")'
--SELECT @p_bulk 
EXEC (@p_bulk )

SELECT @p_mensaje = 'CARGA DO ARQUIVO FINALIZADA' + CHAR(14) + CHAR(10)
PRINT @p_mensaje

-- INICIALIZAR VARIABLES DE TRABAJO
SELECT  @p_erro 		= 0
	,@p_cont_reg		= 0
	,@p_date_proceso 	= GETDATE()
	,@p_user_proceso	= suser_sname()

-- CREAR CURSOR CON LA INFORMACION A PROCESAR
DECLARE cur CURSOR FOR
   SELECT LTRIM(RTRIM(LINEA)) FROM TEMP_PRO

-- ABRIR CURSOR
OPEN cur

-- LEER PRIMER REGISTRO DEL CURSOR
FETCH NEXT FROM cur INTO @p_linea

-- CICLO DE PROCESO
BEGIN TRANSACTION PROCESSO 
SELECT @p_mensaje = 'INICIO PROCESO DE INCLUSAO DE RPAX' + CHAR(14) + CHAR(10)
PRINT @p_mensaje

WHILE @@FETCH_STATUS = 0
BEGIN

    SELECT @p_cont_reg = @p_cont_reg + 1
--    PRINT @p_linea
    -- CARGAR EMBARQUE POR VUELO
    SELECT 	 @p_cd_aerop		= SUBSTRING(@p_linea,10,4)
                 ,@p_cd_terminal	= '1' -- SUBSTRING(@p_linea,10,4)			-- CHAR(10) 
                 ,@p_cd_cia_aerea	= SUBSTRING(@p_linea,26,3) 				-- CHAR(3) 
                 ,@p_dt_voo		= SUBSTRING(@p_linea,43,4) + SUBSTRING(@p_linea,40,2) + SUBSTRING(@p_linea,37,2) -- DATETIME 
                 ,@p_hr_voo		= SUBSTRING(@p_linea,48,2) + SUBSTRING(@p_linea,51,2)	-- CHAR(4) 
                 ,@p_nro_voo		= SUBSTRING(@p_linea,30,1) + SUBSTRING(@p_linea,32,4)	-- CHAR(5) 
                 ,@p_tp_natureza	= SUBSTRING(@p_linea,54,1) 				-- CHAR(1) 
                 ,@p_tp_voo		= CASE 	WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,68,12))) = 'MISTO' 		THEN '3'
						WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,68,12))) = 'CARGA' 		THEN '2'
						WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,68,12))) = 'PASSAGEIRO' 	THEN '1'
						ELSE '0' END

                 ,@p_pax_dom_fat	= CONVERT(INTEGER, SUBSTRING(@p_linea,97,3)) 				-- INTEGER 
                 ,@p_pax_int_fat	= CONVERT(INTEGER, SUBSTRING(@p_linea,105,3)) 				-- INTEGER 
                 ,@p_pax_tot_fat	= CONVERT(INTEGER, SUBSTRING(@p_linea,97,3)) + CONVERT(INTEGER, SUBSTRING(@p_linea,105,3))
                 ,@p_pax_dom_vista	= CONVERT(INTEGER, SUBSTRING(@p_linea,113,3)) 				-- INTEGER 
                 ,@p_pax_int_vista	= CONVERT(INTEGER, SUBSTRING(@p_linea,117,3)) 				-- INTEGER 
                 ,@p_pax_tot_vista	= CONVERT(INTEGER, SUBSTRING(@p_linea,113,3)) + CONVERT(INTEGER, SUBSTRING(@p_linea,117,3))
                 ,@p_pax_colo		= CONVERT(INTEGER, SUBSTRING(@p_linea,129,3)) 				-- INTEGER 
                 ,@p_pax_transito	= CONVERT(INTEGER, SUBSTRING(@p_linea,133,3)) 				-- INTEGER 
                 ,@p_pax_conexao_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,137,3)) 				-- INTEGER 
                 ,@p_pax_conexao_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,141,3)) 				-- INTEGER 
                 ,@p_pax_iac2110	= CONVERT(INTEGER, SUBSTRING(@p_linea,145,3)) 				-- INTEGER 
                 ,@p_pax_tot_isento  	= 0									-- INTEGER 

    SELECT 	 @p_pax_total       	= @p_pax_tot_fat + @p_pax_tot_vista + @p_pax_colo + @p_pax_transito + @p_pax_conexao_dom + @p_pax_conexao_int + @p_pax_iac2110 + @p_pax_tot_isento
                 ,@p_emb_bagagem_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,149,6)) 				-- INTEGER 
                 ,@p_emb_bagagem_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,156,6)) 				-- INTEGER 
                 ,@p_emb_carga_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,163,7)) 				-- INTEGER 
                 ,@p_emb_carga_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,171,7)) 				-- INTEGER 
                 ,@p_emb_correio_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,179,6)) 				-- INTEGER 
                 ,@p_emb_correio_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,186,6)) 				-- INTEGER 
                 ,@p_rpax_participa	= SUBSTRING(@p_linea,81,1) 						-- CHAR(1) 
                 ,@p_mt_aeronave	= SUBSTRING(@p_linea,15,10) 						-- CHAR(10) 
                 ,@p_com_voo_gen	= ' ' 									-- VARCHAR(250) 
                 ,@p_date_created	= @p_date_proceso 							-- DATETIME 
                 ,@p_user_id_created 	= @p_user_proceso							-- CHAR(30) 
                 ,@p_date_changed    	= '19000101'								-- DATETIME 
                 ,@p_user_id_changed 	= ' ' 									-- CHAR(30) 
                 ,@p_inactive_ind    	= '0'									-- CHAR(1) 
                 ,@p_active_date     	= @p_date_proceso							-- DATETIME

    IF LTRIM(RTRIM(@p_nro_voo)) <> ''  -- VERIFICAR SI SE CARGA EL EMBARQUE
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM rpax_emb_voo_u 
           WHERE cd_aerop       = @p_cd_aerop 
           AND cd_terminal    	= @p_cd_terminal 
           AND cd_cia_aerea    	= @p_cd_cia_aerea 
           AND dt_voo          	= @p_dt_voo 
           AND hr_voo          	= @p_hr_voo 
           AND nro_voo         	= @p_nro_voo) 
        BEGIN
            EXECUTE usp_ins_upma @p_cd_aerop		
                 ,@p_cd_terminal	
                 ,@p_cd_cia_aerea	
                 ,@p_dt_voo		
                 ,@p_hr_voo		
                 ,@p_nro_voo		
                 ,@p_tp_natureza	
                 ,@p_tp_voo
                 ,@p_pax_dom_fat	
                 ,@p_pax_int_fat	
                 ,@p_pax_tot_fat	
                 ,@p_pax_dom_vista	
                 ,@p_pax_int_vista	
                 ,@p_pax_tot_vista	
                 ,@p_pax_colo		
                 ,@p_pax_transito	
                 ,@p_pax_conexao_dom	
                 ,@p_pax_conexao_int	
                 ,@p_pax_iac2110	
                 ,@p_pax_tot_isento  	
		 ,@p_pax_total       	
                 ,@p_emb_bagagem_dom	
                 ,@p_emb_bagagem_int	
                 ,@p_emb_carga_dom	
                 ,@p_emb_carga_int	
                 ,@p_emb_correio_dom	
                 ,@p_emb_correio_int	
                 ,@p_rpax_participa	
                 ,@p_mt_aeronave	
                 ,@p_com_voo_gen	
                 ,@p_date_created	
                 ,@p_user_id_created 	
                 ,@p_date_changed    	
                 ,@p_user_id_changed 	
                 ,@p_inactive_ind    	
                 ,@p_active_date
        END
        ELSE
        BEGIN
            SELECT @p_mensaje = '   EMBARQUE POR VOO, RPAX JA ESTA REGISTRADO. LINEA: ' + RIGHT(LTRIM(RTRIM(STR(@p_cont_reg + 100000))),5) + ' --> ' + @p_cd_aerop + '/' + LTRIM(RTRIM(@p_cd_terminal)) + '/' + @p_cd_cia_aerea + '/' + CONVERT(VARCHAR, @p_dt_voo, 112) + '/' + @p_hr_voo + '/' + @p_nro_voo + CHAR(14) + CHAR(10)
	    PRINT @p_mensaje
        END
    END
    -- CARGAR DESEMBARQUE POR VUELO
    SELECT 	 @p_dt_voo			= SUBSTRING(@p_linea,206,4) + SUBSTRING(@p_linea,203,2) + SUBSTRING(@p_linea,200,2) -- DATETIME 
                 ,@p_hr_voo			= SUBSTRING(@p_linea,211,2) + SUBSTRING(@p_linea,214,2)	-- CHAR(4) 
                 ,@p_nro_voo			= SUBSTRING(@p_linea,193,1) + SUBSTRING(@p_linea,195,4)	-- CHAR(5) 
                 ,@p_tp_natureza		= SUBSTRING(@p_linea,217,1) 				-- CHAR(1) 
                 ,@p_tp_voo			= CASE 	WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,231,12))) = 'MISTO' 		THEN '3'
							WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,231,12))) = 'CARGA' 		THEN '2'
							WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,231,12))) = 'PASSAGEIRO' 		THEN '1'
							ELSE '0' END
                 ,@p_desem_pax_dom		= CONVERT(INTEGER, SUBSTRING(@p_linea,260,3)) 				-- INTEGER 
                 ,@p_desem_pax_int		= CONVERT(INTEGER, SUBSTRING(@p_linea,264,3)) 				-- INTEGER 
                 ,@p_desem_bagagem_dom		= CONVERT(FLOAT, SUBSTRING(@p_linea,276,5)) 				-- FLOAT
                 ,@p_desem_bagagem_int		= CONVERT(FLOAT, SUBSTRING(@p_linea,282,5)) 				-- FLOAT
                 ,@p_desem_carga_dom		= CONVERT(FLOAT, SUBSTRING(@p_linea,300,6)) 				-- FLOAT
                 ,@p_desem_carga_int		= CONVERT(FLOAT, SUBSTRING(@p_linea,307,6)) 				-- FLOAT
                 ,@p_desem_correio_dom		= CONVERT(FLOAT, SUBSTRING(@p_linea,328,5)) 				-- FLOAT
                 ,@p_desem_correio_int		= CONVERT(FLOAT, SUBSTRING(@p_linea,334,5)) 				-- FLOAT
                 ,@p_desem_pax_dom_conex	= CONVERT(FLOAT, SUBSTRING(@p_linea,268,3)) 				-- FLOAT 
                 ,@p_desem_pax_int_conex   	= CONVERT(FLOAT, SUBSTRING(@p_linea,272,3)) 				-- FLOAT
                 ,@p_desem_bagagem_dom_conex	= CONVERT(FLOAT, SUBSTRING(@p_linea,288,5)) 				-- FLOAT
                 ,@p_desem_bagagem_int_conex  	= CONVERT(FLOAT, SUBSTRING(@p_linea,294,5)) 				-- FLOAT
                 ,@p_desem_carga_dom_conex  	= CONVERT(FLOAT, SUBSTRING(@p_linea,314,6)) 				-- FLOAT
                 ,@p_desem_carga_int_conex   	= CONVERT(FLOAT, SUBSTRING(@p_linea,321,5)) 				-- FLOAT
                 ,@p_desem_correio_dom_conex  	= CONVERT(FLOAT, SUBSTRING(@p_linea,340,5)) 				-- FLOAT
                 ,@p_desem_correio_int_conex   	= CONVERT(FLOAT, SUBSTRING(@p_linea,346,5)) 				-- FLOAT

    IF LTRIM(RTRIM(@p_nro_voo)) <> ''  -- VERIFICAR SI SE CARGA EL DESEMBARQUE
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM rpax_desemb_u 
             WHERE cd_aerop     	= @p_cd_aerop 
             AND cd_terminal       	= @p_cd_terminal 
             AND cd_cia_aerea   	= @p_cd_cia_aerea 
             AND nro_voo           	= @p_nro_voo 
             AND dt_voo            	= @p_dt_voo 
             AND hr_voo            	= @p_hr_voo )
        BEGIN
            EXECUTE usp_ins_upia @p_cd_aerop 
                 ,@p_cd_terminal 
                 ,@p_cd_cia_aerea 
                 ,@p_dt_voo 
                 ,@p_hr_voo 
                 ,@p_nro_voo 
                 ,@p_tp_natureza 
                 ,@p_tp_voo 
                 ,@p_mt_aeronave 
                 ,@p_desem_pax_dom 
                 ,@p_desem_pax_int 
                 ,@p_desem_bagagem_dom 
                 ,@p_desem_bagagem_int 
                 ,@p_desem_carga_dom 
                 ,@p_desem_carga_int 
                 ,@p_desem_correio_dom 
                 ,@p_desem_correio_int 
                 ,@p_rpax_participa 
                 ,@p_desem_pax_dom_conex 
                 ,@p_desem_pax_int_conex 
                 ,@p_desem_bagagem_dom_conex
                 ,@p_desem_bagagem_int_conex
                 ,@p_desem_carga_dom_conex
                 ,@p_desem_carga_int_conex
                 ,@p_desem_correio_dom_conex
                 ,@p_desem_correio_int_conex
                 ,@p_com_voo_gen  
                 ,@p_date_created	
                 ,@p_user_id_created 	
                 ,@p_date_changed    	
                 ,@p_user_id_changed 	
                 ,@p_inactive_ind    	
                 ,@p_active_date
        END
        ELSE
        BEGIN
            SELECT @p_mensaje = 'DESEMBARQUE POR VOO, RPAX JA ESTA REGISTRADO. LINEA: ' + RIGHT(LTRIM(RTRIM(STR(@p_cont_reg + 100000))),5) + ' --> ' + @p_cd_aerop + '/' + LTRIM(RTRIM(@p_cd_terminal)) + '/' + @p_cd_cia_aerea + '/' + CONVERT(VARCHAR, @p_dt_voo, 112) + '/' + @p_hr_voo + '/' + @p_nro_voo + CHAR(14) + CHAR(10)
	    PRINT @p_mensaje
        END
    END
    FETCH NEXT FROM cur INTO @p_linea
END

SALIR:
IF  @p_erro = 0
BEGIN
    COMMIT TRANSACTION PROCESSO
    SELECT @p_mensaje = 'FIM DO PROCESO SEM ERRO. REGISTROS PROCESADOS ---> ' + LTRIM(RTRIM(STR(@p_cont_reg))) + CHAR(14) + CHAR(10)
END
ELSE
BEGIN
    ROLLBACK TRANSACTION PROCESSO
    SELECT @p_mensaje = 'FIM DO PROCESO COM ERRO NA LINEA ---> ' + LTRIM(RTRIM(STR(@p_cont_reg))) + 'NAO FOI CARREGADA A INFORMACAO' + CHAR(14) + CHAR(10)
END

PRINT @p_mensaje

-- ELIMINAR CURSOR
CLOSE cur
DEALLOCATE cur

-- ELIMINAR TABLA TEMPORAL DE PROCESOS
DROP TABLE TEMP_PRO 
SET NOCOUNT OFF







GO

/****** Object:  StoredProcedure [dbo].[psp_carga_rpe_automatico]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_carga_rpe_automatico    Script Date: 19/09/2008 15:20:15 ******/



-- alterado em 30/09/2004 por Solimar Sousa - arquivos SSH (S-SEAN217\DriveF\SSH\Tam\Rpe) ao invés de FTP (10.0.17.14\Tam\RPE)
-- alterado em 14/10/2004 por Solimar Sousa - tratamento de erros com o comando BCP
-- drop proc psp_carga_rpe_automatico
-- exec psp_carga_rpe_automatico

CREATE PROCEDURE [dbo].[psp_carga_rpe_automatico]
as
DECLARE  @p_cd_aerop        		CHAR(4) 
		,@p_cd_terminal     		CHAR(10) 
		,@p_cd_cia_aerea    		CHAR(3) 
		,@p_dt_voo          		DATETIME 
		,@p_hr_voo          		CHAR(4) 
		,@p_nro_voo         		CHAR(5) 
		,@p_tp_natureza     		CHAR(1) 
		,@p_tp_voo          		CHAR(1) 
		,@p_pax_dom_fat     		INTEGER 
		,@p_pax_int_fat     		INTEGER 
		,@p_pax_tot_fat     		INTEGER 
		,@p_pax_dom_vista   		INTEGER 
		,@p_pax_int_vista   		INTEGER 
		,@p_pax_tot_vista   		INTEGER 
		,@p_pax_colo        		INTEGER 
		,@p_pax_transito    		INTEGER 
		,@p_pax_conexao_dom 		INTEGER 
		,@p_pax_conexao_int 		INTEGER 
		,@p_pax_iac2110     		INTEGER 
		,@p_pax_tot_isento  		INTEGER 
		,@p_pax_total       		INTEGER 
		,@p_emb_bagagem_dom 		INTEGER 
		,@p_emb_bagagem_int 		INTEGER 
		,@p_emb_carga_dom   		INTEGER 
		,@p_emb_carga_int   		INTEGER 
		,@p_emb_correio_dom 		INTEGER 
		,@p_emb_correio_int 		INTEGER 
		,@p_rpax_participa  		CHAR(15) 
		,@p_mt_aeronave     		CHAR(10) 
		,@p_com_voo_gen        		VARCHAR(250) 
		,@p_date_created    		DATETIME 
		,@p_user_id_created 		CHAR(30) 
		,@p_date_changed    		DATETIME 
		,@p_user_id_changed 		CHAR(30) 
		,@p_inactive_ind    		CHAR(1) 
		,@p_active_date     		DATETIME
		
		,@p_desem_pax_dom			INTEGER 
		,@p_desem_pax_int			INTEGER 
		,@p_desem_bagagem_dom		FLOAT
		,@p_desem_bagagem_int		FLOAT
		,@p_desem_carga_dom			FLOAT
		,@p_desem_carga_int			FLOAT
		,@p_desem_correio_dom		FLOAT
		,@p_desem_correio_int		FLOAT
		,@p_desem_pax_dom_conex		FLOAT 
		,@p_desem_pax_int_conex   	FLOAT
		,@p_desem_bagagem_dom_conex	FLOAT
		,@p_desem_bagagem_int_conex FLOAT
		,@p_desem_carga_dom_conex  	FLOAT
		,@p_desem_carga_int_conex   FLOAT
		,@p_desem_correio_dom_conex FLOAT
		,@p_desem_correio_int_conex FLOAT
		
		,@p_linea	     			VARCHAR(450)
		,@p_erro 					INTEGER 
		,@p_mensaje        			VARCHAR(500) 
		,@p_cont_reg 				INTEGER 
		,@p_date_proceso 			DATETIME 
		,@p_user_proceso			CHAR(30) 
		,@p_bulk					VARCHAR(250) 
		
		,@LINEA 					VARCHAR (255)
		,@size 						REAL
		,@p_arquivo					VARCHAR(250)
		,@copy   					VARCHAR (255)
		,@data_str_temp				CHAR (10)
		,@error_size				INTEGER

		,@p_dt_atual 				datetime
		,@v_entidade_contabil 		char(5) 
		,@p_caminho_rede 			Varchar(30)
		,@p_nro_voo_int   			INTEGER 
		,@str_run					varchar(250)

DECLARE		@error_bcp			SMALLINT

SELECT @p_dt_atual = GetDate()

SET NOCOUNT ON

-- CREAR TABLA TEMPORAL DE PROCESOS.
/*
IF EXISTS (SELECT * FROM sysobjects WHERE name = 'TEMP_PRO')
    DROP TABLE TEMP_PRO


 CREATE TABLE TEMP_PRO (LINEA VARCHAR(500))

 GRANT ALL ON TEMP_PRO TO geaccarga
*/


-- CARGAR INFORMACION DE ARCHIVO EN LA TABLA TEMPORAL DE PROCESOS
-- INICIALIZAR VARIABLES DE TRABAJO
SELECT  @p_erro 		= 0
	,@p_cont_reg		= 0
	,@p_date_proceso 	= GETDATE()
	,@p_user_proceso	= 'RPE ELETRÔNICO'
--	,@p_user_proceso	= SUSER_SNAME()

CREATE TABLE #TEMP (
     LINEA VARCHAR(255) NULL)

set @str_run = 'master..xp_cmdshell ''dir \\S-SEAN217\SSH\Tam\Rpe\RPE??????????????????D.* /-C'''  			-- (PRODUÇÃO)
insert into #TEMP
execute (@str_run)


DELETE #TEMP WHERE LINEA IS NULL
DELETE #TEMP WHERE substring(LINEA,1,2) in (' V',' D', ' ') 
DECLARE cur_arq CURSOR FOR
SELECT LTRIM(RTRIM(LINEA)) FROM #TEMP

OPEN cur_arq 
FETCH NEXT FROM cur_arq INTO @LINEA

WHILE @@FETCH_STATUS = 0
   BEGIN
	
    TRUNCATE TABLE TEMP_PRO

    SELECT @data_str_temp	= substring(@LINEA,7,4) + substring(@LINEA,4,2) + substring(@LINEA,1,2) 
		,@error_size 		= 0
		,@p_erro 			= 0
		,@p_cont_reg		= 0

    IF ISDATE(@data_str_temp) = 0 OR RIGHT(@LINEA,1) = '.'
    BEGIN
		select RIGHT(@LINEA,1), ISDATE(@data_str_temp), substring(@data_str_temp,7,4) + substring(@data_str_temp,4,2) + substring(@data_str_temp,1,2), ISDATE(substring(@data_str_temp,7,4) + substring(@data_str_temp,4,2) + substring(@data_str_temp,1,2)) , @LINEA
        GOTO SEGUIR
    END

    SELECT @p_arquivo    = SUBSTRING (@LINEA, 37, 40) -- RTRIM(LTRIM(RIGHT(@LINEA, 39)))
      ,@size         = CONVERT (REAL, SUBSTRING (@LINEA, 18,19) )

    IF @size <= 1
    BEGIN
        SELECT @error_size = 1
        Insert gtb_pax_processo_rpe_eletronico_log
        Values (@p_arquivo,@p_dt_atual,'','0','Arquivo em Branco')
        GOTO SEGUIR
    END


    /* Carrega o Arquivo */

    SELECT 	@error_bcp = 0
		,@p_bulk = 'master..xp_cmdshell ''bcp GEACupax..TEMP_PRO in \\S-SEAN217\SSH\Tam\Rpe\' + ltrim(rtrim(@p_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''
    --select @p_bulk
    EXECUTE  (@p_bulk )
    IF @@ERROR <> 0 or not exists(select 1 from TEMP_PRO (nolock))
    BEGIN
     	SELECT 	@error_bcp = 1
        Insert gtb_pax_processo_rpe_eletronico_log
        Values (@p_arquivo,@p_dt_atual,'','0','Erro BCP')
        GOTO SEGUIR
    END

	-- CREAR CURSOR CON LA INFORMACION A PROCESAR
	DECLARE cur CURSOR FOR
	SELECT LTRIM(RTRIM(LINEA)) FROM TEMP_PRO
	
	-- ABRIR CURSOR
	OPEN cur
	
	-- LEER PRIMER REGISTRO DEL CURSOR
	FETCH NEXT FROM cur INTO @p_linea
	
	-- CICLO DE PROCESO
	BEGIN TRANSACTION PROCESSO 
	SELECT @p_mensaje = 'INICIO PROCESO DE INCLUSAO DE RPAX: ' + @p_arquivo + CHAR(14) + CHAR(10)
	PRINT @p_mensaje

	WHILE @@FETCH_STATUS = 0
	BEGIN
		
		SELECT @p_cont_reg = @p_cont_reg + 1

		-- CARGAR EMBARQUE POR VUELO
		SELECT   @p_cd_aerop	= SUBSTRING(@p_linea,10,4)
			,@p_cd_terminal		= '1' -- SUBSTRING(@p_linea,10,4)			-- CHAR(10) 
			,@p_cd_cia_aerea	= SUBSTRING(@p_linea,26,3) 				-- CHAR(3) 
			,@p_dt_voo			= SUBSTRING(@p_linea,43,4) + SUBSTRING(@p_linea,40,2) + SUBSTRING(@p_linea,37,2) -- DATETIME 
			,@p_hr_voo			= SUBSTRING(@p_linea,48,2) + SUBSTRING(@p_linea,51,2)	-- CHAR(4) 
			,@p_nro_voo			= SUBSTRING(@p_linea,30,1) + SUBSTRING(@p_linea,32,4)	-- CHAR(5) 
			,@p_tp_natureza		= SUBSTRING(@p_linea,54,1) 				-- CHAR(1) 
			,@p_tp_voo			= CASE 	WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,68,12))) = 'MISTO' 			THEN '3'
										WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,68,12))) = 'CARGA' 			THEN '2'
										WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,68,12))) = 'PASSAGEIRO' 	THEN '1'
										ELSE '0' END
			
			,@p_pax_dom_fat		= CONVERT(INTEGER, SUBSTRING(@p_linea,97,3)) 				-- INTEGER 
			,@p_pax_int_fat		= CONVERT(INTEGER, SUBSTRING(@p_linea,105,3)) 				-- INTEGER 
			,@p_pax_tot_fat		= CONVERT(INTEGER, SUBSTRING(@p_linea,97,3)) + CONVERT(INTEGER, SUBSTRING(@p_linea,105,3))
			,@p_pax_dom_vista	= CONVERT(INTEGER, SUBSTRING(@p_linea,113,3)) 				-- INTEGER 
			,@p_pax_int_vista	= CONVERT(INTEGER, SUBSTRING(@p_linea,117,3)) 				-- INTEGER 
			,@p_pax_tot_vista	= CONVERT(INTEGER, SUBSTRING(@p_linea,113,3)) + CONVERT(INTEGER, SUBSTRING(@p_linea,117,3))
			,@p_pax_colo		= CONVERT(INTEGER, SUBSTRING(@p_linea,129,3)) 				-- INTEGER 
			,@p_pax_transito	= CONVERT(INTEGER, SUBSTRING(@p_linea,133,3)) 				-- INTEGER 
			,@p_pax_conexao_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,137,3)) 				-- INTEGER 
			,@p_pax_conexao_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,141,3)) 				-- INTEGER 
			,@p_pax_iac2110		= CONVERT(INTEGER, SUBSTRING(@p_linea,145,3)) 				-- INTEGER 
			,@p_pax_tot_isento  = CONVERT(INTEGER, SUBSTRING(@p_linea,129,3)) 
			                    + CONVERT(INTEGER, SUBSTRING(@p_linea,133,3)) 
			                    + CONVERT(INTEGER, SUBSTRING(@p_linea,137,3)) 
			                    + CONVERT(INTEGER, SUBSTRING(@p_linea,141,3))
			                    + CONVERT(INTEGER, SUBSTRING(@p_linea,145,3))


		SELECT @p_pax_total     = @p_pax_tot_fat + @p_pax_tot_vista + @p_pax_tot_isento
			,@p_emb_bagagem_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,149,6)) 				-- INTEGER 
			,@p_emb_bagagem_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,156,6)) 				-- INTEGER 
			,@p_emb_carga_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,163,7)) 				-- INTEGER 
			,@p_emb_carga_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,171,7)) 				-- INTEGER 
			,@p_emb_correio_dom	= CONVERT(INTEGER, SUBSTRING(@p_linea,179,6)) 				-- INTEGER 
			,@p_emb_correio_int	= CONVERT(INTEGER, SUBSTRING(@p_linea,186,6)) 				-- INTEGER 
			,@p_rpax_participa	= SUBSTRING(@p_linea,81,1) 						-- CHAR(1) 
			,@p_mt_aeronave		= SUBSTRING(@p_linea,15,10) 						-- CHAR(10) 
			,@p_com_voo_gen		= ' ' 									-- VARCHAR(250) 
			,@p_date_created	= @p_date_proceso 							-- DATETIME 
			,@p_user_id_created = @p_user_proceso							-- CHAR(30) 
			,@p_date_changed    = '19000101'								-- DATETIME 
			,@p_user_id_changed = ' ' 									-- CHAR(30) 
			,@p_inactive_ind    = '0'									-- CHAR(1) 
			,@p_active_date     = @p_date_proceso							-- DATETIME
		

	    IF LTRIM(RTRIM(@p_nro_voo)) <> ''  -- VERIFICAR SI SE CARGA EL EMBARQUE
	    BEGIN

			IF SUBSTRING(@p_linea,30,1) = '9'
			BEGIN
		        IF NOT EXISTS(SELECT 1 FROM rpax_emb_voo_u (NOLOCK INDEX = P_rpax_emb_voo_u)
		           WHERE cd_aerop                       = @p_cd_aerop 
		           AND cd_terminal    	                = @p_cd_terminal 
		           AND cd_cia_aerea    	                = @p_cd_cia_aerea 
		           AND dt_voo          	                = @p_dt_voo 
		           AND hr_voo          	                = @p_hr_voo
		           AND nro_voo            		= @p_nro_voo
			   AND inactive_ind 			= '0')
				BEGIN
		            /** Alteração CHAP - 20040120 **/
		            /** Ignorar os Registros das Administradoras **/
		            Select @v_entidade_contabil = recv_entity_id
		            From   GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) 
		            Where  cd_aerop = @p_cd_aerop
					
					If @v_entidade_contabil <> '01001'
					Begin /** If das Administradoras **/
			            EXECUTE usp_ins_upma @p_cd_aerop		
			                 ,@p_cd_terminal	
			                 ,@p_cd_cia_aerea	
			                 ,@p_dt_voo		
			                 ,@p_hr_voo		
			                 ,@p_nro_voo		
			                 ,@p_tp_natureza	
			                 ,@p_tp_voo
			                 ,@p_pax_dom_fat	
			                 ,@p_pax_int_fat	
			                 ,@p_pax_tot_fat	
			                 ,@p_pax_dom_vista	
			                 ,@p_pax_int_vista	
			                 ,@p_pax_tot_vista	
			                 ,@p_pax_colo		
			                 ,@p_pax_transito	
			                 ,@p_pax_conexao_dom	
			                 ,@p_pax_conexao_int	
			                 ,@p_pax_iac2110	
			                 ,@p_pax_tot_isento  	
							 ,@p_pax_total       	
			                 ,@p_emb_bagagem_dom	
			                 ,@p_emb_bagagem_int	
			                 ,@p_emb_carga_dom	
			                 ,@p_emb_carga_int	
			                 ,@p_emb_correio_dom	
			                 ,@p_emb_correio_int	
			                 ,@p_rpax_participa	
			                 ,@p_mt_aeronave	
			                 ,@p_com_voo_gen	
			                 ,@p_date_created	
			                 ,@p_user_id_created 	
			                 ,@p_date_changed    	
			                 ,@p_user_id_changed 	
			                 ,@p_inactive_ind    	
			                 ,@p_active_date
					End /** If das Administradoras **/
				End 
		        Else
				Begin
					Insert gtb_pax_processo_rpe_eletronico_log (arquivo, data_processo, linha_erro, numero_linha_erro_arquivo, descp_erro)
					Values (@p_arquivo, @p_dt_atual, @p_linea, @p_cont_reg, 'Embarque já cadastrado!')
				End 
			END
			ELSE
			BEGIN
		        IF NOT EXISTS(SELECT 1 FROM rpax_emb_voo_u (NOLOCK INDEX = P_rpax_emb_voo_u)
		           WHERE cd_aerop                       = @p_cd_aerop 
		           AND cd_terminal    	                = @p_cd_terminal 
		           AND cd_cia_aerea    	                = @p_cd_cia_aerea 
		           AND dt_voo          	  = @p_dt_voo 
		           AND hr_voo          	                = @p_hr_voo
		          AND CONVERT(INT,nro_voo) 			= CONVERT(INT,@p_nro_voo))
				BEGIN
		            /** Alteração CHAP - 20040120 **/
		            /** Ignorar os Registros das Administradoras **/
		            Select @v_entidade_contabil = recv_entity_id
		            From   GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) 
		            Where  cd_aerop = @p_cd_aerop
					
					If @v_entidade_contabil <> '01001'
					Begin /** If das Administradoras **/
			            EXECUTE usp_ins_upma @p_cd_aerop		
							,@p_cd_terminal	
							,@p_cd_cia_aerea								,@p_dt_voo		
							,@p_hr_voo		
							,@p_nro_voo		
							,@p_tp_natureza	
							,@p_tp_voo
							,@p_pax_dom_fat	
							,@p_pax_int_fat	
							,@p_pax_tot_fat	
							,@p_pax_dom_vista	
							,@p_pax_int_vista	
							,@p_pax_tot_vista	
							,@p_pax_colo		
							,@p_pax_transito	
							,@p_pax_conexao_dom	
							,@p_pax_conexao_int	
							,@p_pax_iac2110	
							,@p_pax_tot_isento  	
							,@p_pax_total       	
							,@p_emb_bagagem_dom	
							,@p_emb_bagagem_int	
							,@p_emb_carga_dom	
							,@p_emb_carga_int	
							,@p_emb_correio_dom	
							,@p_emb_correio_int	
							,@p_rpax_participa	
							,@p_mt_aeronave	
							,@p_com_voo_gen	
							,@p_date_created	
							,@p_user_id_created 	
							,@p_date_changed    	
							,@p_user_id_changed 	
							,@p_inactive_ind    	
							,@p_active_date
					End /** If das Administradoras **/
				End 
		        Else
				Begin
					Insert gtb_pax_processo_rpe_eletronico_log (arquivo, data_processo, linha_erro, numero_linha_erro_arquivo, descp_erro)
					Values (@p_arquivo, @p_dt_atual, @p_linea, @p_cont_reg, 'Embarque já cadastrado!')
				End 
			END


		END -- VERIFICAR SI SE CARGA EL EMBARQUE

		-- CARGAR DESEMBARQUE POR VUELO
		SELECT 	  @p_dt_voo					= SUBSTRING(@p_linea,206,4) + SUBSTRING(@p_linea,203,2) + SUBSTRING(@p_linea,200,2) -- DATETIME 
				,@p_hr_voo					= SUBSTRING(@p_linea,211,2) + SUBSTRING(@p_linea,214,2)	-- CHAR(4) 
				,@p_nro_voo					= SUBSTRING(@p_linea,193,1) + SUBSTRING(@p_linea,195,4)	-- CHAR(5) 
				,@p_tp_natureza				= SUBSTRING(@p_linea,217,1) 				-- CHAR(1) 
				,@p_tp_voo					= CASE 	WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,231,12))) = 'MISTO' 		THEN '3'
													WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,231,12))) = 'CARGA' 		THEN '2'
													WHEN LTRIM(RTRIM(SUBSTRING(@p_linea,231,12))) = 'PASSAGEIRO' 		THEN '1'
													ELSE '0' END
				,@p_desem_pax_dom			= CONVERT(INTEGER, SUBSTRING(@p_linea,260,3)) 				-- INTEGER 
				,@p_desem_pax_int			= CONVERT(INTEGER, SUBSTRING(@p_linea,264,3)) 				-- INTEGER 
				,@p_desem_bagagem_dom		= CONVERT(FLOAT, SUBSTRING(@p_linea,276,5)) 				-- FLOAT
				,@p_desem_bagagem_int		= CONVERT(FLOAT, SUBSTRING(@p_linea,282,5)) 				-- FLOAT
				,@p_desem_carga_dom			= CONVERT(FLOAT, SUBSTRING(@p_linea,300,6)) 				-- FLOAT
				,@p_desem_carga_int			= CONVERT(FLOAT, SUBSTRING(@p_linea,307,6)) 				-- FLOAT
				,@p_desem_correio_dom		= CONVERT(FLOAT, SUBSTRING(@p_linea,328,5)) 				-- FLOAT
				,@p_desem_correio_int		= CONVERT(FLOAT, SUBSTRING(@p_linea,334,5)) 				-- FLOAT
				,@p_desem_pax_dom_conex		= CONVERT(FLOAT, SUBSTRING(@p_linea,268,3)) 				-- FLOAT 
				,@p_desem_pax_int_conex   	= CONVERT(FLOAT, SUBSTRING(@p_linea,272,3)) 				-- FLOAT
				,@p_desem_bagagem_dom_conex	= CONVERT(FLOAT, SUBSTRING(@p_linea,288,5)) 				-- FLOAT
				,@p_desem_bagagem_int_conex = CONVERT(FLOAT, SUBSTRING(@p_linea,294,5)) 				-- FLOAT
				,@p_desem_carga_dom_conex  	= CONVERT(FLOAT, SUBSTRING(@p_linea,314,6)) 				-- FLOAT
				,@p_desem_carga_int_conex   = CONVERT(FLOAT, SUBSTRING(@p_linea,321,5)) 				-- FLOAT
				,@p_desem_correio_dom_conex = CONVERT(FLOAT, SUBSTRING(@p_linea,340,5)) 				-- FLOAT
				,@p_desem_correio_int_conex = CONVERT(FLOAT, SUBSTRING(@p_linea,346,5)) 				-- FLOAT
		

		IF LTRIM(RTRIM(@p_nro_voo)) <> ''  -- VERIFICAR SI SE CARGA EL DESEMBARQUE
		BEGIN
			IF SUBSTRING(@p_linea,193,1) = '9'
			BEGIN
		        IF NOT EXISTS (SELECT 1 FROM rpax_desemb_u (NOLOCK INDEX = P_rpax_desemb_u)
		             WHERE cd_aerop     		= @p_cd_aerop 
		             AND cd_terminal       		= @p_cd_terminal 
		             AND cd_cia_aerea   		= @p_cd_cia_aerea 
		             AND dt_voo            		= @p_dt_voo 
		             AND hr_voo            		= @p_hr_voo 
					 AND nro_voo				= @p_nro_voo)
				BEGIN
		            EXECUTE usp_ins_upia @p_cd_aerop 
						,@p_cd_terminal 
						,@p_cd_cia_aerea 
						,@p_dt_voo 
						,@p_hr_voo 
						,@p_nro_voo 
						,@p_tp_natureza 
						,@p_tp_voo 
						,@p_mt_aeronave 
						,@p_desem_pax_dom 
						,@p_desem_pax_int 
						,@p_desem_bagagem_dom 
						,@p_desem_bagagem_int 
						,@p_desem_carga_dom 
						,@p_desem_carga_int 
						,@p_desem_correio_dom 
						,@p_desem_correio_int 
						,@p_rpax_participa 
						,@p_desem_pax_dom_conex 
						,@p_desem_pax_int_conex 
						,@p_desem_bagagem_dom_conex
						,@p_desem_bagagem_int_conex
						,@p_desem_carga_dom_conex
						,@p_desem_carga_int_conex
						,@p_desem_correio_dom_conex
						,@p_desem_correio_int_conex
						,@p_com_voo_gen  
						,@p_date_created	
						,@p_user_id_created 	
						,@p_date_changed    	
						,@p_user_id_changed 	
						,@p_inactive_ind    	
						,@p_active_date
	
				END
		        ELSE
				BEGIN
					Insert gtb_pax_processo_rpe_eletronico_log (arquivo, data_processo, linha_erro, numero_linha_erro_arquivo, descp_erro)
					Values (@p_arquivo,@p_dt_atual,@p_linea,@p_cont_reg,'Desembarque Já cadastrado!')
				END

			END
			ELSE
			BEGIN
		        IF NOT EXISTS (SELECT 1 FROM rpax_desemb_u (NOLOCK INDEX = P_rpax_desemb_u)
		             WHERE cd_aerop     		= @p_cd_aerop 
		             AND cd_terminal       		= @p_cd_terminal 
		             AND cd_cia_aerea   		= @p_cd_cia_aerea 
		             AND Convert(Int, nro_voo)  = Convert(Int, @p_nro_voo)
		             AND dt_voo            		= @p_dt_voo 
		             AND hr_voo            		= @p_hr_voo )

				BEGIN
		            EXECUTE usp_ins_upia @p_cd_aerop 
						,@p_cd_terminal 
						,@p_cd_cia_aerea 
						,@p_dt_voo 
						,@p_hr_voo 
						,@p_nro_voo 
						,@p_tp_natureza 
						,@p_tp_voo 
						,@p_mt_aeronave 
						,@p_desem_pax_dom 
						,@p_desem_pax_int 
						,@p_desem_bagagem_dom 
						,@p_desem_bagagem_int 
						,@p_desem_carga_dom 
						,@p_desem_carga_int 
						,@p_desem_correio_dom 
						,@p_desem_correio_int 
						,@p_rpax_participa 
						,@p_desem_pax_dom_conex 
						,@p_desem_pax_int_conex 
						,@p_desem_bagagem_dom_conex
						,@p_desem_bagagem_int_conex
						,@p_desem_carga_dom_conex
						,@p_desem_carga_int_conex
						,@p_desem_correio_dom_conex
						,@p_desem_correio_int_conex
						,@p_com_voo_gen  
						,@p_date_created	
						,@p_user_id_created 	
						,@p_date_changed    	
						,@p_user_id_changed 	
						,@p_inactive_ind    	
						,@p_active_date
	
				END
		        ELSE
				BEGIN
					Insert gtb_pax_processo_rpe_eletronico_log (arquivo, data_processo, linha_erro, numero_linha_erro_arquivo, descp_erro)
					Values (@p_arquivo,@p_dt_atual,@p_linea,@p_cont_reg,'Desembarque Já cadastrado!')
				END

			END	
    	END

		FETCH NEXT FROM cur INTO @p_linea

    END

    SALIR:
	IF  @p_erro = 0
	BEGIN
		COMMIT TRANSACTION PROCESSO
	END
	ELSE
	BEGIN
		ROLLBACK TRANSACTION PROCESSO
	END

	-- ELIMINAR CURSOR
	CLOSE cur
	DEALLOCATE cur

    SEGUIR:
	if @error_bcp <> 1 -- se igual a 1 deixa arquivo na pasta de origem para ser reprocessado numa próxima vez
	begin
		IF @error_size = 1
		BEGIN
/*
			-- Alteração Adaili em 06/07/2010
			SELECT @copy = 'master..xp_cmdshell ''Copy \\S-SEAN217\SSH\Tam\Rpe\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\Rpe_eletronico\arquivos_com_erro'''
			EXECUTE (@copy) 
			SELECT @copy = 'master..xp_cmdshell ''Del \\S-SEAN217\SSH\Tam\Rpe\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'''
			EXECUTE (@copy) 

*/
			SELECT @copy = 'master..xp_cmdshell ''Move \\S-SEAN217\SSH\Tam\Rpe\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\Rpe_eletronico\arquivos_com_erro'''
			EXECUTE (@copy) 

		END
		ELSE
		BEGIN
/*
			SELECT @copy = 'master..xp_cmdshell ''Copy \\S-SEAN217\SSH\Tam\Rpe\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\Rpe_eletronico\arquivos_processados'''
			EXECUTE (@copy) 
			SELECT @copy = 'master..xp_cmdshell ''Del \\S-SEAN217\SSH\Tam\Rpe\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q''' -- (PRODUÇÃO)
			EXECUTE (@copy) 
*/
			SELECT @copy = 'master..xp_cmdshell ''Move \\S-SEAN217\SSH\Tam\Rpe\' + RTRIM(LTRIM(@p_arquivo)) + ' \\S-SEAN217\Rpe_eletronico\arquivos_processados'''
			EXECUTE (@copy) 

		END 
	end   
    FETCH NEXT FROM cur_arq INTO @LINEA
END

CLOSE cur_arq 
DEALLOCATE cur_arq 

-- MOVER LOS ARQUIVO DE RESUMO

set @str_run = 'master..xp_cmdshell ''copy \\S-SEAN217\SSH\Tam\Rpe\RPE??????????????????R.* \\S-SEAN217\Rpe_eletronico\arquivos_de_resumo'''
execute (@str_run)

set @str_run = 'master..xp_cmdshell ''del \\S-SEAN217\SSH\Tam\Rpe\RPE??????????????????R.* /Q'''
execute (@str_run)


-- ELIMINAR LOS DATOS DE LA TABLA TEMPORAL DE PROCESOS, NO ELIMINAR LA TABLA
TRUNCATE TABLE TEMP_PRO 

SET NOCOUNT OFF

GO

/****** Object:  StoredProcedure [dbo].[psp_check_replicate_g]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_check_replicate_g    Script Date: 19/09/2008 15:20:16 ******/


CREATE PROCEDURE [dbo].[psp_check_replicate_g]
 @p_tblfam_id            char(4),
 @p_dist_ent_1_val       char(30) = NULL,
 @p_dist_ent_2_val       char(30) = NULL
AS
    /*  Called by a trigger to check if an update to a table is allowed.
        Returns:    0 if this is an update to a primary.
                    1 if this is a regular user updating a replicate.
                    2 if this is the maintenance user updating a replicate.
    */                    
    DECLARE @w_ret int,
            @w_db_name char(30)
    /* Is this a primary copy */
    SELECT  @w_db_name = db_name()
    EXEC @w_ret = psp_sel_tsdx_prim_g
        @p_tblfam_id,
        @p_dist_ent_1_val,
        @p_dist_ent_2_val,
        @@servername,
        @w_db_name,
        'N'
    IF @w_ret = 1
        RETURN 0  /* This is a primary copy */
    ELSE BEGIN
        DECLARE @w_mss int, @w_user varchar(30)
        SELECT  @w_mss = CHARINDEX ('microsoft', LOWER(@@version)),
                @w_user = RTRIM(suser_sname())
        IF (@w_mss > 0 AND @w_user = "sa") OR
            (@w_mss <= 0 AND @w_user = "DBSReplicate")
            /* This is Rep Server maintenance user */
            RETURN 2
     ELSE
            RETURN 1
    END




GO

/****** Object:  StoredProcedure [dbo].[psp_col_tablas]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_col_tablas    Script Date: 19/09/2008 15:20:16 ******/







/*
exec psp_col_tablas 'com_parcelas_u'
drop PROC 
*/

CREATE     PROC [dbo].[psp_col_tablas] 
	(@p_tabla			varchar(50) )
AS
DECLARE @tabla			varchar(50) 
		,@idtabla		int
		,@columna		varchar(50)

--SET @p_tabla = '%' + LTRIM(RTRIM(UPPER(@p_tabla))) + '%'
SET @p_tabla = LTRIM(RTRIM(UPPER(@p_tabla)))

DECLARE dbCursor CURSOR FOR
	SELECT name, id FROM sysobjects WHERE xtype = 'U' and UPPER(name) LIKE @p_tabla ORDER BY name

OPEN dbCursor
FETCH NEXT FROM dbCursor into @tabla, @idtabla

SET NOCOUNT ON
CREATE TABLE #TEMP 
	(CODIGO		INTEGER IDENTITY PRIMARY KEY
	,LINEA		VARCHAR(200))

WHILE @@FETCH_STATUS = 0
BEGIN
    INSERT INTO #TEMP (LINEA) VALUES ('-- TABLA  ' + @tabla)
    INSERT INTO #TEMP (LINEA) VALUES ('-- DECLARACION DE VARIABLES  ')
    INSERT INTO #TEMP (LINEA)  SELECT  CASE 
				WHEN colid  = 1 THEN 'DECLARE	 ' 
				ELSE '	,' 
				END + '@p_' + name
				+ '		' 
				+ CASE 
					WHEN A.xtype = 52 THEN 'SMALLINT'
					WHEN A.xtype = 56 THEN 'INT'
					WHEN A.xtype = 60 THEN 'INT'
					WHEN A.xtype = 61 THEN 'DATETIME'
					WHEN A.xtype = 62 THEN 'FLOAT'
					WHEN A.xtype = 66 THEN 'MONEY'
					WHEN A.xtype = 167 THEN 'VARCHAR(' + LTRIM(STR(A.length)) + ')'
					WHEN A.xtype = 175 THEN 'CHAR('+ LTRIM(STR(A.length)) + ')'
					ELSE LTRIM(STR(A.xtype)) 
					END
			FROM syscolumns A WHERE id = @idtabla
			ORDER BY colid	

	    INSERT INTO #TEMP (LINEA) VALUES (' ')
	    INSERT INTO #TEMP (LINEA) VALUES ('-- DECLARAR CURSOR')
	    INSERT INTO #TEMP (LINEA) VALUES ('DECLARE CUR_TEMP_' + @tabla + ' CURSOR FOR')
	    INSERT INTO #TEMP (LINEA)  SELECT  CASE 
					WHEN colid  = 1 THEN 'SELECT	 ' 
					ELSE '	,' 
					END + name
				FROM syscolumns A WHERE id = @idtabla
				ORDER BY colid	
		INSERT INTO #TEMP (LINEA) VALUES ('FROM ' + @tabla + ' (NOLOCK)')  
		INSERT INTO #TEMP (LINEA) VALUES ('	')  
	    INSERT INTO #TEMP (LINEA) VALUES ('OPEN CUR_TEMP_' + @tabla) 
	    INSERT INTO #TEMP (LINEA) VALUES ('FETCH NEXT FROM CUR_TEMP_' + @tabla + ' INTO') 
	    INSERT INTO #TEMP (LINEA)  SELECT  CASE 
					WHEN colid  = 1 THEN '		 ' 
					ELSE '		,' 
					END + '@p_' + name
				FROM syscolumns A WHERE id = @idtabla
				ORDER BY colid	
		INSERT INTO #TEMP (LINEA) VALUES (' ')
	    INSERT INTO #TEMP (LINEA) VALUES ('WHILE @@FETCH_STATUS = 0')
	    INSERT INTO #TEMP (LINEA) VALUES ('BEGIN')
	    INSERT INTO #TEMP (LINEA) VALUES (' ')
		INSERT INTO #TEMP (LINEA) VALUES ('	FETCH NEXT FROM CUR_TEMP_' + @tabla + ' INTO') 
	    INSERT INTO #TEMP (LINEA)  SELECT  CASE 
					WHEN colid  = 1 THEN '		 ' 
					ELSE '		,' 
					END + '@p_' + name
				FROM syscolumns A WHERE id = @idtabla
				ORDER BY colid	
	    INSERT INTO #TEMP (LINEA) VALUES (' ')
		INSERT INTO #TEMP (LINEA) VALUES ('END')
	    INSERT INTO #TEMP (LINEA) VALUES (' ') 
	    INSERT INTO #TEMP (LINEA) VALUES ('CLOSE CUR_TEMP_' + @tabla) 
	    INSERT INTO #TEMP (LINEA) VALUES ('DEALLOCATE CUR_TEMP_' + @tabla) 

    FETCH NEXT FROM dbCursor into @tabla, @idtabla
END
CLOSE dbCursor
DEALLOCATE dbCursor
SELECT LINEA '-- 'FROM #TEMP ORDER BY CODIGO
DROP TABLE #TEMP  
SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[psp_colar_nro_boleto_selos_antigos]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE proc [dbo].[psp_colar_nro_boleto_selos_antigos] (
			@p_cd_aerop			char(4)				/* Código do Aeroporto		*/
			,@p_cd_terminal		char(10)			/* Terminal de utilização	*/
			,@p_cd_cia_aerea	char(3)				/* Código da cia aerea		*/
			,@p_nro_rste		char(6)				/* Nro de RSTE				*/
			,@p_nu_boleto_ss	int					/* Nro de Boleto			*/
			,@p_ano_remesa		int					/* Ano da remessa			*/
			,@p_update			char(1)		= 'N'	/* N para fazer Select - S para fazer update do nro do boleto */
			,@p_nro_selo_ini	char(10)	= ''	/* limite de selos por RSTE */  
			,@p_nro_selo_fim	char(10)	= ''	/* limite de selos por RSTE */  
)
as
set nocount on

declare 	
	@v_nro_selo_inicial		char(10)	
	,@v_nro_selo_final		char(10)
	,@v_tp_fat				char(1)
	,@v_ano_remesa			int
	,@v_user_process		char(30)
	,@v_dt_process			datetime
	,@v_strmsg				varchar(255)
	,@rowcount				integer

if not exists (select 1 
				from GEACrrcv..gtb_docs_boleto_ctrl (nolock)
				where nu_boleto_ss	= @p_nu_boleto_ss)
begin
	print 'Nro de Boleto inválido'
	return 
end 

declare @v_table table 
	(nro_selo_inicial		char(10)	
	,nro_selo_final			char(10)
	,tp_fat					char(1)
	,ano_remesa				int )

insert into @v_table
select 
	b.nro_selo_inicial
	,b.nro_selo_final
	,b.tp_fat
	,b.ano_remesa
from pax_entrega_selo_ctrl_u a (nolock)
inner join pax_entrega_selo_line_u b (nolock index = P_pax_entrega_selo_line_u)
on b.cd_aerop		= a.cd_aerop
and b.cd_terminal	= a.cd_terminal
and b.dt_entrega	= a.dt_entrega
and b.hh_entrega	= a.hh_entrega
and b.cd_cia_aerea	= a.cd_cia_aerea
and b.nro_rste		= a.nro_rste
where a.cd_aerop		= @p_cd_aerop
and a.cd_terminal		= @p_cd_terminal
and a.cd_cia_aerea		= @p_cd_cia_aerea
and a.nro_rste			= @p_nro_rste
and b.ano_remesa		= @p_ano_remesa

if @@rowcount = 0
begin
	set @v_strmsg = 'RSTE não identificada' 
	print @v_strmsg 
	return 
end 

select @v_user_process		= suser_sname()
	,@v_dt_process			= getdate()

declare cur_lote_selo insensitive cursor for
select 	
	nro_selo_inicial
	,nro_selo_final
	,tp_fat
	,ano_remesa
from @v_table 
order by nro_selo_inicial

open cur_lote_selo 
fetch next from cur_lote_selo into
	@v_nro_selo_inicial	
	,@v_nro_selo_final	
	,@v_tp_fat			
	,@v_ano_remesa		
while @@fetch_status = 0
begin
	set @v_strmsg = 'Lote de selos: ' + ltrim(rtrim(@v_nro_selo_inicial)) + '/' + ltrim(rtrim(@v_nro_selo_final)) + ' remesa: ' + ltrim(rtrim(str(@v_ano_remesa))) 
	print @v_strmsg 
	if @p_update = 'S'
	begin
		update pax_selo_u 
		set chgstamp			= chgstamp + 1
			,user_id_changed	= @v_user_process
			,date_changed		= @v_dt_process
			,billing_int_type	= 'B'
			,billing_line_id	= @p_nu_boleto_ss
		where nro_selo			between @v_nro_selo_inicial and @v_nro_selo_final
		and ano_remesa			= @v_ano_remesa
		and cd_cia_aerea		= @p_cd_cia_aerea
		and tp_fat				= @v_tp_fat
		and billing_line_id		= 0
		and nro_selo			>= case when @p_nro_selo_ini <> '' then @p_nro_selo_ini else nro_selo end 
		and nro_selo			<= case when @p_nro_selo_fim <> '' then @p_nro_selo_fim else nro_selo end 
		
		set @rowcount	= @@rowcount
		if @rowcount > 0
			set @v_strmsg = 'Lote de selos atualizados: ' + ltrim(rtrim(@v_nro_selo_inicial)) + '/' + ltrim(rtrim(@v_nro_selo_final)) + ' remesa: ' + ltrim(rtrim(str(@v_ano_remesa))) + ' Qtd: '+  ltrim(rtrim(str(@rowcount))) 
		else
			set @v_strmsg = 'Lote de selos não atualizados: ' + ltrim(rtrim(@v_nro_selo_inicial)) + '/' + ltrim(rtrim(@v_nro_selo_final)) + ' remesa: ' + ltrim(rtrim(str(@v_ano_remesa))) 
			
		print @v_strmsg 
	end
	else
	begin
		select * from pax_selo_u (nolock)
		where nro_selo			between @v_nro_selo_inicial and @v_nro_selo_final
		and ano_remesa			= @v_ano_remesa
		and cd_cia_aerea		= @p_cd_cia_aerea
		and tp_fat				= @v_tp_fat
		and billing_line_id		= 0
		and nro_selo			>= case when @p_nro_selo_ini <> '' then @p_nro_selo_ini else nro_selo end 
		and nro_selo			<= case when @p_nro_selo_fim <> '' then @p_nro_selo_fim else nro_selo end 
		order by nro_selo
	end	
	fetch next from cur_lote_selo into
		@v_nro_selo_inicial	
		,@v_nro_selo_final	
		,@v_tp_fat			
		,@v_ano_remesa		
	
end
close cur_lote_selo 
deallocate cur_lote_selo 
set nocount off

GO

/****** Object:  StoredProcedure [dbo].[psp_conluir_rste]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_conluir_rste    Script Date: 19/09/2008 15:20:16 ******/


CREATE         PROCEDURE [dbo].[psp_conluir_rste]
				(  @p_cd_aerop        		char(4)
				,@p_cd_terminal     		char(10)
				,@p_dt_entrega      		datetime
				,@p_cd_cia_aerea    		char(3)
				,@p_nro_rste        		char(6) 
				,@p_ano_remesa				integer
				,@p_cd_situacao_rste       	char(1) = '1' ) 
AS 
DECLARE @ret 				int
	,@nro_selo_inicial 		CHAR(10)
	,@nro_selo_final		CHAR(10)
	,@data_proceso 			DATETIME
	,@user_proceso			CHAR(30)
	,@v_ano_remesa			int	
 
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

SELECT @data_proceso 	= GETDATE()
	,@user_proceso		= suser_sname()

 
UPDATE pax_entrega_selo_ctrl_u 
SET  cd_situacao_rste 		= @p_cd_situacao_rste
    ,user_id_changed		= @user_proceso	
    ,date_changed			= @data_proceso
WHERE cd_aerop      		= @p_cd_aerop 
	AND cd_terminal     	= @p_cd_terminal 
	AND cd_cia_aerea    	= @p_cd_cia_aerea 
	AND dt_entrega      	= @p_dt_entrega 
	AND nro_rste        	= @p_nro_rste 


IF @@ROWCOUNT > 0
BEGIN
	IF @p_cd_situacao_rste = '1'
	BEGIN
	  SELECT 'CONCLUIDO'
	END
	ELSE
	BEGIN
		IF @p_cd_situacao_rste = '2'
		BEGIN

			DECLARE CUR_SELO_DIS CURSOR FOR
			SELECT 	nro_selo_inicial
					,nro_selo_final
					,ano_remesa
			FROM pax_entrega_selo_line_u (NOLOCK)
			WHERE cd_aerop      		= @p_cd_aerop 
				AND cd_terminal     	= @p_cd_terminal 
				AND cd_cia_aerea    	= @p_cd_cia_aerea 
				AND dt_entrega      	= @p_dt_entrega 
				AND nro_rste        	= @p_nro_rste 

			OPEN CUR_SELO_DIS 
			FETCH NEXT FROM CUR_SELO_DIS INTO @nro_selo_inicial, @nro_selo_final, @v_ano_remesa
			WHILE @@FETCH_STATUS = 0
			BEGIN
				UPDATE  pax_selo_u
				SET       	 
					tp_fat				= ' '
					,cd_motivo			= ' '
					,cd_cia_aerea		= ' '
					,selo_status		= '0'
					,item_fat			= ' '
					,nro_rste			= ' '
					,date_changed		= @data_proceso
					,user_id_changed	= @user_proceso	
					,dt_mov				= CASE WHEN CONVERT(VARCHAR, dt_confirma,112) = '19000101' THEN date_created ELSE dt_confirma END
					,chgstamp			= chgstamp + 1
				FROM  
					pax_selo_u
				WHERE nro_selo between @nro_selo_inicial and @nro_selo_final
				AND ano_remesa 		= @v_ano_remesa
				AND billing_line_id = 0

				FETCH NEXT FROM CUR_SELO_DIS INTO @nro_selo_inicial, @nro_selo_final, @v_ano_remesa
			END

			CLOSE CUR_SELO_DIS
			DEALLOCATE CUR_SELO_DIS

			SELECT 'CANCELADO'           
		END
		ELSE
		BEGIN
		   IF @p_cd_situacao_rste = '0'
		   BEGIN
		       SELECT 'PENDENTE'           
		   END
		END
	END
END









GO

/****** Object:  StoredProcedure [dbo].[psp_consulta_discrepancia]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_consulta_discrepancia    Script Date: 19/09/2008 15:20:16 ******/

CREATE PROC [dbo].[psp_consulta_discrepancia]   
(    @p_cd_aerop            VARCHAR(4)     = '%'
    ,@p_cd_terminal         VARCHAR(10)    = '%'
    ,@p_discrepancia        VARCHAR(6)     = '%'
    ,@p_nro_selo            VARCHAR(10)    = '%')

AS

DECLARE @SQL                VARCHAR(1000)


SELECT @SQL = 'SELECT
    A.cd_aerop_destino
    ,A.cd_terminal_destino
    ,A.dt_mov
    ,A.selo_status
    ,A.nro_selo
    ,A.selo_status_ind
    ,A.cd_cia_aerea
    ,A.discrepancia
    ,B.msg_lista
    ,A.cd_motivo
    ,A.arquivo
    ,A.tp_coletor
FROM pax_discrep_selo_u A (NOLOCK INDEX = P_pax_discrep_selo_u)
INNER JOIN pax_tbl_messages_selos B (NOLOCK INDEX = P_pax_tbl_messages_selos)
ON B.msg_id + '':'' + B.selo_status = A.discrepancia'

IF LTRIM(RTRIM(@p_cd_aerop)) <> '%'
BEGIN
    SELECT @SQL         = @SQL + ' WHERE cd_aerop_destino = ''' + @p_cd_aerop + ''''
END
ELSE
BEGIN
    SELECT @SQL         = @SQL + ' WHERE cd_aerop_destino Like ''%'''
END 

IF @p_cd_terminal <> '%'
BEGIN
    SELECT @SQL         = @SQL + ' AND cd_terminal_destino = ''' + @p_cd_terminal + ''''
END

IF @p_discrepancia <> '%'
BEGIN
    SELECT @SQL         = @SQL + ' AND discrepancia = ''' + @p_discrepancia + ''''
END

IF @p_nro_selo <> '%'
BEGIN
    SELECT @SQL         = @SQL + ' AND nro_selo = ''' + @p_nro_selo + ''''
END

EXEC (@SQL)



GO

/****** Object:  StoredProcedure [dbo].[psp_copia_selo_67_130]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_copia_selo_67_130    Script Date: 19/09/2008 15:20:16 ******/

/* EXEC psp_copia_selo_67_130 */

CREATE  PROC [dbo].[psp_copia_selo_67_130]
AS

SET NOCOUNT ON

DECLARE @p_dt_process		DATETIME
	,@p_count				INTEGER
	,@p_count_total			INTEGER

SELECT @p_dt_process		= GETDATE()
	,@p_count				= 0
	,@p_count_total			= 0

/* CREA TABELA TEMPORARIA */
SELECT * INTO #TEMP_SELO_COLETADO 
FROM S_SEBN67.GEACupax.dbo.pax_selos_coletados_u 
WHERE 1 = 2

/* LLENA TABELA TEMPORARIA */
INSERT INTO #TEMP_SELO_COLETADO 
SELECT * FROM S_SEBN67.GEACupax.dbo.pax_selos_coletados_u
WHERE status_linha 		= 0
AND cd_aerop_num		<> '001'
AND date_created		<= DATEADD(hh, -1, @p_dt_process)

/* CREA INDICE PARA PROCESO */
CREATE INDEX IX_ARQUIVO ON #TEMP_SELO_COLETADO (arquivo, nro_linha, status_linha)

-- DECLARACION DE VARIABLES  
DECLARE	 @p_arquivo		CHAR(40)
	,@p_nro_linha		INT
	,@p_linha			CHAR(30)
	,@p_cd_aerop_num	CHAR(3)
	,@p_tp_selo			CHAR(1)
	,@p_nro_selo		CHAR(14)
	,@p_tp_baixa		CHAR(1)
	,@p_serie_coletor	CHAR(15)
	,@p_cpf_agente		CHAR(11)
	,@p_status_linha	CHAR(1)
	,@p_user_id_created	CHAR(30)
	,@p_date_created	DATETIME


-- DECLARAR CURSOR
DECLARE cur_selo_col_xx1 INSENSITIVE CURSOR FOR
SELECT	 A.arquivo
	,A.nro_linha
	,A.linha
	,A.cd_aerop_num
	,A.tp_selo
	,A.nro_selo
	,A.tp_baixa
	,A.serie_coletor
	,A.cpf_agente
	,A.status_linha
	,A.user_id_created
	,A.date_created
FROM #TEMP_SELO_COLETADO A (NOLOCK)
WHERE NOT EXISTS (SELECT 1 FROM pax_selos_coletados_u B (NOLOCK)
			WHERE B.arquivo		= A.arquivo
			AND B.nro_linha		= A.nro_linha)
	
OPEN cur_selo_col_xx1

SET @p_count_total = @@CURSOR_ROWS

FETCH NEXT FROM cur_selo_col_xx1 INTO
		 @p_arquivo
		,@p_nro_linha
		,@p_linha
		,@p_cd_aerop_num
		,@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa
		,@p_serie_coletor
		,@p_cpf_agente
		,@p_status_linha
		,@p_user_id_created
		,@p_date_created
 
WHILE @@FETCH_STATUS = 0
BEGIN

	IF NOT EXISTS (SELECT 1 FROM pax_selos_coletados_u (NOLOCK INDEX = P_pax_selos_coletados_u)
				WHERE arquivo 		= @p_arquivo 
					and nro_linha	= @p_nro_linha)
	BEGIN
		/* COPIA LINEA NUEVA */
		INSERT INTO pax_selos_coletados_u 
		SELECT @p_arquivo
			,@p_nro_linha
			,@p_linha
			,@p_cd_aerop_num
			,@p_tp_selo
			,@p_nro_selo
			,@p_tp_baixa
			,@p_serie_coletor
			,@p_cpf_agente
			,@p_status_linha
			,@p_user_id_created
			,@p_date_created

		IF @@ROWCOUNT = 1
			SELECT RTRIM(LTRIM(STR(@p_count))) +'/'+ RTRIM(LTRIM(STR(@p_count_total))) + ' INSERT ('+ RTRIM(@p_arquivo) +':'+ LTRIM(RTRIM(STR(@p_nro_linha)))
		ELSE
			SELECT RTRIM(LTRIM(STR(@p_count))) +'/'+ RTRIM(LTRIM(STR(@p_count_total))) + ' ERROR - INSERT(' + RTRIM(@p_arquivo) +':'+ LTRIM(RTRIM(STR(@p_nro_linha)))
			
	END

	SET @p_count = @p_count + 1	

	FETCH NEXT FROM cur_selo_col_xx1 INTO
		 @p_arquivo
		,@p_nro_linha
		,@p_linha
		,@p_cd_aerop_num
		,@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa
		,@p_serie_coletor
		,@p_cpf_agente
		,@p_status_linha
		,@p_user_id_created
		,@p_date_created
 
END
 
CLOSE cur_selo_col_xx1
DEALLOCATE cur_selo_col_xx1

DROP TABLE #TEMP_SELO_COLETADO 

SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[psp_devolver_selo]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_devolver_selo    Script Date: 19/09/2008 15:20:16 ******/
CREATE proc [dbo].[psp_devolver_selo] 
	(@p_nro_selo		char(10)
	,@p_ano_remesa		int)
as

declare @v_date_changed		datetime
	,@v_user_id_changed		char(30)
	,@v_date_mov			datetime
	,@v_return				smallint

select @v_date_changed		= getdate()
	,@v_user_id_changed		= suser_sname()
	,@v_date_mov			= '19000101'
	,@v_return				= 0

select @v_date_mov = date_changed
from pax_lote_selo_u (nolock)
where nro_selo_inicial <= @p_nro_selo  and nro_selo_final >= @p_nro_selo
and year(date_changed)	= @p_ano_remesa

if @v_date_mov = '19000101' or @v_date_mov is null
begin
	goto salir
end 

update pax_selo_u
set selo_status 			= '0'
	,dt_mov					= @v_date_mov
	,cd_motivo 				= ''
	,tp_fat  				= ''
	,cd_cia_aerea 			= ''
	,cd_aerop_utilizacao 	= ''
	,cd_terminal_utilizacao = ''
	,nro_rste 				= ''
	,tp_coletor       		= ''
	,item_fat				= ''
	,date_changed			= @v_date_changed
	,user_id_changed		= @v_user_id_changed
	,chgstamp				= chgstamp + 1
WHERE nro_selo 				= @p_nro_selo	
and billing_line_id			= 0

set @v_return = @@rowcount
salir:

select @v_return 



GO

/****** Object:  StoredProcedure [dbo].[psp_elimina_duplicados]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_elimina_duplicados    Script Date: 19/09/2008 15:20:17 ******/

CREATE  PROC [dbo].[psp_elimina_duplicados]
AS

SET NOCOUNT ON
declare @p_arquivo		char (40)
	,@p_nro_linha           int    
	,@p_linha               char (30) 
	,@p_cd_aerop_num        char (3)  
	,@p_tp_selo             char (1)  
	,@p_nro_selo            char (14) 
	,@p_cd_aerop		char (4)
	,@p_cd_terminal		char (1)
	,@p_dt_mov				DATETIME
	,@p_hh_mm				CHAR(6)
	,@ROWCOUNT 				INT
	,@p_hh_mov				CHAR(6)

DECLARE cur_sel_cole INSENSITIVE CURSOR FOR

SELECT arquivo 
	,nro_linha
	,linha			
	,cd_aerop_num
	,nro_selo		
FROM pax_selos_coletados_u (NOLOCK)
WHERE tp_selo = 'L'
AND nro_linha 	>= 3
and left(linha,1) <> '#'
AND cd_aerop_num <> '001'
ORDER BY date_created, arquivo, nro_linha

OPEN cur_sel_cole

FETCH NEXT FROM cur_sel_cole 
	INTO @p_arquivo		
	,@p_nro_linha    
	,@p_linha        
	,@p_cd_aerop_num 
	,@p_nro_selo     

WHILE @@FETCH_STATUS = 0
BEGIN

	SELECT @p_cd_aerop = cd_aerop 
	FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u)
	WHERE cd_aerop_num			= SUBSTRING(@p_arquivo, 1,3)
		and inactive_ind 		= '0'

	SELECT @p_cd_terminal	= SUBSTRING(@p_arquivo, 4,1)
		,@p_dt_mov	= '20' + SUBSTRING(@p_linha, 1,6)
		,@p_hh_mov	= SUBSTRING(@p_linha, 7,2) +':'+ SUBSTRING(@p_linha, 9,2) +':'+ SUBSTRING(@p_linha, 11,2)

	SELECT nro_selo_electronico ,dt_mov			 
	FROM pax_selo_electronico_u (NOLOCK index = P_pax_selo_electronico_u)
	WHERE cd_aerop 							= @p_cd_aerop
		and cd_terminal 					= @p_cd_terminal
		and convert(varchar(8), dt_mov,112)	= @p_dt_mov
		and nro_selo_electronico 			= @p_nro_selo 	

	SET @ROWCOUNT = @@ROWCOUNT
	IF @ROWCOUNT = 1
	BEGIN
		UPDATE pax_selo_electronico_u
		SET dt_mov								= @p_dt_mov
			,voo_rea 							= CASE WHEN dt_confirma = '19000101' THEN SUBSTRING(@p_nro_selo,4,4) ELSE voo_rea END 	
			,hh_mov								= @p_hh_mov
		WHERE cd_aerop 							= @p_cd_aerop
			and cd_terminal 					= @p_cd_terminal
			and convert(varchar(8), dt_mov,112)	= @p_dt_mov
			and nro_selo_electronico 			= @p_nro_selo 	
		PRINT '*****'
	END
	ELSE
	BEGIN	
		IF @ROWCOUNT = 2
		BEGIN
			UPDATE pax_selo_electronico_u 
			SET tp_coletor								= CASE WHEN tp_coletor = '9' THEN '01' ELSE tp_coletor END
				,hh_mov									= @p_hh_mov
			WHERE cd_aerop 								= @p_cd_aerop
				and cd_terminal 						= @p_cd_terminal
				and convert(varchar(8), dt_mov,112)		= @p_dt_mov
				and nro_selo_electronico 				= @p_nro_selo 	
				and dt_confirma							<> '19000101'
				and convert(varchar(12), dt_mov,114)	= '00:00:00:000'
				AND billing_line_id 					= 0
	
			IF @@ROWCOUNT = 1
			BEGIN
				DELETE pax_selo_electronico_u 
				WHERE cd_aerop 								= @p_cd_aerop
					and cd_terminal 						= @p_cd_terminal
					and convert(varchar(8), dt_mov,112)		= @p_dt_mov
					and nro_selo_electronico 				= @p_nro_selo 	
					and dt_confirma							= '19000101'
					and convert(varchar(12), dt_mov,114)	<> '00:00:00:000'		
					AND billing_line_id 					= 0
					
				IF @@ROWCOUNT = 1
				BEGIN
					PRINT 'CONCLUIDO'
				END 
			END
			ELSE 
			BEGIN
				PRINT 'NO ACTUALIZO'
			END 
		END
		ELSE
		BEGIN
			IF @ROWCOUNT > 2
			BEGIN
				PRINT 'MAS DE DOS SELOS'
			END 		
		END
	END
	
	FETCH NEXT FROM cur_sel_cole 
		INTO @p_arquivo		
		,@p_nro_linha    
		,@p_linha        
		,@p_cd_aerop_num 
		,@p_nro_selo     

END
CLOSE cur_sel_cole
DEALLOCATE cur_sel_cole

SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[psp_elimina_duplicados_tmp]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_elimina_duplicados_tmp    Script Date: 19/09/2008 15:20:17 ******/

CREATE   PROC [dbo].[psp_elimina_duplicados_tmp]

as

SET NOCOUNT ON
declare @p_arquivo		char (40)
	,@p_nro_linha           int    
	,@p_linha               char (30) 
	,@p_cd_aerop_num        char (3)  
	,@p_tp_selo             char (1)  
	,@p_nro_selo            char (14) 
	,@p_cd_aerop		char (4)
	,@p_cd_terminal		char (1)
	,@p_dt_mov        DATETIME
	,@p_dt_mov1       DATETIME
	,@p_dt_mov2      	DATETIME
	,@p_hh_mm				CHAR(6)
	,@ROWCOUNT 				INT
	,@p_hh_mov				CHAR(6)

SELECT nro_selo_electronico ,dt_mov into #tmp
FROM pax_selo_electronico_u (NOLOCK index = P_pax_selo_electronico_u)
where 1 = 2


DECLARE cur_sel_cole INSENSITIVE CURSOR FOR
SELECT arquivo 
	,nro_linha
	,linha			
	,cd_aerop_num
	,nro_selo		
FROM pax_selos_coletados_u (NOLOCK)
WHERE tp_selo = 'L'
and  nro_linha 	>= 3
and left(linha,1) <> '#'
and  cd_aerop_num  <> '001'

ORDER BY date_created, arquivo, nro_linha

OPEN cur_sel_cole

FETCH NEXT FROM cur_sel_cole 
	INTO @p_arquivo		
	,@p_nro_linha    
	,@p_linha        
	,@p_cd_aerop_num 
	,@p_nro_selo     

WHILE @@FETCH_STATUS = 0
BEGIN

	SELECT @p_cd_aerop = cd_aerop 
	FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u)
	WHERE cd_aerop_num			= SUBSTRING(@p_arquivo, 1,3)
		and inactive_ind 		= '0'

	SELECT @p_cd_terminal	= SUBSTRING(@p_arquivo, 4,1)
		,@p_dt_mov	= '20' + SUBSTRING(@p_linha, 1,6)
		,@p_hh_mov	= SUBSTRING(@p_linha, 7,2) +':'+ SUBSTRING(@p_linha, 9,2) +':'+ SUBSTRING(@p_linha, 11,2)

   set @p_dt_mov1 = @p_dt_mov + ' 00:00:00.000'
   set @p_dt_mov2 = @p_dt_mov + ' 23:59:59.000'

   insert #tmp
	SELECT nro_selo_electronico ,dt_mov
	FROM pax_selo_electronico_u (NOLOCK index = P_pax_selo_electronico_u)
	WHERE cd_aerop 							= @p_cd_aerop
		and cd_terminal 					= @p_cd_terminal
		and dt_mov	between @p_dt_mov1 and @p_dt_mov2
		and nro_selo_electronico 			= @p_nro_selo 	

	SET @ROWCOUNT = @@ROWCOUNT
	IF @ROWCOUNT = 1
	BEGIN
		UPDATE pax_selo_electronico_u
		SET dt_mov								= @p_dt_mov
			,voo_rea 							= CASE WHEN dt_confirma = '19000101' THEN SUBSTRING(@p_nro_selo,4,4) ELSE voo_rea END 	
			,hh_mov								= @p_hh_mov
		WHERE cd_aerop 							= @p_cd_aerop
			and cd_terminal 					= @p_cd_terminal
   		and dt_mov	between @p_dt_mov1 and @p_dt_mov2
			and nro_selo_electronico 			= @p_nro_selo 	
	END
	ELSE
	BEGIN	
		IF @ROWCOUNT = 2
		BEGIN
			UPDATE pax_selo_electronico_u 
			SET tp_coletor                      = CASE WHEN tp_coletor = '9' THEN '01' ELSE tp_coletor END
				,hh_mov                          = @p_hh_mov
			WHERE cd_aerop                      = @p_cd_aerop
				and cd_terminal                  = @p_cd_terminal
				and nro_selo_electronico         = @p_nro_selo 	
				and dt_confirma                  <> '19000101'
      		and dt_mov	                     = @p_dt_mov1
				AND billing_line_id 					= 0
	
			IF @@ROWCOUNT = 1
			BEGIN
				DELETE pax_selo_electronico_u 
				WHERE cd_aerop 								= @p_cd_aerop
					and cd_terminal 						= @p_cd_terminal
					and dt_mov > @p_dt_mov1 and dt_mov <= @p_dt_mov2
					and nro_selo_electronico 				= @p_nro_selo 	
					and dt_confirma							= '19000101'
					AND billing_line_id 					= 0
			END
		END
	END
	
	FETCH NEXT FROM cur_sel_cole 
		INTO @p_arquivo		
		,@p_nro_linha    
		,@p_linha        
		,@p_cd_aerop_num 
		,@p_nro_selo     

END
CLOSE cur_sel_cole
DEALLOCATE cur_sel_cole

select count(1) from #tmp

SET NOCOUNT OFF


GO

/****** Object:  StoredProcedure [dbo].[psp_estorna_canc_selos_gol_vrn]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE proc [dbo].[psp_estorna_canc_selos_gol_vrn] 
(			@p_cd_aerop		char(4)		/* Aeroportlo de Utilização */
			,@p_dt_voo		datetime	/* Data de voo				*/
			,@p_nro_voo		char(4)		/* Número de voo			*/
) as

/*

exec psp_estorna_canc_selos_gol_vrn 'SBEG', '20090114', '1991'

*/

/* Variables de processo */
set nocount on
declare 
	@v_erro				smallint
	,@v_str_erro		varchar(255)
	,@v_user_processo	varchar(30)
	,@v_dt_processo		datetime
	,@v_qtd				smallint
	,@v_mes_dia			char(4)
	,@v_ano				smallint

/* Validar parametros */
select @v_erro			= 0
	,@v_str_erro		= ''
	,@v_user_processo	= ltrim(rtrim(suser_sname()))
	,@v_dt_processo		= getdate()
	,@v_qtd				= 0
	,@v_mes_dia			= substring(convert(char(8),@p_dt_voo, 112),5,4)
	,@v_ano				= year(@p_dt_voo)

set @p_cd_aerop		= ltrim(rtrim(@p_cd_aerop))
set @p_nro_voo		= ltrim(rtrim(@p_nro_voo))

if not exists (select 1 from GEACutcx..cor_aeroporto_u (nolock index = P_cor_aeroporto_u)
				where cd_aerop	= @p_cd_aerop)
begin
	select @v_erro			= 5
		,@v_str_erro		= 'Parametro aeroporto inválido'
	goto seguir
end

if isnumeric(@p_nro_voo) = 0 
begin
	select @v_erro			= 5
		,@v_str_erro		= 'Nro de Voo inválido'
	goto seguir
end


/* inicio de transación */
begin tran estorna_cancelamento
/* Fazer Back de Selos na tabela pax_estorna_cancelamento_selos_gol_varig */
print 'Fazer Backup de Selos na tabela pax_estorna_cancelamento_selos_gol_varig '
print ' '
insert into pax_estorna_cancelamento_selos_gol_varig 
select a.*
	,@v_user_processo
	,@p_cd_aerop
	,@p_dt_voo
	,@p_nro_voo
	,@v_dt_processo
from pax_selo_electronico_u a (nolock index		= IDX03_BI)
where a.cd_aerop_utilizacao						= @p_cd_aerop
and a.selo_status								= '4'
and substring(a.nro_selo_electronico,8,4 )		= @v_mes_dia
/*and dt_mov									= @p_dt_voo*/
and substring(a.nro_selo_electronico,4,4 )		= @p_nro_voo
and a.billing_line_id							= 0
and year(dt_mov)								= @v_ano

set @v_qtd	= @@rowcount
if @v_qtd > 0 
begin
	/* atualizar tabela de selos eletronicos */
	print 'Alterando situação de selos '
	print ' '
	update pax_selo_electronico_u
	set 	
		selo_status				= 2
		,date_changed			= @v_dt_processo
		,user_id_changed		= @v_user_processo + '(Estorno Can.)'
		,chgstamp				= chgstamp + 1
	where cd_aerop_utilizacao					= @p_cd_aerop
	and selo_status								= '4'
	and substring(nro_selo_electronico,8,4 )	= @v_mes_dia
	/*and dt_mov									= @p_dt_voo*/
	and substring(nro_selo_electronico,4,4 )	= @p_nro_voo
	and billing_line_id							= 0
	and year(dt_mov)							= @v_ano
	
	set @v_qtd	= @@rowcount
	
	if @v_qtd	<= 0
	begin
		select @v_erro			= 5
			,@v_str_erro		= 'Não foi possivel atualizaro os selos.'
		goto seguir	
	end
end 
else
begin
	select @v_erro			= 5
		,@v_str_erro		= 'Não foram identificados os selos para o vôo indicado.'
	goto seguir
end

seguir:
if @v_erro = 0
begin
	/* commit de transación */
	commit tran estorna_cancelamento
	set @v_str_erro = ltrim(rtrim(str(@v_qtd)))  + ' Selos alterados.'
end 
else
begin
	/* rollback de transación */
	rollback tran estorna_cancelamento
end

print @v_str_erro

set nocount off

GO

/****** Object:  StoredProcedure [dbo].[psp_estornar_arquivo_selo_ele_l]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_estornar_arquivo_selo_ele_l    Script Date: 19/09/2008 15:20:17 ******/




/*

exec psp_estornar_arquivo_selo_ele_l '0141_L_060406-193311_D00_102.txt'
select * from pax_selos_coletados_u where arquivo = '0141_L_060406-193311_D00_102.txt'

sp_help pax_selos_coletados_u

0021_T_060606-165111_U00_102.TXT

exec psp_estornar_arquivo_selo_ele_l '0021_T_070325-202400_D00_105.TXT'

*/

CREATE    proc [dbo].[psp_estornar_arquivo_selo_ele_l] 
	(@p_arquivo			char(40))
as

set nocount on

-- DECLARACION DE VARIABLES  
DECLARE	 @p_tp_selo					CHAR(1)
	,@p_nro_selo					CHAR(14)
	,@p_tp_baixa					CHAR(1)
	,@v_selo_status					char(1)
	,@v_chgstamp					smallint
	,@v_dt_mov_log					datetime
	,@v_selo_status_log				char(1)
	,@v_cd_motivo_log 				char(2)
	,@v_tp_fat_log 					char(1)
	,@v_cd_cia_aerea_log			char(3)
	,@v_cd_aerop_utilizacao_log 	char(4)
	,@v_cd_terminal_utilizacao_log	char(10)
	,@v_nro_rste_log 				char(6)
	,@v_tp_coletor_log       		char(10)
	,@v_item_fat_log				char(26)
	,@v_date_changed				datetime
	,@v_user_id_changed				char(30)
	,@v_user_id_estorno				char(30)
	,@v_error						int
	,@v_msg							varchar(255)
	,@v_billing_line_id				int
	,@rowcount						int							
	,@v_cd_aerop					char(4)
	,@v_linha						char(30)


select @v_date_changed				= getdate()
	,@v_user_id_changed				= ltrim(rtrim(suser_sname())) + ' Estorno Arquivo'
	,@v_error						= 0
	,@v_user_id_estorno				= ltrim(rtrim(suser_sname()))


-- DECLARAR CURSOR
DECLARE cur_selo_estorno_l CURSOR FOR
SELECT a.tp_selo
	,a.nro_selo
	,a.tp_baixa
	,a.linha
	,b.cd_aerop
FROM pax_selos_coletados_u a (NOLOCK)
inner join GEACutcx..cor_aeroporto_u b (nolock)
on b.cd_aerop_num	= a.cd_aerop_num
WHERE a.arquivo = @p_arquivo
and a.nro_selo <> ''
	
OPEN cur_selo_estorno_l
FETCH NEXT FROM cur_selo_estorno_l INTO
		@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa
		,@v_linha
		,@v_cd_aerop

begin tran estorna_arq_selo_l

WHILE @@FETCH_STATUS = 0
BEGIN

	insert into pax_selo_electronico_u_estorno_arquivo
	select a.*, @p_arquivo, @v_user_id_estorno, @v_date_changed
	from pax_selo_electronico_u a (nolock)
	where nro_selo_electronico 				= @p_nro_selo
	and billing_line_id 					= 0
	and cd_aerop							= @v_cd_aerop
	and cd_terminal 						= '1'
	and convert(varchar(6), dt_mov, 12)		= left(@v_linha,6)
	
	delete from pax_selo_electronico_u 
	where nro_selo_electronico 				= @p_nro_selo
	and billing_line_id 					= 0
	and cd_aerop							= @v_cd_aerop
	and cd_terminal 						= '1'
	and convert(varchar(6), dt_mov, 12)		= left(@v_linha,6)

	FETCH NEXT FROM cur_selo_estorno_l INTO
		@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa
		,@v_linha
		,@v_cd_aerop
 
END

salir:
if @v_error = 0
begin
	delete from pax_selos_coletados_u where arquivo = @p_arquivo
	delete from pax_baixa_selo_u where arquivo = @p_arquivo
	commit tran estorna_arq_selo_l
	select @v_error, 'Arquivo: ' + ltrim(rtrim(@p_arquivo)) + ' Estornado sem problemas.'
end
else
begin
	rollback tran estorna_arq_selo_l
	select @v_error, @v_msg
end

CLOSE cur_selo_estorno_l
DEALLOCATE cur_selo_estorno_l

set nocount off


GO

/****** Object:  StoredProcedure [dbo].[psp_estornar_arquivo_selo_fisico]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_estornar_arquivo_selo_fisico    Script Date: 19/09/2008 15:20:17 ******/



/*

exec psp_estornar_arquivo_selo_fisico '0241_F_080219-123017_U00_107.TXT'

0241_F_080219-123017_U00_107.TXT

select * from pax_selos_coletados_u 
where arquivo = '0241_F_080219-123017_U00_107.TXT'

select a.* 
from pax_selo_u a
inner join pax_selos_coletados_u b
on a.nro_selo = b.nro_selo
and a.ano_remesa =2008
where b.arquivo = '0241_F_080219-123017_U00_107.TXT'

*/

CREATE    proc [dbo].[psp_estornar_arquivo_selo_fisico] 
	(@p_arquivo			char(40))
as

set nocount on
-- DECLARACION DE VARIABLES  
DECLARE	 @p_tp_selo					CHAR(1)
	,@p_nro_selo					CHAR(14)
	,@p_tp_baixa					CHAR(1)
	,@v_ano_remesa					INT 
	,@v_selo_status					char(1)
	,@v_chgstamp					smallint
	,@v_dt_mov_log					datetime
	,@v_selo_status_log				char(1)
	,@v_cd_motivo_log 				char(2)
	,@v_tp_fat_log 					char(1)
	,@v_cd_cia_aerea_log			char(3)
	,@v_cd_aerop_utilizacao_log 	char(4)
	,@v_cd_terminal_utilizacao_log	char(10)
	,@v_nro_rste_log 				char(6)
	,@v_tp_coletor_log       		char(10)
	,@v_item_fat_log				char(26)
	,@v_date_changed				datetime
	,@v_user_id_changed				char(30)
	,@v_error						int
	,@v_msg							varchar(255)
	,@v_billing_line_id				int
	,@rowcount						int							

select @v_date_changed				= getdate()
	,@v_user_id_changed				= ltrim(rtrim(suser_sname())) + ' Estorno Arquivo'
	,@v_error						= 0

-- DECLARAR CURSOR
DECLARE cur_selo_estorno CURSOR FOR
SELECT tp_selo
	,nro_selo
	,tp_baixa
FROM pax_selos_coletados_u (NOLOCK)
WHERE arquivo = @p_arquivo
and nro_selo <> ''
	
OPEN cur_selo_estorno
FETCH NEXT FROM cur_selo_estorno INTO
		@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa

begin tran estorna_arq_selo

WHILE @@FETCH_STATUS = 0
BEGIN

	select @v_ano_remesa 	= ano_remesa
		,@v_selo_status		= selo_status
		,@v_chgstamp		= chgstamp
		,@v_billing_line_id	= billing_line_id
	from pax_selo_u b (nolock) 
	where b.nro_selo 	= @p_nro_selo
	and b.ano_remesa	= (select max(c.ano_remesa) from pax_selo_u c(nolock)
							where c.nro_selo	= b.nro_selo)

	if @v_billing_line_id <> 0
	begin
		select @v_error = 1
			,@v_msg		= 'Selo Nro: ' + ltrim(rtrim(@p_nro_selo)) + ' Tem Boleto Gerado.'
		goto salir
	end 

	select  top 1
		@v_dt_mov_log					= d.dt_mov
		,@v_selo_status_log				= d.selo_status
		,@v_cd_motivo_log 				= d.cd_motivo
		,@v_tp_fat_log 					= d.tp_fat
		,@v_cd_cia_aerea_log			= d.cd_cia_aerea
		,@v_cd_aerop_utilizacao_log 	= d.cd_aerop_utilizacao
		,@v_cd_terminal_utilizacao_log	= d.cd_terminal_utilizacao
		,@v_nro_rste_log 				= d.nro_rste
		,@v_tp_coletor_log       		= d.tp_coletor
		,@v_item_fat_log				= d.item_fat
	from pax_selo_log_u d (nolock)
	where d.nro_selo 	= @p_nro_selo
	and d.ano_remesa	= @v_ano_remesa
	and d.selo_status	<>@v_selo_status
	order by d.chgstamp	desc, d.dt_mov desc
/*
	select 		@v_dt_mov_log					
		,@v_selo_status_log				
		,@v_cd_motivo_log 				
		,@v_tp_fat_log 					
		,@v_cd_cia_aerea_log			
		,@v_cd_aerop_utilizacao_log 	
		,@v_cd_terminal_utilizacao_log	
		,@v_nro_rste_log 				
		,@v_tp_coletor_log       		
		,@v_item_fat_log				
*/
	if @v_selo_status <> '1' 
	begin
		update pax_selo_u
		set dt_mov 				= @v_dt_mov_log
		,selo_status			= @v_selo_status_log
		,cd_motivo 				= @v_cd_motivo_log
		,tp_fat 				= @v_tp_fat_log
		,cd_cia_aerea			= @v_cd_cia_aerea_log
		,cd_aerop_utilizacao 	= @v_cd_aerop_utilizacao_log
		,cd_terminal_utilizacao	= @v_cd_terminal_utilizacao_log
		,nro_rste 				= @v_nro_rste_log
		,tp_coletor       		= @v_tp_coletor_log
		,item_fat				= @v_item_fat_log
		,date_changed			= @v_date_changed
		,user_id_changed		= @v_user_id_changed
		,chgstamp				= @v_chgstamp + 1
		where nro_selo			= @p_nro_selo
		and ano_remesa			= @v_ano_remesa
		and billing_line_id		= 0
	
		set @rowcount = @@rowcount
		select @v_msg = case when @rowcount = 1 then 'Selo ' + @p_nro_selo + ' atualizado'
					when @rowcount = 0 then 'Selo ' + @p_nro_selo + ' nao atualizado'
					else 'Selo ' + @p_nro_selo + ' nao atualizado' end
	
		if @rowcount <> 1
		begin
			select @v_error = 1
				,@v_msg		= 'Selo Nro: ' + ltrim(rtrim(@p_nro_selo)) + ' Erro a atulizar.'
			goto salir
		end
	end

	FETCH NEXT FROM cur_selo_estorno INTO
		@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa
 
END

salir:
if @v_error = 0
begin
	delete from pax_selos_coletados_u where arquivo = @p_arquivo
	delete from pax_baixa_selo_u where arquivo = @p_arquivo
	delete from pax_discrep_selo_u where arquivo = @p_arquivo
	commit tran estorna_arq_selo
	select @v_error, 'Arquivo: ' + ltrim(rtrim(@p_arquivo)) + ' Estornado sem problemas.'
end
else
begin
	rollback tran estorna_arq_selo
	select @v_error, @v_msg
end

CLOSE cur_selo_estorno
DEALLOCATE cur_selo_estorno

set nocount off



GO

/****** Object:  StoredProcedure [dbo].[psp_estornar_arquivo_selo_fisico_com_boleto]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_estornar_arquivo_selo_fisico_com_boleto    Script Date: 19/09/2008 15:20:17 ******/


/*

exec psp_estornar_arquivo_selo_fisico '0141_F_060406-193311_D00_102.txt'

select * from pax_selos_coletados_u (nolock)
where arquivo = '0021_F_070324-092428_D00_105.TXT'

exec psp_estornar_arquivo_selo_fisico_com_boleto '0191_F_070726-075527_U00_105.TXT'

select * from pax_baixa_selo_u where arquivo = '0201_F_070726-075527_U00_105.TXT'

Select * From pax_selo_u b (nolock) 
Where nro_selo = 'D48408674'

*/

CREATE   proc [dbo].[psp_estornar_arquivo_selo_fisico_com_boleto] 
	(@p_arquivo			char(40))
as

set nocount on
-- DECLARACION DE VARIABLES  
DECLARE	 @p_tp_selo					CHAR(1)
	,@p_nro_selo					CHAR(14)
	,@p_tp_baixa					CHAR(1)
	,@v_tp_fat					    CHAR(1)
	,@v_ano_remesa					INT 
	,@v_selo_status					char(1)
	,@v_chgstamp					smallint
	,@v_dt_mov_log					datetime
	,@v_selo_status_log				char(1)
	,@v_cd_motivo_log 				char(2)
	,@v_tp_fat_log 					char(1)
	,@v_cd_cia_aerea_log			char(3)
	,@v_cd_aerop_utilizacao_log 	char(4)
	,@v_cd_terminal_utilizacao_log	char(10)
	,@v_nro_rste_log 				char(6)
	,@v_tp_coletor_log       		char(10)
	,@v_item_fat_log				char(26)
	,@v_date_changed				datetime
	,@v_user_id_changed				char(30)
	,@v_error						int
	,@v_msg							varchar(255)
	,@v_billing_line_id				int
	,@rowcount						int							

select @v_date_changed				= getdate()
	,@v_user_id_changed				= ltrim(rtrim(suser_sname())) + ' Estorno Arquivo'
	,@v_error						= 0

-- Verifica se o arquivo foi apenas coletado (pax_selos_coletados_u) sem ser processado (pax_baixa_selo_u)
If ( select count(1) From pax_baixa_selo_u where arquivo = @p_arquivo ) = 0
 Begin
	Delete from pax_selos_coletados_u where arquivo = @p_arquivo
	select 'Arquivo: ' + ltrim(rtrim(@p_arquivo)) + ' apenas Coletado sem ser Processado. Estornado com Sucesso.'
    goto fim
 End

-- DECLARAR CURSOR
DECLARE cur_selo_estorno CURSOR FOR
SELECT tp_selo
	,nro_selo
	,tp_baixa
FROM pax_selos_coletados_u (NOLOCK)
WHERE arquivo = @p_arquivo
and nro_selo <> ''
	
OPEN cur_selo_estorno
FETCH NEXT FROM cur_selo_estorno INTO
		@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa

begin tran estorna_arq_selo

WHILE @@FETCH_STATUS = 0
BEGIN

	select @v_ano_remesa 	= ano_remesa
		,@v_selo_status		= selo_status
		,@v_chgstamp		= chgstamp
		,@v_billing_line_id	= billing_line_id
        ,@v_tp_fat          = tp_fat
	from pax_selo_u b (nolock) 
	where b.nro_selo 	= @p_nro_selo
	and b.ano_remesa	= (select max(c.ano_remesa) from pax_selo_u c(nolock)
							where c.nro_selo	= b.nro_selo)

	if @v_billing_line_id <> 0
	begin
        If @v_tp_fat = 'A'
           Begin
		     select 'Selo Nro: ' + ltrim(rtrim(@p_nro_selo)) + ' com Boleto à Vista Gerado. '  + ltrim(rtrim(@v_billing_line_id))
		     goto seguir
           End

		select @v_error = 1
			,@v_msg		= 'Selo Nro: ' + ltrim(rtrim(@p_nro_selo)) + ' Tem Boleto Gerado. '  + ltrim(rtrim(@v_billing_line_id))
		goto salir
	end 

	select  top 1
		@v_dt_mov_log					= d.dt_mov
		,@v_selo_status_log				= d.selo_status
		,@v_cd_motivo_log 				= d.cd_motivo
		,@v_tp_fat_log 					= d.tp_fat
		,@v_cd_cia_aerea_log			= d.cd_cia_aerea
		,@v_cd_aerop_utilizacao_log 	= d.cd_aerop_utilizacao
		,@v_cd_terminal_utilizacao_log	= d.cd_terminal_utilizacao
		,@v_nro_rste_log 				= d.nro_rste
		,@v_tp_coletor_log       		= d.tp_coletor
		,@v_item_fat_log				= d.item_fat
	from pax_selo_log_u d (nolock)
	where d.nro_selo 	= @p_nro_selo
	and d.ano_remesa	= @v_ano_remesa
	and d.selo_status	<>@v_selo_status
	order by d.chgstamp	desc, d.dt_mov desc

/*
	select 		@v_dt_mov_log					
		,@v_selo_status_log				
		,@v_cd_motivo_log 				
		,@v_tp_fat_log 					
		,@v_cd_cia_aerea_log			
		,@v_cd_aerop_utilizacao_log 	
		,@v_cd_terminal_utilizacao_log	
		,@v_nro_rste_log 				
		,@v_tp_coletor_log       		
		,@v_item_fat_log				
*/

	if @v_selo_status <> '1' 
	begin
		update pax_selo_u
		set dt_mov 				= @v_dt_mov_log
		,selo_status			= @v_selo_status_log
		,cd_motivo 				= @v_cd_motivo_log
		,tp_fat 				= @v_tp_fat_log
		,cd_cia_aerea			= @v_cd_cia_aerea_log
		,cd_aerop_utilizacao 	= @v_cd_aerop_utilizacao_log
		,cd_terminal_utilizacao	= @v_cd_terminal_utilizacao_log
		,nro_rste 				= @v_nro_rste_log
		,tp_coletor       		= @v_tp_coletor_log
		,item_fat				= @v_item_fat_log
		,date_changed			= @v_date_changed
		,user_id_changed		= @v_user_id_changed
		,chgstamp				= @v_chgstamp + 1
		where nro_selo			= @p_nro_selo
		and ano_remesa			= @v_ano_remesa
		and billing_line_id		= 0

		set @rowcount = @@rowcount
		select @v_msg = case when @rowcount = 1 then 'Selo ' + @p_nro_selo + ' atualizado'
					when @rowcount = 0 then 'Selo ' + @p_nro_selo + ' nao atualizado'
					else 'Selo ' + @p_nro_selo + ' nao atualizado' end
	
		if @rowcount <> 1
		begin
			select @v_error = 1
				,@v_msg		= 'Selo Nro: ' + ltrim(rtrim(@p_nro_selo)) + ' Erro a atulizar.'
			goto salir
		end


	end

	seguir:
	FETCH NEXT FROM cur_selo_estorno INTO
		@p_tp_selo
		,@p_nro_selo
		,@p_tp_baixa
 
END

salir:
if @v_error = 0
begin
	delete from pax_selos_coletados_u where arquivo = @p_arquivo
	delete from pax_baixa_selo_u where arquivo = @p_arquivo
	commit tran estorna_arq_selo
	select @v_error, 'Arquivo: ' + ltrim(rtrim(@p_arquivo)) + ' Estornado sem problemas.'
end
else
begin
	rollback tran estorna_arq_selo
	select @v_error, @v_msg
end

CLOSE cur_selo_estorno
DEALLOCATE cur_selo_estorno

fim:
set nocount off







GO

/****** Object:  StoredProcedure [dbo].[psp_excluir_log_selos_dup]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_excluir_log_selos_dup    Script Date: 19/09/2008 15:20:17 ******/


CREATE PROCEDURE [dbo].[psp_excluir_log_selos_dup]
AS
DECLARE @row integer
DECLARE @err real
DECLARE @con real
DECLARE @con_dos real
DECLARE @str varchar(200)
BEGIN
  SELECT @str 		= 'INICIO DE PROCESO '+ CHAR(13) + CHAR(10)
  SELECT @row 		= 1
	,@con 		= 0
	,@str 		= ''
	,@con_dos	= 0
  PRINT @str  
  SET NOCOUNT ON
  WHILE @row <> 0 
  BEGIN
    BEGIN TRANSACTION
    SET ROWCOUNT 1000

    DELETE pax_selo_log_u 
    FROM pax_selo_log_u A (Nolock)
    WHERE A.selo_status 		= '1'
       AND LTRIM(RTRIM(A.item_fat)) 	= ''
       AND EXISTS (Select 1 from pax_selo_log_u B (NOLOCK)
	    where B.nro_selo 			= A.nro_selo
		AND B.selo_status 		= '1'
		AND LTRIM(RTRIM(B.item_fat)) 	<> '')


    SELECT @row = @@ROWCOUNT, @err = @@ERROR ,@con = @con + @@ROWCOUNT
    IF @err <> 0
    BEGIN
       ROLLBACK TRANSACTION
       SELECT @str = 'ROLLBACK ' + LTRIM(RTRIM(STR(@con)))+ CHAR(13) + CHAR(10)
       PRINT @str
       GOTO SALIR
    END
    ELSE
    BEGIN
       COMMIT TRANSACTION
       IF @con_dos = @con_dos
       BEGIN
           SELECT @str = 'COMMIT ' + LTRIM(RTRIM(STR(@con)))+ CHAR(13) + CHAR(10)
           PRINT @str  
           SELECT @con_dos = @con_dos + 500000
       END
    END
  END
  SALIR:
  SET ROWCOUNT 0
  SET NOCOUNT OFF
  SELECT @str = 'FIM DE PROCESO. TOTAL LINEAS EXCLUIDAS ---> ' + LTRIM(RTRIM(STR(@con)))+ CHAR(13) + CHAR(10)
  PRINT @str
END



GO

/****** Object:  StoredProcedure [dbo].[psp_ficalizacao_diaria]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ficalizacao_diaria    Script Date: 19/09/2008 15:20:17 ******/

--exec psp_ficalizacao_diaria 'SBBR', '20070716', 'TIB'
CREATE   proc [dbo].[psp_ficalizacao_diaria]
(	@p_cd_aerop			char(4)
	,@p_data			datetime
	,@p_cd_cia_aerea	char(3))
as

declare @v_selo_status	char(1)
	,@v_data_fim		datetime
	,@v_mes_dia			char(4)

select @v_selo_status	= '2'
	,@v_data_fim 		= dateadd(ms, -550, dateadd(dd, 1, @p_data))
	,@v_mes_dia			= substring(convert(varchar(8), @p_data,112),5,4)

set nocount on

create table  #table_xx_1
(	cd_aerop				char(4)
	,dt_mov					datetime
	,cd_cia_aerea			char(4)
	,voo_rea				char(6)
	,qtd_selo_electronico_d	int
	,qtd_selo_electronico_i	int
	,qtd_selo_fisico_d		int
	,qtd_selo_fisico_i		int
	,qtd_selo_d				int
	,qtd_selo_i				int	
	,qtd_total				int	
	,qtd_rpe				int
	,qtd_dif				int)



/*Buscar selos Fisicos*/
insert into #table_xx_1
	select
	cd_aerop				= a.cd_aerop_utilizacao
	,dt_mov					= convert(varchar(8),a.dt_mov,112)
	,cd_cia_aerea			= a.cd_cia_aerea
	,voo_rea				= 'FISICO'
	,qtd_selo_electronico_d	= 0
	,qtd_selo_electronico_i	= 0
	,qtd_selo_fisico_d		= case when a.tp_natureza = 'D' then 1 else 0 end
	,qtd_selo_fisico_i		= case when a.tp_natureza = 'I' then 1 else 0 end
	,qtd_selo_d				= case when a.tp_natureza = 'D' then 1 else 0 end
	,qtd_selo_i				= case when a.tp_natureza = 'I' then 1 else 0 end	
	,qtd_total				= 1	
	,qtd_rpe				= 0
	,qtd_dif				= 0
from pax_selo_u	a (nolock index = IDX01_BI)
where a.selo_status			= @v_selo_status
and a.cd_aerop_utilizacao	= @p_cd_aerop
and a.cd_cia_aerea 			= @p_cd_cia_aerea
and a.dt_mov 				between @p_data and @v_data_fim
and a.tp_fat				= 'F'

/*Buscar selos Eletronicos*/
insert into #table_xx_1
select cd_aerop				= a.cd_aerop
	,dt_mov					= convert(char(4), year(a.dt_voo_rea)) + substring(a.nro_selo_electronico,8,4)
	,cd_cia_aerea			= a.cd_cia_aerea
	,voo_rea				= voo_rea
	,qtd_selo_electronico_d	= case when a.tp_natureza = 'D' then 1 else 0 end
	,qtd_selo_electronico_i	= case when a.tp_natureza = 'I' then 1 else 0 end
	,qtd_selo_fisico_d		= 0
	,qtd_selo_fisico_i		= 0
	,qtd_selo_d				= case when a.tp_natureza = 'D' then 1 else 0 end
	,qtd_selo_i				= case when a.tp_natureza = 'I' then 1 else 0 end	
	,qtd_total				= 1	
	,qtd_rpe				= 0
	,qtd_dif				= 0
from pax_selo_electronico_u	a (nolock index = IDX02_BI)
where a.cd_aerop		= @p_cd_aerop
and a.cd_cia_aerea 		= @p_cd_cia_aerea
and year(a.dt_voo_rea)	= year(@p_data)
and substring(a.nro_selo_electronico,8,4) = @v_mes_dia
and a.selo_status		= @v_selo_status

/*Buscar RPE*/
insert into #table_xx_1
select cd_aerop				= a.cd_aerop
	,dt_mov					= dt_voo
	,cd_cia_aerea			= a.cd_cia_aerea
	,voo_rea				= convert(char(5),convert(int,nro_voo))
	,qtd_selo_electronico_d	= 0
	,qtd_selo_electronico_i	= 0
	,qtd_selo_fisico_d		= 0
	,qtd_selo_fisico_i		= 0
	,qtd_selo_d				= 0
	,qtd_selo_i				= 0
	,qtd_total				= 0	
	,qtd_rpe				= pax_tot_fat 
	,qtd_dif				= 0
from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
where a.cd_aerop 		= @p_cd_aerop
and a.cd_terminal 		= '1'
and a.cd_cia_aerea		= @p_cd_cia_aerea
and a.dt_voo			between @p_data and @v_data_fim
and a.inactive_ind		= '0'
and a.tp_voo			<> '2'
 
/*Calcular e mostar totais*/
select cd_aerop
	,dt_mov
	,cd_cia_aerea
	,voo_rea
	,qtd_selo_electronico_d = sum(qtd_selo_electronico_d)
	,qtd_selo_electronico_i	= sum(qtd_selo_electronico_i)
	,qtd_selo_fisico_d		= sum(qtd_selo_fisico_d)
	,qtd_selo_fisico_i		= sum(qtd_selo_fisico_i)
	,qtd_selo_d				= sum(qtd_selo_d)
	,qtd_selo_i				= sum(qtd_selo_i)
	,qtd_total				= sum(qtd_total)
	,qtd_rpe				= sum(qtd_rpe)
	,qtd_dif				= sum(qtd_rpe) - sum(qtd_total) 
from #table_xx_1 
group by cd_aerop
	,dt_mov
	,cd_cia_aerea
	,voo_rea
order by 1,2,3,4

drop table #table_xx_1 
set nocount off




GO

/****** Object:  StoredProcedure [dbo].[psp_find_selos_pax]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_find_selos_pax    Script Date: 19/09/2008 15:20:17 ******/

Create Proc [dbo].[psp_find_selos_pax] (
   @p_nro_selo               char(8)
  ,@p_atividade              char(10))
As
Set NoCount On
If @p_atividade = 'upa9901'
  Begin
    /* Verifica se existe as status diferentes de 0 e 3 */    
    If Exists (Select * from pax_selo_u where Substring(nro_selo,2,8) = @p_nro_selo
                                          and selo_status not In ('0','3'))
      Begin
        Select 'ERRO','O selo ' + Rtrim(Ltrim(@p_nro_selo)) + ' já existe na base de dados '
        Return 
      End 
    /* Verifica se existe as status iguais a 0 e 3 */    
    If Exists (Select * from pax_selo_u where Substring(nro_selo,2,8) = @p_nro_selo
                                          and selo_status In ('0','3'))
      Begin
        Select 'OKUPD','O selo ' + Rtrim(Ltrim(@p_nro_selo)) + ' será marcado como transferido'
        Return 
      End 
    /* Verifica se nao existe esse selo */    
    If Not Exists (Select * from pax_selo_u where Substring(nro_selo,2,8) = @p_nro_selo)
      Begin
        Select 'OKINS','O selo ' + Rtrim(Ltrim(@p_nro_selo)) + ' será inserido na tabela de controle'
        Return 
      End 
  End 



GO

/****** Object:  StoredProcedure [dbo].[psp_ins_arq_selo_elec]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ins_arq_selo_elec    Script Date: 19/09/2008 15:20:18 ******/

/****** Object:  Stored Procedure dbo.gsp_valida_ins_selos_arq_nuevo    Script Date: 6/11/2004 19:25:23 ******/
CREATE PROCEDURE  [dbo].[psp_ins_arq_selo_elec]
		(@pv_arquivo	varchar(255) = '%')	
AS

/*
GEAC 
jose Muñoz
Data: 23/11/2004
Descrição:
	Rutina para cargar los archivos de Selos electronicos

Discrepancias

1         	Selo eletrônico já utilizado
2         	Selo eletrônico já faturado
3         	Status de selo inválido
6         	Não encontrou item para faturar
7         	Selo eletrônico já confirmado
8         	Selo eletrônico já cancelado
9         	Prefixo de cia aérea inválido
10        	Natureza do vôo inválida
11        	Selo eletrônico já existente
12        	Selo eletrônico já transferido
13        	Utilização passa das 6 horas permitidas
14        	Linha do arquivo inválida
15        	Cia aérea inválida
16        	Selo eletrônico não utilizável nesta data
17        	Selo eletrônico internacional não utilizável
19        	Número de selo inválido
20			Número de Vôo não pode ser operado pela CIA Aérea.
*/



-- DECLARA VARIÁVEIS 
DECLARE	 @p_cd_aerop			CHAR(4)
    ,@p_cd_terminal				CHAR(10)
    ,@p_dt_mov					DATETIME
    ,@p_nro_selo_electronico	CHAR(14)
    ,@p_nro_selo_electronico_ant CHAR(14)
    ,@p_tp_natureza				CHAR(1)
    ,@p_selo_status				CHAR(1)
    ,@p_cd_motivo				CHAR(2)
    ,@p_tp_fat					CHAR(1)
    ,@p_cd_cia_aerea			CHAR(3)
    ,@p_tp_unid					CHAR(1)
    ,@p_dt_confirma				DATETIME
    ,@p_cd_aerop_utilizacao		CHAR(4)
    ,@p_cd_terminal_utilizacao	CHAR(10)
    ,@p_tp_coletor				CHAR(16)
    ,@p_item_fat				CHAR(26)
    ,@p_billing_line_id			INT
    ,@p_billing_int_date		DATETIME
    ,@p_billing_int_type		CHAR(1)
    ,@p_billing_user_1			CHAR(10)
    ,@p_voo_rea					CHAR(4)
    ,@p_dt_voo_rea				DATETIME
    ,@p_hh_voo_rea				CHAR(6)
    ,@p_date_created			DATETIME
    ,@p_user_id_created			CHAR(30)
    ,@p_date_changed			DATETIME
    ,@p_user_id_changed			CHAR(30)
    ,@p_inactive_ind			CHAR(1)
    ,@p_active_date				DATETIME
    ,@p_chgstamp				SMALLINT
    
    ,@fl_habilitado 			CHAR(1)
    ,@msg          				VARCHAR (200)
    ,@p_execute       			VARCHAR(255)
    ,@copy    					VARCHAR (255)
    ,@p_date_process			DATETIME
    ,@p_user_process 			CHAR(30)
    ,@p_dt_mov_arq				DATETIME
    ,@p_hh_mm_arq 				CHAR(6)
    ,@p_tp_selo					CHAR(1)
    ,@p_arquivo       			VARCHAR(255)
    ,@p_status_arq				CHAR(1)
    ,@int_error             	INTEGER
    ,@p_linha   				VARCHAR(255)
    ,@nr_total_lineas_err    	REAL
    ,@nr_total_lineas_arq    	REAL
    ,@nr_qtd_duplicados			REAL
    ,@nr_total_selos_validos    REAL
    ,@nr_total_selos_discrep	REAL
    ,@nr_total_selos_invalidos	REAL
    ,@nr_qtd_discrepancias_tra 	REAL
    ,@error_bcp					SMALLINT
    ,@linea     				VARCHAR (255)
    ,@p_dt_mov_str				VARCHAR(8)
    ,@p_hh_mm   				CHAR(6)
    ,@int_insert_discrepancia	SMALLINT
    ,@w_discrepancia			CHAR(10)
    ,@p_prefixo_cia_aerea		CHAR(2)
    ,@w_selo_status_aux			CHAR(1)
    ,@w_tp_coletor_aux			CHAR(2)
    ,@w_dt_confirma_aux			DATETIME
    ,@p_dt_temp 				DATETIME
    ,@w_aerop_utilizacao		CHAR(4)
    ,@w_billing_line_id			INT
    ,@v_status_arq				CHAR(1)
    ,@p_ruta					VARCHAR(255)
    ,@v_count_arquivos			SMALLINT
    ,@ROWCOUNT					SMALLINT
	,@v_quantidade				VARCHAR(10)
	,@sql                   varchar(3000)

SET NOCOUNT ON

/*
IF SUSER_SNAME() <> 'DBS'
BEGIN
        SELECT @msg = 'Processo desahilitado TEMPORALMENTE.'
        PRINT @msg
		SET NOCOUNT OFF
        RETURN 3
END
*/

-- VERIFICA SE PROCESSO ESTÁ HABILITADO

SELECT @fl_habilitado = ISNULL(descp,'0') FROM GEACCOMMON..dropdowndw_u (NOLOCK)
WHERE  tbl_code = 'CSEL'
AND code = '1'
IF @fl_habilitado = '0' OR @fl_habilitado IS NULL
BEGIN
        SET @msg = 'Processo desahilitado, Verificar tabelas genericas [CSEL]. codigo = 1, Descrição = 0.'
        PRINT @msg
        RETURN 3
END
-- FIM VERIFICA SE PROCESSO ESTÁ HABILITADO


-- VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO
DECLARE @cont INT 
EXEC psp_verificar_proceso 'psp_ins_arq_selo_elec', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de criar as requisições se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procura_arq_conf_selos_e', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_valida_ins_selos_conf_ii', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de Confirmação de selos se está executando neste estes momento e estos dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de reprocessamento das discrepâncias se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END
-- FIM VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO

EXEC psp_verificar_proceso 'psp_ins_baixa_selos', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de baixa de selos se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END



-- INICIA ALGUMAS VARIÁVEIS
SELECT @p_date_process      	= GETDATE()
	,@p_user_process 			= SUSER_SNAME()
	,@p_dt_confirma   			= CONVERT ( CHAR (10), GETDATE(), 101 )
	,@p_ruta 					= '\\S-SEAN218\Drivef'

-- COPIA ARQUIVOS QUE CAÍRAM NA PASTA "Selo_erroes_BCP" PARA SEREM REPROCESSADOS
SET @p_execute = 'master..xp_cmdshell ''Copy ' + @p_ruta + '\selo_erroes_bcp\*.*  ' + @p_ruta + '\selo'''
EXECUTE  (@p_execute)

SET @p_execute = 'master..xp_cmdshell ''del ' + @p_ruta + '\selo_erroes_bcp\*.*  /Q'''
EXECUTE  (@p_execute)


-- CRIA TABELA TEMPORÁRIA PARA GUARDAR OS ARQUIVOS ATUAIS DA PASTA "Selo"
CREATE TABLE #TEMP (LINEA VARCHAR(255) NULL)
CREATE TABLE #TEMP_2 (SELO CHAR(20), CANTIDAD INTEGER)

SET @p_execute = 'master..xp_cmdshell ''dir ' + @p_ruta + '\selo\*.* /B'''
INSERT INTO #TEMP 
EXECUTE  (@p_execute)

DELETE FROM #TEMP WHERE LINEA IS NULL

SELECT @v_count_arquivos = COUNT(1) FROM #TEMP 
IF @v_count_arquivos = 0
BEGIN
	SET @msg = 'NAO SE PODEM LEER LOS ARQUIVOS DE LA PASTA ' + @p_ruta + '\selo\' + CHAR(13) + CHAR(10)
	PRINT @msg 
	PRINT ' ' + CHAR(13) + CHAR(10)
	RETURN 5
END

SET @msg = 'TOTAL DE ARQUIVOS DE LA PASTA: ' + @p_ruta + '\selo\ = '  + LTRIM(RTRIM(STR(@v_count_arquivos))) + CHAR(13) + CHAR(10)
PRINT @msg 
PRINT ' ' + CHAR(13) + CHAR(10)

-- VERIFICA SE EXISTE A TABELA "pax_selos_elec_table_1" ONDE FICARÃO TEMPORARIAMENTE OS SELOS DE CADA ARQUIVO A SER PROCESSADO
IF NOT EXISTS (SELECT 1 FROM sysobjects WHERE name = 'pax_selos_elec_table_1')
BEGIN
    SET @msg = 'Não é possível realizar o processo porque não existe a tabela de armazenamento temporário dos dados a ser processados "pax_selos_elec_table_1". '
    PRINT @msg
    RETURN 3
	
/*  CRIAR A TABELA "pax_selos_elec_table_1" CASO NÃO EXISTA
    drop table pax_selos_elec_table_1
	CREATE TABLE pax_selos_elec_table_1 (linha VARCHAR(255) null)
	GRANT ALL ON pax_selos_elec_table_1 TO geaccarga
*/
END

-- DECLARA CURSOR DE ARQUIVOS A PROCESSAR
DECLARE cur_arq INSENSITIVE CURSOR FOR
SELECT 
	cd_aerop 
	,cd_terminal 
	,dt_mov 
	,hh_mm 
	,tp_selo
	,selo_status 
	,arquivo 
	,cd_motivo 
	,status_arq 
	,tp_coletor
FROM 
	GEACupax..pax_baixa_selo_u   (NOLOCK index = IX_STATUS_ARQ)
WHERE status_arq 	= '0'
  AND tp_selo		= 'L'
  AND arquivo 		like @pv_arquivo
ORDER BY SUBSTRING(arquivo,9,13)

-- ABRE CURSOR DE ARQUIVOS A PROCESSAR
OPEN cur_arq 

-- PRIMEIRA LEITURA DO  CURSOR DE ARQUIVOS A PROCESSAR
FETCH  NEXT FROM  cur_arq
INTO @p_cd_aerop 
	,@p_cd_terminal 
	,@p_dt_mov_arq       
	,@p_hh_mm_arq   
	,@p_tp_selo
	,@p_selo_status   
	,@p_arquivo        
	,@p_cd_motivo     
	,@p_status_arq   
	,@p_tp_coletor


SET @v_quantidade = LTRIM(RTRIM(@@CURSOR_ROWS))
SET @msg = 'Quantidade de Arquivos a processar: ' + @v_quantidade + CHAR(10) + CHAR(13)
PRINT @msg


WHILE @@FETCH_STATUS = 0 -- LÊ ARQUIVO A SER PROCESSADO ENQUANTO NÃO FOR FIM
BEGIN
	-- LIMPA TABELA QUE GUARDARÁ TEMPORARIAMENTE OS SELOS DO ARQUIVO QUE ESTÁ SENDO PROCESSADO
	DELETE pax_selos_elec_table_1
	DELETE #TEMP_2 

    SELECT 	@int_error 	= 0
    		,@p_execute = 'master..xp_cmdshell ''bcp GEACupax..pax_selos_elec_table_1 in ' + @p_ruta + '\selo\' + ltrim(rtrim(@p_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''

    EXECUTE  (@p_execute)
    IF @@ERROR <> 0
    BEGIN
		SELECT 	@int_error 			= 1
			,@nr_total_lineas_err	= 1
			,@error_bcp				= 1
		GOTO SEGUIR
    END

    BEGIN TRANSACTION 
    SET @msg = ' INICIO PROCESSO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + CHAR(10)
    PRINT @msg 
    PRINT ' ' 

    SELECT 	@nr_total_lineas_arq	= 0
		,@nr_total_selos_validos	= 0
		,@nr_total_selos_invalidos	= 0
		,@nr_total_lineas_err		= 0
		,@nr_total_selos_discrep	= 0
		,@error_bcp					= 0

    -- VERIFICA SE O ARQUIVO ATUAL EXISTE NA TABELA QUE GUARDOU OS ARQUIVOS DAS PASTAS Selo + Selo_erroes
    SELECT @linea = LINEA FROM #TEMP (nolock) WHERE LTRIM(RTRIM(LINEA)) = LTRIM(RTRIM(@p_arquivo))
    IF @@ROWCOUNT = 0
    BEGIN
		SELECT @int_error 			= 1
			,@nr_total_lineas_err	= @nr_total_lineas_err + 1
			,@msg 					= 'NÃO ENCONTRO O ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + CHAR(10)
	    PRINT @msg 
	    PRINT ' ' + CHAR(13) + CHAR(10)
		GOTO SEGUIR
    END

    -- DECLARACION DE CURSOR DE SELOS A PROCESAR
    DECLARE selos_cur INSENSITIVE CURSOR FOR
    SELECT linha  
    FROM pax_selos_elec_table_1 (NOLOCK)
    ORDER BY 1
    
    OPEN selos_cur
    
    FETCH NEXT FROM selos_cur
    INTO @p_linha

	SET @nr_total_lineas_arq = @@CURSOR_ROWS
		
	-- BUSCA QUANTIDADE DE LINHAS DO ARQUIVO
	-- SELECT @nr_total_lineas_arq = COUNT(1) FROM GEACupax..pax_selos_elec_table_1 (NOLOCK)
	IF @nr_total_lineas_arq  = 0
	BEGIN
		SELECT	@int_error 			= 1
		,@nr_total_lineas_err		= 0
		,@nr_total_selos_validos	= 0
		,@nr_total_lineas_arq		= 0
		,@nr_total_selos_discrep	= 0
		,@nr_total_selos_invalidos	= 0
		,@nr_qtd_discrepancias_tra 	= 0
		,@nr_qtd_duplicados			= 0
		,@error_bcp					= 1
	    CLOSE selos_cur
	    DEALLOCATE selos_cur
		GOTO SEGUIR
	END

    SET @msg = ' Cantidad de Lineas de ' + LTRIM(RTRIM(@p_arquivo)) + ' = ' + LTRIM(RTRIM(STR(@nr_total_lineas_arq))) + CHAR(13) + CHAR(10)
    PRINT @msg 
    PRINT ' ' + CHAR(13) + CHAR(10)
		
	-- BUSCAR CANTIDAD DE LINEAS DUPLICADAS
	INSERT INTO #TEMP_2
	SELECT  SUBSTRING(A.linha, 11,20), COUNT(1) - 1
	FROM GEACupax..pax_selos_elec_table_1 A (NOLOCK INDEX = ix_linha)	WHERE EXISTS (SELECT 1 FROM GEACupax..pax_selos_elec_table_1 B (NOLOCK INDEX = ix_linha)
			WHERE SUBSTRING(B.linha, 11,20) = SUBSTRING(A.linha, 11,20)
				AND LEFT( B.linha, 10) <> LEFT( A.linha, 10))
	GROUP BY SUBSTRING(A.linha, 11,20)
		
	SELECT @nr_qtd_duplicados = ISNULL(SUM(CANTIDAD),0) FROM #TEMP_2 (NOLOCK)
	-- FIM BUSCAR CANTIDAD DE LINEAS DUPLICADAS

    
    WHILE @@FETCH_STATUS = 0 -- LÊ SELO A SER PROCESSADO ENQUANTO NÃO FOR FIM
	BEGIN
		
	    -- Busca dados do selo na linha do arquivo
	    SELECT 	@p_nro_selo_electronico		= SUBSTRING (@p_linha, 12, 10)
	    		,@p_tp_natureza 			= SUBSTRING (@p_linha, 12, 1)
	    		,@p_dt_mov_str 				= '20' + SUBSTRING (@p_linha, 1, 6) 
	    		,@p_hh_mm 					= SUBSTRING (@p_linha, 7, 4) + '00' 
				,@int_insert_discrepancia 	= 0
				,@p_prefixo_cia_aerea 		= SUBSTRING (@p_linha, 13, 2)
				,@p_voo_rea					= SUBSTRING (@p_linha, 15, 4)
                ,@p_dt_voo_rea			    = '20' + SUBSTRING (@p_linha, 1, 6) 
    			,@p_hh_voo_rea				= '000000'


		IF ISNUMERIC(@p_nro_selo_electronico) = 0
		BEGIN
			SET @msg = 'Erro no formato do Selo. Não é um número ou tem caracteres inválidos: ' + @p_nro_selo_electronico
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '19'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
		END 

	    -- Busca a cia aérea
	    SELECT @p_cd_cia_aerea 	= LTRIM(RTRIM(cd_cia_aerea))
		FROM GEACutcx..cor_cia_aerea_u (NOLOCK INDEX = ix_cd_cia_num)
		WHERE cd_cia_num = @p_prefixo_cia_aerea 
          AND inactive_ind = 0
			
	    -- VALIDA A CIA AÉREA
	    IF ( @p_cd_cia_aerea = '' OR @p_cd_cia_aerea IS NULL OR @@ROWCOUNT = 0)
	    BEGIN
			SET @msg = 'Código da companhia aérea inválido. Favor verificar: ' + @p_prefixo_cia_aerea  
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '9'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
	    END
		
		IF @p_prefixo_cia_aerea = '04' AND LEFT(@p_voo_rea,1) <> '9' 
		BEGIN
			IF LEFT(@p_voo_rea,2) <> ('67')
			BEGIN
				SET @msg = 'Número de Vôo não pode ser operado pela CIA Aérea.(' + @p_prefixo_cia_aerea + ')' + '(' + @p_voo_rea + ')'
				PRINT @msg
				SELECT @int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '20'
	            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				
				INSERT INTO JM_TABLE_ANALISIS_WEBJET VALUES (@p_nro_selo_electronico, @p_voo_rea, @p_arquivo, @p_date_process)				
				GOTO NEXT
			END
		END
		
	    -- VALIDA A NATUREZA
	    IF @p_tp_natureza = '0'
		BEGIN
			SET  @p_tp_natureza = 'D'
		END
		ELSE
		BEGIN
			IF @p_tp_natureza = '1'
			BEGIN
				SET  @p_tp_natureza = 'I'
			END
			ELSE
		    BEGIN
				SET @msg = 'A natureza não é válida, favor verificar: ' + @p_tp_natureza
				PRINT @msg
				SELECT @int_insert_discrepancia 	= 1 
					,@w_discrepancia				= '10'
					,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				GOTO NEXT
			END
    	END
		
		IF @p_tp_natureza = 'I' AND @p_cd_cia_aerea = 'GLO'
		BEGIN
			SET @msg = 'Companhia GLO não pode operar com o Selos Eletrônicos Internacionais. Favor verificar: ' + @p_cd_aerop + ' - ' + ltrim(rtrim(@p_cd_terminal)) + ' - ' + @p_dt_mov_str + ' - ' + @p_nro_selo_electronico
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '17'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT		
		END
		
	    -- VALIDA A DATA DO MOVIMENTO
	    IF ISDATE(@p_dt_mov_str) = 0
	    BEGIN
			SELECT @msg = 'A data não é válida, favor Verificar: ' + @p_dt_mov_str
				,@int_insert_discrepancia 		= 1 
				,@w_discrepancia				= '4'
				,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			PRINT @msg
			GOTO NEXT
	    END
	    ELSE
	    BEGIN
			SELECT @p_dt_mov = @p_dt_mov_str
	    END 
/*
		-- VERIFICAR SE O RPAX DO VÔO JÁ EXISTE
		IF NOT EXISTS (SELECT 1 FROM rpax_emb_voo_u (NOLOCK)
			WHERE cd_aerop 							= @p_cd_aerop
				AND cd_terminal 					= @p_cd_terminal
				AND cd_cia_aerea					= @p_cd_cia_aerea
				AND CONVERT(VARCHAR,dt_voo,112)		= CONVERT(VARCHAR,@p_dt_mov,112)
				AND RIGHT(LTRIM(RTRIM(nro_voo)),4)	= @p_voo_rea)
		BEGIN
			SET @msg = 'Não existe informação do RPAX para este vôo.' + @p_cd_aerop + ' - ' + ltrim(rtrim(@p_cd_terminal)) + ' - ' + @p_dt_mov_str + ' - ' + @p_cd_cia_aerea + ' - ' + @p_voo_rea
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '18'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT		
		END
		
		-- FIM VERIFICAR SE O RPAX DO VÔO JÁ EXISTE
*/
		/* VALIDAR SI O SELO E VALIDO PARA O AEROPORTO */
		IF @p_cd_cia_aerea = 'GLO'
		BEGIN
			IF @p_cd_aerop IN ('SBAA','SBAG','SBAM','SBAQ','SBAS','SBAT','SBAU','SBAX','SBBG','SBBI','SBBQ','SBBT','SBBU','SBBW','SBCA','SBCB','SBCH','SBCI','SBCJ','SBCM','SBCP','SBCR','SBCV','SBCX','SBCZ','SBDN','SBEK','SBFC','SBFN','SBGM','SBGS','SBGU','SBGV','SBGW','SBHI','SBHT','SBIC','SBIH','SBIL','SBIP','SBIZ','SBJC','SBJF','SBJR','SBKG','SBLE','SBLJ','SBLN','SBLP','SBMA','SBMD','SBME','SBMG','SBMH','SBMK','SBML','SBMQ','SBMS','SBMT','SBMY','SBNM','SBOI','SBPB','SBPC','SBPF','SBPJ','SBPK','SBPL','SBPM','SBPN','SBPP','SBPR','SBPS','SBPV','SBQV','SBRB','SBRG','SBRP','SBSJ','SBSM','SBSN','SBSR','SBTB','SBTD','SBTF','SBTK','SBTL','SBTT','SBTU','SBUA','SBUF','SBUG','SBUP','SBUR','SBVG','SBVH','SBXX','SDAG','SDBK','SDBY','SDCO','SDDN','SDDR','SDIM','SDJD','SDNO','SDOU','SDPN','SDPW','SDRR','SDRS','SDSK','SDTP','SDUB','SDUN','SDVG','SEDE','SIMK','SNAX','SNBR','SNCH','SNDC','SNDM','SNDV','SNED','SNFX','SNGA','SNGI','SNGV','SNHA','SNIC','SNJD','SNJK','SNKW','SNLO','SNRD','SNTO','SNVB','SNVS','SNZA','SSAL','SSAP','SSBL','SSCK','SSCN','SSCP','SSCR','SSCT','SSDP','SSEZ','SSFB','SSGB','SSGY','SSJA','SSJE','SSJG','SSKG','SSKM','SSKZ','SSLO','SSLT','SSMD','SSMX','SSMY','SSNO','SSOE','SSOG','SSOS','SSPB','SSPG','SSPI','SSPS','SSSS','SSUM','SSUV','SSUW','SSVI','SSVN','SSXD','SSYA','SSZR','SSZW','SWGI','SWGN','SWJI','SWKN','SWKO','SWPI','SWQI','SWUZ','S_BR','S_EG','XXXX')
			BEGIN
				SELECT @msg = 'SELO ELETRONICO DA GOL DE AEROPORTO INVALIDO, GOL NAO PODE PROCESAR SELOS ELETRÔNICOS NESTE AEROPORTO (' + UPPER(RIGHT(@p_cd_aerop, 8)) + ').' 
					,@int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '16'
					,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				GOTO NEXT
			END

			IF @p_cd_aerop = 'SBJP'
			BEGIN 
				IF CONVERT(VARCHAR(8),@p_dt_mov,112) < '20050201'
				BEGIN
					SELECT @msg 						= 'GOL SO PODE PROCESAR SELOS ELETRONICOS EM SBJP A PARTIR DO 01/02/2005.'
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '16'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					GOTO NEXT
				END
			END
			ELSE
			BEGIN
				IF CONVERT(VARCHAR(8),@p_dt_mov,112) < '20050216'
				BEGIN
					SELECT @msg 						= 'GOL SO PODE PROCESAR SELOS ELETRONICOS A PARTIR DO 16/02/2005.'
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '16'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					GOTO NEXT
				END			
			END
		END
		
	    -- Busca o item associado ao aeroporto
	    SELECT @p_item_fat = LTRIM(RTRIM(item_id))
	    FROM GEACutcx..cor_item_pax_u (NOLOCK INDEX = P_cor_item_pax_u)
	    WHERE cd_aerop 			= @p_cd_aerop 
			AND cd_terminal 	= @p_cd_terminal 
			AND tp_natureza 	= @p_tp_natureza 
			AND dt_vigencia 	= ( SELECT MAX (dt_vigencia) FROM GEACutcx..cor_item_pax_u  (NOLOCK INDEX  = P_cor_item_pax_u)
								WHERE cd_aerop 			= @p_cd_aerop 	
								AND cd_terminal 		= @p_cd_terminal
								AND tp_natureza 		= @p_tp_natureza
								AND dt_vigencia 		<=  @p_dt_mov )

	    IF ( @@ROWCOUNT = 0 ) OR ( @p_item_fat IS NULL ) OR (@p_item_fat = '')
	    BEGIN
			SET @msg = 'Não encontrou item para faturar para: ' + @p_cd_aerop + ' - ' + @p_cd_terminal + ' - ' + @p_tp_natureza
			PRINT @msg
			SELECT @int_insert_discrepancia 	= 1 
				,@w_discrepancia				= '6'
				,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
	    END
			
		-- VERIFICA SE O SELO JÁ EXISTE
		SELECT @w_selo_status_aux		= ISNULL(selo_status, NULL) 
			,@w_tp_coletor_aux			= ISNULL(tp_coletor, NULL)
			,@w_dt_confirma_aux			= dt_confirma
			,@p_dt_temp 				= DATEADD (hh, 6, dt_mov )
			,@w_aerop_utilizacao		= cd_aerop_utilizacao
			,@w_billing_line_id			= billing_line_id 
		FROM  GEACupax..pax_selo_electronico_u (NOLOCK INDEX = P_pax_selo_electronico_u)
		WHERE cd_aerop							= @p_cd_aerop
			AND cd_terminal			 			= @p_cd_terminal
			AND dt_mov							= @p_dt_mov_str
			AND nro_selo_electronico 			= @p_nro_selo_electronico

		SELECT @ROWCOUNT = @@ROWCOUNT
		IF @ROWCOUNT > 0
		BEGIN
			IF @ROWCOUNT = 1
			BEGIN 
                IF @w_tp_coletor_aux = '01' /* YA FUE DESCARGADO DE ALGUN COLETOR VA PARA LEITURA DUPLICADA*/
                BEGIN
        			SET @msg = ' Leitura Duplicada: ' + @p_cd_aerop + ' - ' + LTRIM(RTRIM(@p_cd_terminal)) + ' - ' + @p_dt_mov_str + ' - ' + @p_nro_selo_electronico
        			PRINT @msg
                    INSERT INTO GEACupax..pax_selo_elec_dup_u (
                        cd_aerop
                        ,cd_terminal
                        ,dt_mov
                        ,nro_selo_electronico
                        ,hh_mov
                        ,tp_natureza
                        ,selo_status
                        ,cd_motivo
                        ,tp_fat
                        ,cd_cia_aerea
                        ,tp_unid
                        ,dt_confirma
                        ,cd_aerop_utilizacao
                        ,cd_terminal_utilizacao
                        ,tp_coletor
                        ,item_fat
                        ,billing_line_id
                        ,billing_int_date
                        ,billing_int_type
                        ,billing_user_1
                        ,voo_rea
                        ,dt_voo_rea
                        ,hh_voo_rea
                        ,date_created
                        ,user_id_created
                        ,date_changed
                        ,user_id_changed
                        ,inactive_ind
                        ,active_date
                        ,chgstamp) 
                    VALUES (
                        @p_cd_aerop
                        ,@p_cd_terminal
                        ,@p_dt_mov
                        ,@p_nro_selo_electronico
                        ,@p_hh_mm
                        ,@p_tp_natureza
                        ,'2'   			-- @p_selo_status
                        ,' '			-- @p_cd_motivo
                        ,'F'			-- @p_tp_fat
                        ,@p_cd_cia_aerea                        
                        ,'A'			-- @p_tp_unid
                        ,'19000101'		-- @p_dt_confirma
                        ,@p_cd_aerop	-- @p_cd_aerop_utilizacao
                        ,@p_cd_terminal	-- @p_cd_terminal_utilizacao
                        ,@p_tp_coletor
                        ,@p_item_fat
                        ,0					-- @p_billing_line_id
                        ,'19000101'			-- @p_billing_int_date
                        ,' '				-- @p_billing_int_type
                        ,' ' 				-- @p_billing_user_1
                        ,@p_voo_rea
                        ,@p_dt_voo_rea
                        ,@p_hh_voo_rea
                        ,@p_date_process                                           
                        ,@p_user_process                
                        ,'19000101'			-- @p_date_changed
                        ,' ' 				-- @p_user_id_changed
                        ,0					-- @p_inactive_ind
                        ,@p_date_process	-- @p_active_date
                        ,0)

					SET @nr_total_selos_validos = @nr_total_selos_validos + 1  

                END
                ELSE
                BEGIN			
                    IF  @w_selo_status_aux = '2' 
    				BEGIN
                        
    					IF @w_dt_confirma_aux <> '19000101' AND @w_aerop_utilizacao <> @p_cd_aerop
    					BEGIN                     
    						SET @msg = 'Selo já confirmado em outro aeroporto: ' + @p_nro_selo_electronico
    						PRINT @msg
    						SELECT @int_insert_discrepancia 	= 1 
    							,@w_discrepancia				= '7'
    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
    						GOTO NEXT
    					END	
    					ELSE
    					BEGIN
    						UPDATE GEACupax..pax_selo_electronico_u
    						SET tp_coletor 				= CASE WHEN tp_coletor = '9' THEN '01' ELSE tp_coletor END
    							,cd_aerop_utilizacao 	= @p_cd_aerop	 
    							,cd_terminal_utilizacao	= @p_cd_terminal 
    							,item_fat 				= CASE WHEN billing_line_id = 0 THEN @p_item_fat ELSE item_fat END 
                                ,hh_mov                 = @p_hh_mm
    							,date_changed			= @p_date_process
    							,user_id_changed		= @p_user_process
    							,chgstamp				= chgstamp + 1
    						WHERE cd_aerop					    = @p_cd_aerop
    							and cd_terminal				    = @p_cd_terminal
    							and convert(varchar,dt_mov,112) = @p_dt_mov
    							and nro_selo_electronico	    = @p_nro_selo_electronico
    						
    						SET @nr_total_selos_validos = @nr_total_selos_validos + 1  
    						GOTO NEXT
    					END
    				END
    				
    				IF @w_selo_status_aux = '4' 
    				BEGIN
    					SET @msg = 'Selo já cancelado: ' + @p_nro_selo_electronico
    					PRINT @msg
    					SELECT @int_insert_discrepancia 	= 1 
    						,@w_discrepancia				= '8'
    						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
    					GOTO NEXT
    				END
    				
    				IF @w_selo_status_aux = '5' 
    				BEGIN
    					IF @w_tp_coletor_aux = '01' 
    					BEGIN
    						SET @msg = 'Selo já utilizado: ' + @p_nro_selo_electronico
    						PRINT @msg
    						SELECT @int_insert_discrepancia 	= 1 
    							,@w_discrepancia				= '1'
    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
    						GOTO NEXT
    					END
    					ELSE
    					BEGIN
    						UPDATE GEACupax..pax_selo_electronico_u
    						SET tp_coletor 				= '01'
    							,cd_aerop_utilizacao 	= @p_cd_aerop
    							,cd_terminal_utilizacao	= @p_cd_terminal
    							,item_fat 				= CASE WHEN billing_line_id = 0 THEN @p_item_fat ELSE item_fat END 
                                ,hh_mov                 = @p_hh_mm    
    							,date_changed			= @p_date_process
    							,user_id_changed		= @p_user_process
    							,chgstamp				= chgstamp + 1
    						WHERE cd_aerop						= @p_cd_aerop
    							and cd_terminal					= @p_cd_terminal
    							and convert(varchar,dt_mov,112)	= @p_dt_mov
    							and nro_selo_electronico		= @p_nro_selo_electronico
    											 
    						SET @nr_total_selos_validos = @nr_total_selos_validos + 1      						
    						GOTO NEXT
    					END
    				END
                END
			END
			ELSE
			BEGIN
				IF @ROWCOUNT > 1
				BEGIN
					PRINT ' DOS SELOS EN EL MISMO DIA'					
					GOTO NEXT
				END
			END
			GOTO NEXT
		END

		NUEVO:

		INSERT INTO GEACupax..pax_selo_electronico_u (
				cd_aerop
				,cd_terminal
				,dt_mov
				,nro_selo_electronico
				,tp_natureza
				,selo_status
				,cd_motivo
				,tp_fat
				,cd_cia_aerea
				,tp_unid
				,dt_confirma
				,cd_aerop_utilizacao
				,cd_terminal_utilizacao
				,tp_coletor
				,item_fat
				,billing_line_id
				,billing_int_date
				,billing_int_type
				,billing_user_1
				,voo_rea
				,dt_voo_rea
				,hh_voo_rea
                ,hh_mov
				,date_created
				,user_id_created
				,date_changed
				,user_id_changed
				,inactive_ind
				,active_date
				,chgstamp) 
			VALUES (
				 @p_cd_aerop
				,@p_cd_terminal
				,@p_dt_mov
				,@p_nro_selo_electronico
				,@p_tp_natureza
				,'2'   			-- @p_selo_status
				,' '			-- @p_cd_motivo
				,'F'			-- @p_tp_fat
				,@p_cd_cia_aerea
				,'A'			-- @p_tp_unid
				,'19000101'		-- @p_dt_confirma
				,@p_cd_aerop	-- @p_cd_aerop_utilizacao
				,@p_cd_terminal	-- @p_cd_terminal_utilizacao
				,@p_tp_coletor
				,@p_item_fat
				,0					-- @p_billing_line_id
				,'19000101'			-- @p_billing_int_date
				,' '				-- @p_billing_int_type
				,' ' 				-- @p_billing_user_1
				,@p_voo_rea
				,@p_dt_voo_rea
				,@p_hh_voo_rea
                ,@p_hh_mm
				,@p_date_process                                           
				,@p_user_process                
				,'19000101'			-- @p_date_changed
				,' ' 				-- @p_user_id_changed
				,0					-- @p_inactive_ind
				,@p_date_process	-- @p_active_date
				,0)

		SET @nr_total_selos_validos = @nr_total_selos_validos + 1  

        NEXT:
		IF @int_insert_discrepancia = 1
		BEGIN
			EXEC psp_insert_disc_selo_elec 
				@p_cd_aerop
				,@p_cd_terminal
				,@p_dt_mov
				,@p_selo_status
				,@p_nro_selo_electronico
				,'E'
				,@p_cd_cia_aerea
				,@w_discrepancia
				,' '
				,@p_arquivo
				,@p_tp_coletor
				,@p_date_process
				,@p_user_process
				,'19000101'
				,' '
				,'0'
				,@p_date_process
				,0

			SET @int_insert_discrepancia = 0

		END

        FETCH NEXT FROM selos_cur
        INTO @p_linha
		/* SET @nr_linea = @nr_linea + 1  
		print @nr_linea */


    END

    CLOSE selos_cur
    DEALLOCATE selos_cur

    UPDATE GEACupax..pax_baixa_selo_u 
    SET status_arq   		= '1'
		,qtd_selos   		= @nr_total_selos_validos
		,qtd_lineas_arq		= @nr_total_lineas_arq
		,qtd_discrepancias	= @nr_total_selos_discrep
		,qtd_lineas_erro	= @nr_total_selos_invalidos
		,qtd_duplicados		= @nr_qtd_duplicados
		,date_changed   	= @p_date_process
		,user_id_changed  	= @p_user_process
    WHERE  cd_aerop 		= @p_cd_aerop
        AND cd_terminal 	= @p_cd_terminal
        AND dt_mov  		= @p_dt_mov_arq
        AND hh_mm  			= @p_hh_mm_arq
        AND arquivo			= @p_arquivo
        
    SEGUIR:

    IF @int_error = 0
    BEGIN
       COMMIT TRANSACTION 
       SELECT @msg 	= 'FIM PROCESO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(10) + CHAR(13)
       SELECT @copy 	= 'copy ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @p_ruta + '\Selo_procesado'
       set @sql = 'master..xp_cmdshell ''' + @copy + ''''
       exec (@sql)
       SELECT @copy 	= 'DEL ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
       set @sql = 'master..xp_cmdshell ''' + @copy + ''''
       exec (@sql)
    END
    ELSE
    BEGIN
		ROLLBACK TRANSACTION
		IF @error_bcp				= 1
			SELECT @v_status_arq	= '3'
		ELSE
			SELECT @v_status_arq	= '2'

		UPDATE GEACupax..pax_baixa_selo_u 
        SET status_arq   			= @v_status_arq
			,qtd_selos   			= @nr_total_selos_validos
			,qtd_lineas_arq			= @nr_total_lineas_arq
			,qtd_discrepancias		= @nr_total_selos_discrep
			,qtd_lineas_erro		= @nr_total_selos_invalidos
			,date_changed   		= @p_date_process
			,user_id_changed  		= @p_user_process
       WHERE cd_aerop  				= @p_cd_aerop
		AND cd_terminal  			= @p_cd_terminal
		AND dt_mov  				= @p_dt_mov_arq
		AND hh_mm  					= @p_hh_mm_arq
		AND arquivo					= @p_arquivo
	
		IF @error_bcp				= 1
		BEGIN
			SELECT @msg 	= 'ARQUIVO COM ERROR DE CARGA DE TABLA TEMPORAL (BCP): ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + 'Verificar pasta "Selo_erroes_BCP"'
	             ,@copy 	= 'copy ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @p_ruta + '\Selo_erroes_BCP'
		END
		ELSE
		BEGIN
			SELECT @msg 	= 'ARQUIVO COM ERROR: ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + 'Verificar pasta "Selo_erroes"'
	             ,@copy 	= 'copy ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @p_ruta + '\Selo_erroes'
		END

       set @sql = 'master..xp_cmdshell ''' + @copy + ''''
       exec (@sql)

		SELECT @copy 	= 'DEL ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
       set @sql = 'master..xp_cmdshell ''' + @copy + ''''
       exec (@sql)

    END
    
    SET @msg =  CHAR(10)+ CHAR(13)
    PRINT @msg 

	PROXIMO_ARQUIVO:

    --  LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
    FETCH  NEXT FROM  cur_arq
    INTO  @p_cd_aerop 
		,@p_cd_terminal 
		,@p_dt_mov_arq       
		,@p_hh_mm_arq   
		,@p_tp_selo
		,@p_selo_status   
		,@p_arquivo        
		,@p_cd_motivo     
		,@p_status_arq   
		,@p_tp_coletor

END
CLOSE   cur_arq
DEALLOCATE cur_arq

-- ELIMINAR TABLAS TEMPORALES
DROP TABLE #TEMP
DROP TABLE #TEMP_2 

SET NOCOUNT OFF
RETURN 0

























GO

/****** Object:  StoredProcedure [dbo].[psp_ins_arq_selo_elec_14]    Script Date: 01/05/2011 18:05:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.gsp_valida_ins_selos_arq_nuevo    Script Date: 6/11/2004 19:25:23 ******/
CREATE PROCEDURE  [dbo].[psp_ins_arq_selo_elec_14]
		(@pv_arquivo	varchar(255) = '%')	
AS

/*
GEAC 
jose Muñoz
Data: 23/11/2004
Descrição:
	Rutina para cargar los archivos de Selos electronicos

Discrepancias

1         	Selo eletrônico já utilizado
2         	Selo eletrônico já faturado
3         	Status de selo inválido
6         	Não encontrou item para faturar
7         	Selo eletrônico já confirmado
8         	Selo eletrônico já cancelado
9         	Prefixo de cia aérea inválido
10        	Natureza do vôo inválida
11        	Selo eletrônico já existente
12        	Selo eletrônico já transferido
13        	Utilização passa das 6 horas permitidas
14        	Linha do arquivo inválida
15        	Cia aérea inválida
16        	Selo eletrônico não utilizável nesta data
17        	Selo eletrônico internacional não utilizável
19        	Número de selo inválido
20			Número de Vôo não pode ser operado pela CIA Aérea.
*/



-- DECLARA VARIÁVEIS 
DECLARE	 @p_cd_aerop			CHAR(4)
    ,@p_cd_terminal				CHAR(10)
    ,@p_dt_mov					DATETIME
    ,@p_nro_selo_electronico	CHAR(14)
    ,@p_tp_natureza				CHAR(1)
    ,@p_selo_status				CHAR(1)
    ,@p_cd_motivo				CHAR(2)
    ,@p_tp_fat					CHAR(1)
    ,@p_cd_cia_aerea			CHAR(3)
    ,@p_tp_unid					CHAR(1)
    ,@p_dt_confirma				DATETIME
    ,@p_cd_aerop_utilizacao		CHAR(4)
    ,@p_cd_terminal_utilizacao	CHAR(10)
    ,@p_tp_coletor				CHAR(16)
    ,@p_item_fat				CHAR(26)
    ,@p_billing_line_id			INT
    ,@p_billing_int_date		DATETIME
    ,@p_billing_int_type		CHAR(1)
    ,@p_billing_user_1			CHAR(10)
    ,@p_voo_rea					CHAR(4)
    ,@p_dt_voo_rea				DATETIME
    ,@p_hh_voo_rea				CHAR(6)
    ,@p_date_created			DATETIME
    ,@p_user_id_created			CHAR(30)
    ,@p_date_changed			DATETIME
    ,@p_user_id_changed			CHAR(30)
    ,@p_inactive_ind			CHAR(1)
    ,@p_active_date				DATETIME
    ,@p_chgstamp				SMALLINT
    
    ,@fl_habilitado 			CHAR(1)
    ,@msg          				VARCHAR (200)
    ,@p_execute       			VARCHAR(255)
    ,@copy    					VARCHAR (255)
    ,@p_date_process			DATETIME
    ,@p_user_process 			CHAR(30)
    ,@p_dt_mov_arq				DATETIME
    ,@p_hh_mm_arq 				CHAR(6)
    ,@p_tp_selo					CHAR(1)
    ,@p_arquivo       			VARCHAR(255)
    ,@p_status_arq				CHAR(1)
    ,@int_error             	INTEGER
    ,@p_linha   				VARCHAR(255)
    ,@nr_total_lineas_err    	REAL
    ,@nr_total_lineas_arq    	REAL
    ,@nr_qtd_duplicados			REAL
    ,@nr_total_selos_validos    REAL
    ,@nr_total_selos_discrep	REAL
    ,@nr_total_selos_invalidos	REAL
    ,@nr_qtd_discrepancias_tra 	REAL
    ,@error_bcp					SMALLINT
    ,@linea     				VARCHAR (255)
    ,@p_dt_mov_str				VARCHAR(8)
    ,@p_hh_mm   				CHAR(6)
    ,@int_insert_discrepancia	SMALLINT
    ,@w_discrepancia			CHAR(10)
    ,@p_prefixo_cia_aerea		CHAR(2)
    ,@w_selo_status_aux			CHAR(1)
    ,@w_tp_coletor_aux			CHAR(2)
    ,@w_dt_confirma_aux			DATETIME
    ,@p_dt_temp 				DATETIME
    ,@w_aerop_utilizacao		CHAR(4)
    ,@w_billing_line_id			INT
    ,@v_status_arq				CHAR(1)
    ,@p_ruta					VARCHAR(255)
    ,@v_count_arquivos			SMALLINT
    ,@ROWCOUNT					SMALLINT
	,@v_quantidade				VARCHAR(10)
	,@cont 						INT 
	,@v_mes_dia					CHAR(4)

SET NOCOUNT ON

/*
IF SUSER_SNAME() <> 'DBS'
BEGIN
        SELECT @msg = 'Processo desahilitado TEMPORALMENTE.'
        PRINT @msg
		SET NOCOUNT OFF
        RETURN 3
END
*/

-- VERIFICA SE PROCESSO ESTÁ HABILITADO

SELECT @fl_habilitado = ISNULL(descp,'0') 
FROM GEACCOMMON..dropdowndw_u (NOLOCK INDEX = PK_dropdowndw_u)
WHERE  tbl_code = 'CSEL'
AND code = '1'
IF @fl_habilitado = '0' OR @fl_habilitado IS NULL
BEGIN
	SET @msg = 'Processo desahilitado, Verificar tabelas genericas [CSEL]. codigo = 1, Descrição = 0.'
	PRINT @msg
	RETURN 3
END
-- FIM VERIFICA SE PROCESSO ESTÁ HABILITADO


-- VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO

EXEC psp_verificar_proceso 'psp_ins_arq_selo_elec_14', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_ins_arq_selo_elec', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de criar as requisições se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procura_arq_conf_selos_e', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_valida_ins_selos_conf_ii', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de Confirmação de selos se está executando neste estes momento e estos dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de reprocessamento das discrepâncias se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END
-- FIM VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO

EXEC psp_verificar_proceso 'psp_ins_baixa_selos', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de baixa de selos se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END


-- INICIA ALGUMAS VARIÁVEIS
SELECT @p_date_process      	= GETDATE()
	,@p_user_process 			= SUSER_SNAME()
	,@p_dt_confirma   			= CONVERT ( CHAR (10), GETDATE(), 101 )
	,@p_ruta 					= '\\S-SEAN218\Drivef'

-- COPIA ARQUIVOS QUE CAÍRAM NA PASTA "Selo_erroes_BCP" PARA SEREM REPROCESSADOS
SET @p_execute = 'master..xp_cmdshell ''Copy ' + @p_ruta + '\selo_erroes_bcp\*.*  ' + @p_ruta + '\selo'''
EXECUTE  (@p_execute)

SET @p_execute = 'master..xp_cmdshell ''del ' + @p_ruta + '\selo_erroes_bcp\*.*  /Q'''
EXECUTE  (@p_execute)


-- CRIA TABELA TEMPORÁRIA PARA GUARDAR OS ARQUIVOS ATUAIS DA PASTA "Selo"
CREATE TABLE #TEMP (LINEA VARCHAR(255) NULL)
CREATE TABLE #TEMP_2 (SELO CHAR(20), CANTIDAD INTEGER)

SET @p_execute = 'master..xp_cmdshell ''dir ' + @p_ruta + '\selo\*.* /B'''
INSERT INTO #TEMP 
EXECUTE  (@p_execute)

DELETE FROM #TEMP WHERE LINEA IS NULL

SELECT @v_count_arquivos = COUNT(1) FROM #TEMP (NOLOCK)

IF @v_count_arquivos = 0
BEGIN
	SET @msg = 'NAO SE PODEM LEER LOS ARQUIVOS DE LA PASTA ' + @p_ruta + '\selo\' + CHAR(13) + CHAR(10)
	PRINT @msg 
	PRINT ' ' + CHAR(13) + CHAR(10)
	RETURN 5
END

SET @msg = 'TOTAL DE ARQUIVOS DE LA PASTA: ' + @p_ruta + '\selo\ = '  + LTRIM(RTRIM(STR(@v_count_arquivos))) + CHAR(13) + CHAR(10)
PRINT @msg 
PRINT ' ' + CHAR(13) + CHAR(10)

-- VERIFICA SE EXISTE A TABELA "pax_selos_elec_table_1" ONDE FICARÃO TEMPORARIAMENTE OS SELOS DE CADA ARQUIVO A SER PROCESSADO
IF NOT EXISTS (SELECT 1 FROM sysobjects WHERE name = 'pax_selos_elec_table_1')
BEGIN
    SET @msg = 'Não é possível realizar o processo porque não existe a tabela de armazenamento temporário dos dados a ser processados "pax_selos_elec_table_1". '
    PRINT @msg
    RETURN 3
	
/*  CRIAR A TABELA "pax_selos_elec_table_1" CASO NÃO EXISTA
    drop table pax_selos_elec_table_1
	CREATE TABLE pax_selos_elec_table_1 (linha VARCHAR(255) null)
	GRANT ALL ON pax_selos_elec_table_1 TO geaccarga
*/
END

-- DECLARA CURSOR DE ARQUIVOS A PROCESSAR
DECLARE cur_arq INSENSITIVE CURSOR FOR
SELECT 
	cd_aerop 
	,cd_terminal 
	,dt_mov 
	,hh_mm 
	,tp_selo
	,selo_status 
	,arquivo 
	,cd_motivo 
	,status_arq 
	,tp_coletor
FROM 
	GEACupax..pax_baixa_selo_u   (NOLOCK index = IX_STATUS_ARQ)
WHERE status_arq 	= '0'
  AND tp_selo		= 'T'
  AND arquivo 		like @pv_arquivo
ORDER BY SUBSTRING(arquivo,9,13)

-- ABRE CURSOR DE ARQUIVOS A PROCESSAR
OPEN cur_arq 

-- PRIMEIRA LEITURA DO  CURSOR DE ARQUIVOS A PROCESSAR
FETCH  NEXT FROM  cur_arq
INTO @p_cd_aerop 
	,@p_cd_terminal 
	,@p_dt_mov_arq       
	,@p_hh_mm_arq   
	,@p_tp_selo
	,@p_selo_status   
	,@p_arquivo        
	,@p_cd_motivo     
	,@p_status_arq   
	,@p_tp_coletor


SET @v_quantidade = LTRIM(RTRIM(@@CURSOR_ROWS))
SET @msg = 'Quantidade de Arquivos a processar: ' + @v_quantidade + CHAR(10) + CHAR(13)
PRINT @msg


WHILE @@FETCH_STATUS = 0 -- LÊ ARQUIVO A SER PROCESSADO ENQUANTO NÃO FOR FIM
BEGIN
	-- LIMPA TABELA QUE GUARDARÁ TEMPORARIAMENTE OS SELOS DO ARQUIVO QUE ESTÁ SENDO PROCESSADO
	DELETE pax_selos_elec_table_1
	DELETE #TEMP_2 

    SELECT 	@int_error 	= 0
    		,@p_execute = 'master..xp_cmdshell ''bcp GEACupax..pax_selos_elec_table_1 in ' + @p_ruta + '\selo\' + ltrim(rtrim(@p_arquivo)) + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''

    EXECUTE  (@p_execute)
    IF @@ERROR <> 0
    BEGIN
		SELECT 	@int_error 			= 1
			,@nr_total_lineas_err	= 1
			,@error_bcp				= 1
		GOTO SEGUIR
    END

    BEGIN TRANSACTION 
    SET @msg = ' INICIO PROCESSO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + CHAR(10)
    PRINT @msg 
    PRINT ' ' 

    SELECT 	@nr_total_lineas_arq	= 0
		,@nr_total_selos_validos	= 0
		,@nr_total_selos_invalidos	= 0
		,@nr_total_lineas_err		= 0
		,@nr_total_selos_discrep	= 0
		,@error_bcp					= 0

    -- VERIFICA SE O ARQUIVO ATUAL EXISTE NA TABELA QUE GUARDOU OS ARQUIVOS DAS PASTAS Selo + Selo_erroes
    SELECT @linea = LINEA FROM #TEMP (NOLOCK) WHERE LTRIM(RTRIM(LINEA)) = LTRIM(RTRIM(@p_arquivo))
    IF @@ROWCOUNT = 0
    BEGIN
		SELECT @int_error 			= 1
			,@nr_total_lineas_err	= @nr_total_lineas_err + 1
			,@msg 					= 'NÃO ENCONTRO O ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + CHAR(10)
	    PRINT @msg 
	    PRINT ' ' + CHAR(13) + CHAR(10)
		GOTO SEGUIR
    END

    -- DECLARACION DE CURSOR DE SELOS A PROCESAR
    DECLARE selos_cur INSENSITIVE CURSOR FOR
    SELECT linha  
    FROM pax_selos_elec_table_1 (NOLOCK)
    ORDER BY 1
    
    OPEN selos_cur
    
    FETCH NEXT FROM selos_cur
    INTO @p_linha

	SET @nr_total_lineas_arq = @@CURSOR_ROWS
		
	-- BUSCA QUANTIDADE DE LINHAS DO ARQUIVO
	-- SELECT @nr_total_lineas_arq = COUNT(1) FROM GEACupax..pax_selos_elec_table_1 (NOLOCK)
	IF @nr_total_lineas_arq  = 0
	BEGIN
		SELECT	@int_error 			= 1
		,@nr_total_lineas_err		= 0
		,@nr_total_selos_validos	= 0
		,@nr_total_lineas_arq		= 0
		,@nr_total_selos_discrep	= 0
		,@nr_total_selos_invalidos	= 0
		,@nr_qtd_discrepancias_tra 	= 0
		,@nr_qtd_duplicados			= 0
		,@error_bcp					= 1
	    CLOSE selos_cur
	    DEALLOCATE selos_cur
		GOTO SEGUIR
	END

    SET @msg = ' Cantidad de Lineas de ' + LTRIM(RTRIM(@p_arquivo)) + ' = ' + LTRIM(RTRIM(STR(@nr_total_lineas_arq))) + CHAR(13) + CHAR(10)
    PRINT @msg 
    PRINT ' ' + CHAR(13) + CHAR(10)
/*
0511151719*0021803058
0511151719*00218031117058
*/
	-- BUSCAR CANTIDAD DE LINEAS DUPLICADAS
	INSERT INTO #TEMP_2
	SELECT  SUBSTRING(A.linha, 12,14), COUNT(1) - 1
	FROM GEACupax..pax_selos_elec_table_1 A (NOLOCK INDEX = ix_linha)	WHERE EXISTS (SELECT 1 FROM GEACupax..pax_selos_elec_table_1 B (NOLOCK INDEX = ix_linha)
			WHERE SUBSTRING(B.linha, 12,14) = SUBSTRING(A.linha, 12,14)
				AND LEFT( B.linha, 10) <> LEFT( A.linha, 10))
	GROUP BY SUBSTRING(A.linha, 12,14)
		
	SELECT @nr_qtd_duplicados = ISNULL(SUM(CANTIDAD),0) FROM #TEMP_2 (NOLOCK)
	-- FIM BUSCAR CANTIDAD DE LINEAS DUPLICADAS
	
    
    WHILE @@FETCH_STATUS = 0 -- LÊ SELO A SER PROCESSADO ENQUANTO NÃO FOR FIM
	BEGIN
			
	    -- Busca dados do selo na linha do arquivo
	    SELECT 	@p_nro_selo_electronico		= SUBSTRING (@p_linha, 12, 14)
	    		,@p_tp_natureza 			= SUBSTRING (@p_linha, 12, 1)
	    		,@p_hh_mm 					= SUBSTRING (@p_linha, 7, 4) + '00' 
				,@int_insert_discrepancia 	= 0
				,@p_prefixo_cia_aerea 		= SUBSTRING (@p_linha, 13, 2)
				,@p_voo_rea					= SUBSTRING (@p_linha, 15, 4)
				,@v_mes_dia					= SUBSTRING (@p_linha, 19, 4)
                ,@p_dt_voo_rea			    = CONVERT(VARCHAR(4), YEAR(GETDATE())) + SUBSTRING (@p_linha, 19, 4)

		IF @p_dt_voo_rea > @p_date_process
		BEGIN
			IF @v_mes_dia IN('1231','1230')
				SET @p_dt_voo_rea 				= DATEADD(yyyy, -1, @p_dt_voo_rea)
		END

		IF ISNUMERIC(@p_nro_selo_electronico) = 0
		BEGIN
			SET @msg = 'Erro no formato do Selo. Não é um número ou tem caracteres inválidos: ' + @p_nro_selo_electronico
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '19'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
		END 

	    -- Busca a cia aérea
	    SELECT @p_cd_cia_aerea 	= LTRIM(RTRIM(cd_cia_aerea))
		FROM GEACutcx..cor_cia_aerea_u (NOLOCK INDEX = ix_cd_cia_num)
		WHERE cd_cia_num = @p_prefixo_cia_aerea 
          AND inactive_ind = 0
			
	    -- VALIDA A CIA AÉREA
	    IF ( @p_cd_cia_aerea = '' OR @p_cd_cia_aerea IS NULL OR @@ROWCOUNT = 0)
	    BEGIN
			SET @msg = 'Código da companhia aérea inválido. Favor verificar: ' + @p_prefixo_cia_aerea  
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '9'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
	    END
		
		IF @p_prefixo_cia_aerea = '04' AND LEFT(@p_voo_rea,1) <> '9' 
		BEGIN
			IF LEFT(@p_voo_rea,2) <> ('67')
			BEGIN
				SET @msg = 'Número de Vôo não pode ser operado pela CIA Aérea.(' + @p_prefixo_cia_aerea + ')' + '(' + @p_voo_rea + ')'
				PRINT @msg
				SELECT @int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '20'
	            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				
				INSERT INTO JM_TABLE_ANALISIS_WEBJET VALUES (@p_nro_selo_electronico, @p_voo_rea, @p_arquivo, @p_date_process)				
				GOTO NEXT
			END
		END
		
	    -- VALIDA A NATUREZA
		SELECT @p_tp_natureza = CASE WHEN @p_tp_natureza = '0' THEN 'D'
									 WHEN @p_tp_natureza = '1' THEN 'I'
									ELSE 'X' END
		
	    IF @p_tp_natureza = 'X'
		BEGIN
			SET @msg = 'A natureza não é válida, favor verificar: ' + @p_tp_natureza
			PRINT @msg
			SELECT @int_insert_discrepancia 	= 1 
				,@w_discrepancia				= '10'
				,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
    	END
		
		IF @p_tp_natureza = 'I' AND @p_cd_cia_aerea = 'GLO'
		BEGIN
			SET @msg = 'Companhia GLO não pode operar com o Selos Eletrônicos Internacionais. Favor verificar: ' + @p_cd_aerop + ' - ' + ltrim(rtrim(@p_cd_terminal)) + ' - ' + @p_dt_mov_str + ' - ' + @p_nro_selo_electronico
			PRINT @msg
			SELECT @int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '17'
            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT		
		END
		
	    -- VALIDA A DATA DO MOVIMENTO
	    IF ISDATE(@p_dt_mov_str) = 0
	    BEGIN
			SELECT @msg = 'A data não é válida, favor Verificar: ' + @p_dt_mov_str
				,@int_insert_discrepancia 		= 1 
				,@w_discrepancia				= '4'
				,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			PRINT @msg
			GOTO NEXT
	    END
	    ELSE
	    BEGIN
			SELECT @p_dt_mov = @p_dt_mov_str
	    END 
		
		/* VALIDAR SI O SELO E VALIDO PARA O AEROPORTO */
		IF @p_cd_cia_aerea = 'GLO'
		BEGIN
			IF @p_cd_aerop IN ('SBAA','SBAG','SBAM','SBAQ','SBAS','SBAT','SBAU','SBAX','SBBG','SBBI','SBBQ','SBBT','SBBU','SBBW','SBCA','SBCB','SBCH','SBCI','SBCJ','SBCM','SBCP','SBCR','SBCV','SBCX','SBCZ','SBDN','SBEK','SBFC','SBFN','SBGM','SBGS','SBGU','SBGV','SBGW','SBHI','SBHT','SBIC','SBIH','SBIL','SBIP','SBIZ','SBJC','SBJF','SBJR','SBKG','SBLE','SBLJ','SBLN','SBLP','SBMA','SBMD','SBME','SBMG','SBMH','SBMK','SBML','SBMQ','SBMS','SBMT','SBMY','SBNM','SBOI','SBPB','SBPC','SBPF','SBPJ','SBPK','SBPL','SBPM','SBPN','SBPP','SBPR','SBPS','SBPV','SBQV','SBRB','SBRG','SBRP','SBSJ','SBSM','SBSN','SBSR','SBTB','SBTD','SBTF','SBTK','SBTL','SBTT','SBTU','SBUA','SBUF','SBUG','SBUP','SBUR','SBVG','SBVH','SBXX','SDAG','SDBK','SDBY','SDCO','SDDN','SDDR','SDIM','SDJD','SDNO','SDOU','SDPN','SDPW','SDRR','SDRS','SDSK','SDTP','SDUB','SDUN','SDVG','SEDE','SIMK','SNAX','SNBR','SNCH','SNDC','SNDM','SNDV','SNED','SNFX','SNGA','SNGI','SNGV','SNHA','SNIC','SNJD','SNJK','SNKW','SNLO','SNRD','SNTO','SNVB','SNVS','SNZA','SSAL','SSAP','SSBL','SSCK','SSCN','SSCP','SSCR','SSCT','SSDP','SSEZ','SSFB','SSGB','SSGY','SSJA','SSJE','SSJG','SSKG','SSKM','SSKZ','SSLO','SSLT','SSMD','SSMX','SSMY','SSNO','SSOE','SSOG','SSOS','SSPB','SSPG','SSPI','SSPS','SSSS','SSUM','SSUV','SSUW','SSVI','SSVN','SSXD','SSYA','SSZR','SSZW','SWGI','SWGN','SWJI','SWKN','SWKO','SWPI','SWQI','SWUZ','S_BR','S_EG','XXXX')
			BEGIN
				SELECT @msg = 'SELO ELETRONICO DA GOL DE AEROPORTO INVALIDO, GOL NAO PODE PROCESAR SELOS ELETRÔNICOS NESTE AEROPORTO (' + UPPER(RIGHT(@p_cd_aerop, 8)) + ').' 
					,@int_insert_discrepancia 		= 1 
					,@w_discrepancia				= '16'
					,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
				GOTO NEXT
			END

			IF @p_cd_aerop = 'SBJP'
			BEGIN 
				IF CONVERT(VARCHAR(8),@p_dt_mov,112) < '20050201'
				BEGIN
					SELECT @msg 						= 'GOL SO PODE PROCESAR SELOS ELETRONICOS EM SBJP A PARTIR DO 01/02/2005.'
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '16'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					GOTO NEXT
				END
			END
			ELSE
			BEGIN
				IF CONVERT(VARCHAR(8),@p_dt_mov,112) < '20050216'
				BEGIN
					SELECT @msg 						= 'GOL SO PODE PROCESAR SELOS ELETRONICOS A PARTIR DO 16/02/2005.'
						,@int_insert_discrepancia 		= 1 
						,@w_discrepancia				= '16'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					GOTO NEXT
				END			
			END
		END
		
	    -- Busca o item associado ao aeroporto
	    SELECT @p_item_fat = LTRIM(RTRIM(item_id))
	    FROM GEACutcx..cor_item_pax_u (NOLOCK INDEX = P_cor_item_pax_u)
	    WHERE cd_aerop 			= @p_cd_aerop 
			AND cd_terminal 	= @p_cd_terminal 
			AND tp_natureza 	= @p_tp_natureza 
			AND dt_vigencia 	= ( SELECT MAX (dt_vigencia) FROM GEACutcx..cor_item_pax_u  (NOLOCK INDEX  = P_cor_item_pax_u)
								WHERE cd_aerop 			= @p_cd_aerop 	
								AND cd_terminal 		= @p_cd_terminal
								AND tp_natureza 		= @p_tp_natureza
								AND dt_vigencia 		<=  @p_dt_mov )

	    IF ( @@ROWCOUNT = 0 ) OR ( @p_item_fat IS NULL ) OR (@p_item_fat = '')
	    BEGIN
			SET @msg = 'Não encontrou item para faturar para: ' + @p_cd_aerop + ' - ' + @p_cd_terminal + ' - ' + @p_tp_natureza
			PRINT @msg
			SELECT @int_insert_discrepancia 	= 1 
				,@w_discrepancia				= '6'
				,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
			GOTO NEXT
	    END
			
		-- VERIFICA SE O SELO JÁ EXISTE
		SELECT @w_selo_status_aux		= ISNULL(selo_status, NULL) 
			,@w_tp_coletor_aux			= ISNULL(tp_coletor, NULL)
			,@w_dt_confirma_aux			= dt_confirma
			,@p_dt_temp 				= DATEADD (hh, 6, dt_mov )
			,@w_aerop_utilizacao		= cd_aerop_utilizacao
			,@w_billing_line_id			= billing_line_id 
		FROM  GEACupax..pax_selo_electronico_u (NOLOCK INDEX = P_pax_selo_electronico_u)
		WHERE cd_aerop							= @p_cd_aerop
			AND cd_terminal			 			= @p_cd_terminal
			AND dt_mov							= @p_dt_mov_str
			AND nro_selo_electronico 			= @p_nro_selo_electronico

		SELECT @ROWCOUNT = @@ROWCOUNT
		IF @ROWCOUNT > 0
		BEGIN
			IF @ROWCOUNT = 1
			BEGIN 
                IF @w_tp_coletor_aux = '01' /* YA FUE DESCARGADO DE ALGUN COLETOR VA PARA LEITURA DUPLICADA*/
                BEGIN
        			SET @msg = ' Leitura Duplicada: ' + @p_cd_aerop + ' - ' + LTRIM(RTRIM(@p_cd_terminal)) + ' - ' + @p_dt_mov_str + ' - ' + @p_nro_selo_electronico
    			PRINT @msg
                    INSERT INTO GEACupax..pax_selo_elec_dup_u (
                        cd_aerop
                        ,cd_terminal
                        ,dt_mov
                        ,nro_selo_electronico
                        ,hh_mov
                        ,tp_natureza
                        ,selo_status
                        ,cd_motivo
                        ,tp_fat
                        ,cd_cia_aerea
                        ,tp_unid
                        ,dt_confirma
                        ,cd_aerop_utilizacao
                        ,cd_terminal_utilizacao
                        ,tp_coletor
                        ,item_fat
                        ,billing_line_id
                        ,billing_int_date
                        ,billing_int_type
                        ,billing_user_1
                        ,voo_rea
                        ,dt_voo_rea
                        ,hh_voo_rea
                        ,date_created
                        ,user_id_created
                        ,date_changed
                        ,user_id_changed
                        ,inactive_ind
                        ,active_date
                        ,chgstamp) 
                    VALUES (
                        @p_cd_aerop
                        ,@p_cd_terminal
                        ,@p_dt_mov
                        ,@p_nro_selo_electronico
                        ,@p_hh_mm
                        ,@p_tp_natureza
                        ,'2'   			-- @p_selo_status
                        ,' '			-- @p_cd_motivo
                        ,'F'			-- @p_tp_fat
                        ,@p_cd_cia_aerea                        
                        ,'A'			-- @p_tp_unid
                        ,'19000101'		-- @p_dt_confirma
                        ,@p_cd_aerop	-- @p_cd_aerop_utilizacao
                        ,@p_cd_terminal	-- @p_cd_terminal_utilizacao
                        ,@p_tp_coletor
                        ,@p_item_fat
                        ,0					-- @p_billing_line_id
                        ,'19000101'			-- @p_billing_int_date
                        ,' '				-- @p_billing_int_type
                        ,' ' 				-- @p_billing_user_1
                        ,@p_voo_rea
                        ,@p_dt_voo_rea
                        ,@p_hh_voo_rea
                        ,@p_date_process                                           
                        ,@p_user_process                
                        ,'19000101'			-- @p_date_changed
                        ,' ' 				-- @p_user_id_changed
                        ,0					-- @p_inactive_ind
                        ,@p_date_process	-- @p_active_date
                        ,0)

					SET @nr_total_selos_validos = @nr_total_selos_validos + 1  

                END
                ELSE
                BEGIN			
                    IF  @w_selo_status_aux = '2' 
    				BEGIN
                        
    					IF @w_dt_confirma_aux <> '19000101' AND @w_aerop_utilizacao <> @p_cd_aerop
    					BEGIN                     
    						SET @msg = 'Selo já confirmado em outro aeroporto: ' + @p_nro_selo_electronico
    						PRINT @msg
    						SELECT @int_insert_discrepancia 	= 1 
    							,@w_discrepancia				= '7'
    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
    						GOTO NEXT
    					END	
    					ELSE
    					BEGIN
    						UPDATE GEACupax..pax_selo_electronico_u
    						SET tp_coletor 				= CASE WHEN tp_coletor = '9' THEN '01' ELSE tp_coletor END
    							,cd_aerop_utilizacao 	= @p_cd_aerop	 
    							,cd_terminal_utilizacao	= @p_cd_terminal 
    							,item_fat 				= CASE WHEN billing_line_id = 0 THEN @p_item_fat ELSE item_fat END 
                                ,hh_mov                 = @p_hh_mm
    							,date_changed			= @p_date_process
    							,user_id_changed		= @p_user_process
    							,chgstamp				= chgstamp + 1
    						WHERE cd_aerop					    = @p_cd_aerop
    							and cd_terminal				    = @p_cd_terminal
    							and convert(varchar,dt_mov,112) = @p_dt_mov
    							and nro_selo_electronico	    = @p_nro_selo_electronico
    						
    						SET @nr_total_selos_validos = @nr_total_selos_validos + 1  
    						GOTO NEXT
    					END
    				END
    				
    				IF @w_selo_status_aux = '4' 
    				BEGIN
    					SET @msg = 'Selo já cancelado: ' + @p_nro_selo_electronico
    					PRINT @msg
    					SELECT @int_insert_discrepancia 	= 1 
    						,@w_discrepancia				= '8'
    						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
    					GOTO NEXT
    				END
    				
    				IF @w_selo_status_aux = '5' 
    				BEGIN
    					IF @w_tp_coletor_aux = '01' 
    					BEGIN
    						SET @msg = 'Selo já utilizado: ' + @p_nro_selo_electronico
    						PRINT @msg
    						SELECT @int_insert_discrepancia 	= 1 
    							,@w_discrepancia				= '1'
    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
    						GOTO NEXT
    					END
    					ELSE
    					BEGIN
    						UPDATE GEACupax..pax_selo_electronico_u
    						SET tp_coletor 				= '01'
    							,cd_aerop_utilizacao 	= @p_cd_aerop
    							,cd_terminal_utilizacao	= @p_cd_terminal
    							,item_fat 				= CASE WHEN billing_line_id = 0 THEN @p_item_fat ELSE item_fat END 
                                ,hh_mov                 = @p_hh_mm    
    							,date_changed			= @p_date_process
    							,user_id_changed		= @p_user_process
    							,chgstamp				= chgstamp + 1
    						WHERE cd_aerop						= @p_cd_aerop
    							and cd_terminal					= @p_cd_terminal
    							and convert(varchar,dt_mov,112)	= @p_dt_mov
    							and nro_selo_electronico		= @p_nro_selo_electronico
    											 
    						SET @nr_total_selos_validos = @nr_total_selos_validos + 1      						
    						GOTO NEXT
    					END
    				END
                END
			END
			ELSE
			BEGIN
				IF @ROWCOUNT > 1
				BEGIN
					PRINT ' DOS SELOS EN EL MISMO DIA'					
					GOTO NEXT
				END
			END
			GOTO NEXT
		END

		NUEVO:

		INSERT INTO GEACupax..pax_selo_electronico_u (
				cd_aerop
				,cd_terminal
				,dt_mov
				,nro_selo_electronico
				,tp_natureza
				,selo_status
				,cd_motivo
				,tp_fat
				,cd_cia_aerea
				,tp_unid
				,dt_confirma
				,cd_aerop_utilizacao
				,cd_terminal_utilizacao
				,tp_coletor
				,item_fat
				,billing_line_id
				,billing_int_date
				,billing_int_type
				,billing_user_1
				,voo_rea
				,dt_voo_rea
				,hh_voo_rea
                ,hh_mov
				,date_created
				,user_id_created
				,date_changed
				,user_id_changed
				,inactive_ind
				,active_date
				,chgstamp) 
			VALUES (
				 @p_cd_aerop
				,@p_cd_terminal
				,@p_dt_mov
				,@p_nro_selo_electronico
				,@p_tp_natureza
				,'2'   			-- @p_selo_status
				,' '			-- @p_cd_motivo
				,'F'			-- @p_tp_fat
				,@p_cd_cia_aerea
				,'A'			-- @p_tp_unid
				,'19000101'		-- @p_dt_confirma
				,@p_cd_aerop	-- @p_cd_aerop_utilizacao
				,@p_cd_terminal	-- @p_cd_terminal_utilizacao
				,@p_tp_coletor
				,@p_item_fat
				,0					-- @p_billing_line_id
				,'19000101'			-- @p_billing_int_date
				,' '				-- @p_billing_int_type
				,' ' 				-- @p_billing_user_1
				,@p_voo_rea
				,@p_dt_voo_rea
				,@p_hh_voo_rea
                ,@p_hh_mm
				,@p_date_process                                           
				,@p_user_process                
				,'19000101'			-- @p_date_changed
				,' ' 				-- @p_user_id_changed
				,0					-- @p_inactive_ind
				,@p_date_process	-- @p_active_date
				,0)

		SET @nr_total_selos_validos = @nr_total_selos_validos + 1  

        NEXT:
		IF @int_insert_discrepancia = 1
		BEGIN
			EXEC psp_insert_disc_selo_elec 
				@p_cd_aerop
				,@p_cd_terminal
				,@p_dt_mov
				,@p_selo_status
				,@p_nro_selo_electronico
				,'E'
				,@p_cd_cia_aerea
				,@w_discrepancia
				,' '
				,@p_arquivo
				,@p_tp_coletor
				,@p_date_process
				,@p_user_process
				,'19000101'
				,' '
				,'0'
				,@p_date_process
				,0

			SET @int_insert_discrepancia = 0

		END

        FETCH NEXT FROM selos_cur
        INTO @p_linha
		/* SET @nr_linea = @nr_linea + 1  
		print @nr_linea */


    END

    CLOSE selos_cur
    DEALLOCATE selos_cur

    UPDATE GEACupax..pax_baixa_selo_u 
    SET status_arq   		= '1'
		,qtd_selos   		= @nr_total_selos_validos
		,qtd_lineas_arq		= @nr_total_lineas_arq
		,qtd_discrepancias	= @nr_total_selos_discrep
		,qtd_lineas_erro	= @nr_total_selos_invalidos
		,qtd_duplicados		= @nr_qtd_duplicados
		,date_changed   	= @p_date_process
		,user_id_changed  	= @p_user_process
    WHERE  cd_aerop 		= @p_cd_aerop
        AND cd_terminal 	= @p_cd_terminal
        AND dt_mov  		= @p_dt_mov_arq
        AND hh_mm  			= @p_hh_mm_arq
        AND arquivo			= @p_arquivo
        
    SEGUIR:

    IF @int_error = 0
    BEGIN
       COMMIT TRANSACTION 
       SELECT @msg 	= 'FIM PROCESO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(10) + CHAR(13)
       SELECT @copy 	= 'copy ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @p_ruta + '\Selo_procesado'
       EXEC master..xp_cmdshell @copy
       SELECT @copy 	= 'DEL ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
       EXEC master..xp_cmdshell @copy
    END
    ELSE
    BEGIN
		ROLLBACK TRANSACTION
		IF @error_bcp				= 1
			SELECT @v_status_arq	= '3'
		ELSE
			SELECT @v_status_arq	= '2'

		UPDATE GEACupax..pax_baixa_selo_u 
        SET status_arq   			= @v_status_arq
			,qtd_selos   			= @nr_total_selos_validos
			,qtd_lineas_arq			= @nr_total_lineas_arq
			,qtd_discrepancias		= @nr_total_selos_discrep
			,qtd_lineas_erro		= @nr_total_selos_invalidos
			,date_changed   		= @p_date_process
			,user_id_changed  		= @p_user_process
       WHERE cd_aerop  				= @p_cd_aerop
		AND cd_terminal  			= @p_cd_terminal
		AND dt_mov  				= @p_dt_mov_arq
		AND hh_mm  					= @p_hh_mm_arq
		AND arquivo					= @p_arquivo
	
		IF @error_bcp				= 1
		BEGIN
			SELECT @msg 	= 'ARQUIVO COM ERROR DE CARGA DE TABLA TEMPORAL (BCP): ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + 'Verificar pasta "Selo_erroes_BCP"'
	             ,@copy 	= 'copy ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @p_ruta + '\Selo_erroes_BCP'
		END
		ELSE
		BEGIN
			SELECT @msg 	= 'ARQUIVO COM ERROR: ' + LTRIM(RTRIM(@p_arquivo)) + CHAR(13) + 'Verificar pasta "Selo_erroes"'
	             ,@copy 	= 'copy ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' ' + @p_ruta + '\Selo_erroes'
		END

		EXEC master..xp_cmdshell @copy

		SELECT @copy 	= 'DEL ' + @p_ruta + '\Selo\' + RTRIM(LTRIM(@p_arquivo)) + ' /Q'
		EXEC master..xp_cmdshell @copy

    END
    
    SET @msg =  CHAR(10)+ CHAR(13)
    PRINT @msg 

	PROXIMO_ARQUIVO:

    --  LECTURA DEL  CURSOR DE ARCHIVOS A PROCESAR
    FETCH  NEXT FROM  cur_arq
    INTO  @p_cd_aerop 
		,@p_cd_terminal 
		,@p_dt_mov_arq       
		,@p_hh_mm_arq   
		,@p_tp_selo
		,@p_selo_status   
		,@p_arquivo        
		,@p_cd_motivo     
		,@p_status_arq   
		,@p_tp_coletor

END
CLOSE   cur_arq
DEALLOCATE cur_arq

-- ELIMINAR TABLAS TEMPORALES
DROP TABLE #TEMP
DROP TABLE #TEMP_2 

SET NOCOUNT OFF
RETURN 0




GO

/****** Object:  StoredProcedure [dbo].[psp_ins_baixa_selos]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_ins_baixa_selos    Script Date: 19/09/2008 15:20:18 ******/





CREATE    Proc [dbo].[psp_ins_baixa_selos] ( 
	@p_cd_aerop                	char(4)
	,@p_cd_terminal             char(10)
	,@p_nro_selo_inicial        char(10)
	,@p_nro_selo_final          char(10)
	,@p_selo_status             char(1)
	,@p_dt_mov                  datetime
	,@p_display_output          char(1)
	,@p_cd_motivo      			char(2)
	,@p_erro 					char(5) output
	)
As
Set NoCount On
declare
	@p_date_changed            datetime
	,@p_user_id_changed         char(30)
	,@p_chgstamp                smallint
	,@wtotal                          real
	,@p_item_id                 char(26)

Set RowCount 0

select @p_erro = 'X'
/* Inicio das Validaçoes Verifica se selos existem */
If not Exists (Select * from pax_selo_u (NOLOCK INDEX = P_pax_selo_u) where 
                     nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final )
Begin
	if @p_display_output = 'Y'
	begin
		Set RowCount 1
		Select ret_code    = 'ERRO'
		      ,ret_message = 'Intervalo de Selos Inexistente'
	end

	select @p_erro = 'Y'
	Return 5
End 

/* Inicio das Validaçoes Selo deve ser deste aeroporto */
If Exists (Select * from pax_selo_u where 
nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final and
cd_aerop     <> @p_cd_aerop and 
cd_terminal  <> @p_cd_terminal)
Begin
	if @p_display_output = 'Y'
	begin
		Set RowCount 1
		Select ret_code    = 'ERRO'
		,ret_message = 'O selo ' + nro_selo + ' nao pertence ao aeroporto ' + @p_cd_aerop + "/" + @p_cd_terminal
		from pax_selo_u (NOLOCK INDEX = P_pax_selo_u) where 
			nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final and
			cd_aerop     <> @p_cd_aerop and 
			cd_terminal  <> @p_cd_terminal
	end
	select @p_erro = 'Y'
	Return 5
End 


if @p_selo_status = '4'  -- CANCELADOS pode estar distribuido ou utilizado
begin
/* Inicio das Validaçoes Selo tem que ter  Status Disponivel 0 ou devolvido 1 */
        If Exists (Select * from pax_selo_u (NOLOCK INDEX = P_pax_selo_u) where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
                                          and selo_status not In ('1','2') ) 
          Begin
            if @p_display_output = 'Y'
            begin
            Set RowCount 1
            Select ret_code    = 'ERRO'
                  ,ret_message = 'O selo ' + nro_selo + ' nao está como distribuído (1) ou cancelado (2) e nao pode ser baixado '
            From   pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
            where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
                               and selo_status not In ('1','2')
            end
             select @p_erro = 'Y'
            Return 5
        
          End 
/* Inicio das Validaçoes de data (o movimento anterior deve ter data <= ao movimento atual */
        If Exists (Select * from pax_selo_u (NOLOCK INDEX = P_pax_selo_u) where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
                                          and selo_status  In ('1','2') and  dt_mov                >  @p_dt_mov ) 
          Begin
            if @p_display_output = 'Y'
            begin
            Set RowCount 1
            Select ret_code    = 'ERRO'
                  ,ret_message = 'O selo ' + nro_selo + ' tem a última data de movimento maior que a data deste movimento '
            From   pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
            where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
                               and selo_status  In ('1','2') and  dt_mov                >  @p_dt_mov
            end
             select @p_erro = 'Y'
            Return 5
     
          End 
end 
else -- Os outros somente podem estar como distribuido
begin
/* Inicio das Validaçoes Selo tem que ter  Status Disponivel 0 ou devolvido 1 */
        If Exists (Select * from pax_selo_u (NOLOCK INDEX = P_pax_selo_u) where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
                                          and selo_status not In ('1') ) 
          Begin
            if @p_display_output = 'Y'
            begin
            Set RowCount 1
            Select ret_code    = 'ERRO'
                  ,ret_message = 'O selo ' + nro_selo + ' nao está como distribuído (1) e nao pode ser baixado '
            From   pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
            where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
                               and selo_status not In ('1')
            end
             select @p_erro = 'Y'
            Return 5
        
          End 
/* Inicio das Validaçoes de data (o movimento anterior deve ter data <= ao movimento atual */
        If Exists (Select * from pax_selo_u (NOLOCK INDEX = P_pax_selo_u) where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
                                          and selo_status  In ('1') and  dt_mov                >  @p_dt_mov ) 
          Begin
            if @p_display_output = 'Y'
            begin
            Set RowCount 1
            Select ret_code    = 'ERRO'
                  ,ret_message = 'O selo ' + nro_selo + ' tem a última data de movimento maior que a data deste movimento '
            From   pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
            where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
                               and selo_status  In ('1') and  dt_mov                >  @p_dt_mov
            end
             select @p_erro = 'Y'
            Return 5
     
          End 
end 

--  BUSCAR EL ITEM    
SELECT TOP 1 @p_item_id = ISNULL(item_id,'')
FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
WHERE cd_aerop      	= @p_cd_aerop
    AND cd_terminal     = @p_cd_terminal 
    AND tp_natureza     = sUBSTRING(@p_nro_selo_inicial,1,1)
    AND dt_vigencia		<= @p_dt_mov
    AND inactive_ind		= '0'
ORDER BY   dt_vigencia DESC

/* Inicia Distribuiçao de Selos */
Select @p_date_changed    = GetDate()
   ,@p_user_id_changed = suser_sname()
        
/* Atualiza selos */
Update pax_selo_u
Set    
	dt_mov                 =  @p_dt_mov
	-- ,cd_cia_aerea       = @p_cd_cia_aerea
	,selo_status            = @p_selo_status             
	,date_changed           = @p_date_changed
	,user_id_changed        = @p_user_id_changed  
	,cd_aerop_utilizacao    = @p_cd_aerop
	,cd_terminal_utilizacao = @p_cd_terminal
	,chgstamp 				= chgstamp + 1
	,item_fat 				= @p_item_id
	,cd_motivo 				= @p_cd_motivo
From  pax_selo_u   
where
nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final                

select @p_erro = 'N'

if @p_display_output = 'Y'
begin
	Select ret_code    = 'OK' ,ret_message = 'OK' 
end






GO

/****** Object:  StoredProcedure [dbo].[psp_ins_data_embarque_dia]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_ins_data_embarque_dia    Script Date: 19/09/2008 15:20:18 ******/



CREATE  Proc [dbo].[psp_ins_data_embarque_dia]    (@p_cd_aerop     char(4)
      ,@p_cd_terminal   char(10)
      ,@p_cd_cia_aerea  char(3)
      ,@p_tp_natureza   char(1)
      ,@p_periodo_de    datetime                
      ,@p_periodo_ate   datetime)
As
Declare @nova_data datetime
Set NoCount On

/* ALTERAÇÃO 001						*/
/* VALIDAÇÃO DE AEROPORTO INATIVO		*/
/* DATA: 05/03/2009						*/
/* SOLICITAÇÃO	: ROGERIO NENO			*/
/* IMPLEMENTADO : JOSE ANTONIO MUÑOZ	*/
if exists (select 1 from GEACutcx..cor_aeroporto_u with (nolock index = P_cor_aeroporto_u)
			where cd_aerop		= @p_cd_aerop
			and inactive_ind	= '1')
begin
	select 'Aeroporto Inátivo.'
	return
end
/* ALTERAÇÃO 001 FIM					*/


/*** Verifica se existe registro com essa chave ***/
If Exists (select * from rpax_emb_dia_u 
   		   where cd_aerop     = @p_cd_aerop
			and cd_terminal  = @p_cd_terminal 
			and cd_cia_aerea = @p_cd_cia_aerea
			and tp_natureza  = @p_tp_natureza
			and periodo_de   = @p_periodo_de  
			and periodo_ate  = @p_periodo_ate)   
   return
/** Insere a Primeira Ocorrencia  **/
Insert 
	rpax_emb_dia_u
Values 
	(@p_cd_aerop
	,@p_cd_terminal 
	,@p_cd_cia_aerea
	,@p_tp_natureza
	,@p_periodo_de  
	,@p_periodo_ate
	,@p_periodo_de
	,0
	,GetDate()
	,suser_sname()
	,'1900-01-01'
	,''
	,'0'
	,'1900-01-01'
	,1)    
Set @nova_data = @p_periodo_de
While @nova_data <> @p_periodo_ate
Begin 
	Set @nova_data = DateAdd(dd, 1, @nova_data)
	Insert 
		rpax_emb_dia_u
	Values 
		(@p_cd_aerop
		,@p_cd_terminal 
		,@p_cd_cia_aerea
		,@p_tp_natureza
		,@p_periodo_de  
		,@p_periodo_ate
		,@nova_data
		,0
		,GetDate()
		,suser_sname()
		,'1900-01-01'
		,''
		,'0'
		,'1900-01-01'
		,0)    
End 
GO

/****** Object:  StoredProcedure [dbo].[psp_ins_dist_selos]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_ins_dist_selos    Script Date: 19/09/2008 15:20:19 ******/

CREATE          Proc [dbo].[psp_ins_dist_selos] ( 
		@p_cd_aerop                	char(4)
		,@p_cd_terminal             char(10)
		,@p_cd_cia_aerea        	char(3)
		,@p_nro_selo_inicial     	char(10)
		,@p_nro_selo_final        	char(10)
		,@p_tp_fat                 	char(1)
		,@p_dt_mov                  datetime
		,@p_hh_entrega              char(6)
		,@p_nro_rste                char(6)
		,@p_ano_remesa				integer
		,@p_display_output          char(1)
		,@p_erro 					char(5) output
)

As

Set NoCount On

declare	@p_date_changed		datetime
	,@p_user_id_changed		char(30)
	,@p_chgstamp			smallint
	,@p_selo_status			char(1)
	,@wtotal				real
	,@p_item_id				char(26)
	,@p_tp_natureza			char(1)
	,@p_item_fat			char(26)
	,@hora					char(2)
	,@minutos				char(2)
	,@segundos				char(2)
	,@miliseg				char(3)

select 	@p_selo_status		= '1'

/* Inicia Distribuição de Selos */

Select @p_date_changed    	= GetDate()
      ,@p_user_id_changed 	= suser_sname()

Set RowCount 0

select @p_erro = 'X'

/* 001 Validar se o aeroporto esta Ativo		*/
if not exists (select 1 from GEACutcx..cor_aeroporto_u with (nolock index = P_cor_aeroporto_u)
				where cd_aerop		= @p_cd_aerop
				and inactive_ind	= '0')
begin
	if @p_display_output = 'Y'
	begin
		Set RowCount 1
		Select ret_code    	= 'ERRO'
		  ,ret_message 		= 'Aeroporto inválido ou inativo.'
	end
	select @p_erro = 'Y'
	Return 5	
end
/* 001 Fim Validar se o aeroporto esta Ativo	*/

/* 001 Validar se o terminal esta Ativo			*/
if not exists (select 1 from GEACutcx..cor_terminal_aerop_u with (nolock index = P_cor_terminal_aerop_u)
			where cd_aerop		= @p_cd_aerop
			and terminal		= @p_cd_terminal
			and inactive_ind	= '0')
begin
	if @p_display_output = 'Y'
	begin
		Set RowCount 1
		Select ret_code    	= 'ERRO'
		  ,ret_message 		= 'Terminal inválido ou inativo para esse Aeroporto.'
	end
	select @p_erro = 'Y'
	Return 5	
end
/* 001 Fim Validar se o Terminal esta Ativo	*/

/* 001 Validar se cia aérea esta Ativa			*/
if not exists (select 1 from GEACutcx..cor_cia_aerea_u with (nolock index = P_cor_cia_aerea_u)
				where cd_cia_aerea	= @p_cd_cia_aerea
				and inactive_ind	= '0')
begin
	if @p_display_output = 'Y'
	begin
		Set RowCount 1
		Select ret_code    	= 'ERRO'
		  ,ret_message 		= 'Companhia aérea inválida ou inativa.'
	end
	select @p_erro = 'Y'
	Return 5	
end
/* 001 Fim Validar se cia aérea esta Ativa			*/


/* Inicio das Validações Verifica se selos existem */
If not Exists (Select 1 from pax_selo_u  (NOLOCK INDEX = P_pax_selo_u )
            where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final 
			and ano_remesa	= @p_ano_remesa)
Begin
	if @p_display_output = 'Y'
	begin
		Set RowCount 1
		Select ret_code    	= 'ERRO'
		  ,ret_message 		= 'Intervalo de Selos Inexistente'
	end
	select @p_erro = 'Y'
	Return 5
End 

/* Inicio das Validações Selo deve ser deste aeroporto */
If Exists (Select 1 from pax_selo_u (NOLOCK INDEX = P_pax_selo_u )
			WHERE  nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final 
			and ano_remesa	= @p_ano_remesa
			AND cd_aerop     <> @p_cd_aerop )
Begin
	if @p_display_output = 'Y'
	begin
		Select top 1 ret_code    = 'ERRO'
			,ret_message = 'O selo [' + nro_selo + '] não pertence ao aeroporto [' + @p_cd_aerop + ']'
		from pax_selo_u (NOLOCK INDEX = P_pax_selo_u )
		where  nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
			AND cd_aerop     <> @p_cd_aerop 

	end
	select @p_erro = 'Y'
	Return 5
End 


/* Inicio das Validações Selo tem que ter  Status Disponivel 0 ou devolvido 3 */
If Exists (Select 1 from pax_selo_u (NOLOCK INDEX = P_pax_selo_u )
			where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
			and ano_remesa	= @p_ano_remesa
			and selo_status not In ('0','3') ) 
Begin
	if @p_display_output = 'Y'
	begin
		Select top 1 ret_code    = 'ERRO'
		,ret_message = 'O selo ' + nro_selo + ' não está como disponível (0) ou devolvido (3) ou tem boleto gerado e não pode ser distribuído. '
		From   pax_selo_u  (NOLOCK INDEX = P_pax_selo_u )
		where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
				and ano_remesa	= @p_ano_remesa
		       and (selo_status not In ('0','3') or billing_line_id <> 0)
	end
	select @p_erro = 'Y'
	Return 5
End 

/* Inicio das Validações de data (o movimento anterior deve ter data <= ao movimento atual */
If Exists (Select 1 from pax_selo_u  (NOLOCK)
			where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
			and ano_remesa	= @p_ano_remesa
			and selo_status In ('0','3') and  dt_mov >  @p_dt_mov ) 
Begin
	if @p_display_output = 'Y'
	begin
		Select top 1 ret_code    = 'ERRO'
		,ret_message = 'O selo ' + nro_selo + ' tem a última data de movimento maior que a data deste movimento '
		From   pax_selo_u  (NOLOCK INDEX = P_pax_selo_u )
		where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
			and ano_remesa	= @p_ano_remesa
			and selo_status In ('0','3') 
			and dt_mov      >  @p_dt_mov
	end
	select @p_erro = 'Y'
	Return 5
End 

set @p_tp_natureza  = SUBSTRING(@p_nro_selo_inicial,1,1)

/* 	
	001 - Utilizar itens para selos distribuido a Vista
	Responsable: José Muñoz
	Fecha: 19/09/2007
*/

if @p_tp_fat = 'A' and @p_tp_natureza in ('D','I')
begin
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) = 'V'
	ORDER BY   dt_vigencia DESC
end
else
begin
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) <> 'V'
	ORDER BY   dt_vigencia DESC
end

/* 	
	Fim 001 - Utilizar itens para selos distribuido a Vista
	Responsable: José Muñoz
	Fecha: 19/09/2007
*/



/*
Original
SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
WHERE cd_aerop      		= @p_cd_aerop 
    AND cd_terminal     	= @p_cd_terminal 
    AND tp_natureza     	= @p_tp_natureza 
    AND dt_vigencia			<= @p_dt_mov
ORDER BY   dt_vigencia DESC
*/
/* Atualiza selos */

SELECT @hora		= SUBSTRING(@p_hh_entrega,1,2)
	,@minutos		= SUBSTRING(@p_hh_entrega,3,2)
	,@segundos		= SUBSTRING(@p_hh_entrega,5,2)
	,@miliseg		= '000'

SELECT @p_dt_mov = CONVERT(VARCHAR ,@p_dt_mov, 112) + ' ' + @hora + ':' + @minutos + ':' + @segundos + '.' + @miliseg

UPDATE pax_selo_u
SET	cd_terminal 				= @p_cd_terminal 
	,dt_mov                 	= @p_dt_mov
	,tp_fat                 	= @p_tp_fat
	,cd_cia_aerea           	= @p_cd_cia_aerea
	,selo_status            	= @p_selo_status             
	,nro_rste               	= @p_nro_rste
	,item_fat					= @p_item_fat
	,date_changed           	= @p_date_changed
	,user_id_changed        	= @p_user_id_changed  
	,chgstamp 					= chgstamp + 1
FROM  pax_selo_u		 
WHERE nro_selo BETWEEN @p_nro_selo_inicial AND @p_nro_selo_final                
and ano_remesa	= @p_ano_remesa

SELECT @p_erro = 'N'

IF @p_display_output = 'Y'
BEGIN
	SELECT ret_code    = 'OK' ,ret_message = 'OK' 
END

GO

/****** Object:  StoredProcedure [dbo].[psp_ins_gen_selos]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_ins_gen_selos    Script Date: 19/09/2008 15:20:19 ******/



CREATE     Proc [dbo].[psp_ins_gen_selos] ( 
	@p_atividade               char(7) 
	,@p_nro_selo_inicial        char(10)
	,@p_nro_selo_final          char(10)
	,@p_dt_mov                  varchar(10)
	,@p_selo_status             char(1)
	,@p_cd_motivo               char(2)
	,@p_tp_fat                  char(1)
	,@p_cd_cia_aerea            char(3)
	,@p_tp_unid                 char(1)
	,@p_cd_aerop                char(4)
	,@p_cd_terminal             char(10)
	,@p_tp_unid_destino         char(1)
	,@p_cd_aerop_destino        char(4)
	,@p_cd_terminal_destino     char(10)
	,@p_dt_confirma             varchar(10)
	,@p_cd_aerop_utilizacao     char(4)
	,@p_cd_terminal_utilizacao  char(10)
	,@p_nfm                     char(20)
	,@p_nro_rste                char(6)
	,@p_tp_coletor              char(16)
	,@p_inactive_ind            char(1)
	,@p_active_date             varchar(10))
As
Set NoCount On
Declare 
	@r_upa9901_valida			char(5)
	,@w_dt_vigencia				datetime 
	,@wtotal 					numeric
	,@l_nro_selo_str        	char(10)
	,@l_nro_selo            	numeric
	,@l_nro_selo_incial    		numeric
	,@l_nro_selo_final  		numeric
	,@p_tp_natureza             char(1)  
	,@p_item_fat             	char(26)
	,@p_billing_line_id         int
	,@p_billing_int_date        datetime
	,@p_billing_int_type        char(1)
	,@p_billing_user_1          char(10)
	,@p_date_created            datetime
	,@p_user_id_created         char(30)
	,@p_date_changed            datetime
	,@p_user_id_changed         char(30)
	,@p_chgstamp                smallint
	,@p_ano_remesa				int

/* Inicio Valores Default */
Select	@p_tp_natureza 			= Substring(@p_nro_selo_inicial,1,1) 
	,@l_nro_selo				= Convert(numeric, Substring(@p_nro_selo_inicial,3,7))
	,@l_nro_selo_incial			= Convert(numeric, Substring(@p_nro_selo_inicial,3,7))
	,@l_nro_selo_final			= Convert(numeric, Substring(@p_nro_selo_final,3,7))
	,@p_date_changed			= GetDate()
	,@p_user_id_changed 		= suser_sname()
	,@p_date_created			= GetDate()
	,@p_user_id_created			= suser_sname()
	,@p_billing_line_id			= 0
	,@p_billing_int_date		= '1900-01-01'
	,@p_billing_int_type		= Space(1)
	,@p_billing_user_1			= Space(10)
	,@p_chgstamp				= 0
	,@p_item_fat 				= ' '
	,@p_ano_remesa				= year(@p_dt_mov)

/* Fim Valores Default */



Set RowCount 0
/* Inicio das Validaçoes  */
If @p_atividade = 'upa9901' and @p_tp_unid = 'X'
begin
	If @p_atividade = 'upa9901'
	Begin
		/* Verifica se existe as status diferentes de 0 e 3 */    
		If Exists (Select 1 from pax_selo_u (NOLOCK)
				where nro_selo between @p_nro_selo_inicial    and @p_nro_selo_final
				and ano_remesa	= @p_ano_remesa
				and selo_status not In ('3') ) --('0','3')
		Begin
			Set RowCount 1
			Select ret_code		= 'ERRO'
				,ret_message 	= 'O selo ' + nro_selo + ' já existe na base de dados '
			From   pax_selo_u (NOLOCK)
			where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
				and ano_remesa	= @p_ano_remesa
				and selo_status not In ('3') --('0','3')

			Select @r_upa9901_valida = 'ERRO'
			Return 5
		End 
	End 
End
/* Inicio das Validaçoes  */
If @p_atividade = 'upa9901' and @p_tp_unid = 'A'
Begin
	/* Verifica se existe as status diferentes de 0 e 3 */    
	select @p_ano_remesa = ano_remesa from pax_selo_u (NOLOCK)
	where nro_selo between @p_nro_selo_inicial AND @p_nro_selo_final
	and cd_aerop  		= @p_cd_aerop
	and cd_terminal		= @p_cd_terminal
	and selo_status  	In ('0','3') 		

	set @wtotal = 0
	select @wtotal = count(1)  from pax_selo_u (NOLOCK)
	where nro_selo between @p_nro_selo_inicial AND @p_nro_selo_final
		and ano_remesa		= @p_ano_remesa
		and selo_status  	In ('0','3') 
		and @p_tp_unid		= tp_unid 
		and @p_cd_aerop		= cd_aerop 
		and @p_cd_terminal	= cd_terminal

	if @wtotal  <>   (convert(real,substring(@p_nro_selo_final,3,7))  -   convert(real,substring(@p_nro_selo_inicial,3,7)) + 1)
    Begin
		Set RowCount 1
		Select ret_code		= 'ERRO'
			,ret_message 	= 'Este intervalo de selos nao pertence a esse aeroporto  ou nao estao disponíveis/devolvidos'
		select @r_upa9901_valida = 'ERRO'
		Return 5
	End 
End 
/* Término das Validaçoes  */


/**********************************************************************/
/* Inicio do Insert dos Selos */
/* Cria a Tabela Temporária */
Create Table #selos_temp (
	nro_selo              	char(10)
	,ano_remesa				int
	,tp_natureza            char(1)
	,dt_mov                 datetime
	,selo_status            char(1)
	,cd_motivo              char(2)
	,tp_fat                 char(1)
	,cd_cia_aerea           char(3)
	,tp_unid                char(1)
	,cd_aerop               char(4)
	,cd_terminal            char(10)
	,tp_unid_destino        char(1)
	,cd_aerop_destino       char(4)
	,cd_terminal_destino    char(10)
	,dt_confirma            datetime
	,cd_aerop_utilizacao    char(4)
	,cd_terminal_utilizacao char(10)
	,nfm                    char(20)
	,nro_rste               char(6)
	,tp_coletor             char(16))
/* Cria o Indice na Tabela */
Create Unique Clustered Index P_selos_temp On #selos_temp (nro_selo) 
/* Insere os registros já existentes da tabela de selos */
Insert #selos_temp
Select 
	nro_selo               
	,ano_remesa	
	,tp_natureza            
	,dt_mov                 
	,selo_status            
	,cd_motivo              
	,tp_fat                 
	,cd_cia_aerea           
	,tp_unid                
	,cd_aerop               
	,cd_terminal            
	,tp_unid_destino        
	,cd_aerop_destino       
	,cd_terminal_destino    
	,dt_confirma            
	,cd_aerop_utilizacao    
	,cd_terminal_utilizacao 
	,nfm                    
	,nro_rste               
	,tp_coletor             
From   pax_selo_u (NOLOCK)  
Where nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final
	and ano_remesa	= @p_ano_remesa

Begin Tran 
While @l_nro_selo  <=  @l_nro_selo_final
Begin
	if len(@p_nro_selo_inicial) = 9
		select @l_nro_selo_str = substring(@p_nro_selo_inicial,1,2) + right('0000000' + ltrim(rtrim(convert(char(7), @l_nro_selo))),7) 
	else
		select @l_nro_selo_str = substring(@p_nro_selo_inicial,1,2) + right('00000000' + ltrim(rtrim(convert(char(8), @l_nro_selo))),8) 

	If Exists (Select * from #selos_temp where nro_selo = @l_nro_selo_str and ano_remesa = @p_ano_remesa)
	Begin
        /* Faz a validaçao dos selos selos que já existe */
        /* Validaçao da Atividade upa9901 */       
		If @p_atividade = 'upa9901'
		begin
			Update pax_selo_u
			Set dt_mov					= Convert(Datetime, @p_dt_mov)
				,selo_status            = @p_selo_status             
				,cd_motivo              = @p_cd_motivo               
				,tp_fat                 = @p_tp_fat                  
				,cd_cia_aerea           = @p_cd_cia_aerea            
				,tp_unid                = @p_tp_unid                 
				,cd_aerop               = @p_cd_aerop                
				,cd_terminal            = @p_cd_terminal             
				,tp_unid_destino        = @p_tp_unid_destino         
				,cd_aerop_destino       = @p_cd_aerop_destino     
				,cd_terminal_destino    = @p_cd_terminal_destino     
				,dt_confirma            = Convert(Datetime, @p_dt_confirma)
				,cd_aerop_utilizacao    = @p_cd_aerop_utilizacao     
				,cd_terminal_utilizacao = @p_cd_terminal_utilizacao  
				,nfm                    = @p_nfm
				,nro_rste               = @p_nro_rste                
				,tp_coletor             = @p_tp_coletor              
				,item_fat               = @p_item_fat
				,billing_line_id        = @p_billing_line_id         
				,billing_int_date       = @p_billing_int_date        
				,billing_int_type       = @p_billing_int_type        
				,billing_user_1         = @p_billing_user_1          
				,date_created           = @p_date_created            
				,user_id_created        = @p_user_id_created         
				,date_changed           = @p_date_changed            
				,user_id_changed        = @p_user_id_changed         
				,inactive_ind    		= @p_inactive_ind            
				,active_date            = Convert(DateTime,@p_active_date)
				,chgstamp = chgstamp + 1
			From  pax_selo_u  a 
			Inner Join #selos_temp      b
			On    a.nro_selo 	= b.nro_selo
			and a.ano_remesa	= b.ano_remesa
			where a.nro_selo 	= @l_nro_selo_str 
			and a.ano_remesa	= @p_ano_remesa
			and a.selo_status 	In ('0','3')
				
			If @@error <> 0 
			Begin
				select 'ERRO','Ocorreu um erro ao tentar atualizar o selo. Entre em contato com o Administrador do Sistema e infome o erro 10200.'
				Rollback tran 
				Return
			End 
		End       
	End 
	Else
	Begin
		If @p_tp_unid_destino = 'A'
		Begin
			Select @w_dt_vigencia = max (dt_vigencia)      
			From GEACutcx..cor_item_pax_u (NOLOCK)
			Where cd_aerop     = @p_cd_aerop_destino And
                  cd_terminal  = @p_cd_terminal_destino And
                  tp_natureza  = @p_tp_natureza And
                  dt_vigencia <= Convert(Datetime, @p_dt_confirma)

			Select @p_item_fat = item_id
			From GEACutcx..cor_item_pax_u (NOLOCK)
			Where cd_aerop		= @p_cd_aerop_destino    
				AND cd_terminal	= @p_cd_terminal_destino 
				AND tp_natureza	= @p_tp_natureza 
				AND dt_vigencia	= @w_dt_vigencia
		End 
		Else 
			Select @p_item_fat = Space(10)

		If @p_item_fat is null Select @p_item_fat = Space(10)

		/* Insere na tabela de selos */
		Insert pax_selo_u
		Values ( @l_nro_selo_str
			,@p_ano_remesa
			,substring(@p_nro_selo_inicial ,1,1) -- @p_tp_natureza
			,Convert(Datetime, @p_dt_mov)
			,@p_selo_status             
			,@p_cd_motivo               
			,@p_tp_fat                  
			,@p_cd_cia_aerea            
			,@p_tp_unid                 
			,@p_cd_aerop                
			,@p_cd_terminal             
			,@p_tp_unid_destino         
			,@p_cd_aerop_destino     
			,@p_cd_terminal_destino     
			,Convert(Datetime, @p_dt_confirma)
			,@p_cd_aerop_utilizacao     
			,@p_cd_terminal_utilizacao  
			,@p_nfm                     
			,@p_nro_rste                
			,@p_tp_coletor              
			,@p_item_fat
			,@p_billing_line_id         
			,@p_billing_int_date        
			,@p_billing_int_type        
			,@p_billing_user_1          
			,@p_date_created            
			,@p_user_id_created         
			,@p_date_changed            
			,@p_user_id_changed         
			,@p_inactive_ind            
			,Convert(DateTime,@p_active_date)
			,@p_chgstamp)

		If @@error <> 0 
		Begin
			select 'ERRO','Ocorreu um erro ao tentar atualizar o selo. Entre em contato com o Administrador do Sistema e infome o erro 10201.'
			Rollback tran 
			Return
		End 
	End 
	Select @l_nro_selo = @l_nro_selo + 1
End 

Commit Tran 
select 'OK','Nao tem Erro'







GO

/****** Object:  StoredProcedure [dbo].[psp_ins_upd_itens_rpax]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_ins_upd_itens_rpax    Script Date: 19/09/2008 15:20:19 ******/




CREATE   Proc [dbo].[psp_ins_upd_itens_rpax] (
		@p_cd_aerop         	char(4)
		,@p_cd_terminal      	char(10)
		,@p_cd_cia_aerea     	char(3)
		,@p_nro_voo          	char(5)
		,@p_dt_voo           	datetime
		,@p_hr_voo           	char(5)
		,@p_tp_rpax          	char(1)
		,@p_tp_natureza      	char(1)
		,@p_tp_voo           	char(1)
		,@p_tp_fat           	char(1)
		,@p_pax_total        	int
		,@p_item_fat         	char(26))
as

Declare  @p_billing_line_id  int
		,@p_billing_int_date 	datetime
		,@p_billing_int_type 	char(1)
		,@p_billing_user_1   	char(10)
		,@p_date_created     	datetime
		,@p_user_id_created  	char(30)
		,@p_date_changed     	datetime
		,@p_user_id_changed  	char(30)
		
 If Exists (Select * from rpax_itens_u Where 
      cd_aerop      	= @p_cd_aerop
  and cd_terminal   	= @p_cd_terminal      
  and cd_cia_aerea  	= @p_cd_cia_aerea     
  and nro_voo       	= @p_nro_voo         
  and dt_voo        	= @p_dt_voo           
  and hr_voo        	= @p_hr_voo           
  and tp_rpax       	= @p_tp_rpax          
  and tp_natureza   	= @p_tp_natureza      
--  and tp_voo        	= @p_tp_voo           
  and tp_fat        	= @p_tp_fat)
Begin
	Set @p_date_changed     = getdate()
	Set @p_user_id_changed  = suser_sname()
	Update 
		rpax_itens_u
	Set
		pax_total   			= @p_pax_total
		,date_changed      		= @p_date_changed
		,user_id_changed   		= @p_user_id_changed
	Where 
		cd_aerop        		= @p_cd_aerop
		and cd_terminal     	= @p_cd_terminal      
		and cd_cia_aerea    	= @p_cd_cia_aerea     
		and nro_voo         	= @p_nro_voo         
		and dt_voo          	= @p_dt_voo           
		and hr_voo          	= @p_hr_voo           
		and tp_rpax         	= @p_tp_rpax          
		and tp_natureza     	= @p_tp_natureza      
--		and tp_voo          	= @p_tp_voo           
		and tp_fat          	= @p_tp_fat
		and billing_line_id 	= 0
End 
Else 
Begin
	Set @p_billing_line_id   	= 0 
	Set @p_billing_int_date 	= '1900-01-01'
	Set @p_billing_int_type 	= Space(1)
	Set @p_billing_user_1   	= Space(1)
	Set @p_date_created     	= getdate()
	Set @p_user_id_created  	= suser_sname()
	Set @p_date_changed     	= '1900-01-01'
	Set @p_user_id_changed  	= Space(1)
	Insert 
		rpax_itens_u
	Values (
		@p_cd_aerop         
		,@p_cd_terminal      
		,@p_cd_cia_aerea     
		,@p_nro_voo          
		,@p_dt_voo           
		,@p_hr_voo           
		,@p_tp_rpax          
		,@p_tp_natureza      
		,@p_tp_voo           
		,@p_tp_fat           
		,@p_pax_total        
		,@p_item_fat         
		,@p_billing_line_id  
		,@p_billing_int_date 
		,@p_billing_int_type 
		,@p_billing_user_1   
		,@p_date_created     
		,@p_user_id_created  
		,@p_date_changed     
		,@p_user_id_changed  
		,0)
End






GO

/****** Object:  StoredProcedure [dbo].[psp_insert_disc_selo_elec]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_insert_disc_selo_elec    Script Date: 19/09/2008 15:20:19 ******/


CREATE PROC [dbo].[psp_insert_disc_selo_elec]

(	@p_cd_aerop_destino 		char(4)
	,@p_cd_terminal_destino 	char(10)
	,@p_dt_mov 					datetime
	,@p_selo_status				char(1)
	,@p_nro_selo_elec			char(20)
	,@p_selo_status_ind			char(1)
	,@p_cd_cia_aerea			char(3)
	,@p_discrepancia			varchar(10)
	,@p_cd_motivo				char(2)
	,@p_arquivo					char(255)
	,@p_tp_coletor				char(16)
	,@p_date_created			datetime
	,@p_user_id_created			char(30)
	,@p_date_changed			datetime
	,@p_user_id_changed			char(30)
	,@p_inactive_ind			char(1)
	,@p_active_date				datetime
	,@p_chgstamp				smallint

)

AS 

/* 001 Excluir discrepancia para manter a última discrepância do selo */
/* Data de Implementação		: 07/04/2009		 */
/* responsavel de Implementação	: José A. Muñoz		 */
delete from GEACupax..pax_discrep_selo_elec_u 
where cd_aerop_destino	= @p_cd_aerop_destino
and cd_terminal_destino	= @p_cd_terminal_destino
and dt_mov				= @p_dt_mov
and selo_status			= @p_selo_status
and nro_selo_elec		= @p_nro_selo_elec
/* 001 Fim												*/

INSERT INTO GEACupax..pax_discrep_selo_elec_u (
	cd_aerop_destino 
	,cd_terminal_destino 
	,dt_mov 
	,selo_status 
	,nro_selo_elec 
	,selo_status_ind 
	,cd_cia_aerea 
	,discrepancia 
	,cd_motivo 
	,arquivo 
	,tp_coletor
	,date_created 
	,user_id_created 
	,date_changed 
	,user_id_changed 
	,inactive_ind 
	,active_date 
	,chgstamp)
VALUES(
	@p_cd_aerop_destino
	,@p_cd_terminal_destino
	,@p_dt_mov
	,@p_selo_status
	,@p_nro_selo_elec
	,@p_selo_status_ind
	,@p_cd_cia_aerea
	,@p_discrepancia
	,@p_cd_motivo
	,@p_arquivo
	,@p_tp_coletor
	,@p_date_created
	,@p_user_id_created
	,@p_date_changed
	,@p_user_id_changed
	,@p_inactive_ind
	,@p_active_date
	,@p_chgstamp)




GO

/****** Object:  StoredProcedure [dbo].[psp_lista_discrepacias]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_lista_discrepacias    Script Date: 19/09/2008 15:20:19 ******/

CREATE PROC [dbo].[psp_lista_discrepacias]
AS

SELECT RTRIM(msg_id) + ':' + selo_status, msg_lista
FROM pax_tbl_messages_selos (NOLOCK)
WHERE (selo_status <> '1')
UNION
SELECT 'NULL', '' 
ORDER BY 1






GO

/****** Object:  StoredProcedure [dbo].[psp_lista_funcionarios]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_lista_funcionarios    Script Date: 19/09/2008 15:20:19 ******/

CREATE PROCEDURE [dbo].[psp_lista_funcionarios]
( 
 @p_cd_aerop  CHAR(4)
 ,@p_cd_terminal  CHAR(10)
 ,@p_cd_cia_aerea CHAR(3)
)
AS
SELECT no_funcio, no_funcio 
FROM GEACutcx..cor_funcio_selo_u (NOLOCK)
WHERE cd_aerop  = @p_cd_aerop
   AND cd_terminal  = @p_cd_terminal
   AND cd_cia_aerea = @p_cd_cia_aerea
   AND inactive_ind = '0'
ORDER BY 1



GO

/****** Object:  StoredProcedure [dbo].[psp_migra_selo_sqlssdsv]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE proc [dbo].[psp_migra_selo_sqlssdsv]
	(@p_dt_mov			datetime)
as
set nocount on 
declare 
	@v_nro_selo				char(10)
	,@v_ano_remesa			smallint
	,@v_count_selo			smallint
	,@v_count_selo_log		smallint
	,@v_strmsg				varchar(255)

select @v_count_selo		= 0
	,@v_count_selo_log		= 0

declare cur_selo_migra_ss insensitive cursor for
select nro_selo, ano_remesa 
from pax_selo_u with (nolock)
where dt_mov	= @p_dt_mov

open cur_selo_migra_ss

fetch next from cur_selo_migra_ss into @v_nro_selo, @v_ano_remesa	

while @@fetch_status = 0
begin
	--begin tran psp_migra_selo

	insert into SQLSSDSV.GEACupax.dbo.pax_selo_u
	select * from pax_selo_u with (nolock index = P_pax_selo_u)
	where nro_selo	= @v_nro_selo
	and ano_remesa	= @v_ano_remesa
	
	set @v_count_selo		= @v_count_selo + @@rowcount

	insert into SQLSSDSV.GEACupax.dbo.pax_selo_log_u
	select * from pax_selo_log_u with (nolock index = P_pax_selo_log_u)
	where nro_selo	= @v_nro_selo
	and ano_remesa	= @v_ano_remesa

	set @v_count_selo_log		= @v_count_selo_log + @@rowcount

	/* grava na tabela de saida		*/
	/* lee o proximo selo			*/
	--commit tran psp_migra_selo
	
	fetch next from cur_selo_migra_ss into @v_nro_selo, @v_ano_remesa	

end
close cur_selo_migra_ss
deallocate cur_selo_migra_ss
set @v_strmsg	= 'Data: ' + convert(varchar(10), @p_dt_mov, 103) + ' Qtd Selos: ' + ltrim(rtrim(str(@v_count_selo))) + ' Qtd Log: ' + ltrim(rtrim(str(@v_count_selo_log)))
print @v_strmsg
set nocount off

GO

/****** Object:  StoredProcedure [dbo].[psp_mudar_cia_aerea]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_mudar_cia_aerea    Script Date: 19/09/2008 15:20:20 ******/




CREATE   PROCEDURE [dbo].[psp_mudar_cia_aerea]
/*
        PROCEDIMIENTO PARA CAMBIAR LA COMPAÑIA AEREA UTILIZADO EN EN LA DISTRIBUCIÓN
        RESPONSABLE: GEAC
        FECHA DE INPLANTACION: 25-11-2003

*/
	(
		@p_cd_aerop			CHAR(4)
		,@p_cd_terminal		CHAR(10)
		,@p_dt_entrega			DATETIME
		,@p_cd_cia_aerea		CHAR(3)
		,@p_nro_rste			CHAR(6)
		,@p_cd_cia_aerea_nova	CHAR(3)
	)

AS
SET NOCOUNT ON

-- DELACRACION DE VARIABLES DE TRABAJO
DECLARE @error					INT
		,@msg					VARCHAR(200)
		,@p_cd_cia_aerea_aux 	CHAR(3)
		,@ROWCOUNT				INTEGER
		,@ERROR					INTEGER
		,@p_date_changed		DATETIME
		,@p_user_id_changed		VARCHAR(30)
		,@p_nro_selo_inicial	CHAR(10)
		,@p_nro_selo_final		CHAR(10)
		,@p_nro_selo_aux		CHAR(10)
		,@p_ano_remesa			INTEGER

-- INICIALIZACION DE VARIABLES DE TRABAJO
SELECT @error				= 0
	,@p_date_changed		= GETDATE()
	,@p_user_id_changed		= suser_sname()

-- DECLARACION DE CURSOR PARA EXTRAER LOS LOTES DE LA DISTRIBUCIÓN
DECLARE cur_lotes_selos CURSOR FOR
SELECT nro_selo_inicial, nro_selo_final, ano_remesa
FROM GEACupax..pax_entrega_selo_line_u (NOLOCK INDEX = P_pax_entrega_selo_line_u)
WHERE cd_aerop					= @p_cd_aerop				
	AND cd_terminal				= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea				= @p_cd_cia_aerea		
	AND nro_rste					= @p_nro_rste

-- INICIO DE LA TRANSACCIÓN
BEGIN TRAN 

-- VERIFICAR SI LA DISTRIBUCION EXISTE
SELECT @p_cd_cia_aerea_aux 	= cd_cia_aerea
FROM GEACupax..pax_entrega_selo_ctrl_u (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
WHERE cd_aerop					= @p_cd_aerop				
	AND cd_terminal				= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea			= @p_cd_cia_aerea		
	AND nro_rste				= @p_nro_rste

IF @@ROWCOUNT = 0 
BEGIN
    SELECT @error	= 26000
    ,@msg = 'Não existe a Distribuição.'
    GOTO SALIR_2
END

-- VERIFICAR SI ESTA CAMBIANDO LA COMPAÑIA AEREA
IF (@p_cd_cia_aerea = @p_cd_cia_aerea_nova ) OR (@p_cd_cia_aerea_nova = @p_cd_cia_aerea_aux)
BEGIN
    SELECT @error	= 26000
	    ,@msg 		= 'Cia Aerea e igual, debe usar outra.'
    GOTO SALIR_2
END

-- ACTUALIZAR LA DISTRIBUCIÓN
UPDATE pax_entrega_selo_ctrl_u 
SET cd_cia_aerea 		= @p_cd_cia_aerea_nova
	,date_changed       = @p_date_changed
	,user_id_changed	= @p_user_id_changed
	,chgstamp 			= chgstamp + 1
WHERE cd_aerop					= @p_cd_aerop				
	AND cd_terminal				= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea			= @p_cd_cia_aerea		
	AND nro_rste				= @p_nro_rste

SELECT @ERROR = @@ERROR, @ROWCOUNT = @@ROWCOUNT
-- VERIFICAR ERRROES EN LA ACTUALIZACIÓN DE LA DISTRIBUCIÓN
IF @ROWCOUNT = 0  OR @ERROR <> 0
BEGIN
    SELECT @error	= 26001
    ,@msg = 'Erro Interno: Não foi possível atulizar a tabela pax_entrega_selo_ctrl_u.'
    GOTO SALIR_2
END 

-- ABRIR CURSOR DE LOTES DE LA DISTRIBUCION
OPEN cur_lotes_selos

FETCH NEXT FROM cur_lotes_selos INTO 	@p_nro_selo_inicial, @p_nro_selo_final, @p_ano_remesa

WHILE @@FETCH_STATUS  =  0
BEGIN
    -- VERIFICAR SI NO EXISTE BOLETO PARA LOS SELOS INVOLUCRADOS EN LA DISTRIBUCION QUE SE QUIERE ALTERAR
    SELECT TOP 1 @p_nro_selo_aux = ISNULL(nro_selo,'')
    FROM GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
    WHERE nro_selo BETWEEN @p_nro_selo_inicial AND	@p_nro_selo_final		
	AND ano_remesa 		= @p_ano_remesa
    AND billing_line_id <> 0

    IF LTRIM(RTRIM(@p_nro_selo_aux)) <> ''
    BEGIN
        SELECT @error	= 26002
        ,@msg = 'O Selo' +  @p_nro_selo_aux + '.  Já tem boleto gerado.'
        GOTO SALIR 
    END

    UPDATE pax_entrega_selo_line_u 
    SET cd_cia_aerea 		= @p_cd_cia_aerea_nova
		,date_changed       = @p_date_changed
		,user_id_changed	= @p_user_id_changed
		,chgstamp 			= chgstamp + 1
    WHERE cd_aerop			= @p_cd_aerop				
		AND cd_terminal		= @p_cd_terminal
		AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
		AND cd_cia_aerea		= @p_cd_cia_aerea		
		AND nro_rste			= @p_nro_rste
		AND nro_selo_inicial	= @p_nro_selo_inicial
		AND nro_selo_final		= @p_nro_selo_final

    -- ACTULIZAR LOS SELOS INVOLUCRADOS EN LA DISTRIBUCION QUE SE QUIERE ALTERAR
    UPDATE  GEACupax..pax_selo_u
    SET cd_cia_aerea		= @p_cd_cia_aerea_nova
		,date_changed		= @p_date_changed
		,user_id_changed	= @p_user_id_changed
		,chgstamp			= chgstamp + 1
    WHERE nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final
    AND ano_remesa 			= @p_ano_remesa

    SELECT @ROWCOUNT = @@ROWCOUNT 
    IF @ROWCOUNT = 0
    BEGIN
        SELECT @error	= 26003
			,@msg 		= 'Erro Interno: Atualizando os Selos.'
        GOTO SALIR 
    END

    -- LEER NUEVO LOTE DE LA DISTRIBUCIÓN
    FETCH NEXT FROM cur_lotes_selos INTO 	@p_nro_selo_inicial, @p_nro_selo_final, @p_ano_remesa
END 

-- VERIFICAR SI SE ACTUALIZARON TODOS LOS LOTES DE LA DISTRIBUCIÓN
IF @ROWCOUNT = 0
BEGIN
    SELECT @error	= 26004
    ,@msg = 'Erro Interno: La distribução no tiene lotes.'
    GOTO SALIR 
END

SALIR:
CLOSE cur_lotes_selos

SALIR_2:
DEALLOCATE cur_lotes_selos

IF @error = 0
BEGIN
    SELECT @error	= 0
	    ,@msg 		= 'SEM PROBLEMAS'
    COMMIT TRAN
END
ELSE
BEGIN
    ROLLBACK TRAN
END

SELECT @error, @msg

SET NOCOUNT OFF




GO

/****** Object:  StoredProcedure [dbo].[psp_mudar_dt_entrega]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_mudar_dt_entrega    Script Date: 19/09/2008 15:20:20 ******/


CREATE PROCEDURE [dbo].[psp_mudar_dt_entrega]

/*
        PROCEDIMIENTO PARA CAMBIAR LA FECHA DE ENTREGA EN LA DISTRIBUCIÓN
        RESPONSABLE: GEAC
        FECHA DE INPLANTACION: 25-11-2003

EXECUTE SQLSSIII.GEACupax.dbo.psp_mudar_dt_entrega 'SBEG', '1', '20051201', 'VRG', '002340', '20051125'

*/
	(
		@p_cd_aerop				CHAR(4)
		,@p_cd_terminal			CHAR(10)
		,@p_dt_entrega			DATETIME
		,@p_cd_cia_aerea		CHAR(3)
		,@p_nro_rste			CHAR(6)
		,@p_dt_entrega_nova		DATETIME
	)

AS
SET NOCOUNT ON

-- DELACRACION DE VARIABLES DE TRABAJO
DECLARE 	 
		@error					INT
		,@msg					VARCHAR(200)
		,@p_dt_entrega_aux		DATETIME
		,@ROWCOUNT				INTEGER
		,@ERROR					INTEGER
		,@p_date_changed		DATETIME
		,@p_user_id_changed		VARCHAR(30)
		,@p_nro_selo_inicial	CHAR(10)
		,@p_nro_selo_final		CHAR(10)
		,@p_nro_selo_aux		CHAR(10)
		,@p_dt_mov_aux			DATETIME
		,@p_nro_selo			CHAR(10)
		,@p_status_selo			CHAR(1)
		,@p_ano_remesa			INTEGER

-- INICIALIZACION DE VARIABLES DE TRABAJO
SELECT @error				= 0
	,@p_date_changed		= GETDATE()
	,@p_user_id_changed		= suser_sname()

-- DECLARACION DE CURSOR PARA EXTRAER LOS LOTES DE LA DISTRIBUCIÓN
DECLARE cur_lotes CURSOR FOR
SELECT nro_selo_inicial, nro_selo_final, ano_remesa
FROM GEACupax..pax_entrega_selo_line_u (NOLOCK INDEX = P_pax_entrega_selo_line_u)
WHERE cd_aerop					= @p_cd_aerop				
	AND cd_terminal				= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea			= @p_cd_cia_aerea		
	AND nro_rste				= @p_nro_rste

-- INICIO DE LA TRANSACCIÓN
BEGIN TRAN 

-- VERIFICAR SI LA DISTRIBUCION EXISTE
SELECT @p_dt_entrega_aux 	= dt_entrega
FROM GEACupax..pax_entrega_selo_ctrl_u (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
WHERE cd_aerop					= @p_cd_aerop				
	AND cd_terminal				= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea			= @p_cd_cia_aerea		
	AND nro_rste				= @p_nro_rste

IF @@ROWCOUNT = 0 
BEGIN
    SELECT @error	= 26000
    ,@msg = 'Não existe a Distribuição.'
    GOTO ERROR
END

IF ( CONVERT(VARCHAR,@p_dt_entrega_aux,112) = CONVERT(VARCHAR,@p_dt_entrega_nova,112)) 
OR ( CONVERT(VARCHAR,@p_dt_entrega,112) = CONVERT(VARCHAR,@p_dt_entrega_nova,112))
BEGIN
    SELECT @error	= 26000
		,@msg 		= 'Data de Distribuição e igual, debe usar outra.'
    GOTO ERROR
END

-- ACTUALIZAR LA DISTRIBUCIÓN

SELECT @p_dt_entrega_nova = @p_dt_entrega_nova + ' 00:00:01.000'

UPDATE pax_entrega_selo_ctrl_u 
SET dt_entrega 				= @p_dt_entrega_nova
	,date_changed			= @p_date_changed
	,user_id_changed		= @p_user_id_changed
	,chgstamp				= chgstamp + 1
WHERE cd_aerop				= @p_cd_aerop				
	AND cd_terminal			= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea		= @p_cd_cia_aerea		
	AND nro_rste			= @p_nro_rste

SELECT @ERROR = @@ERROR, @ROWCOUNT = @@ROWCOUNT
-- VERIFICAR ERRROES EN LA ACTUALIZACIÓN DE LA DISTRIBUCIÓN
IF @ROWCOUNT = 0  OR @ERROR <> 0
BEGIN
    SELECT @error	= 26001
    ,@msg = 'Erro Interno: Não foi possível atulizar a tabela pax_entrega_selo_ctrl_u.'
    GOTO ERROR
END 

-- ABRIR CURSOR DE LOTES DE LA DISTRIBUCION
OPEN cur_lotes

FETCH NEXT FROM cur_lotes INTO 	@p_nro_selo_inicial, @p_nro_selo_final, @p_ano_remesa

WHILE @@FETCH_STATUS  =  0
BEGIN
    -- VERIFICAR SI NO EXISTE BOLETO PARA LOS SELOS INVOLUCRADOS EN LA DISTRIBUCION QUE SE QUIERE ALTERAR
    SELECT TOP 1 @p_nro_selo_aux = ISNULL(nro_selo,'')
    FROM GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
    WHERE nro_selo BETWEEN @p_nro_selo_inicial AND	@p_nro_selo_final		
	AND ano_remesa		= @p_ano_remesa
    AND billing_line_id <> 0
	
    IF LTRIM(RTRIM(@p_nro_selo_aux)) <> ''
    BEGIN
        SELECT @error	= 26002
			,@msg 		= 'O Selo' +  @p_nro_selo_aux + '.  Já tem boleto gerado.'
        GOTO SALIR 
    END
/*
    -- VERIFICAR SI EXISTEN SELOS CON BOLETOS
    IF EXISTS (SELECT 1 FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
				WHERE nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final					AND ano_remesa		= @p_ano_remesa
					AND billing_line_id <> 0 )    
    BEGIN
        SELECT @error	= 26005
			,@msg 		= 'Erro: Existem Selos com Boletos Gerados.'
        GOTO SALIR 
    END
*/
    -- VERIFICAR SI EXISTEN SELOS UTILIZADOS ANTES DE LA NUEVA DATA DE LA DISTRIBUCION

    SELECT @p_dt_mov_aux = MIN(dt_mov) FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
		WHERE nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final
			AND ano_remesa 		= @p_ano_remesa
			AND dt_mov       	< @p_dt_entrega_nova
			AND selo_status  	= '2' 

    IF NOT(@p_dt_mov_aux  IS NULL)
    BEGIN
        SELECT @error	= 26006
			,@msg 		= 'Erro: Existem Selos utilizados a Partir do ' + CONVERT(VARCHAR, @p_dt_mov_aux, 106)
        GOTO SALIR 
    END

    -- ACTUALIZAR LA LINEA DE LA DISTRIBUCION
    UPDATE pax_entrega_selo_line_u 
    SET dt_entrega 		= @p_dt_entrega_nova
	,date_changed       = @p_date_changed
	,user_id_changed	= @p_user_id_changed
	,chgstamp 			= chgstamp + 1
    WHERE cd_aerop			= @p_cd_aerop				
	AND cd_terminal			= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea		= @p_cd_cia_aerea		
	AND nro_rste			= @p_nro_rste
	AND nro_selo_inicial	= @p_nro_selo_inicial
	AND nro_selo_final		= @p_nro_selo_final

    DECLARE cur_selo_dt CURSOR FOR
    SELECT nro_selo, selo_status
    FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
    WHERE nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final
	AND ano_remesa	= @p_ano_remesa

    OPEN cur_selo_dt 

    FETCH NEXT FROM cur_selo_dt INTO @p_nro_selo, @p_status_selo

    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF @p_status_selo = '1'     -- ACTULIZAR LA TABLA PRINCIPAL DE SELOS PAX_SELO_U
        BEGIN
            UPDATE  GEACupax..pax_selo_u
            SET dt_mov				= @p_dt_entrega_nova
				,date_changed		= @p_date_changed
				,user_id_changed	= @p_user_id_changed
				,chgstamp			= chgstamp + 1
            WHERE nro_selo 			= @p_nro_selo
			AND ano_remesa 			= @p_ano_remesa
        END 
        ELSE  -- ACTULIZAR LA TABLA DE HISTORICO DE SELOS PAX_SELO_U
        BEGIN
            UPDATE  GEACupax..pax_selo_log_u
            SET dt_mov				= @p_dt_entrega_nova
                  ,date_changed		= @p_date_changed
                  ,user_id_changed	= @p_user_id_changed
                  ,chgstamp			= chgstamp + 1
            WHERE nro_selo 						= @p_nro_selo
				AND ano_remesa 					= @p_ano_remesa
				AND convert(varchar,dt_mov,112)	= @p_dt_entrega_aux
				AND selo_status					= '1'
        END

	    SELECT @ROWCOUNT = @@ROWCOUNT 
	    IF @ROWCOUNT = 0
	    BEGIN
	        SELECT @error	= 26003
				,@msg 		= 'Erro Interno: Atualizando os Selos.'
			CLOSE cur_selo_dt 
			DEALLOCATE cur_selo_dt 
	        GOTO SALIR 
	    END

	    FETCH NEXT FROM cur_selo_dt INTO @p_nro_selo, @p_status_selo

    END
	
    CLOSE cur_selo_dt 
    DEALLOCATE cur_selo_dt 
    
    -- LEER NUEVO LOTE DE LA DISTRIBUCIÓN
    FETCH NEXT FROM cur_lotes INTO 	@p_nro_selo_inicial, @p_nro_selo_final, @p_ano_remesa
END 

-- VERIFICAR SI SE ACTUALIZARON TODOS LOS LOTES DE LA DISTRIBUCIÓN
IF @ROWCOUNT = 0
BEGIN
    SELECT @error	= 26004
		,@msg 		= 'Erro Interno: La distribução no tiene lotes.'
    GOTO SALIR 
END

SALIR:
CLOSE cur_lotes

ERROR:
DEALLOCATE cur_lotes

IF @error = 0
BEGIN
    SELECT @error	= 0
		,@msg 		= 'SEM PROBLEMAS'
    COMMIT TRAN
END
ELSE
BEGIN
    ROLLBACK TRAN
END

SELECT @error, @msg

SET NOCOUNT OFF






GO

/****** Object:  StoredProcedure [dbo].[psp_mudar_tp_faturamento]    Script Date: 01/05/2011 18:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_mudar_tp_faturamento    Script Date: 19/09/2008 15:20:20 ******/

CREATE    PROCEDURE [dbo].[psp_mudar_tp_faturamento]
	(
		@p_cd_aerop				CHAR(4)
		,@p_cd_terminal			CHAR(10)
		,@p_dt_entrega			DATETIME
		,@p_cd_cia_aerea		CHAR(3)
		,@p_nro_rste			CHAR(6)
		,@p_nro_selo_inicial	CHAR(10)
		,@p_nro_selo_final		CHAR(10)
		,@p_tp_fat				CHAR(1)
	)

AS
SET NOCOUNT ON

DECLARE @p_tp_fat_aux			CHAR(1)
		,@error					INT
		,@msg					VARCHAR(200)
		,@p_nro_selo_aux		CHAR(10)
		,@ROWCOUNT				INTEGER
		,@p_date_changed		DATETIME
		,@p_user_id_changed		VARCHAR(30)
		,@p_ano_remesa			INTEGER
		,@p_item_fat			char(26)
		,@p_tp_natureza			char(1)

SELECT @error				= 0
	,@p_date_changed		= GETDATE()
	,@p_user_id_changed		= suser_sname()
	,@p_tp_natureza			= left(@p_nro_selo_inicial, 1)

/* Buscar o item para o novo tipo de faturamento 	*/
/* Resposavél: José Antonio Muñoz 					*/
/* Data: 19/02/2008									*/

if @p_tp_fat = 'A' and @p_tp_natureza in ('D','I')
begin
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_entrega
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) = 'V'
	ORDER BY   dt_vigencia DESC
end
else
begin
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_entrega
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) <> 'V'
	ORDER BY   dt_vigencia DESC
end

/* Fim: Buscar o item para o novo tipo de faturamento */



BEGIN TRAN 

SELECT @p_tp_fat_aux 	= tp_fat
	,@p_ano_remesa 		= ano_remesa
FROM GEACupax..pax_entrega_selo_line_u (NOLOCK INDEX = P_pax_entrega_selo_line_u)
WHERE cd_aerop			= @p_cd_aerop				
	AND cd_terminal		= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea		= @p_cd_cia_aerea		
	AND nro_rste			= @p_nro_rste
	AND nro_selo_inicial		= @p_nro_selo_inicial		
	AND nro_selo_final		= @p_nro_selo_final


IF @@ROWCOUNT = 0 
BEGIN
    SELECT @error	= 26000
    ,@msg = 'Não existe a Distribuição.'
    GOTO SALIR 
END
	
IF @p_tp_fat_aux = @p_tp_fat
BEGIN
    SELECT @error	= 26000
    ,@msg = 'Tipo de Faturamento es igual.'
    GOTO SALIR 
END

SELECT TOP 1 @p_nro_selo_aux = ISNULL(nro_selo,'')
FROM GEACupax..pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
WHERE nro_selo BETWEEN @p_nro_selo_inicial AND	@p_nro_selo_final		
AND ano_remesa		= @p_ano_remesa
AND billing_line_id <> 0

IF LTRIM(RTRIM(@p_nro_selo_aux)) <> ''
BEGIN
    SELECT @error	= 26001
		,@msg 		= 'O Selo' +  @p_nro_selo_aux + '.  Já tem boleto gerado.'
    GOTO SALIR 
END

UPDATE GEACupax..pax_entrega_selo_line_u
SET tp_fat 				= @p_tp_fat
	,date_changed		= @p_date_changed
	,user_id_changed	= @p_user_id_changed
	,chgstamp			= chgstamp + 1
WHERE 	cd_aerop			= @p_cd_aerop				
	AND cd_terminal			= @p_cd_terminal
	AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
	AND cd_cia_aerea		= @p_cd_cia_aerea		
	AND nro_rste			= @p_nro_rste
	AND nro_selo_inicial	= @p_nro_selo_inicial 
	AND nro_selo_final		= @p_nro_selo_final		
    
SELECT @ROWCOUNT = @@ROWCOUNT 

IF @ROWCOUNT = 0
BEGIN
    SELECT @error	= 26002
    ,@msg = 'Error atualizando la Distribução.'
    GOTO SALIR 
END
ELSE
BEGIN
    UPDATE  GEACupax..pax_selo_u
    SET tp_fat				= @p_tp_fat
		,item_fat			= @p_item_fat
		,date_changed		= @p_date_changed
		,user_id_changed	= @p_user_id_changed
		,chgstamp			= chgstamp + 1
    WHERE nro_selo 			Between @p_nro_selo_inicial and @p_nro_selo_final
	AND ano_remesa    		= @p_ano_remesa
	
    SELECT @ROWCOUNT = @@ROWCOUNT 
    IF @ROWCOUNT = 0
    BEGIN
        SELECT @error	= 26003
			,@msg 		= 'Erro atualizando los Selos'
        GOTO SALIR 
    END
	ELSE
	BEGIN
		update pax_entrega_selo_ctrl_u 
		set date_changed			= @p_date_changed
			,user_id_changed		= @p_user_id_changed
			,chgstamp				= chgstamp + 1
		WHERE 	cd_aerop			= @p_cd_aerop				
			AND cd_terminal			= @p_cd_terminal
			AND CONVERT(VARCHAR,dt_entrega,112)	= CONVERT(VARCHAR,@p_dt_entrega,112)
			AND cd_cia_aerea		= @p_cd_cia_aerea		
			AND nro_rste			= @p_nro_rste
		
	    SELECT @ROWCOUNT = @@ROWCOUNT 
	    IF @ROWCOUNT = 0
	    BEGIN
	        SELECT @error	= 26003
				,@msg 		= 'Erro atualizando Distribuição.'
	        GOTO SALIR 
	    END
	END
END

SALIR:
IF @error	= 0
BEGIN
    SELECT @error	= 0
	    ,@msg 		= 'SEM PROBLEMAS'
    COMMIT TRAN
END
ELSE
BEGIN
    ROLLBACK TRAN
END

SELECT @error, @msg

SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[psp_prc_baixa_selecao]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[psp_prc_baixa_selecao] 
			( @p_cd_aerop          	char(4), 
			@p_cd_terminal       	char(10), 
			@p_dt_mov            	datetime, 
			@p_hh_mm             	char(6), 
			@p_selo_status       	char(1), 
			@p_cd_motivo         	char(2), 
			@p_nro_selo   			char(10),
			@p_ano_remesa			integer) 
AS

DECLARE @p_item_fat		CHAR(26)
	,@p_tp_natureza		CHAR(1)
	,@dt_proceso		DATETIME
	,@user_proceso		CHAR(30)
	,@v_billing_line_id	integer
	,@v_str				varchar(255)
	,@v_tp_fat			char(1)
	,@v_selo_status		CHAR(1)

SELECT @dt_proceso 		= CONVERT(VARCHAR, GETDATE(), 112)
	,@user_proceso		= suser_sname()

SELECT @dt_proceso = @dt_proceso + ' 23:59:59.000'

select @v_billing_line_id 	= billing_line_id
	,@v_tp_fat				= tp_fat
	,@v_selo_status			= selo_status
from pax_selo_u (index = P_pax_selo_u)
where nro_selo 	= @p_nro_selo 
and	ano_remesa	= @p_ano_remesa

if @v_billing_line_id <> 0 and @v_tp_fat = 'F' 
begin
	set @v_str = 'O selo ' + @p_nro_selo + ' Já foi Faturado'
	raiserror 26000 @v_str
	return
end

/* 001																*/
/* Não permitir devolução de selos a vista com boletos gerados		*/
/* Data de Implemtantação	: 22/03/2009							*/
/* Responsavel				: José Antonio Muñoz					*/

if @v_billing_line_id <> 0 and @v_tp_fat = 'A' and ( @v_selo_status =  '2' or @p_selo_status <> '2')
begin
	set @v_str = 'O selo Nro. "' + @p_nro_selo + '" Já foi utilizado e Faturado a vista, não pode ser alterado o status.'
	raiserror 26000 @v_str
	return
end
/* 001	FIM															*/


/* NO SE USA BEGIN TRANSACTION PORQUE SE ESTA CONTROLANDO DESDE POWER BUILDER*/
DELETE  pax_baixa_selecao_selos_u
WHERE cd_aerop     		= @p_cd_aerop 
	AND cd_terminal     = @p_cd_terminal 
	AND dt_mov          = @p_dt_mov 
	AND hh_mm           = @p_hh_mm 
	AND selo_status     = @p_selo_status 
	AND cd_motivo       = @p_cd_motivo 
	AND nro_selo        = @p_nro_selo
	AND inactive_ind  	<> 2

INSERT INTO pax_baixa_selecao_selos_u VALUES (
  	@p_cd_aerop          
  	,@p_cd_terminal     
  	,@p_dt_mov           
  	,@p_hh_mm           
  	,@p_selo_status     
  	,@p_cd_motivo      
  	,@p_nro_selo         
  	,'0'
  	,0)
    /*  ACTUALIZAR TABLA pax_selo_u CON LOS NUEVOS VALORES.
 AL EJECUTAR ESTE UPADATE SE ACTUALIZA AUTOMATICAMENTE LA 
 TABLA  pax_selo_log_u  DEBIDO AL TRIGGER DE ACTUALIZACION DE LA TABLA pax_selo_u */

SELECT @p_tp_natureza = SUBSTRING(@p_nro_selo,1,1)

/*
	001 - Utilizar itens para selos distribuido a Vista
	Responsable: José Muñoz
	Fecha: 04/10/2007
*/

if @v_tp_fat = 'A' and @p_tp_natureza in ('D','I')
begin
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) = 'V'
	ORDER BY   dt_vigencia DESC
end
else
begin
	SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) <> 'V'
	ORDER BY   dt_vigencia DESC
end

/*

SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
FROM GEACutcx..cor_item_pax_u 	(NOLOCK)
WHERE cd_aerop      		= @p_cd_aerop 
	AND cd_terminal     	= @p_cd_terminal 
	AND tp_natureza     	= @p_tp_natureza 
	AND dt_vigencia			<= @p_dt_mov
ORDER BY   dt_vigencia DESC

	Fim 001 - Utilizar itens para selos distribuido a Vista
	Responsable: José Muñoz
	Fecha: 04/10/2007
*/


IF @p_selo_status = '4'
BEGIN
	if @p_cd_motivo = 'DE'
	begin
		UPDATE pax_selo_u
		SET 
			dt_mov   				= CASE WHEN selo_status = '2' THEN dt_mov ELSE @dt_proceso END
			,selo_status  			= '3' /* Devolução */
			,cd_motivo  			= @p_cd_motivo
			,item_fat				= @p_item_fat
			,cd_aerop_utilizacao  	= @p_cd_aerop
			,cd_terminal_utilizacao	= @p_cd_terminal
			,tp_coletor  			= '03' -- BAIXA MANUAL
			,date_changed			= @dt_proceso
			,user_id_changed		= @user_proceso		
			,chgstamp				= chgstamp + 1
		WHERE nro_selo   			= @p_nro_selo
			and ano_remesa			= @p_ano_remesa
	end
	else
	begin
		UPDATE pax_selo_u
		SET 
			dt_mov   				= CASE WHEN selo_status = '2' THEN dt_mov ELSE @dt_proceso END
			,selo_status  			= @p_selo_status
			,cd_motivo  			= @p_cd_motivo
			,item_fat				= @p_item_fat
			,cd_aerop_utilizacao  	= @p_cd_aerop
			,cd_terminal_utilizacao	= @p_cd_terminal
			,tp_coletor  			= '03' -- BAIXA MANUAL
			,date_changed			= @dt_proceso
			,user_id_changed		= @user_proceso		
			,chgstamp				= chgstamp + 1
		WHERE nro_selo   			= @p_nro_selo
			and ano_remesa			= @p_ano_remesa
	end
END
ELSE
BEGIN
	UPDATE pax_selo_u
	SET 
		dt_mov   				= @p_dt_mov
		,selo_status  			= @p_selo_status
		,cd_motivo  			= @p_cd_motivo
		,item_fat				= @p_item_fat
		,cd_aerop_utilizacao  	= @p_cd_aerop
		,cd_terminal_utilizacao = @p_cd_terminal
		,tp_coletor  			= '03' -- BAIXA MANUAL
		,date_changed			= @dt_proceso
		,user_id_changed		= @user_proceso		
		,chgstamp				= chgstamp + 1
	WHERE nro_selo   			= @p_nro_selo
		and ano_remesa			= @p_ano_remesa

END
--   select @p_qtd_selos = @@rowcount

GO

/****** Object:  StoredProcedure [dbo].[psp_prepara_inf_varig]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_prepara_inf_varig    Script Date: 19/09/2008 15:20:20 ******/

-- exec psp_prepara_inf_varig 1215517
-- drop table jm_temp_vrg_selos_uti_maio_2006
CREATE  proc [dbo].[psp_prepara_inf_varig]
(   @p_boleto	int)
as


if not exists (select 1 from sysobjects where name = 'jm_temp_vrg_selos_uti_maio_2006')
begin
	select cd_aerop, 0 boleto, ' ' tp_natureza, 0 qtd
	into jm_temp_vrg_selos_uti_maio_2006
	from pax_selo_u (nolock)
	where billing_line_id  = 786
end

delete from jm_temp_vrg_selos_uti_maio_2006
where boleto = @p_boleto

insert into jm_temp_vrg_selos_uti_maio_2006
select cd_aerop_utilizacao, billing_line_id, tp_natureza, count(1) 
from pax_selo_u (nolock index = pax_selo_fatura)
where billing_line_id  = @p_boleto
group by cd_aerop_utilizacao, billing_line_id, tp_natureza

insert into jm_temp_vrg_selos_uti_maio_2006
select cd_aerop, billing_line_id, tp_natureza, count(1) 
from pax_selo_electronico_u (nolock)
where billing_line_id  = @p_boleto
group by cd_aerop, billing_line_id, tp_natureza


select cd_aerop
	,sum(qtd) 
from jm_temp_vrg_selos_uti_maio_2006
where boleto = @p_boleto
group by cd_aerop
order by cd_aerop

select nu_boleto_ss boleto
	,dt_vencimento	dt_vencimento	
	,vl_boleto		Valor
from GEACrrcv..gtb_docs_boleto_ctrl where nu_boleto_ss = @p_boleto




GO

/****** Object:  StoredProcedure [dbo].[psp_procesa_selo_f]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_procesa_selo_f    Script Date: 19/09/2008 15:20:21 ******/





/* 
exec psp_procesa_selo_f
*/
CREATE                         PROC [dbo].[psp_procesa_selo_f] 
(		@p_arquivo		char(40) = '%')
AS


/*
Discrepancias
1          Selo Inexistente
2          Selo Pendente de recebimento
3          Selo em processo de transferencia entre aeroportos
4          Selo não distribuido
5          RSTE não concluido
6          Selo já cancelado
7          Selo já utilizado
8          Selo já faturado
9          Selo de teste
10         Data de leitura maior que a data do processamento do arquivo
11         Data de leitura menor que a última data de movimento do selo
12         Selo já devolvido
*/


set nocount on

declare	 
	@p_cd_aerop					char(4)
	,@p_cd_terminal				char(10)
	,@p_dt_mov					datetime
	,@p_hh_mm					char(6)
	,@p_tp_selo					char(1)
	,@p_selo_status				char(1)
	,@p_cd_motivo				char(2)
	,@p_tp_coletor				char(16)
	,@p_tp_baixa				char(1)
	,@p_status_arq				char(1)
	,@p_date_changed			datetime
	,@p_user_id_changed			char(30)
	,@p_chgstamp				smallint

/* VARIABLES DE PROCESO */
	,@p_date_process			datetime
	,@p_user_process 			char(30)
	,@v_tp_selo					char(1)	
	,@v_mensaje 				varchar(255)
	,@p_mensaje					varchar(255)
	,@p_status_arq_aux			char(1)
	,@p_str_dt_temp				varchar(17)
	,@int_insert_discrepancia	smallint
	,@p_dt_mov_selo				datetime
	,@nr_total_lineas_arq		real
	,@nr_total_selos_validos	real
	,@nr_total_selos_invalidos	real
	,@nr_total_selos_discrep	real
	,@nr_total_lineas_err		real
	,@nr_qtd_discrepancias_tra 	real
	,@nr_qtd_duplicados			real
	,@p_cd_aerop_act 			char(4)
	,@p_cd_terminal_act			char(10)
	,@p_billing_line_id_act		integer
	,@p_tp_fat_act				char(1)
	,@p_selo_status_act  		char(1)
	,@p_dt_mov_act       		datetime
	,@p_msg 					char(2)
	,@p_selo_status_ind			char(1)
	,@v_ano_remesa				integer
	,@p_cd_situacao_rste 		char(1)
	,@p_nro_rste 				char(6)
	,@int_error             	integer
	,@p_nro_rste_act			char(6)
	,@p_cd_cia_aerea_act		char(3)
	,@ROWCOUNT					int
/* VARIABLES DA TABELA DE SELOS COLETADOS*/
	,@p_nro_linha				integer
	,@p_linha					char(30)
	,@p_nro_selo				char(14)

/* VARIABLES DA TABELA DE SELOS */
	,@p_ano_remesa				integer
	,@p_tp_natureza				char(1)
	,@p_tp_fat					char(1)
	,@p_cd_cia_aerea			char(3)
	,@p_item_fat				char(26)
	,@p_serie_coletor			char(15)
	,@p_sigla					char(4)

/* CREAR TABELA TEMPORARIA DE LOG DE PROCESO */
create table #TABLE_SALIDA  (
	linha		integer IDENTITY
	,mensaje	varchar(255) NULL)

/* CREAR TABELA TEMPORARIA DE SELOS COLETADOS */
create table #temp_pax_selos_coletados_u(
	arquivo				char(40)
	,nro_linha			integer
	,linha				char(30)
	,cd_aerop_num		char(3)
	,tp_selo			char(1)
	,nro_selo			char(14)
	,tp_baixa			char(1)
	,serie_coletor		char(15)
	,cpf_agente			char(11)
	,status_linha		char(1)
	,user_id_created	char(30)
	,date_created		datetime)


create index IX_ARQUIVO_LINHA on #temp_pax_selos_coletados_u (arquivo, nro_linha)

/* CREAR CURSOR PARA TABELA TEMPORARIA DE LOG DE PROCESO */
declare cursor_log_processo insensitive cursor for
select linha
	,mensaje
from #TABLE_SALIDA (nolock)
order by linha


/* DECLARAR CURSOR DE SELOS COLETADOS */
declare cursor_selos_coletados insensitive cursor for
select nro_linha
	,linha			
	,nro_selo
	,serie_coletor
from #temp_pax_selos_coletados_u (nolock)
order by 1,2

-- DECLARAR CURSOR
declare cursor_arquivos insensitive cursor for
select	 cd_aerop
	,cd_terminal
	,dt_mov
	,hh_mm
	,tp_selo
	,selo_status
	,arquivo
	,cd_motivo
	,status_arq
	,tp_coletor
from pax_baixa_selo_u (nolock index = ix_proceso)
where tp_selo	= 'F'
and status_arq	= '0'
and arquivo 	like @p_arquivo
order by substring(arquivo, 8, 13)


/* INICIALIZAR VARIABLES DE PROCESO */
select @p_date_process      	= getdate()
	,@p_user_process 			= suser_sname()

insert into #TABLE_SALIDA values ('Inicio do Processo (' + convert(varchar(30), @p_date_process, 120) + ')')

open cursor_arquivos
fetch next from cursor_arquivos into
	 @p_cd_aerop
	,@p_cd_terminal
	,@p_dt_mov

	,@p_hh_mm
	,@p_tp_selo
	,@p_selo_status
	,@p_arquivo
	,@p_cd_motivo
	,@p_status_arq
	,@p_tp_coletor 
while @@fetch_status = 0
begin
	set @int_error	= 0

	insert into #TABLE_SALIDA values ('PROCESANDO ARQUIVO ' + @p_arquivo)
	
	delete #temp_pax_selos_coletados_u
	
	insert into #temp_pax_selos_coletados_u
	select * from pax_selos_coletados_u (nolock)
	where arquivo 		= @p_arquivo
	and status_linha 	= '0'

	if @@ROWCOUNT = 0 /* NÃO SE CARREGARAM OS SELOS NA TABELA TEMPORÁRIA */
	begin
		select @int_error					= 1
			,@nr_total_lineas_err			= 0
			,@nr_total_selos_validos		= 0
			,@nr_total_lineas_arq			= 0
			,@nr_total_selos_discrep		= 0
			,@nr_total_selos_invalidos		= 0
			,@nr_qtd_discrepancias_tra 		= 0
			,@nr_qtd_duplicados				= 0
		goto SEGUIR 
	end
	
	/* BUSCAR QUANTIDADE DE LEITURAS DUPLICADAS*/
	create table #TEMP_2 (SELO char(20), CANTIDAD integer)

	insert into #TEMP_2
	select  nro_selo, COUNT(1) - 1
	from #temp_pax_selos_coletados_u A (nolock)
	where exists (select 1 from #temp_pax_selos_coletados_u B (nolock)
			where B.nro_selo = A.nro_selo
				and B.nro_linha <> A.nro_linha
				and A.nro_linha >= 3
				and B.nro_linha >= 3
				and A.nro_selo <> '' )
	GROUP BY A.nro_selo
	
	select @nr_qtd_duplicados = isnull(SUM(CANTIDAD),0) from #TEMP_2 (nolock)
	insert into #TABLE_SALIDA values ('LEITURAS DUPLICADAS ' + ltrim(rtrim(str(@nr_qtd_duplicados))))			
	drop table #TEMP_2
	/* FIM BUSCAR QUANTIDADE DE LEITURAS DUPLICADAS*/	


   begin transaction
	/* CREAR TABLA PARA MANEJO DE DEVOLUÇOES*/
   if @p_selo_status = '3'
   begin
      create table #TABLE_DEV (	cd_cia_aerea	char(3), nro_selo 	char(14), ano_remesa integer)
      create index IX_NRO_SELO on #TABLE_DEV (cd_cia_aerea, nro_selo)
   end
	/* FIM CREAR TABLA PARA MANEJO DE DEVOLUÇOES*/

	select @nr_total_lineas_arq			= 0
         ,@nr_total_selos_validos		= 0
         ,@nr_total_selos_invalidos		= 0
         ,@nr_total_lineas_err			= 0
         ,@nr_total_selos_discrep		= 0

	open cursor_selos_coletados
	fetch next from cursor_selos_coletados into
		@p_nro_linha		
		,@p_linha			
		,@p_nro_selo			
		,@p_serie_coletor
   while @@fetch_status = 0
   begin
      if @p_nro_linha = 1
      begin
      	if LEFT(@p_linha, 1) <> '*'
      	begin 
      		insert into #TABLE_SALIDA values ('ERRO NA PRIMEIRA LINHA DO ARQUIVO ' + rtrim(ltrim(@p_arquivo)))		
      		goto LEER_PROXIMO_ARQUIVO
      	end
      end
   		
      if @p_nro_linha >= 2
      begin
         if LEFT(@p_linha, 1) = '#'
         begin
         	--insert into #TABLE_SALIDA values ('LINHA # ' + rtrim(ltrim(@p_linha)))
         	set @p_str_dt_temp = '20' + substring(@p_linha,13,6)
         	if ISDATE (@p_str_dt_temp) = 0
         	begin
         		insert into #TABLE_SALIDA values ('DATA DE LOGIN DO FUNCIONARIO INVALIDA ' + substring(@p_linha,13,6))
         		goto LEER_PROXIMO_ARQUIVO
         	end
         end
         else
         begin
            --insert into #TABLE_SALIDA values ('LINHA DE SELO ' + rtrim(ltrim(@p_linha)))
            select @p_tp_natureza             	= LEFT(@p_nro_selo, 1)
            		,@int_insert_discrepancia	= 0
            /* VALIDAR DATA DA LEITURA DO SELO */
            set @p_str_dt_temp = '20' + substring(@p_linha,1,6) + ' ' + substring(@p_linha,7,2) +':'+ substring(@p_linha,9,2) +':'+ substring(@p_linha,11,2)
            if ISDATE (@p_str_dt_temp) = 0
            begin
            	insert into #TABLE_SALIDA values ('DATA DE LEITURA DE SELO INVALIDA ' + @p_str_dt_temp )
            	set @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
            	goto LEER_PROXIMA_LINHA
            end
            /* VALIDAR O NUEMRO DO SELO */

            if substring(@p_linha,14,9) <> @p_nro_selo
            begin
            	insert into #TABLE_SALIDA values ('NRO DE SELO INVALIDO NA TABELA DE COLETA (' + @p_nro_selo +'/' + substring(@p_linha,14,9))
            	set @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1	
            	goto LEER_PROXIMA_LINHA
            end
            /* VERifICAR DATA DE MOVIMENTO
            - SE FOR UTILIZAÇÃO SE UTILIZA A DATA E HORA DA LEITURA
            - SE FOR CANCELAMENTO SE UTILIZA A DATA E HORA DO ARQUIVO */
            if 	@p_selo_status = '4' 
            begin
            	set @p_dt_mov_selo = convert(varchar, @p_dt_mov, 112) +' '+ substring(@p_arquivo, 15, 2) +':'+ substring(@p_arquivo, 17, 2) +':'+ substring(@p_arquivo, 19, 2) 
            end
            else
            begin
            	set @p_dt_mov_selo = substring(@p_str_dt_temp, 1,8) +' '+ substring(@p_linha, 7,2) +':'+ substring(@p_linha, 9, 2) +':'+ substring(@p_linha, 11, 2) 
            end
            /* VALIDAR O NUMERO DO SELO */
            if ISNUMERIC(substring(@p_nro_selo,3,7)) = 0 
            begin
            insert into #TABLE_SALIDA values ('NRO DE SELO INVALIDO. (' + @p_nro_selo +')')
               set @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
               goto LEER_PROXIMA_LINHA
            end
            
            /* VALIDAR NATUREZA DO SELO */
            if @p_tp_natureza NOT IN ('D','I','S') 
            begin
               insert into #TABLE_SALIDA values ('NATUREZA DO SELO INVALIDO. (' + @p_tp_natureza +')')
               set @nr_total_selos_invalidos = @nr_total_selos_invalidos + 1
               goto LEER_PROXIMA_LINHA
            end
			
			select @p_sigla = sigla from pax_coletor_u (nolock index = P_pax_coletor_u) where serial = @p_serie_coletor
				
            set @v_ano_remesa	= year(@p_dt_mov_selo)

			select @p_cd_aerop_act 			= cd_aerop 
				,@p_cd_terminal_act			= cd_terminal
				,@p_billing_line_id_act		= billing_line_id 
				,@p_tp_fat_act				= tp_fat
				,@p_selo_status_act  		= selo_status
				,@p_dt_mov_act       		= dt_mov
				,@v_ano_remesa				= ano_remesa
				,@p_nro_rste_act			= nro_rste				
				,@p_cd_cia_aerea_act		= cd_cia_aerea
			from pax_selo_u (nolock index 	= P_pax_selo_u)  
			where nro_selo 					= @p_nro_selo
				
			set @ROWCOUNT = @@ROWCOUNT			

			if @ROWCOUNT <= 0
			begin
				insert into #TABLE_SALIDA values ('Selo Inexistente. (' + @p_nro_selo +')')
				select @p_msg = '1', @p_selo_status_ind = 'E'
				exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
				,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
				,@p_date_process, @p_user_process,@v_ano_remesa
				select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
				goto LEER_PROXIMA_LINHA
			end

			if @ROWCOUNT > 1
			begin
				select @p_cd_aerop_act 			= cd_aerop 
					,@p_cd_terminal_act			= cd_terminal
					,@p_billing_line_id_act		= billing_line_id 
					,@p_tp_fat_act				= tp_fat
					,@p_selo_status_act  		= selo_status
					,@p_dt_mov_act       		= dt_mov
					,@v_ano_remesa				= ano_remesa
					,@p_nro_rste_act			= nro_rste				
					,@p_cd_cia_aerea_act		= cd_cia_aerea
				from pax_selo_u (nolock index 	= P_pax_selo_u)  
				where nro_selo 					= @p_nro_selo
					and cd_aerop				= @p_sigla
					
				set @ROWCOUNT = @@ROWCOUNT			
				
				if @ROWCOUNT = 0 or @ROWCOUNT > 1
				begin
					select top 1 
						@p_cd_aerop_act 			= cd_aerop 
						,@p_cd_terminal_act			= cd_terminal
						,@p_billing_line_id_act		= billing_line_id 
						,@p_tp_fat_act				= tp_fat
						,@p_selo_status_act  		= selo_status
						,@p_dt_mov_act       		= dt_mov
						,@v_ano_remesa				= ano_remesa
						,@p_nro_rste_act			= nro_rste				
						,@p_cd_cia_aerea_act		= cd_cia_aerea
					from pax_selo_u (nolock index 	= P_pax_selo_u)  
					where nro_selo 					= @p_nro_selo
						and ano_remesa				< @v_ano_remesa
						and selo_status				in( '1', '0')
				
					set @ROWCOUNT = @@ROWCOUNT			


					if @ROWCOUNT = 0
					begin
						select top 1 @p_cd_aerop_act 	= cd_aerop 
							,@p_cd_terminal_act			= cd_terminal
							,@p_billing_line_id_act		= billing_line_id 
							,@p_tp_fat_act				= tp_fat
							,@p_selo_status_act  		= selo_status
							,@p_dt_mov_act       		= dt_mov
							,@v_ano_remesa				= ano_remesa
							,@p_nro_rste_act			= nro_rste				
							,@p_cd_cia_aerea_act		= cd_cia_aerea
						from pax_selo_u (nolock index 	= P_pax_selo_u)  
						where nro_selo 					= @p_nro_selo
							and ano_remesa				<= @v_ano_remesa				
						order by ano_remesa desc
						set @ROWCOUNT = @@ROWCOUNT
					end

				end
			end

			
/*	original		
	alterado MUNOZ	06/09/2006

			select top 1 @p_cd_aerop_act 	= cd_aerop 
				,@p_cd_terminal_act			= cd_terminal
				,@p_billing_line_id_act		= billing_line_id 
				,@p_tp_fat_act				= tp_fat
				,@p_selo_status_act  		= selo_status
				,@p_dt_mov_act       		= dt_mov
				,@v_ano_remesa				= ano_remesa
				,@p_nro_rste_act			= nro_rste				
				,@p_cd_cia_aerea_act		= cd_cia_aerea
			from pax_selo_u (nolock index 	= P_pax_selo_u)  
			where nro_selo 					= @p_nro_selo
				and ano_remesa				< @v_ano_remesa
				and selo_status				in( '1', '0')
			order by ano_remesa desc
			set @ROWCOUNT = @@ROWCOUNT			

			if @ROWCOUNT = 0
			begin
				select top 1 @p_cd_aerop_act 	= cd_aerop 
					,@p_cd_terminal_act			= cd_terminal
					,@p_billing_line_id_act		= billing_line_id 
					,@p_tp_fat_act				= tp_fat
					,@p_selo_status_act  		= selo_status
					,@p_dt_mov_act       		= dt_mov
					,@v_ano_remesa				= ano_remesa
					,@p_nro_rste_act			= nro_rste				
					,@p_cd_cia_aerea_act		= cd_cia_aerea
				from pax_selo_u (nolock index 	= P_pax_selo_u)  
				where nro_selo 					= @p_nro_selo
					and ano_remesa				<= @v_ano_remesa				
				order by ano_remesa desc
				set @ROWCOUNT = @@ROWCOUNT
			end
			
			
			if @ROWCOUNT = 0
			begin
				insert into #TABLE_SALIDA values ('Selo Inexistente. (' + @p_nro_selo +')')
				select @p_msg = '1', @p_selo_status_ind = 'E'
				exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
				,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
				,@p_date_process, @p_user_process,@v_ano_remesa
				select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
				goto LEER_PROXIMA_LINHA
			end

	FIM ORIGINAL
	ALTERADO MUNOZ 06/09/2006
*/
  			
   			/* VALIDAR SI O SELO JA FOI FATURADO OU SE TEM  BOLETO GERADO*/	
			set @p_tp_fat = @p_tp_fat_act
            if @p_billing_line_id_act <> 0 and @p_tp_fat = 'F'
            begin
               insert into #TABLE_SALIDA values ('Selo já faturado. (' + @p_nro_selo +')')
               select @p_msg = '8', @p_selo_status_ind = 'E'
               exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                  ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                  ,@p_date_process, @p_user_process,@v_ano_remesa
               select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
               goto LEER_PROXIMA_LINHA

            end
   			
            /* VALIDAR SI NRO_RSTE ESTA CONCLUIDO */
            select @p_cd_situacao_rste 	= B.cd_situacao_rste 
                   ,@p_nro_rste 		= B.nro_rste
            from GEACupax..pax_entrega_selo_line_u A (nolock index = ix_consulta)
            INNER JOIN GEACupax..pax_entrega_selo_ctrl_u B (nolock index = P_pax_entrega_selo_ctrl_u)
            ON B.cd_aerop 			= A.cd_aerop
                and B.cd_terminal 	= A.cd_terminal
                and B.dt_entrega  	= A.dt_entrega
                and B.hh_entrega  	= A.hh_entrega
                and B.cd_cia_aerea 	= A.cd_cia_aerea
                and B.nro_rste		= A.nro_rste

            where A.cd_aerop 		= @p_cd_aerop_act
			and A.cd_terminal		= @p_cd_terminal_act
			and A.nro_rste			= @p_nro_rste_act
			and A.cd_cia_aerea		= @p_cd_cia_aerea_act
			and A.ano_remesa 		= @v_ano_remesa
            and @p_nro_selo			between A.nro_selo_inicial and  A.nro_selo_final 
            and B.cd_situacao_rste 	= '1'
   			
            if @@ROWCOUNT = 0 
            begin
            insert into #TABLE_SALIDA values ('RSTE não concluido.')
                select @p_msg = '5', @p_selo_status_ind = 'E'
                exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
            		,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
            		,@p_date_process, @p_user_process,@v_ano_remesa
                select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                goto LEER_PROXIMA_LINHA
            end
			
   			/* VALIDA A DATA DO MOVIMENTO. NÃO PODE SER ANTERIOR À DATA DO ÚLTIMO MOVIMENTO DO SELO */
   			if ( @p_dt_mov_selo < @p_dt_mov_act  )
           	begin
   				insert into #TABLE_SALIDA values ('Data de leitura menor que a última data de movimento do selo.')
               	select @p_msg = '11', @p_selo_status_ind = 'E'
               	exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process,@v_ano_remesa
               	select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
               	goto LEER_PROXIMA_LINHA
           	end
   			
   			if ( @p_dt_mov > @p_date_process  )
           	begin
   				insert into #TABLE_SALIDA values ('Data de leitura maior que a data do processamento do arquivo.')
               select @p_msg = '10' ,@p_selo_status_ind = 'E'
               exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                  ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                  ,@p_date_process, @p_user_process,@v_ano_remesa
               select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
               goto LEER_PROXIMA_LINHA
           	end
			
   			/* VALIDAR SE O SELO FOI RECIBIDO */
            if @p_selo_status_act = '0'
            begin
               insert into #TABLE_SALIDA values ('Selo Pendente de recebimento (' + @p_nro_selo + ')')
               select @p_msg = '2' ,@p_selo_status_ind = 'E'
               exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                  ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                  ,@p_date_process, @p_user_process,@v_ano_remesa
               select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
               goto LEER_PROXIMA_LINHA
            end 
   			
			/* VALIDAR SE O SELO NO FOI CANCELADO ANTERIORMENTE*/
            if @p_selo_status_act = '4'
            begin
				insert into #TABLE_SALIDA values ('Selo já cancelado (' + @p_nro_selo + ')')
				select @p_msg = '6' ,@p_selo_status_ind = 'E'
				exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
				,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
				,@p_date_process, @p_user_process,@v_ano_remesa
				select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
				goto LEER_PROXIMA_LINHA
			end 
			
            /* VALIDAR SE O SELO SE ENCONTRA EM PROCESSO DE TRANSFERÊNCIA ENTRE AEROPORTOS */
            if @p_selo_status_act = '5'
            begin
               insert into #TABLE_SALIDA values ('Selo em processo de transferencia entre aeroportos (' + @p_nro_selo + ')')
               select @p_msg = '3' ,@p_selo_status_ind = 'E'
               exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                  ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                  ,@p_date_process, @p_user_process,@v_ano_remesa
               select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
               goto LEER_PROXIMA_LINHA
            end 
			
            /* VALIDAR SE O SELO JA FOI DISTRIBUIDO */
            if @p_selo_status_act = '9'
            begin
               insert into #TABLE_SALIDA values ('Selo não distribuido (' + @p_nro_selo + ')')
               select @p_msg = '4' ,@p_selo_status_ind = 'E'
               exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                  ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                  ,@p_date_process, @p_user_process,@v_ano_remesa
               select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
               goto LEER_PROXIMA_LINHA
            end 
			
            /* VALIDAÇÕES PARA QUANDO É UTILIZAÇÃO DO SELO */ 
            if @p_selo_status = '2'
            begin
               /* VALIDAR SE O SELO JA FOI UTILIZADO*/
               if @p_selo_status_act = '2' 
               begin
                  insert into #TABLE_SALIDA values ('Selo já utilizado (' + @p_nro_selo + ')')
                  select @p_msg = '7' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process,@v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
               end 
               
               /* VALIDAR SE O SELO NAO FOI */
               if @p_selo_status_act = '3' or @p_selo_status_act = '0'
               begin
                  insert into #TABLE_SALIDA values ('Selo não distribuido (' + @p_nro_selo + ')')
                  select @p_msg = '4' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process,@v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
               end 
            end 
			
            /* VALIDAÇÕES PARA QUANDO É DEVOLUÇÃO DO SELO */ 
            if @p_selo_status = '3'
            begin
              /* VALIDAR SE O SELO JA FOI UTILIZADO*/	
			/* ALTERADO MUNOZ 31/01/2005
				PERMITIR CANCELAR OS SELOS UTILIZADO SEM BOLETOS
               if @p_selo_status_act = '2'
               begin
                  insert into #TABLE_SALIDA values ('Selo já utilizado (' + @p_nro_selo + ')')
                  select @p_msg = '7' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
               end 
			*/	
               /* VALIDAR SE O SELO JA FOI DEVOLVIDO*/

               if @p_selo_status_act = '3'
               begin
                  insert into #TABLE_SALIDA values ('Selo já devolvido (' + @p_nro_selo + ')')
                  select @p_msg = '12' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor

                     ,@p_date_process, @p_user_process,@v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
               end 
				
				/* 001 - Incluido Munoz 21/06/2006 */
				if @p_selo_status_act = '2' and @p_billing_line_id_act <> 0 
				begin
                  insert into #TABLE_SALIDA values ('Selo já faturado (' + @p_nro_selo + ')')
                  select @p_msg = '8' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process,@v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
				end
				/* FIM 001 - Incluido Munoz 21/06/2006 */
   			end     
			
            --  Cancelamento 
            if @p_selo_status = '4'
            begin
               /* VALIDAR SE O SELO JA FOI DEVOLVIDO*/
               if @p_selo_status_act = '3'
               begin
                  insert into #TABLE_SALIDA values ('Selo já devolvido (' + @p_nro_selo + ')')
                  select @p_msg = '12' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process, @v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
               end 
               /* VALIDAR SE O SELO FOI DISTRIBUIDO */					
               if @p_selo_status_act = '4'
               begin
                  insert into #TABLE_SALIDA values ('Selo não distribuido (' + @p_nro_selo + ')')
                  select @p_msg = '4' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process, @v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
               end 

				/* 002 - Incluido Munoz 21/06/2006 */
				if @p_selo_status_act = '2' and @p_billing_line_id_act <> 0 
				begin
                  insert into #TABLE_SALIDA values ('Selo já faturado (' + @p_nro_selo + ')')
                  select @p_msg = '8' ,@p_selo_status_ind = 'E'
                  exec gsp_ins_selos_discrep @p_cd_aerop, @p_cd_terminal, @p_dt_mov_selo, @p_selo_status, @p_nro_selo    
                     ,@p_selo_status_ind, '', @p_msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor
                     ,@p_date_process, @p_user_process,@v_ano_remesa
                  select @nr_total_selos_discrep = @nr_total_selos_discrep + 1
                  goto LEER_PROXIMA_LINHA
				end
				/* FIM 002 - Incluido Munoz 21/06/2006 */

               
               if @p_selo_status_act = '2'
               begin
                  set @p_dt_mov_selo = @p_dt_mov 
               end
               
               if @p_selo_status_act IN ('0', '1', '3')
               begin
                  set @p_dt_mov_selo = convert(varchar, @p_dt_mov , 112) + ' 23:59:00.000'
               end
            end
   
            /* BUSCAR O ITEM A FATURAR */

/*
            select top 1 @p_item_fat = isnull(item_id,'')
            from GEACutcx..cor_item_pax_u 	(nolock index = P_cor_item_pax_u)
            where cd_aerop      	= @p_cd_aerop 
               and cd_terminal     	= @p_cd_terminal 
               and tp_natureza     	= @p_tp_natureza 
               and dt_vigencia		<= @p_dt_mov_selo
               and inactive_ind		= '0'
            order by dt_vigencia desc
*/

			if @p_tp_fat = 'A' and @p_tp_natureza in ('D','I')
			begin
				SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
				FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
				WHERE cd_aerop      		= @p_cd_aerop 

				    AND cd_terminal     	= @p_cd_terminal 
				    AND tp_natureza     	= @p_tp_natureza 
				    AND dt_vigencia			<= @p_dt_mov
					and inactive_ind		= '0'
					AND RIGHT(RTRIM(item_id),1) = 'V'
				ORDER BY   dt_vigencia DESC
			end
			else
			begin
				SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
				FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
				WHERE cd_aerop      		= @p_cd_aerop 
				    AND cd_terminal     	= @p_cd_terminal 
				    AND tp_natureza     	= @p_tp_natureza 
				    AND dt_vigencia			<= @p_dt_mov
					and inactive_ind		= '0'
					AND RIGHT(RTRIM(item_id),1) <> 'V'
				ORDER BY   dt_vigencia DESC
			end

							
            /* ACTUALIZAR A INOFRMAÇÃO DO SELO */
            update GEACupax..pax_selo_u
            set 
               cd_aerop_utilizacao     		= @p_cd_aerop
               ,cd_terminal_utilizacao  	= @p_cd_terminal       
               ,dt_mov                  	= @p_dt_mov_selo
               ,item_fat					= case when tp_fat = 'F' then @p_item_fat else item_fat end
               ,selo_status             	= @p_selo_status       
               ,cd_motivo             		= @p_cd_motivo  
               ,tp_coletor  				= @p_tp_coletor        
               ,date_changed				= @p_date_process
               ,user_id_changed				= @p_user_process
               ,chgstamp					= chgstamp + 1
            where nro_selo      	= @p_nro_selo
               and ano_remesa		= @v_ano_remesa
   			
            if @p_selo_status = '3'
            begin
               insert into #TABLE_DEV  
               select cd_cia_aerea , nro_selo, ano_remesa
               from GEACupax..pax_selo_u (nolock index = P_pax_selo_u)  
               where nro_selo 	 = @p_nro_selo
                  and ano_remesa = @v_ano_remesa
            end
            select @nr_total_selos_validos = @nr_total_selos_validos + 1  
			end
		end
	   	LEER_PROXIMA_LINHA:	
	   
	   	update pax_selos_coletados_u 		
	   	set status_linha 	= '1'
	   	where arquivo		= @p_arquivo
	   	and nro_linha		= @p_nro_linha
	   
		fetch next from cursor_selos_coletados into
	   		@p_nro_linha		
	   		,@p_linha
	   		,@p_nro_selo			
			,@p_serie_coletor
	end

	LEER_PROXIMO_ARQUIVO:

	close cursor_selos_coletados

   update GEACupax..pax_baixa_selo_u 
   set status_arq   		= '1'
      ,qtd_selos   			= @nr_total_selos_validos
      ,qtd_discrepancias	= @nr_total_selos_discrep
      ,qtd_lineas_erro		= @nr_total_selos_invalidos
      ,qtd_duplicados		= @nr_qtd_duplicados
      ,date_changed   		= @p_date_process
      ,user_id_changed  	= @p_user_process
   where  cd_aerop 			= @p_cd_aerop
      and cd_terminal 		= @p_cd_terminal
      and dt_mov  			= @p_dt_mov
      and hh_mm  			= @p_hh_mm
      and arquivo			= @p_arquivo
        
   SEGUIR:
   if @int_error = 0
   begin
		-- SI ES UNA DEVOLUSAO, CREAR EL REGISTRO EN LA ACTIVIDAD DE DEVOLUCOES.
      if @p_selo_status = '3'
      begin
         declare @p_cd_cia_aerea_aux	char(3)
            ,@p_nro_selo_ant			char(10)
            ,@p_nro_selo_inicial		char(10)
            ,@p_nro_selo_final			char(10)
            ,@p_crear_linea				integer
            ,@p_nro_rdev_number			integer
            ,@p_nro_rdev				char(6)
            ,@p_qtd_selos				integer
            ,@p_max_nro_selo			char(10)
            ,@p_cd_cia_aerea_ant		char(3)
			,@p_ano_remesa_dev			integer	
	    /* CREAR LOS HEADERS */
			
         declare cur_cia cursor for
         select distinct(cd_cia_aerea)
         from #TABLE_DEV order by 1
		            
         open cur_cia 
         fetch next from cur_cia into @p_cd_cia_aerea_aux
		    
         while @@fetch_status = 0
         begin
            select @p_nro_rdev_number = isnull(MAX(str(nro_rdev)) + 1, 1) 
            from pax_dev_selo_ctrl_u (nolock index = P_pax_dev_selo_ctrl_u)
            where cd_aerop		= @p_cd_aerop
            and cd_terminal		= @p_cd_terminal
            and cd_cia_aerea	= @p_cd_cia_aerea_aux
					
            select @p_nro_rdev = right(convert(char(7), 1000000 + @p_nro_rdev_number),6)
		        
            insert into pax_dev_selo_ctrl_u values (
               @p_cd_aerop
               ,@p_cd_terminal
               ,convert(varchar,@p_dt_mov,112) 
               ,@p_cd_cia_aerea_aux
               ,@p_nro_rdev
               ,@p_arquivo 
               ,@p_date_process
               ,@p_user_process
               ,'19000101'
               ,' '

               ,'0'
               ,'19000101'
               ,0 )
		             
            -- CREAR LINEAS PARA CADA HEADER CREADO EL HEADER
            declare cur_cia_selo CURSOR FOR
            select nro_selo, ano_remesa
            from #TABLE_DEV 
            where cd_cia_aerea = @p_cd_cia_aerea_aux
            order by 1
            
            select @p_max_nro_selo = MAX(nro_selo) 
            from #TABLE_DEV where cd_cia_aerea = @p_cd_cia_aerea_aux
            
            open cur_cia_selo 
            fetch next from cur_cia_selo into @p_nro_selo, @p_ano_remesa_dev
            
            if @@fetch_status = 0 
            begin
               select @p_cd_cia_aerea_ant 	= @p_cd_cia_aerea_aux
               ,@p_nro_selo_inicial		= @p_nro_selo
               ,@p_nro_selo_ant			= @p_nro_selo
            end 
		        
            while @@fetch_status = 0
            begin
               if (@p_nro_selo <> @p_nro_selo_ant)
               begin
                  if (substring(@p_nro_selo,1,2) <> substring(@p_nro_selo_ant,1,2)) 
                     OR (convert(integer, right(ltrim(rtrim(@p_nro_selo)), 7)) <> convert(INT, right(ltrim(rtrim(@p_nro_selo_ant)), 7)) + 1 )
                     OR (@p_max_nro_selo = @p_nro_selo)
                  begin
                     if (@p_max_nro_selo = @p_nro_selo) 
                        and ((convert(integer, right(ltrim(rtrim(@p_nro_selo)), 7)) = convert(INT, right(ltrim(rtrim(@p_nro_selo_ant)), 7)) + 1 ))
                        select @p_nro_selo_final 	= @p_nro_selo
                     else
                        select @p_nro_selo_final 	= @p_nro_selo_ant
		                  
                     select @p_crear_linea	= 1
                  end 
               end 
		            
               if @p_crear_linea	= 1
               begin
                  select @p_qtd_selos = convert(integer, right(ltrim(rtrim(@p_nro_selo_final)),7)) - convert(INT, right(ltrim(rtrim(@p_nro_selo_inicial)),7)) + 1
                  insert into pax_dev_selo_line_u values (
                     @p_cd_aerop
                     ,@p_cd_terminal
                     ,convert(varchar,@p_dt_mov,112)
                     ,@p_cd_cia_aerea_aux
                     ,@p_nro_rdev
                     ,@p_nro_selo_inicial
                     ,@p_nro_selo_final
                     ,@p_qtd_selos
                     ,@p_date_process
                     ,@p_user_process
                     ,'19000101'
                     ,SPACE(1)
                     ,'0'
                     ,'19000101'
                     ,0)
					
                  update  pax_selo_u
                  set tp_fat			= ' '
                     ,cd_motivo			= ' '
                     ,cd_cia_aerea		= ' '
                     ,selo_status		= '3'
                     ,item_fat			= ' '
                     ,nro_rste			= @p_nro_rdev
                     ,date_changed		= @p_date_process
                     ,user_id_changed	= @p_user_process	
                     ,dt_mov			= case when convert(varchar, dt_confirma,112) = '19000101' then date_created else dt_confirma end
                     ,chgstamp			= chgstamp + 1
                  from  pax_selo_u 
                  where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
                     and ano_remesa			= @p_ano_remesa_dev
                     and billing_line_id	= 0
						
                  select @p_nro_selo_inicial 	= @p_nro_selo
                     	,@p_crear_linea			= 0
               end
               select @p_nro_selo_ant = @p_nro_selo
               -- LEER NUEVO SELO
               fetch next from cur_cia_selo into @p_nro_selo, @p_ano_remesa_dev
            end
            -----------------------------------
			if @p_nro_selo_ant <> @p_nro_selo_final
			begin
               --PRINT 'CREAR NUEVA LINEA'
               insert into pax_dev_selo_line_u values (
                  @p_cd_aerop
                  ,@p_cd_terminal
                  ,convert(varchar,@p_dt_mov,112)
                  ,@p_cd_cia_aerea
                  ,@p_nro_rdev
                  ,@p_max_nro_selo
                  ,@p_max_nro_selo
                  ,1
                  ,@p_date_process
                  ,@p_user_process
                  ,'19000101'
                  ,space(1)
                  ,'0'
                  ,'19000101'
                  ,0)
            end
            close cur_cia_selo
            deallocate cur_cia_selo
            -- LEER NUEVO HEADER
            fetch next from cur_cia into @p_cd_cia_aerea_aux
         end
         close cur_cia 
         deallocate cur_cia 
			
			-- colocar los selos disponibles			
         drop index #TABLE_DEV.IX_NRO_SELO 
         drop table #TABLE_DEV 
	end
	commit transaction 
	insert into #TABLE_SALIDA values ('FIM PROCESO ARQUIVO : ' + ltrim(rtrim(@p_arquivo)))
	
	end
	else
	begin
		-- Alterado por PEDRO em 02/01/2005      
		if @@TRANCOUNT >= 1
		-- Fim alteracao 02/01/2005      
         	rollback transaction
		update GEACupax..pax_baixa_selo_u 
		set status_arq   			= '2'
			,qtd_selos   			= @nr_total_selos_validos
			,qtd_discrepancias		= @nr_total_selos_discrep
			,qtd_lineas_erro		= @nr_total_selos_invalidos
			,date_changed   		= @p_date_process
			,user_id_changed  		= @p_user_process
		where cd_aerop  			= @p_cd_aerop
			and cd_terminal  		= @p_cd_terminal
			and dt_mov  			= @p_dt_mov
			and hh_mm  				= @p_hh_mm
			and arquivo				= @p_arquivo
	end
	/* LER PROXIMO ARQUIVO */
	fetch next from cursor_arquivos into
       @p_cd_aerop
      ,@p_cd_terminal
      ,@p_dt_mov
      ,@p_hh_mm
      ,@p_tp_selo
      ,@p_selo_status
      ,@p_arquivo
      ,@p_cd_motivo
      ,@p_status_arq
      ,@p_tp_coletor 
end
 
deallocate cursor_selos_coletados
close cursor_arquivos
deallocate cursor_arquivos

insert into #TABLE_SALIDA values ('Fim do Processo (' + convert(varchar(30), GETDATE(), 120) + ')')
/* MOSTRAR SAIDA DO PROCESSO */
open cursor_log_processo

fetch next from cursor_log_processo into
		 @p_linha
		,@p_mensaje

while @@fetch_status = 0
begin
   set @v_mensaje = @p_mensaje + char(10) + char(13) 
   print @v_mensaje
   fetch next from cursor_log_processo into
   	 @p_linha
   	,@p_mensaje
end
 
close cursor_log_processo
deallocate cursor_log_processo

drop table #TABLE_SALIDA
drop table #temp_pax_selos_coletados_u

set nocount off









GO

/****** Object:  StoredProcedure [dbo].[psp_procesa_selo_l]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_procesa_selo_l    Script Date: 19/09/2008 15:20:21 ******/










/* Declaracion de Variables 
select * from pax_baixa_selo_u  
where 

update pax_baixa_selo_u  
set status_arq = '0'
,qtd_discrepancias = 0
where tp_selo = 'F'

EXEC psp_procesa_selo_t
 
*/
CREATE                 PROC [dbo].[psp_procesa_selo_l] 
(		@p_arquivo		char(40) = '%')
AS

/*
Discrepancias
1         	Selo eletrônico já utilizado
2         	Selo eletrônico já faturado
3         	Status de selo inválido
6         	Não encontrou item para faturar
7         	Selo eletrônico já confirmado
8         	Selo eletrônico já cancelado
9         	Prefixo de cia aérea inválido
10        	Natureza do vôo inválida
11        	Selo eletrônico já existente
12        	Selo eletrônico já transferido
13        	Utilização passa das 6 horas permitidas
14        	Linha do arquivo inválida
15        	Cia aérea inválida
16        	Selo eletrônico não utilizável nesta data
17        	Selo eletrônico internacional não utilizável
19        	Número de selo inválido
20			Número de Vôo não pode ser operado pela CIA Aérea.
*/


set NOCOUNT ON

declare	 
	@p_cd_aerop					char(4)
	,@p_cd_terminal				char(10)
	,@p_dt_mov					datetime
	,@p_hh_mm					char(6)
	,@p_tp_selo					char(1)
	,@p_selo_status				char(1)
	,@p_cd_motivo				char(2)
	,@p_tp_coletor				char(16)
	,@p_tp_baixa				char(1)
	,@p_status_arq				char(1)
	,@p_date_changed			datetime
	,@p_user_id_changed			char(30)
	,@p_chgstamp				smallint

/* VARIABLES DE PROCESO */
	,@p_date_process			datetime
	,@p_user_process 			char(30)
	,@v_tp_selo					char(1)	
	,@v_mensaje 				varchar(255)
	,@p_mensaje					varchar(255)
	,@p_status_arq_aux			char(1)
	,@p_str_dt_temp				varchar(17)
	,@int_insert_discrepancia	smallint
	,@p_dt_mov_selo				datetime
	,@nr_total_lineas_arq		real
	,@nr_total_selos_validos	real
	,@nr_total_selos_invalidos	real
	,@nr_total_selos_discrep	real
	,@nr_total_lineas_err		real
	,@nr_qtd_discrepancias_tra 	real
	,@nr_qtd_duplicados			real
	,@p_cd_aerop_act 			char(4)
	,@p_billing_line_id_act		integer
	,@p_tp_fat_act				char(1)
	,@p_selo_status_act  		char(1)
	,@p_dt_mov_act       		datetime
	,@p_msg 					char(2)
	,@p_selo_status_ind			char(1)
	,@p_cd_situacao_rste 		char(1)
	,@p_nro_rste 				char(6)
	,@int_error             	integer
	,@w_discrepancia			char(2)
	,@p_prefixo_cia_aerea		char(2)
	,@p_voo_rea					char(4)
	,@p_hh_voo_rea				char(6)
	,@p_tp_coletor_act			char(16)
	,@p_dt_confirma_act			datetime
	,@p_dt_temp 				datetime
	,@p_aerop_utilizacao_act	char(4)
	,@ROWCOUNT					smallint
	,@p_hh_mov					char(6)

/* VARIABLES DA TABELA DE SELOS COLETADOS*/
	,@p_nro_linha				integer
	,@p_linha					char(30)
	,@p_nro_selo				char(14)

/* VARIABLES DA TABELA DE SELOS */
	,@p_tp_natureza				char(1)
	,@p_tp_fat					char(1)
	,@p_cd_cia_aerea			char(3)
	,@p_item_fat				char(26)
	,@v_dt_ini_ope				datetime

/* CREAR TABELA TEMPORARIA DE LOG DE PROCESO */
create table #TABLE_SALIDA_ELEC_L  (
	linha		integer IDENTITY
	,mensaje	varchar(255) NULL)

/* CREAR TABELA TEMPORARIA DE SELOS COLETADOS */
create table #temp_pax_selos_coletados_u_elec_l(
	arquivo				char(40)
	,nro_linha			integer
	,linha				char(30)
	,cd_aerop_num		char(3)
	,tp_selo			char(1)
	,nro_selo			char(14)
	,tp_baixa			char(1)
	,serie_coletor		char(15)
	,cpf_agente			char(11)
	,status_linha		char(1)
	,user_id_created	char(30)
	,date_created		datetime)

create index IX_ARQUIVO_LINHA on #temp_pax_selos_coletados_u_elec_l (arquivo, nro_linha)

/* CREAR cursor PARA TABELA TEMPORARIA DE LOG DE PROCESO */
declare cursor_log_processo_elec_l insensitive cursor for
select 	linha
	,mensaje
from #TABLE_SALIDA_ELEC_L (nolock)
order by linha


/* DECLARAR cursor DE SELOS COLETADOS */
declare cursor_selos_coletados_elec_l insensitive cursor for
select nro_linha
	,linha			
	,nro_selo		
from #temp_pax_selos_coletados_u_elec_l (nolock)
order by 1,2

-- DECLARAR cursor
declare cursor_arquivos_elec_l insensitive cursor for
select cd_aerop
	,cd_terminal
	,dt_mov
	,hh_mm
	,tp_selo
	,selo_status
	,arquivo
	,cd_motivo
	,status_arq
	,tp_coletor
from pax_baixa_selo_u (nolock)
where tp_selo	= 'L'
AND status_arq	= '0'
AND arquivo 	like @p_arquivo
order by substring(arquivo, 8, 13)


/* INICIALIZAR VARIABLES DE PROCESO */
select @p_date_process      	= GETDATE()
	,@p_user_process 			= SUSER_SNAME()

insert into #TABLE_SALIDA_ELEC_L values ('Inicio do Processo (' + convert(varchar(30), @p_date_process, 120) + ')')

open cursor_arquivos_elec_l
fetch next from cursor_arquivos_elec_l into
	 @p_cd_aerop
	,@p_cd_terminal
	,@p_dt_mov
	,@p_hh_mm
	,@p_tp_selo
	,@p_selo_status
	,@p_arquivo
	,@p_cd_motivo
	,@p_status_arq
	,@p_tp_coletor 
while @@fetch_status = 0
begin

	set @int_error	= 0

	insert into #TABLE_SALIDA_ELEC_L values ('PROCESANDO ARQUIVO ' + @p_arquivo)
	
	delete #temp_pax_selos_coletados_u_elec_l
	
	insert into #temp_pax_selos_coletados_u_elec_l
	select * from pax_selos_coletados_u (nolock)
	where arquivo 		= @p_arquivo
	AND status_linha 	= '0'

	if @@ROWCOUNT = 0 /* NÃO SE CARREGARAM OS SELOS NA TABELA TEMPORÁRIA */
	begin
		select @int_error					= 1
			,@nr_total_lineas_err			= 0
			,@nr_total_selos_validos		= 0
			,@nr_total_selos_discrep		= 0
			,@nr_total_selos_invalidos		= 0
			,@nr_qtd_discrepancias_tra 		= 0
			,@nr_qtd_duplicados				= 0
		goto SEGUIR 
	end
	
	/* BUSCAR QUANTIDADE DE LEITURAS DUPLICADAS*/
	create table #TEMP_2 (SELO char(20), CANTIDAD integer)

	insert into #TEMP_2
	select nro_selo, COUNT(1) - 1
	from #temp_pax_selos_coletados_u_elec_l A (nolock)
	where EXISTS (select 1 from #temp_pax_selos_coletados_u_elec_l B (nolock)
			where B.nro_selo = A.nro_selo
				AND B.nro_linha <> A.nro_linha
				AND A.nro_linha >= 3
				AND B.nro_linha >= 3
				AND A.nro_selo  <> '')
	group by A.nro_selo
	
	select @nr_qtd_duplicados = isnull(sum(CANTIDAD),0) from #TEMP_2 (nolock)
	insert into #TABLE_SALIDA_ELEC_L values ('LEITURAS DUPLICADAS ' + LTRIM(RTRIM(STR(@nr_qtd_duplicados))))			
	drop table #TEMP_2
	/* FIM BUSCAR QUANTIDADE DE LEITURAS DUPLICADAS*/	

    begin transaction 

    select 	@nr_total_selos_validos		= 0
		,@nr_total_selos_invalidos		= 0
		,@nr_total_lineas_err			= 0
		,@nr_total_selos_discrep		= 0


	open cursor_selos_coletados_elec_l
	fetch next from cursor_selos_coletados_elec_l into
		@p_nro_linha		
		,@p_linha			
		,@p_nro_selo			

	while @@fetch_status = 0
	begin
	
		if @p_nro_linha = 1
		begin
			if LEFT(@p_linha, 1) <> '*'
			begin 
				insert into #TABLE_SALIDA_ELEC_L values ('ERRO NA PRIMEIRA LINHA DO ARQUIVO ' + RTRIM(LTRIM(@p_arquivo)))		
				goto LEER_PROXIMO_ARQUIVO
			end
		end
			
		if @p_nro_linha >= 2
		begin
			if LEFT(@p_linha, 1) = '#'
			begin
				--insert into #TABLE_SALIDA_ELEC_L values ('LINHA # ' + RTRIM(LTRIM(@p_linha)))
				set @p_str_dt_temp = '20' + SUBSTRING(@p_linha,13,6)
				if ISDATE (@p_str_dt_temp) = 0
				begin
					insert into #TABLE_SALIDA_ELEC_L values ('DATA DE LOGIN DO FUNCIONARIO INVALIDA ' + SUBSTRING(@p_linha,13,6))
					goto LEER_PROXIMO_ARQUIVO
				end
			end
			ELSE
			begin
				--insert into #TABLE_SALIDA_ELEC_L values ('LINHA DE SELO ' + RTRIM(LTRIM(@p_linha)))
				
				select 	@int_insert_discrepancia 	= 0
						,@p_tp_natureza  			= CASE WHEN LEFT(@p_nro_selo, 1) = '0' THEN 'D'
														   WHEN LEFT(@p_nro_selo, 1) = '1' THEN 'I'
															ELSE LEFT(@p_nro_selo, 1) end
						,@p_prefixo_cia_aerea		= SUBSTRING(@p_nro_selo, 2,2)
						,@p_voo_rea					= SUBSTRING(@p_nro_selo, 4,4)
						,@p_hh_voo_rea				= SUBSTRING(@p_linha, 7,6)
						,@p_hh_mov					= SUBSTRING(@p_linha, 7,6)

				/* VALIDAR DATA DA LEITURA DO SELO */
				set @p_str_dt_temp = '20' + SUBSTRING(@p_linha,1,6) + ' ' + SUBSTRING(@p_linha,7,2) +':'+ SUBSTRING(@p_linha,9,2) +':'+ SUBSTRING(@p_linha,11,2)
				if ISDATE (@p_str_dt_temp) = 0
				begin
					insert into #TABLE_SALIDA_ELEC_L values ('A data não é válida, favor Verificar: ' + @p_str_dt_temp)
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '4'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto NEXT
				end
				
				/* VALIDAR O NUMERO DO SELO */
				if SUBSTRING(@p_linha,14,10) <> SUBSTRING(@p_nro_selo,1,10)
				begin
					insert into #TABLE_SALIDA_ELEC_L values ('Número de selo inválido. (' + @p_nro_selo +')')
					select @int_insert_discrepancia 	= 1 
							,@w_discrepancia			= '19'
				            ,@nr_total_selos_discrep 	= @nr_total_selos_discrep + 1
		            goto NEXT
				end
				
				/* VERIFICAR DATA DE MOVIMENTO
				- SE for UTILIZAÇÃO SE UTILIZA A DATA E HORA DA LEITURA
				- SE for CANCELAMENTO SE UTILIZA A DATA E HORA DO ARQUIVO */
				if 	@p_selo_status = '4' 
				begin
					set @p_dt_mov_selo = convert(VARCHAR, @p_dt_mov, 112) -- +' '+ SUBSTRING(@p_arquivo, 15, 2) +':'+ SUBSTRING(@p_arquivo, 17, 2) +':'+ SUBSTRING(@p_arquivo, 19, 2) 
				end
				ELSE
				begin
					set @p_dt_mov_selo = SUBSTRING(@p_str_dt_temp, 1,8) -- +' '+ SUBSTRING(@p_linha, 7,2) +':'+ SUBSTRING(@p_arquivo, 9, 2) +':'+ SUBSTRING(@p_arquivo, 11, 2) 
				end

				/* VALIDAR O NUMERO DO SELO */
		        if ISNUMERIC(@p_nro_selo) = 0 
		        begin
					insert into #TABLE_SALIDA_ELEC_L values ('Número de selo inválido. (' + @p_nro_selo +')')
					select @int_insert_discrepancia 	= 1 
							,@w_discrepancia			= '19'
				            ,@nr_total_selos_discrep 	= @nr_total_selos_discrep + 1
		            goto NEXT
		        end
				
			    /* VALIDAR CIA AEREA */
			    select @p_cd_cia_aerea 	= LTRIM(RTRIM(cd_cia_aerea))
				  from GEACutcx..cor_cia_aerea_u (nolock index = ix_cd_cia_num)
				 where cd_cia_num = @p_prefixo_cia_aerea 
                   and inactive_ind = 0
					
			    if ( @p_cd_cia_aerea = '' OR @p_cd_cia_aerea IS NULL OR @@ROWCOUNT = 0)
			    begin
					insert into #TABLE_SALIDA_ELEC_L values ('Prefixo de cia aérea inválido. (' + @p_prefixo_cia_aerea +')')
					select @int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '9'
		            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto NEXT
			    end
				
				/* VALIDA NUMEROS DO VOO DA GOL */
				if @p_prefixo_cia_aerea = '04' AND LEFT(@p_voo_rea,1) <> '9' 
				begin
					if LEFT(@p_voo_rea,2) <> ('67')
					begin
						insert into #TABLE_SALIDA_ELEC_L values ('Número de Vôo não pode ser operado pela CIA Aérea.(' + @p_prefixo_cia_aerea + ')' + '(' + @p_voo_rea + ')')
						select @int_insert_discrepancia 		= 1 
								,@w_discrepancia				= '20'
			            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						
						insert into TABLE_ANALISIS_WEBJET values (@p_nro_selo, @p_voo_rea, @p_arquivo, @p_date_process)
						goto NEXT
					end
				end

				/* VALIDAR NATUREZA DO SELO */
		        if @p_tp_natureza NOT IN ('D','I','S') 
		        begin
					insert into #TABLE_SALIDA_ELEC_L values ('NATUREZA DO SELO INVALIDO. (' + @p_tp_natureza +')')
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '10'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto NEXT
		        end

				/* VALIDAR SELOS INTERNACIONALES DA GOL */
				if @p_tp_natureza = 'I' AND @p_cd_cia_aerea = 'GLO'
				begin
					insert into #TABLE_SALIDA_ELEC_L values ('Companhia GLO não pode operar com o Selos Eletrônicos Internacionais. Favor verificar: ' + @p_cd_aerop + ' - ' + ltrim(rtrim(@p_cd_terminal)) + ' - ' + convert(varchar(10), @p_dt_mov_selo,112) + ' - ' + @p_nro_selo)
					select @int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '17'
		            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto NEXT		
				end
					
				/* VALIDAR SI O SELO E VALIDO PARA O AEROPORTO */
				/* 001 ALTERADO: MUNOZ  28/02/2008*/
				select @v_dt_ini_ope = convert(varchar(8), dt_inicio, 112) 
				from pax_ini_ope_selo_elet_u (nolock)
				where cd_aerop		= @p_cd_aerop
				and cd_terminal		= @p_cd_terminal
				and cd_cia_aerea	= @p_cd_cia_aerea
				
				if (@v_dt_ini_ope is null) or (@v_dt_ini_ope > @p_dt_mov_selo)
				begin
					insert into #TABLE_SALIDA_ELEC_L values ('SELO ELETRONICO DA GOL DE AEROPORTO INVALIDO, GOL NAO PODE PROCESAR SELOS ELETRÔNICOS NESTE AEROPORTO (' + UPPER(RIGHT(@p_cd_aerop, 8)) + ').')
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '16'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto NEXT
				end

				/* 
				if @p_cd_cia_aerea = 'GLO'
				begin
					if @p_cd_aerop IN ('SBAA','SBAG','SBAM','SBAQ','SBAS','SBAT','SBAU','SBAX','SBBG','SBBI','SBBQ','SBBT','SBBU','SBBW','SBCA','SBCB','SBCH','SBCI','SBCJ','SBCM','SBCP','SBCR','SBCV','SBCX','SBCZ','SBDN','SBEK','SBFC','SBFN','SBGM','SBGS','SBGU','SBGV','SBGW','SBHI','SBHT','SBIC','SBIH','SBIL','SBIP','SBIZ','SBJC','SBJF','SBJR','SBKG','SBLE','SBLJ','SBLN','SBLP','SBMA','SBMD','SBME','SBMG','SBMH','SBMK','SBML','SBMS','SBMT','SBMY','SBNM','SBOI','SBPB','SBPC','SBPF','SBPJ','SBPK','SBPL','SBPM','SBPN','SBPP','SBPR','SBPS','SBPV','SBQV','SBRB','SBRG','SBRP','SBSJ','SBSM','SBSR','SBTB','SBTD','SBTF','SBTK','SBTL','SBTT','SBTU','SBUA','SBUF','SBUG','SBUP','SBUR','SBVG','SBVH','SBXX','SDAG','SDBK','SDBY','SDCO','SDDN','SDDR','SDIM','SDJD','SDNO','SDOU','SDPN','SDPW','SDRR','SDRS','SDSK','SDTP','SDUB','SDUN','SDVG','SEDE','SIMK','SNAX','SNBR','SNCH','SNDC','SNDM','SNDV','SNED','SNFX','SNGA','SNGI','SNGV','SNHA','SNIC','SNJD','SNJK','SNKW','SNLO','SNRD','SNTO','SNVB','SNVS','SNZA','SSAL','SSAP','SSBL','SSCK','SSCN','SSCP','SSCR','SSCT','SSDP','SSEZ','SSFB','SSGB','SSGY','SSJA','SSJE','SSJG','SSKG','SSKM','SSKZ','SSLO','SSLT','SSMD','SSMX','SSMY','SSNO','SSOE','SSOG','SSOS','SSPB','SSPG','SSPI','SSPS','SSSS','SSUM','SSUV','SSUW','SSVI','SSVN','SSXD','SSYA','SSZR','SSZW','SWGI','SWGN','SWJI','SWKN','SWKO','SWPI','SWQI','SWUZ','S_BR','S_EG','XXXX')
					begin
						insert into #TABLE_SALIDA_ELEC_L values ('SELO ELETRONICO DA GOL DE AEROPORTO INVALIDO, GOL NAO PODE PROCESAR SELOS ELETRÔNICOS NESTE AEROPORTO (' + UPPER(RIGHT(@p_cd_aerop, 8)) + ').')
						select @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '16'
							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						goto NEXT
					end
		
					if @p_cd_aerop = 'SBJP'
					begin 
						if convert(varchar(8),@p_dt_mov_selo,112) < '20050201'
						begin
							insert into #TABLE_SALIDA_ELEC_L values ('GOL SO PODE PROCESAR SELOS ELETRONICOS EM SBJP A PARTIR DO 01/02/2005.')
							select @int_insert_discrepancia 	= 1 
								,@w_discrepancia				= '16'
								,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
							goto NEXT
						end
					end
					ELSE
					begin
						if convert(varchar(8),@p_dt_mov_selo,112) < '20050216'
						begin
							insert into #TABLE_SALIDA_ELEC_L values ('GOL SO PODE PROCESAR SELOS ELETRONICOS A PARTIR DO 16/02/2005.')
							select @int_insert_discrepancia 	= 1 
								,@w_discrepancia				= '16'
								,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
							goto NEXT
						end			
					end
				end   */

				/* FIM 001 ALTERADO: MUNOZ  28/02/2008*/

			    /* Busca o item associado ao aeroporto */
			    select @p_item_fat = LTRIM(RTRIM(item_id))
			    from GEACutcx..cor_item_pax_u (nolock index = P_cor_item_pax_u)
			    where cd_aerop 			= @p_cd_aerop 
					AND cd_terminal 	= @p_cd_terminal 
					AND tp_natureza 	= @p_tp_natureza 
					AND RIGHT(RTRIM(item_id),1) <> 'V'
					AND dt_vigencia 	= ( select MAX (dt_vigencia) from GEACutcx..cor_item_pax_u  (nolock index  = P_cor_item_pax_u)
										where cd_aerop 			= @p_cd_aerop 	
										AND cd_terminal 		= @p_cd_terminal
										AND tp_natureza 		= @p_tp_natureza
										AND dt_vigencia 		<=  @p_dt_mov_selo 
										AND RIGHT(RTRIM(item_id),1) <> 'V')

		
			    if ( @@ROWCOUNT = 0 ) OR ( @p_item_fat IS NULL ) OR (@p_item_fat = '')
			    begin
					insert into #TABLE_SALIDA_ELEC_L values ('Não encontrou item para faturar para: ' + @p_cd_aerop + ' - ' + @p_cd_terminal + ' - ' + @p_tp_natureza)
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '6'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto NEXT
			    end

				-- VERIFICA SE O SELO JÁ EXISTE
				select @p_selo_status_act		= ISNULL(selo_status, NULL) 
					,@p_tp_coletor_act			= ISNULL(tp_coletor, NULL)
					,@p_dt_confirma_act			= dt_confirma
					,@p_dt_temp 				= DATEADD (hh, 6, dt_mov )
					,@p_aerop_utilizacao_act	= cd_aerop_utilizacao
					,@p_billing_line_id_act		= billing_line_id 
				from GEACupax..pax_selo_electronico_u (nolock index = nro_selo_electronico)
				where nro_selo_electronico 				= @p_nro_selo
					and cd_aerop						= @p_cd_aerop
					AND cd_terminal			 			= @p_cd_terminal
					and year(dt_mov)					= year(@p_dt_mov)

				select @ROWCOUNT = @@ROWCOUNT
				if @ROWCOUNT > 0
				begin
					if @ROWCOUNT = 1
					begin 
		                if @p_tp_coletor_act = '01' /* YA FUE DESCARGADO DE ALGUN COLETOR VA PARA LEITURA DUPLICADA*/
		                begin
							insert into #TABLE_SALIDA_ELEC_L values ('Leitura Duplicada: ' + @p_cd_aerop + ' - ' + LTRIM(RTRIM(@p_cd_terminal)) + ' - ' + convert(varchar(8), @p_dt_mov, 112) + ' - ' + @p_nro_selo)
		                    insert into GEACupax..pax_selo_elec_dup_u (
		                        cd_aerop
		                        ,cd_terminal
		                        ,dt_mov
		                        ,nro_selo_electronico
		                        ,hh_mov
		                        ,tp_natureza
		                        ,selo_status
		                        ,cd_motivo
		                        ,tp_fat
		                        ,cd_cia_aerea
		                        ,tp_unid
		                        ,dt_confirma
		                        ,cd_aerop_utilizacao
		                        ,cd_terminal_utilizacao
		                        ,tp_coletor
		                        ,item_fat
		                        ,billing_line_id
		                        ,billing_int_date
		                        ,billing_int_type
		                        ,billing_user_1
		                        ,voo_rea
		                        ,dt_voo_rea
		                        ,hh_voo_rea
		                        ,date_created
		                        ,user_id_created
		                        ,date_changed
		                        ,user_id_changed
		                        ,inactive_ind
		                        ,active_date
		                        ,chgstamp) 
		                    values (
		                        @p_cd_aerop
		                        ,@p_cd_terminal
		                        ,@p_dt_mov_selo
		                        ,@p_nro_selo
		                        ,@p_hh_mov
		                        ,@p_tp_natureza
		                        ,'2'   			-- @p_selo_status
		                        ,' '			-- @p_cd_motivo
		                        ,'F'			-- @p_tp_fat
		                        ,@p_cd_cia_aerea
		                        
		                        ,'A'			-- @p_tp_unid
		                        ,'19000101'		-- @p_dt_confirma
		                        ,@p_cd_aerop	-- @p_cd_aerop_utilizacao
		                        ,@p_cd_terminal	-- @p_cd_terminal_utilizacao
		                        ,@p_tp_coletor
		                        ,@p_item_fat
		                        ,0					-- @p_billing_line_id
		                        ,'19000101'			-- @p_billing_int_date
		                        ,' '				-- @p_billing_int_type
		                        ,' ' 				-- @p_billing_user_1
		                        ,@p_voo_rea
		                        ,@p_dt_mov_selo
		                        ,@p_hh_voo_rea
		                        ,@p_date_process                                           
		                        ,@p_user_process                
		                        ,'19000101'			-- @p_date_changed
		                        ,' ' 				-- @p_user_id_changed
		                        ,0					-- @p_inactive_ind
		                        ,@p_date_process	-- @p_active_date
		                        ,0)
					
							set @nr_total_selos_validos = @nr_total_selos_validos + 1  
						
		                end
		                ELSE
		                begin			
		                    if  @p_selo_status_act = '2' 
		    				begin
		                        
		    					if @p_dt_confirma_act <> '19000101' AND @p_aerop_utilizacao_act <> @p_cd_aerop
		    					begin                     
									insert into #TABLE_SALIDA_ELEC_L values ('Selo já confirmado em outro aeroporto: ' + @p_nro_selo)
		    						select @int_insert_discrepancia 	= 1 
		    							,@w_discrepancia				= '7'

		    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    						goto NEXT
		    					end	
		    					ELSE
		    					begin
		    						UPDATE GEACupax..pax_selo_electronico_u
		    						set tp_coletor 				= CASE WHEN tp_coletor = '9' THEN '01' ELSE tp_coletor end
		    							,cd_aerop_utilizacao 	= @p_cd_aerop	 
		    							,cd_terminal_utilizacao	= @p_cd_terminal 
		    							,item_fat 				= CASE WHEN billing_line_id = 0 THEN @p_item_fat ELSE item_fat end 
		                                ,hh_mov                 = @p_hh_mov
		    							,date_changed			= @p_date_process
		    							,user_id_changed		= @p_user_process
		    							,chgstamp				= chgstamp + 1
									where nro_selo_electronico 				= @p_nro_selo
										and cd_aerop						= @p_cd_aerop
										AND cd_terminal			 			= @p_cd_terminal
										and year(dt_mov)					= year(@p_dt_mov)
		    						

		    						set @nr_total_selos_validos = @nr_total_selos_validos + 1  
		    						goto NEXT
		    					end
		    				end
		    				
		    				if @p_selo_status_act = '4' 
		    				begin
								insert into #TABLE_SALIDA_ELEC_L values ('Selo já cancelado: ' + @p_nro_selo)
		    					select @int_insert_discrepancia 	= 1 
		    						,@w_discrepancia				= '8'
		    						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    					goto NEXT
		    				end
		    				
		    				if @p_selo_status_act = '5' 
		    				begin
		    					if @p_tp_coletor_act = '01' 
		    					begin
		    						insert into #TABLE_SALIDA_ELEC_L values ('Selo já utilizado: ' + @p_nro_selo)
		    						select @int_insert_discrepancia 	= 1 
		    							,@w_discrepancia				= '1'
		    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    						goto NEXT
		    					end
		    					ELSE
		    					begin
		    						UPDATE GEACupax..pax_selo_electronico_u
		    						set tp_coletor 				= '01'
		    							,cd_aerop_utilizacao 	= @p_cd_aerop
		    							,cd_terminal_utilizacao	= @p_cd_terminal
		    							,item_fat 				= CASE WHEN billing_line_id = 0 THEN @p_item_fat ELSE item_fat end 
		                                ,hh_mov                 = @p_hh_mov
		    							,date_changed			= @p_date_process
		    							,user_id_changed		= @p_user_process
		    							,chgstamp				= chgstamp + 1
									where nro_selo_electronico 				= @p_nro_selo
										and cd_aerop						= @p_cd_aerop
										AND cd_terminal			 			= @p_cd_terminal
										and year(dt_mov)					= year(@p_dt_mov)
		    											 
		    						set @nr_total_selos_validos = @nr_total_selos_validos + 1  
										    						
		    						goto NEXT
		    					end
		    				end
		                end
					end
					ELSE
					begin
						if @ROWCOUNT > 1
						begin
							PRINT ' DOS SELOS EN EL MISMO DIA'					
							goto NEXT
						end
					end
					goto NEXT

				end
				ELSE
				begin
					NUEVO:
					
					insert into GEACupax..pax_selo_electronico_u (
							cd_aerop
							,cd_terminal
							,dt_mov
							,nro_selo_electronico
							,tp_natureza
							,selo_status
							,cd_motivo
							,tp_fat
							,cd_cia_aerea
							,tp_unid
							,dt_confirma
							,cd_aerop_utilizacao
							,cd_terminal_utilizacao
							,tp_coletor
							,item_fat
							,billing_line_id
							,billing_int_date
							,billing_int_type
							,billing_user_1
							,voo_rea
							,dt_voo_rea
							,hh_voo_rea
			                ,hh_mov
							,date_created
							,user_id_created
							,date_changed
							,user_id_changed
							,inactive_ind
							,active_date
							,chgstamp) 
						values (
							 @p_cd_aerop
							,@p_cd_terminal
							,@p_dt_mov_selo
							,@p_nro_selo
							,@p_tp_natureza
							,'2'   			-- @p_selo_status
							,' '			-- @p_cd_motivo
							,'F'			-- @p_tp_fat
							,@p_cd_cia_aerea
			
							,'A'			-- @p_tp_unid
							,'19000101'		-- @p_dt_confirma
							,@p_cd_aerop	-- @p_cd_aerop_utilizacao
							,@p_cd_terminal	-- @p_cd_terminal_utilizacao
							,@p_tp_coletor
							,@p_item_fat
							,0					-- @p_billing_line_id
							,'19000101'			-- @p_billing_int_date
							,' '				-- @p_billing_int_type
							,' ' 				-- @p_billing_user_1
							,@p_voo_rea
							,@p_dt_mov_selo
							,'000000'
			                ,@p_hh_mov
							,@p_date_process                                           
							,@p_user_process                
							,'19000101'			-- @p_date_changed
							,' ' 				-- @p_user_id_changed
							,0					-- @p_inactive_ind
							,@p_date_process	-- @p_active_date
							,0)
						
					set @nr_total_selos_validos = @nr_total_selos_validos + 1  
					
				end	
						
			end
		end

        NEXT:
		if @int_insert_discrepancia = 1
		begin

			EXEC psp_insert_disc_selo_elec 
				@p_cd_aerop
				,@p_cd_terminal
				,@p_dt_mov_selo
				,@p_selo_status
				,@p_nro_selo
				,'E'
				,@p_cd_cia_aerea
				,@w_discrepancia
				,' '
				,@p_arquivo
				,@p_tp_coletor
				,@p_date_process
				,@p_user_process
				,'19000101'
				,' '
				,'0'
				,@p_date_process
				,0

			set @int_insert_discrepancia = 0

		end

		LEER_PROXIMA_LINHA:	

		update pax_selos_coletados_u 		
		set status_linha 	= '1'
		where arquivo		= @p_arquivo
		and nro_linha		= @p_nro_linha

		fetch next from cursor_selos_coletados_elec_l into
			@p_nro_linha		
			,@p_linha
			,@p_nro_selo			
	end

	LEER_PROXIMO_ARQUIVO:

	CLOSE cursor_selos_coletados_elec_l

    UPDATE GEACupax..pax_baixa_selo_u 
    set status_arq   		= '1'
		,qtd_selos   		= @nr_total_selos_validos
		,qtd_discrepancias	= @nr_total_selos_discrep
		,qtd_lineas_erro	= @nr_total_selos_invalidos
		,qtd_duplicados		= @nr_qtd_duplicados
		,date_changed   	= @p_date_process
		,user_id_changed  	= @p_user_process
    where  cd_aerop 		= @p_cd_aerop
        AND cd_terminal 	= @p_cd_terminal
        AND dt_mov  		= @p_dt_mov
        AND hh_mm  			= @p_hh_mm
        AND arquivo			= @p_arquivo
        
    SEGUIR:
    if @int_error = 0
    begin
		COMMIT transaction 
		insert into #TABLE_SALIDA_ELEC_L values ('FIM PROCESO ARQUIVO : ' + LTRIM(RTRIM(@p_arquivo)))
    end
    ELSE
    begin
		ROLLBACK transaction
		UPDATE GEACupax..pax_baixa_selo_u 
        set status_arq   			= '2'
			,qtd_selos   			= @nr_total_selos_validos
			,qtd_discrepancias		= @nr_total_selos_discrep
			,qtd_lineas_erro		= @nr_total_selos_invalidos
			,date_changed   		= @p_date_process
			,user_id_changed  		= @p_user_process
       where cd_aerop  				= @p_cd_aerop
		AND cd_terminal  			= @p_cd_terminal
		AND dt_mov  				= @p_dt_mov
		AND hh_mm  					= @p_hh_mm
		AND arquivo					= @p_arquivo
	end

	/* LER PROXIMO ARQUIVO */
	fetch next from cursor_arquivos_elec_l into
		 @p_cd_aerop
		,@p_cd_terminal
		,@p_dt_mov
		,@p_hh_mm
		,@p_tp_selo
		,@p_selo_status
		,@p_arquivo
		,@p_cd_motivo
		,@p_status_arq
		,@p_tp_coletor 
end
 
DEALLOCATE cursor_selos_coletados_elec_l
CLOSE cursor_arquivos_elec_l
DEALLOCATE cursor_arquivos_elec_l

insert into #TABLE_SALIDA_ELEC_L values ('Fim do Processo (' + convert(varchar(30), GETDATE(), 120) + ')')

/* MOSTRAR SAIDA DO PROCESSO */
open cursor_log_processo_elec_l

fetch next from cursor_log_processo_elec_l into
		 @p_linha
		,@p_mensaje
 
while @@fetch_status = 0
begin
	set @v_mensaje = @p_mensaje + char(10) + char(13) 
	PRINT @v_mensaje
	fetch next from cursor_log_processo_elec_l into
		 @p_linha
		,@p_mensaje
 
end
 
CLOSE cursor_log_processo_elec_l
DEALLOCATE cursor_log_processo_elec_l

drop table #TABLE_SALIDA_ELEC_L
drop table #temp_pax_selos_coletados_u_elec_l

set NOCOUNT OFF











GO

/****** Object:  StoredProcedure [dbo].[psp_procesa_selo_t]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_procesa_selo_t    Script Date: 19/09/2008 15:20:21 ******/




CREATE                   PROC [dbo].[psp_procesa_selo_t] 
(		@p_arquivo		char(40) = '%')
AS





/* Declaracion de Variables 

update pax_baixa_selo_u  
set status_arq = '0'
,qtd_discrepancias = 0
where arquivo = '0201_T_080229-203756_U00_105.TXT'

select * from pax_baixa_selo_u  (nolock)
where arquivo like '0021_T_090401-072232_U00_108.TXT'

select distinct date_created from pax_selos_coletados_u where arquivo = '0021_T_090401-072232_U00_108.TXT'

exec psp_procurar_arquivos_selos '0021_T_090401-072232_U00_108.TXT'
exec psp_procesa_selo_t '0021_T_090401-072232_U00_108.TXT'

select * from pax_baixa_selo_u  (nolock)
where arquivo like '0021_T_090401-072232_U00_108.TXT'


rollback tran  
close cursor_log_processo_elec_t
deallocate cursor_log_processo_elec_t


*/




/*
Discrepancias
1         	Selo eletrônico já utilizado
2         	Selo eletrônico já faturado
3         	Status de selo inválido
6         	Não encontrou item para faturar
7         	Selo eletrônico já confirmado
8         	Selo eletrônico já cancelado
9         	Prefixo de cia aérea inválido
10        	Natureza do vôo inválida
11        	Selo eletrônico já existente
12        	Selo eletrônico já transferido
13        	Utilização passa das 6 horas permitidas
14        	Linha do arquivo inválida
15        	Cia aérea inválida
16        	Selo eletrônico não utilizável nesta data
17        	Selo eletrônico internacional não utilizável
19        	Número de selo inválido
20			Número de Vôo não pode ser operado pela CIA Aérea.
*/


set nocount ON

declare	 
	@p_cd_aerop					char(4)
	,@p_cd_terminal         char(10)
	,@p_dt_mov					datetime
	,@p_hh_mm					char(6)
	,@p_tp_selo					char(1)
	,@p_selo_status         char(1)
	,@p_cd_motivo				char(2)
	,@p_tp_coletor				char(16)
	,@p_tp_baixa				char(1)
	,@p_status_arq				char(1)
	,@p_date_changed			datetime
	,@p_user_id_changed     char(30)
	,@p_chgstamp				smallint

/* VARIABLES DE PROCESO */
	,@p_date_process			   datetime
	,@p_user_process 			   char(30)
	,@v_tp_selo					   char(1)	
	,@v_mensaje 				   varchar(255)
	,@p_mensaje					   varchar(255)
	,@p_status_arq_aux			char(1)
	,@p_str_dt_temp				varchar(17)
	,@int_insert_discrepancia	smallint
	,@p_dt_mov_selo				datetime
	,@nr_total_selos_validos	real
	,@nr_total_selos_invalidos	real
	,@nr_total_selos_discrep	real
	,@nr_total_lineas_err		real
	,@nr_qtd_discrepancias_tra real
	,@nr_qtd_duplicados			real
	,@p_cd_aerop_act 			   char(4)
	,@p_billing_line_id_act		integer
	,@p_tp_fat_act				   char(1)
	,@p_selo_status_act  		char(1)
	,@p_dt_mov_act       		datetime
	,@p_msg 					      char(2)
	,@p_selo_status_ind			char(1)
	,@p_cd_situacao_rste 		char(1)
	,@p_nro_rste 				   char(6)
	,@int_error             	integer
	,@w_discrepancia			   char(2)
	,@p_prefixo_cia_aerea		char(2)
	,@p_voo_rea					   char(4)
	,@p_hh_voo_rea				   char(6)
	,@p_tp_coletor_act			char(16)
	,@p_dt_confirma_act			datetime
	,@p_dt_temp 				   datetime
	,@p_aerop_utilizacao_act	char(4)
	,@ROWCOUNT					   smallint
	,@p_hh_mov					   char(6)
	,@v_dt_ini_ope				   datetime

/* VARIABLES DA TABELA DE SELOS COLETADOS*/
	,@p_nro_linha				   integer
	,@p_linha					   char(30)
	,@p_nro_selo				   char(14)

/* VARIABLES DA TABELA DE SELOS */
	,@p_tp_natureza				char(1)
	,@p_tp_fat					   char(1)
	,@p_cd_cia_aerea			   char(3)
	,@p_item_fat				   char(26)

/* CREAR TABELA TEMPORARIA DE LOG DE PROCESO */
CREATE TABLE #TABLE_SALIDA_ELEC_T  (
	linha		integer identity
	,mensaje	varchar(255) NULL)

/* CREAR TABELA TEMPORARIA DE SELOS COLETADOS */
CREATE TABLE #temp_pax_selos_coletados_u_elec_t(
	arquivo				char(40)
	,nro_linha			integer
	,linha				char(30)
	,cd_aerop_num		char(3)
	,tp_selo			char(1)
	,nro_selo			char(14)
	,tp_baixa			char(1)
	,serie_coletor		char(15)
	,cpf_agente			char(11)
	,status_linha		char(1)
	,user_id_created	char(30)
	,date_created		datetime)

CREATE CLUSTERED INDEX IX_ARQUIVO_LINHA ON #temp_pax_selos_coletados_u_elec_t (arquivo, nro_linha)

/* CREAR cursor PARA TABELA TEMPORARIA DE LOG DE PROCESO */
declare cursor_log_processo_elec_t insensitive cursor for
select	linha
	,mensaje
from #TABLE_SALIDA_ELEC_T (nolock)
order by linha

-- Alteração efetuada por Pedro em '07/01/2009 as 10:26'
-- Esta Declaração sera movida para o laço while 
/* DECLARAR cursor DE SELOS COLETADOS
declare cursor_selos_coletados_t insensitive cursor for
select nro_linha
	,linha			
	,nro_selo		
from #temp_pax_selos_coletados_u_elec_t (nolock)
order by 1,2
*/

-- DECLARAR cursor
declare cursor_arquivos_t insensitive cursor for
select	 cd_aerop
	,cd_terminal
	,dt_mov
	,hh_mm
	,tp_selo
	,selo_status
	,arquivo
	,cd_motivo
	,status_arq
	,tp_coletor
from pax_baixa_selo_u (nolock)
where tp_selo	= 'T'
AND status_arq	= '0'
AND arquivo 	like @p_arquivo
order by substring(arquivo, 8, 13)

/* INICIALIZAR VARIABLES DE PROCESO */
select @p_date_process      	= getdate()
	,@p_user_process 			= SUSER_SNAME()

insert into #TABLE_SALIDA_ELEC_T values ('Inicio do Processo (' + convert(varchar(30), @p_date_process, 120) + ')')

open cursor_arquivos_t
fetch next from cursor_arquivos_t into
	 @p_cd_aerop
	,@p_cd_terminal
	,@p_dt_mov
	,@p_hh_mm
	,@p_tp_selo
	,@p_selo_status
	,@p_arquivo
	,@p_cd_motivo
	,@p_status_arq
	,@p_tp_coletor 
while @@fetch_status = 0
begin

	set @int_error	= 0

	insert into #TABLE_SALIDA_ELEC_T values ('PROCESANDO ARQUIVO ' + @p_arquivo)
	
	delete #temp_pax_selos_coletados_u_elec_t
	
	insert into #temp_pax_selos_coletados_u_elec_t
	select * from pax_selos_coletados_u (nolock)
	where arquivo 		= @p_arquivo
	AND status_linha 	= '0'

	if @@ROWCOUNT = 0 /* NÃO SE CARREGARAM OS SELOS NA TABELA TEMPORÁRIA */
	begin
		select @int_error					= 1
			,@nr_total_lineas_err			= 0
			,@nr_total_selos_validos		= 0
			,@nr_total_selos_discrep		= 0
			,@nr_total_selos_invalidos		= 0
			,@nr_qtd_discrepancias_tra 		= 0
			,@nr_qtd_duplicados				= 0
		goto SEGUIR 
	end
	
	/* BUSCAR QUANTIDADE DE LEITURAS DUPLICADAS*/
	CREATE TABLE #TEMP_2 (SELO char(20), CANTIDAD integer)

	insert into #TEMP_2
	select  nro_selo, COUNT(1) - 1
	from #temp_pax_selos_coletados_u_elec_t A (nolock)
	where EXISTS (select 1 from #temp_pax_selos_coletados_u_elec_t B (nolock)
			where B.nro_selo 	= A.nro_selo
				AND B.nro_linha <> A.nro_linha
				AND A.nro_linha >= 3
				and B.nro_linha >= 3
				AND A.nro_selo  <> '')
	GROUP BY A.nro_selo
	
	select @nr_qtd_duplicados = ISNULL(SUM(CANTIDAD),0) from #TEMP_2 (nolock)
	insert into #TABLE_SALIDA_ELEC_T values ('LEITURAS DUPLICADAS ' + ltrim(rtrim(STR(@nr_qtd_duplicados))))			
	drop table #TEMP_2
	/* FIM BUSCAR QUANTIDADE DE LEITURAS DUPLICADAS*/	

   select 	
       @nr_total_selos_validos		= 0
      ,@nr_total_selos_invalidos		= 0
      ,@nr_total_lineas_err			= 0
      ,@nr_total_selos_discrep		= 0


   /* DECLARAR cursor DE SELOS COLETADOS */
   declare cursor_selos_coletados_t insensitive cursor for
   select nro_linha
	   ,linha			
	   ,nro_selo		
   from #temp_pax_selos_coletados_u_elec_t (nolock)
   order by 1,2

	open cursor_selos_coletados_t

   begin transaction 

	fetch next from cursor_selos_coletados_t into
		@p_nro_linha		
		,@p_linha			
		,@p_nro_selo			


	while @@fetch_status = 0
	begin
	
		if @p_nro_linha = 1
		begin
			if LEFT(@p_linha, 1) <> '*'
			begin 
				insert into #TABLE_SALIDA_ELEC_T values ('ERRO NA PRIMEIRA LINHA DO ARQUIVO ' + rtrim(ltrim(@p_arquivo)))		
				goto LEER_PROXIMO_ARQUIVO
			end
		end
			
		if @p_nro_linha >= 2
		begin
			if LEFT(@p_linha, 1) = '#'
			begin
				--insert into #TABLE_SALIDA_ELEC_T values ('LINHA # ' + rtrim(ltrim(@p_linha)))
				set @p_str_dt_temp = '20' + substring(@p_linha,13,6)
				if ISDATE (@p_str_dt_temp) = 0
				begin
					insert into #TABLE_SALIDA_ELEC_T values ('DATA DE LOGIN DO FUNCIONARIO INVALIDA ' + substring(@p_linha,13,6))
					/*goto LEER_PROXIMO_ARQUIVO*/
					goto LEER_PROXIMA_LINHA
				end
			end
			else
			begin
				--insert into #TABLE_SALIDA_ELEC_T values ('LINHA DE SELO ' + rtrim(ltrim(@p_linha)))
				
				select 	@int_insert_discrepancia 	= 0
						,@p_tp_natureza  			= case when LEFT(@p_nro_selo, 1) = '0' then 'D'
														   when LEFT(@p_nro_selo, 1) = '1' then 'I'
															else LEFT(@p_nro_selo, 1) end
						,@p_prefixo_cia_aerea		= substring(@p_nro_selo, 2,2)
						,@p_voo_rea					= substring(@p_nro_selo, 4,4)
						,@p_hh_voo_rea				= substring(@p_linha, 7,6)
						,@p_hh_mov					= substring(@p_linha, 7,6)

				/* VALIDAR DATA DA LEITURA DO SELO */
				set @p_str_dt_temp = '20' + substring(@p_linha,1,6) + ' ' + substring(@p_linha,7,2) +':'+ substring(@p_linha,9,2) +':'+ substring(@p_linha,11,2)
				if ISDATE (@p_str_dt_temp) = 0
				begin
					insert into #TABLE_SALIDA_ELEC_T values ('A data não é válida, favor Verificar: ' + @p_str_dt_temp)
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '4'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto next
				end
				
				/* VALIDAR O NUMERO DO SELO */
				if substring(@p_linha,14,14) <> @p_nro_selo
				begin
					insert into #TABLE_SALIDA_ELEC_T values ('Número de selo inválido. (' + @p_nro_selo +')')
					select @int_insert_discrepancia 	= 1 
							,@w_discrepancia			= '19'
				            ,@nr_total_selos_discrep 	= @nr_total_selos_discrep + 1
		            goto next
				end
				
				/* VERIFICAR DATA DE MOVIMENTO
				- SE for UTILIZAÇÃO SE UTILIZA A DATA E HORA DA LEITURA
				- SE for CANCELAMENTO SE UTILIZA A DATA E HORA DO ARQUIVO */
				if 	@p_selo_status = '4' 
				begin
					set @p_dt_mov_selo = convert(varchar, @p_dt_mov, 112) -- +' '+ substring(@p_arquivo, 15, 2) +':'+ substring(@p_arquivo, 17, 2) +':'+ substring(@p_arquivo, 19, 2) 
				end
				else
				begin
					set @p_dt_mov_selo = substring(@p_str_dt_temp, 1,8) -- +' '+ substring(@p_linha, 7,2) +':'+ substring(@p_arquivo, 9, 2) +':'+ substring(@p_arquivo, 11, 2) 
				end

				/* VALIDAR O NUMERO DO SELO */
		        if ISNUMERIC(@p_nro_selo) = 0 
		        begin
					insert into #TABLE_SALIDA_ELEC_T values ('Número de selo inválido. (' + @p_nro_selo +')')
					select @int_insert_discrepancia 	= 1 
							,@w_discrepancia			= '19'
				            ,@nr_total_selos_discrep 	= @nr_total_selos_discrep + 1
		            goto next
		        end
				
			    /* VALIDAR CIA AEREA */
			    select @p_cd_cia_aerea 	= ltrim(rtrim(cd_cia_aerea))
				from GEACutcx..cor_cia_aerea_u (nolock index = ix_cd_cia_num)
				where cd_cia_num = @p_prefixo_cia_aerea 
                  and inactive_ind = 0
					
			    if ( @p_cd_cia_aerea = '' OR @p_cd_cia_aerea IS NULL OR @@ROWCOUNT = 0)
			    begin
					insert into #TABLE_SALIDA_ELEC_T values ('Prefixo de cia aérea inválido. (' + @p_prefixo_cia_aerea +')')
					select @int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '9'
		            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto next
			    end
				
				/* VALIDA NUMEROS DO VOO DA GOL */
				if @p_prefixo_cia_aerea = '04' AND LEFT(@p_voo_rea,1) <> '9' 
				begin
					if LEFT(@p_voo_rea,2) <> ('67')
					begin
						insert into #TABLE_SALIDA_ELEC_T values ('Número de Vôo não pode ser operado pela CIA Aérea.(' + @p_prefixo_cia_aerea + ')' + '(' + @p_voo_rea + ')')
						select @int_insert_discrepancia 		= 1 
								,@w_discrepancia				= '20'
			            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						
						insert into TABLE_ANALISIS_WEBJET values (@p_nro_selo, @p_voo_rea, @p_arquivo, @p_date_process)
						goto next
					end
				end

				/* VALIDAR NATUREZA DO SELO */
		        if @p_tp_natureza NOT IN ('D','I','S') 
		        begin
					insert into #TABLE_SALIDA_ELEC_T values ('NATUREZA DO SELO INVALIDO. (' + @p_tp_natureza +')')
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '10'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto next
		        end

				/* VALIDAR SELOS INTERNACIONALES DA GOL */
				if @p_tp_natureza = 'I' AND @p_cd_cia_aerea = 'GLO'
				begin
					insert into #TABLE_SALIDA_ELEC_T values ('Companhia GLO não pode operar com o Selos Eletrônicos Internacionais. Favor verificar: ' + @p_cd_aerop + ' - ' + ltrim(rtrim(@p_cd_terminal)) + ' - ' + convert(varchar(10), @p_dt_mov_selo,112) + ' - ' + @p_nro_selo)
					select @int_insert_discrepancia 		= 1 
							,@w_discrepancia				= '17'
		            		,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto next		
				end
					
				/* VALIDAR SI O SELO E VALIDO PARA O AEROPORTO */
				/* 001 ALTERADO: MUNOZ  28/02/2008*/
				select @v_dt_ini_ope = convert(varchar(8), dt_inicio, 112) 
				from pax_ini_ope_selo_elet_u (nolock)
				where cd_aerop		= @p_cd_aerop
				and cd_terminal		= @p_cd_terminal
				and cd_cia_aerea	= @p_cd_cia_aerea
				
				if (@v_dt_ini_ope is null) or (@v_dt_ini_ope > @p_dt_mov_selo)
				begin
					insert into #TABLE_SALIDA_ELEC_T values ('SELO ELETRONICO DE AEROPORTO INVALIDO, CIA AREA NAO PODE PROCESAR SELOS ELETRÔNICOS NESTE AEROPORTO (' + UPPER(RIGHT(@p_cd_aerop, 8)) + ').')
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '16'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto next
				end

				/*
				if @p_cd_cia_aerea = 'GLO'
				begin
					if @p_cd_aerop IN ('SBAA','SBAG','SBAM','SBAQ','SBAS','SBAT','SBAU','SBAX','SBBG','SBBI','SBBQ','SBBT','SBBU','SBBW','SBCA','SBCB','SBCH','SBCI','SBCJ','SBCM','SBCP','SBCR','SBCV','SBCX','SBCZ','SBDN','SBEK','SBFC','SBFN','SBGM','SBGS','SBGU','SBGV','SBGW','SBHI','SBHT','SBIC','SBIH','SBIL','SBIP','SBIZ','SBJC','SBJF','SBJR','SBKG','SBLE','SBLJ','SBLN','SBLP','SBMA','SBMD','SBME','SBMG','SBMH','SBMK','SBML','SBMS','SBMT','SBMY','SBNM','SBOI','SBPB','SBPC','SBPF','SBPJ','SBPK','SBPL','SBPM','SBPN','SBPP','SBPR','SBPS','SBPV','SBQV','SBRB','SBRG','SBRP','SBSJ','SBSM','SBSR','SBTB','SBTD','SBTF','SBTK','SBTL','SBTT','SBTU','SBUA','SBUF','SBUG','SBUP','SBUR','SBVG','SBVH','SBXX','SDAG','SDBK','SDBY','SDCO','SDDN','SDDR','SDIM','SDJD','SDNO','SDOU','SDPN','SDPW','SDRR','SDRS','SDSK','SDTP','SDUB','SDUN','SDVG','SEDE','SIMK','SNAX','SNBR','SNCH','SNDC','SNDM','SNDV','SNED','SNFX','SNGA','SNGI','SNGV','SNHA','SNIC','SNJD','SNJK','SNKW','SNLO','SNRD','SNTO','SNVB','SNVS','SNZA','SSAL','SSAP','SSBL','SSCK','SSCN','SSCP','SSCR','SSCT','SSDP','SSEZ','SSFB','SSGB','SSGY','SSJA','SSJE','SSJG','SSKG','SSKM','SSKZ','SSLO','SSLT','SSMD','SSMX','SSMY','SSNO','SSOE','SSOG','SSOS','SSPB','SSPG','SSPI','SSPS','SSSS','SSUM','SSUV','SSUW','SSVI','SSVN','SSXD','SSYA','SSZR','SSZW','SWGI','SWGN','SWJI','SWKN','SWKO','SWPI','SWQI','SWUZ','S_BR','S_EG','XXXX')
					begin
						insert into #TABLE_SALIDA_ELEC_T values ('SELO ELETRONICO DA GOL DE AEROPORTO INVALIDO, GOL NAO PODE PROCESAR SELOS ELETRÔNICOS NESTE AEROPORTO (' + UPPER(RIGHT(@p_cd_aerop, 8)) + ').')
						select @int_insert_discrepancia 	= 1 
							,@w_discrepancia				= '16'
							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
						goto next
					end
		
					if @p_cd_aerop = 'SBJP'
					begin 
						if convert(varchar(8),@p_dt_mov_selo,112) < '20050201'
						begin
							insert into #TABLE_SALIDA_ELEC_T values ('GOL SO PODE PROCESAR SELOS ELETRONICOS EM SBJP A PARTIR DO 01/02/2005.')
							select @int_insert_discrepancia 	= 1 
								,@w_discrepancia				= '16'
								,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
							goto next
						end
					end
					else
					begin
						if convert(varchar(8),@p_dt_mov_selo,112) < '20050216'
						begin
							insert into #TABLE_SALIDA_ELEC_T values ('GOL SO PODE PROCESAR SELOS ELETRONICOS A PARTIR DO 16/02/2005.')
							select @int_insert_discrepancia 	= 1 
								,@w_discrepancia				= '16'
								,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
							goto next
						end			
					end
				end  */
			
				/* FIM 001 ALTERADO: MUNOZ  28/02/2008*/

			    /* Busca o item associado ao aeroporto */
			    select @p_item_fat = ltrim(rtrim(item_id))
			    from GEACutcx..cor_item_pax_u (nolock index = P_cor_item_pax_u)
			    where cd_aerop 			= @p_cd_aerop 
					AND cd_terminal 	= @p_cd_terminal 
					AND tp_natureza 	= @p_tp_natureza 
					AND RIGHT(rtrim(item_id),1) <> 'V'
					AND dt_vigencia 	= ( select MAX (dt_vigencia) from GEACutcx..cor_item_pax_u  (nolock index  = P_cor_item_pax_u)
										where cd_aerop 			= @p_cd_aerop 	
										AND cd_terminal 		= @p_cd_terminal
										AND tp_natureza 		= @p_tp_natureza
										AND dt_vigencia 		<=  @p_dt_mov_selo 
										AND RIGHT(rtrim(item_id),1) <> 'V')
		
			    if ( @@ROWCOUNT = 0 ) OR ( @p_item_fat IS NULL ) OR (@p_item_fat = '')
			    begin
					insert into #TABLE_SALIDA_ELEC_T values ('Não encontrou item para faturar para: ' + @p_cd_aerop + ' - ' + @p_cd_terminal + ' - ' + @p_tp_natureza)
					select @int_insert_discrepancia 	= 1 
						,@w_discrepancia				= '6'
						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
					goto next
			    end

				-- VERIFICA SE O SELO JÁ EXISTE
				select @p_selo_status_act		= ISNULL(selo_status, NULL) 
					,@p_tp_coletor_act			= ISNULL(tp_coletor, NULL)
					,@p_dt_confirma_act			= dt_confirma
					,@p_dt_temp 				= DATEADD (hh, 6, dt_mov )
					,@p_aerop_utilizacao_act	= cd_aerop_utilizacao
					,@p_billing_line_id_act		= billing_line_id 
				from  GEACupax..pax_selo_electronico_u (nolock index = nro_selo_electronico)
				where nro_selo_electronico = @p_nro_selo
					and cd_aerop				= @p_cd_aerop
					AND cd_terminal			= @p_cd_terminal
            -- Alteração feita por Pedro '07/01/2009 11:00'
				--	and year(dt_mov)			= year(@p_dt_mov)
            -- Fim alteração
               and year(dt_mov)			= year(@p_dt_mov_selo)

				select @ROWCOUNT = @@ROWCOUNT
				if @ROWCOUNT > 0
				begin
					if @ROWCOUNT = 1
					begin 
					  if (@p_tp_coletor_act = '01') and (@p_selo_status_act = @p_selo_status )/* YA FUE DESCARGADO DE ALGUN COLETOR VA PARA LEITURA DUPLICADA*/
					  begin
							insert into #TABLE_SALIDA_ELEC_T values ('Leitura Duplicada: ' + @p_cd_aerop + ' - ' + ltrim(rtrim(@p_cd_terminal)) + ' - ' + convert(varchar(8), @p_dt_mov, 112) + ' - ' + @p_nro_selo)
							delete GEACupax..pax_selo_elec_dup_u
							where cd_aerop				= @p_cd_aerop
							and cd_terminal				= @p_cd_terminal
							and dt_mov					= @p_dt_mov_selo
							and nro_selo_electronico	= @p_nro_selo
							and hh_mov					= @p_hh_mov
							insert into GEACupax..pax_selo_elec_dup_u (
								cd_aerop
								,cd_terminal
								,dt_mov
								,nro_selo_electronico
								,hh_mov
								,tp_natureza
								,selo_status
								,cd_motivo
								,tp_fat
								,cd_cia_aerea
								,tp_unid
								,dt_confirma
								,cd_aerop_utilizacao
								,cd_terminal_utilizacao
								,tp_coletor
								,item_fat
								,billing_line_id
								,billing_int_date
								,billing_int_type
								,billing_user_1
								,voo_rea
								,dt_voo_rea
								,hh_voo_rea
								,date_created
								,user_id_created
								,date_changed
								,user_id_changed
								,inactive_ind
								,active_date
								,chgstamp) 
							 values (
								 @p_cd_aerop
								,@p_cd_terminal
								,@p_dt_mov_selo
								,@p_nro_selo
								,@p_hh_mov
								,@p_tp_natureza
								,'2'   			-- @p_selo_status
								,' '			-- @p_cd_motivo
								,'F'			-- @p_tp_fat
								,@p_cd_cia_aerea
								,'A'			-- @p_tp_unid
								,'19000101'		-- @p_dt_confirma
								,@p_cd_aerop	-- @p_cd_aerop_utilizacao
								,@p_cd_terminal	-- @p_cd_terminal_utilizacao
								,@p_tp_coletor
								,@p_item_fat
								,0					-- @p_billing_line_id
								,'19000101'			-- @p_billing_int_date
								,' '				-- @p_billing_int_type
								,' ' 				-- @p_billing_user_1
								,@p_voo_rea
								,@p_dt_mov_selo
								,@p_hh_voo_rea
								,@p_date_process                                           
								,@p_user_process                
								,'19000101'			-- @p_date_changed
								,' ' 				-- @p_user_id_changed
								,0					-- @p_inactive_ind
								,@p_date_process	-- @p_active_date
								,0)
                     
						 set @nr_total_selos_validos = @nr_total_selos_validos + 1  
                  end
                  else
                  begin			
		               if  @p_selo_status_act = '2' 
		    				begin
		    					if @p_dt_confirma_act <> '19000101' AND @p_aerop_utilizacao_act <> @p_cd_aerop
		    					begin                     
									insert into #TABLE_SALIDA_ELEC_T values ('Selo já confirmado em outro aeroporto: ' + @p_nro_selo)
		    						select @int_insert_discrepancia 	= 1 
		    							,@w_discrepancia				= '7'
		    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    						goto next
		    					end
								if (@p_billing_line_id_act <> 0) and (@p_selo_status <> @p_selo_status_act)
								begin
									insert into #TABLE_SALIDA_ELEC_T values ('Selo já faturado, não pode alterar o status: ' + @p_nro_selo)
		    						select @int_insert_discrepancia 	= 1 
		    							,@w_discrepancia				= '21'
		    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    						goto next
								end 
		    					else
		    					begin
		    						update GEACupax..pax_selo_electronico_u
		    						set tp_coletor 				= case when tp_coletor = '9' then '01' else tp_coletor end
		    							,cd_aerop_utilizacao 	= @p_cd_aerop	 
		    							,cd_terminal_utilizacao	= @p_cd_terminal 
		    							,item_fat 				= case when billing_line_id = 0 then @p_item_fat else item_fat end 
                              			,hh_mov					= @p_hh_mov
										,selo_status			= @p_selo_status
		    							,date_changed			= @p_date_process
		    							,user_id_changed		= @p_user_process
		    							,chgstamp				= chgstamp + 1
									where nro_selo_electronico 				= @p_nro_selo
										and cd_aerop						= @p_cd_aerop
										AND cd_terminal			 			= @p_cd_terminal
										and year(dt_mov)					= year(@p_dt_mov)
		    						

		    						set @nr_total_selos_validos = @nr_total_selos_validos + 1  
		    						goto next
		    					end
		    				end
		    				
		    				if @p_selo_status_act = '4' 
		    				begin
								insert into #TABLE_SALIDA_ELEC_T values ('Selo já cancelado: ' + @p_nro_selo)
		    					select @int_insert_discrepancia 	= 1 
		    						,@w_discrepancia				= '8'
		    						,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    					goto next
		    				end
		    				
		    				if @p_selo_status_act = '5' 
		    				begin
		    					if @p_tp_coletor_act = '01' 
		    					begin
		    						insert into #TABLE_SALIDA_ELEC_T values ('Selo já utilizado: ' + @p_nro_selo)
		    						select @int_insert_discrepancia 	= 1 
		    							,@w_discrepancia				= '1'
		    							,@nr_total_selos_discrep 		= @nr_total_selos_discrep + 1
		    						goto next
		    					end
		    					else
		    					begin
		    						update GEACupax..pax_selo_electronico_u
		    						set tp_coletor 				= '01'
		                              ,cd_aerop_utilizacao 		= @p_cd_aerop
		                              ,cd_terminal_utilizacao	= @p_cd_terminal
		                              ,item_fat 				= case when billing_line_id = 0 then @p_item_fat else item_fat end 
		                              ,hh_mov					= @p_hh_mov
		                              ,date_changed				= @p_date_process
		                              ,user_id_changed			= @p_user_process
		                              ,chgstamp					= chgstamp + 1
									where nro_selo_electronico 				= @p_nro_selo
										and cd_aerop						= @p_cd_aerop
										AND cd_terminal			 			= @p_cd_terminal
										and year(dt_mov)					= year(@p_dt_mov)

		    											 
		    						set @nr_total_selos_validos = @nr_total_selos_validos + 1  
										    						
		    						goto next
		    					end
		    				end
		                end
					end
					else
					begin
						if @ROWCOUNT > 1
						begin
							print ' DOS SELOS EN EL MISMO DIA'					
							goto next
						end
					end
					goto next

				end
				else
				begin
					NUEVO:
					
					insert into GEACupax..pax_selo_electronico_u (
							cd_aerop
							,cd_terminal
							,dt_mov
							,nro_selo_electronico
							,tp_natureza
							,selo_status
							,cd_motivo
							,tp_fat
							,cd_cia_aerea
							,tp_unid
							,dt_confirma
							,cd_aerop_utilizacao
							,cd_terminal_utilizacao
							,tp_coletor
							,item_fat
							,billing_line_id
							,billing_int_date
							,billing_int_type
							,billing_user_1
							,voo_rea
							,dt_voo_rea
							,hh_voo_rea
			                ,hh_mov
							,date_created
							,user_id_created
							,date_changed
							,user_id_changed
							,inactive_ind
							,active_date
							,chgstamp) 
						values (
							 @p_cd_aerop
							,@p_cd_terminal
							,@p_dt_mov_selo
							,@p_nro_selo
							,@p_tp_natureza
							,'2'   			-- @p_selo_status
							,' '			-- @p_cd_motivo
							,'F'			-- @p_tp_fat
							,@p_cd_cia_aerea
			
							,'A'			-- @p_tp_unid
							,'19000101'		-- @p_dt_confirma
							,@p_cd_aerop	-- @p_cd_aerop_utilizacao
							,@p_cd_terminal	-- @p_cd_terminal_utilizacao
							,@p_tp_coletor
							,@p_item_fat
							,0					-- @p_billing_line_id
							,'19000101'			-- @p_billing_int_date
							,' '				-- @p_billing_int_type
							,' ' 				-- @p_billing_user_1
							,@p_voo_rea
							,@p_dt_mov_selo
							,'000000'
			                ,@p_hh_mov
							,@p_date_process                                           
							,@p_user_process                
							,'19000101'			-- @p_date_changed
							,' ' 				-- @p_user_id_changed
							,0					-- @p_inactive_ind
							,@p_date_process	-- @p_active_date
							,0)
						
					set @nr_total_selos_validos = @nr_total_selos_validos + 1  
					
				end	
						
			end
		end

        next:
		if @int_insert_discrepancia = 1
		begin

			exec psp_insert_disc_selo_elec 
				@p_cd_aerop
				,@p_cd_terminal
				,@p_dt_mov_selo
				,@p_selo_status
				,@p_nro_selo
				,'E'
				,@p_cd_cia_aerea
				,@w_discrepancia
				,' '
				,@p_arquivo
				,@p_tp_coletor
				,@p_date_process
				,@p_user_process
				,'19000101'
				,' '
				,'0'
				,@p_date_process
				,0

			set @int_insert_discrepancia = 0

		end

		LEER_PROXIMA_LINHA:	
		
		update pax_selos_coletados_u 		
		set status_linha 	= '1'
		where arquivo		= @p_arquivo
		and nro_linha		= @p_nro_linha
		
		fetch next from cursor_selos_coletados_t into
			@p_nro_linha		
			,@p_linha
			,@p_nro_selo			
	end

	LEER_PROXIMO_ARQUIVO:

	close cursor_selos_coletados_t
   -- Alteração Efetuada por Pedro '07/01/2009 10:30'
	deallocate cursor_selos_coletados_t
   --
   
    update GEACupax..pax_baixa_selo_u 
    set status_arq   		= '1'
		,qtd_selos   		= @nr_total_selos_validos
		,qtd_discrepancias	= @nr_total_selos_discrep
		,qtd_lineas_erro	= @nr_total_selos_invalidos
		,qtd_duplicados		= @nr_qtd_duplicados
		,date_changed   	= @p_date_process
		,user_id_changed  	= @p_user_process
    where  cd_aerop 		= @p_cd_aerop
        AND cd_terminal 	= @p_cd_terminal
        AND dt_mov  		= @p_dt_mov
        AND hh_mm  			= @p_hh_mm
        AND arquivo			= @p_arquivo
        
    SEGUIR:
    if @int_error = 0
    begin
		commit transaction 
		insert into #TABLE_SALIDA_ELEC_T values ('FIM PROCESO ARQUIVO : ' + ltrim(rtrim(@p_arquivo)))
    end
    else
    begin
		rollback transaction
		update GEACupax..pax_baixa_selo_u 
        set status_arq   			= '2'
			,qtd_selos   			= @nr_total_selos_validos
			,qtd_discrepancias		= @nr_total_selos_discrep
			,qtd_lineas_erro		= @nr_total_selos_invalidos
			,date_changed   		= @p_date_process
			,user_id_changed  		= @p_user_process
       where cd_aerop  				= @p_cd_aerop
		AND cd_terminal  			= @p_cd_terminal
		AND dt_mov  				= @p_dt_mov
		AND hh_mm  					= @p_hh_mm
		AND arquivo					= @p_arquivo
	end

	/* LER PROXIMO ARQUIVO */
	fetch next from cursor_arquivos_t into
		 @p_cd_aerop
		,@p_cd_terminal
		,@p_dt_mov
		,@p_hh_mm
		,@p_tp_selo
		,@p_selo_status
		,@p_arquivo
		,@p_cd_motivo
		,@p_status_arq
		,@p_tp_coletor 
end

-- Alteração Efetuada por Pedro '07/01/2009 10:30'
--deallocate cursor_selos_coletados_t
close cursor_arquivos_t
deallocate cursor_arquivos_t

insert into #TABLE_SALIDA_ELEC_T values ('Fim do Processo (' + convert(varchar(30), getdate(), 120) + ')')

/* MOSTRAR SAIDA DO PROCESSO */
open cursor_log_processo_elec_t

fetch next from cursor_log_processo_elec_t into
		 @p_linha
		,@p_mensaje
 
while @@fetch_status = 0
begin
	set @v_mensaje = @p_mensaje + char(10) + char(13) 
	print @v_mensaje
	fetch next from cursor_log_processo_elec_t into
		 @p_linha
		,@p_mensaje
 
end
 
close cursor_log_processo_elec_t
deallocate cursor_log_processo_elec_t

drop table #TABLE_SALIDA_ELEC_T
drop table #temp_pax_selos_coletados_u_elec_t

set nocount off
GO

/****** Object:  StoredProcedure [dbo].[psp_procurar_arquivos_selos]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_procurar_arquivos_selos    Script Date: 19/09/2008 15:20:21 ******/








/* Declaracion de Variables */

CREATE                   PROC [dbo].[psp_procurar_arquivos_selos] 
(		@p_arquivo		varchar(33) = '%')
as

set nocount on

declare
/* VARIABLES DA TABELA DE ARQUIVOS */
	@p_cd_aerop         	char (4) 
	,@p_cd_terminal      	char (10) 
	,@p_dt_mov           	char (10)
	,@p_hh_mm            	char (6) 
	,@p_selo_status      	char (1) 
	,@p_cd_motivo        	char (2) 
	,@p_qtd_selos        	float
	,@p_qtd_lineas_arq		float
	,@p_qtd_discrepancias	float
	,@p_qtd_lineas_erro		float
	,@p_qtd_discrepancias_tra 	float
	,@p_qtd_duplicados		float
	,@p_tp_coletor       	char (16) 
	,@p_tp_baixa        	char (1) 
	,@p_status_arq       	char (1) 
	,@p_date_created     	datetime
	,@p_user_id_created  	char (30) 
	,@p_date_changed     	datetime 
	,@p_user_id_changed  	char (30) 
	,@p_inactive_ind     	char (1) 
	,@p_active_date      	datetime  
	,@p_serie_coletor		char(15)

/* VARIABLES DE PROCESO */
	,@p_date_process		datetime
	,@p_user_process 		char(30)
	,@v_tp_selo				char(1)	
	,@v_mensaje 			varchar(255)
	,@p_mensaje				varchar(255)
	,@p_linha				integer
	,@p_status_arq_aux		char(1)

/* CREAR TABELA TEMPORARIA DE LOG DE PROCESO */

/* INICIALIZAR VARIABLES DE PROCESO */
select @p_date_process      	= GETDATE()
	,@p_user_process 			= SUSER_SNAME()

if not exists (select 1 from sysobjects 
				where name 	= 'pax_erro_job_selos_u'
				and xtype	= 'U')
begin
	create table pax_erro_job_selos_u  (
		linha			integer IDENTITY
		,mensaje		varchar(255) NULL
		,data_proceso	datetime)
end

declare cursor_log_processo cursor for
select linha
	,mensaje
from pax_erro_job_selos_u (nolock)
where data_proceso	= @p_date_process
order by linha

insert into  pax_erro_job_selos_u values ('Inicio do Processo (' + CONVERT(varchar(10), @p_date_process, 103) + ' ' + CONVERT(varchar(12), @p_date_process, 114) + ')', @p_date_process)
 
/* DECLARAR CURSOR DE ARCHIVOS A PROCESAR */
declare cursor_arquivos_coletados insensitive cursor for
select distinct arquivo
	,serie_coletor
	,COUNT(1)
from pax_selos_coletados_u (nolock index = ix_pro_aquivos)
where  status_linha	= '0'
AND date_created 	<= DATEADD(mi,-3,@p_date_process)
AND arquivo			LIKE @p_arquivo
AND nro_linha		>= 3
AND left(linha,1)	<> '#'
and substring(arquivo,8,2) >= '06'
group by arquivo, serie_coletor
order by arquivo

/* ABRIR CURSOR DE ARQUIVOS */
open cursor_arquivos_coletados
fetch next from cursor_arquivos_coletados into
	@p_arquivo
	,@p_serie_coletor
	,@p_qtd_lineas_arq
	
while @@FETCH_STATUS = 0
begin

	if SUBSTRING(@p_arquivo, 1,3) = '000'
	begin
		insert into  pax_erro_job_selos_u values ('CODIGO DO AEROPORTO INVALIDO (000)" '+ ltrim(rtrim(@p_arquivo)), @p_date_process)
		goto LEER_PROXIMO
	end

	if LEN(@p_arquivo) <> 32
	begin
		insert into  pax_erro_job_selos_u values ('Nome de Arquivo Invalido" '+ ltrim(rtrim(@p_arquivo)), @p_date_process)
		goto LEER_PROXIMO
	end

	if upper(right(rtrim(@p_arquivo),4)) <> '.TXT'
	begin
		insert into  pax_erro_job_selos_u values ('Nome de Arquivo Invalido (não e .TXT)" '+ ltrim(rtrim(@p_arquivo)), @p_date_process)
		goto LEER_PROXIMO
	end

	select top 1 @p_cd_aerop = cd_aerop 
	from GEACutcx..cor_aeroporto_u (nolock index = P_cor_aeroporto_u)
	where cd_aerop_num			= SUBSTRING(@p_arquivo, 1,3)
		and inactive_ind 		= '0'

	if @p_cd_aerop is null or RTRIM(LTRIM(@p_cd_aerop)) = '' OR @@ROWCOUNT = 0
	begin
		insert into  pax_erro_job_selos_u values ('CODIGO DO AEROPORTO INVALIDO "' + @p_cd_aerop + '" '+ ltrim(rtrim(@p_arquivo)), @p_date_process)
		goto LEER_PROXIMO
	end

	/* verificar se o coletor pertence ao aeroporto*/
	if not exists (select 1 from pax_coletor_u (nolock)
		where sigla = @p_cd_aerop
		and serial	= @p_serie_coletor)
	begin
		insert into  pax_erro_job_selos_u values ('COLETOR NÃO ATRIBUÍDO A ESSE AEROPORTO "' + @p_cd_aerop + ' / '+ ltrim(rtrim(@p_serie_coletor)) + '" ARQUIVO (' + ltrim(rtrim(@p_arquivo))+ ')' , @p_date_process)
		goto LEER_PROXIMO
	end
	
	select @p_dt_mov			= '20' + SUBSTRING(@p_arquivo, 8,6)
	if isdate( @p_dt_mov ) = 0
	begin
		insert into  pax_erro_job_selos_u values ('DATA DE MOVIMENTO INVALIDA "' + @p_dt_mov + '". ARQUIVO (' + @p_arquivo + ')', @p_date_process)
		goto LEER_PROXIMO
	end

	select @p_cd_terminal	= SUBSTRING(@p_arquivo, 4,1)
		,@p_dt_mov			= '20' + SUBSTRING(@p_arquivo, 8,6)
		,@p_hh_mm			= SUBSTRING(@p_arquivo, 15,6)
		,@v_tp_selo			= SUBSTRING(@p_arquivo, 6,1)
		,@p_selo_status 	= case when SUBSTRING(@p_arquivo, 22,1) = 'U' then '2'
								   when SUBSTRING(@p_arquivo, 22,1) = 'D' then '3'
								   when SUBSTRING(@p_arquivo, 22,1) = 'C' then '4'
								ELSE @p_selo_status end
		,@p_tp_baixa        		= 'L'
		,@p_cd_motivo		= case when SUBSTRING(@p_arquivo, 22,1) = 'U' then 'NA'
								ELSE SUBSTRING(@p_arquivo, 23,2) end
		,@p_tp_coletor				= '01'
		,@p_status_arq       		= '0'
		,@p_date_created     		= @p_date_process
		,@p_user_id_created  		= @p_user_process
		,@p_date_changed     		= '19000101'
		,@p_user_id_changed  		= ' '
		,@p_inactive_ind     		= '0'
		,@p_active_date      		= '19000101'
		,@p_qtd_selos        		= 0
		,@p_qtd_discrepancias		= 0
		,@p_qtd_lineas_erro			= 0
		,@p_qtd_discrepancias_tra 	= 0
		,@p_qtd_duplicados			= 0

	/* VALIDA TERMINAL */
	if Not Exists ( select 1 from GEACutcx..cor_terminal_aerop_u (nolock index = P_cor_terminal_aerop_u)
			where cd_aerop 			= @p_cd_aerop 
				and terminal 		= rtrim(@p_cd_terminal)
				and inactive_ind 	= '0')
	begin
		insert into  pax_erro_job_selos_u values ('TERMINAL DE AEROPORTO INVÁLIDO OU INATIVO. "' + rtrim(@p_cd_terminal) + '"' + ltrim(rtrim(@p_arquivo)), @p_date_process)
		goto LEER_PROXIMO
	end
	
	/* VALIDA STATUS DO SELO */
	if @p_selo_status  NOT IN ('2','3','4')
	begin
		insert into  pax_erro_job_selos_u values ('TIPO DE BAIXA DIFERENTE DE U, D OU C. "' + @p_selo_status + '"', @p_date_process)
		goto LEER_PROXIMO
	end	
	
	-- VERIFICA SE ARQUIVO JÁ FOI PROCESSADO ANTERIORMENTE
	if NOT EXISTS ( select  1 from GEACupax..pax_baixa_selo_u (nolock index = P_pax_baixa_selo_u)
		where cd_aerop 		= @p_cd_aerop
		AND cd_terminal 	= @p_cd_terminal
		AND dt_mov  		= @p_dt_mov
		AND hh_mm  			= @p_hh_mm
		AND tp_selo			= @v_tp_selo 
		and arquivo			= @p_arquivo)
	begin
		-- SE ARQUIVO NÃO FOI PROCESSADO ANTERIORMENTE - INCLUI ARQUIVO		
		insert into  GEACupax..pax_baixa_selo_u 
			( cd_aerop, 
			cd_terminal, 
			dt_mov, 
			hh_mm, 
			tp_selo,
			selo_status, 
			arquivo, 
			cd_motivo, 
			qtd_selos, 
			tp_coletor, 
			tp_baixa, 
			status_arq, 
			qtd_lineas_arq, 
			qtd_discrepancias,
			qtd_lineas_erro,
			qtd_discrepancias_tra,
			qtd_duplicados,
			date_created, 
			user_id_created, 
			date_changed, 
			user_id_changed, 
			inactive_ind, 
			active_date, 
			chgstamp )  
		values ( @p_cd_aerop         
			,@p_cd_terminal      
			,@p_dt_mov           
			,@p_hh_mm            
			,@v_tp_selo
			,@p_selo_status
			,@p_arquivo          
			,@p_cd_motivo        
			,@p_qtd_selos        
			,@p_tp_coletor       
			,@p_tp_baixa        
			,@p_status_arq       
			,@p_qtd_lineas_arq 
			,@p_qtd_discrepancias
			,@p_qtd_lineas_erro
			,@p_qtd_discrepancias_tra
			,@p_qtd_duplicados		
			,@p_date_created     
			,@p_user_id_created  
			,@p_date_changed     
			,@p_user_id_changed  
			,@p_inactive_ind     
			,@p_active_date      
			,0 ) 
			
			
		set @v_mensaje = 'REQUISIÇAO CRIADA PARA ARQUIVO:' + ltrim(rtrim(@p_arquivo))
		insert into  pax_erro_job_selos_u values (@v_mensaje, @p_date_process)		
	end
	else
	begin
		-- SE ARQUIVO JÁ FOI PROCESSADO ANTERIORMENTE - REPROCESSA OU NÃO ARQUIVO
		select   @p_status_arq_aux = status_arq 
		from GEACupax..pax_baixa_selo_u (nolock)
		where   cd_aerop 		= @p_cd_aerop
			AND cd_terminal  	= @p_cd_terminal
			AND dt_mov  		= @p_dt_mov
			AND hh_mm  			= @p_hh_mm
			AND tp_selo			= @v_tp_selo 
			AND arquivo			= @p_arquivo

		UPDATE GEACupax..pax_baixa_selo_u 
			set status_arq  = case when status_arq 	= '2' then '0'
							when status_arq 		= '3' then '0'
							when status_arq 		= '1' AND SUBSTRING(arquivo,8,6) IN ('060116', '060117') then '0'
							when status_arq 		= '0' then '0'
							else '0' end
				,qtd_lineas_arq			= @p_qtd_lineas_arq
				,date_changed 			= @p_date_process
				,user_id_changed 		= @p_user_process
				,chgstamp  				= chgstamp + 1
			where cd_aerop 		= @p_cd_aerop
				AND cd_terminal = @p_cd_terminal
				AND dt_mov  	= @p_dt_mov
				AND hh_mm  		= @p_hh_mm
				AND tp_selo		= @v_tp_selo
				and arquivo 	= @p_arquivo
	

		select @v_mensaje = 'ARQUIVO:' + @p_arquivo + ' ESTA DUPLICADO. STATUS DO ARQUIVO ' + @p_status_arq_aux 
					 + ' NOVO STATUS ' + 
					case when @p_status_arq_aux = '2' then '0'
					when @p_status_arq_aux 		= '3' then '0'
					when @p_status_arq_aux 		= '1' then '1'
					when @p_status_arq_aux 		= '0' then '0' end		

		insert into  pax_erro_job_selos_u values (@v_mensaje, @p_date_process)		
		
	end	
	LEER_PROXIMO:	
	fetch next from cursor_arquivos_coletados into
		@p_arquivo
		,@p_serie_coletor
		,@p_qtd_lineas_arq
end

close cursor_arquivos_coletados
deallocate  cursor_arquivos_coletados

insert into  pax_erro_job_selos_u values ('Fim do Processo (' + CONVERT(varchar(30), GETDATE(), 131) + ')', @p_date_process)

/* MOSTRAR SAIDA DO PROCESSO */

open cursor_log_processo

fetch next from cursor_log_processo into
		 @p_linha
		,@p_mensaje
 
while @@FETCH_STATUS = 0
begin
	set @v_mensaje = @p_mensaje + char(10) + char(13) 
	print @v_mensaje
	fetch next from cursor_log_processo into
		 @p_linha
		,@p_mensaje
 
end
 
close cursor_log_processo
deallocate  cursor_log_processo

set NOCOUNT OFF







GO

/****** Object:  StoredProcedure [dbo].[psp_rel_rpax_aerop_user]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_rel_rpax_aerop_user    Script Date: 19/09/2008 15:20:21 ******/
create proc [dbo].[psp_rel_rpax_aerop_user]
as

select Aerop 			= a.cd_aerop
	,Cia 				= a.cd_cia_aerea 
	,Num_Vo				= a.nro_voo 
	,Data_Voo			= convert(varchar, a.dt_voo, 103)                                                
	,Hora_Voo			= a.hr_voo 
	,Nat				= Case when a.tp_natureza = 'D' then 'Dom' 
							when a.tp_natureza = 'I' then 'Int'
							else a.tp_natureza end
	,Tipo				= a.tp_voo 
	,Dom_Fat			= a.pax_dom_fat 
	,Int_Fat			= a.pax_int_fat 
	,Tot_Fat			= a.pax_tot_fat 
	,Dom_Vista			= a.pax_dom_vista 
	,Int_Vista			= a.pax_int_vista 
	,Tot_Vista			= a.pax_tot_vista 
	,Colo				= a.pax_colo    
	,Trans				= a.pax_transito 
	,Cnx_Dom			= a.pax_conexao_dom 
	,Cnx_Int			= a.pax_conexao_int 
	,IAC_2110			= a.pax_iac2110 
	,Total_Isento		= a.pax_tot_isento 
	,Total_Geral		= a.pax_total   
	,Usuario_Digitacao	= a.user_id_created                
	,Data_Digitacao		= convert(varchar,a.date_created,103)
	,Usuario_Alteracao	= a.user_id_changed                
	,Data_Alteracao		= convert(varchar,a.date_changed,103)
	,Matricula			= a.mt_aeronave
	,Sit				= a.inactive_ind
from rpax_emb_voo_u a (nolock)



GO

/****** Object:  StoredProcedure [dbo].[psp_rel_rste_avista_sem_boleto]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_rel_rste_avista_sem_boleto    Script Date: 19/09/2008 15:20:22 ******/

/*
exec psp_rel_rste_avista_sem_boleto
*/

CREATE proc [dbo].[psp_rel_rste_avista_sem_boleto]
(	@p_cd_aerop		varchar(4) = ''

)
as

set nocount on

set @p_cd_aerop = ltrim(rtrim(@p_cd_aerop))

if left(@p_cd_aerop, 1) = '%'
	set @p_cd_aerop = ''

select distinct
	a.cd_aerop 
	,a.cd_terminal 
	,convert(varchar(10), a.dt_entrega, 103)
	,a.hh_entrega 
	,a.cd_cia_aerea 
	,a.nro_rste
from pax_entrega_selo_line_u a (nolock index = ix_tp_fat)
inner join pax_entrega_selo_ctrl_u b (nolock index = P_pax_entrega_selo_ctrl_u)
on b.cd_aerop			= a.cd_aerop 
and b.cd_terminal		= a.cd_terminal 
and b.dt_entrega		= a.dt_entrega 
and b.hh_entrega		= a.hh_entrega
and b.cd_cia_aerea		= a.cd_cia_aerea
and b.nro_rste			= a.nro_rste
inner join pax_selo_u c (nolock index = P_pax_selo_u)
on c.nro_selo			= a.nro_selo_inicial
and c.ano_remesa		= a.ano_remesa
where a.tp_fat			= 'A'
and b.cd_situacao_rste	= '1'
and c.billing_line_id	= 0
and a.cd_aerop			= case when @p_cd_aerop = '' then a.cd_aerop else @p_cd_aerop end
order by 1,2,3,4,5,6

set nocount off



GO

/****** Object:  StoredProcedure [dbo].[psp_rel_selo_e_utl_nao_conf]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_rel_selo_e_utl_nao_conf    Script Date: 19/09/2008 15:20:22 ******/

CREATE  proc [dbo].[psp_rel_selo_e_utl_nao_conf]
(		@p_cd_aerop			varchar(4) 		= ''
		,@p_cd_terminal		varchar(10)		= ''
		,@p_cd_cia_aerea	varchar(3)		= ''
		,@p_dt_mov_ini		datetime		= '20070101'
		,@p_dt_mov_fim		datetime		= '21001231'
)
as 

/*
exec psp_rel_selo_e_utl_nao_conf 'SBSP', '', '', '20071128', '20071128'
*/

declare @v_total_selos 		integer 

create table #relatorio
(		cd_aerop				varchar(4)
		,cd_terminal			varchar(10)
		,cd_cia_aerea			varchar(3)
		,dt_mov					datetime
		,nro_selo_electronico	varchar(14)
)

set @p_cd_aerop = ltrim(rtrim(@p_cd_aerop))
if left(@p_cd_aerop, 1) = '%'
	set @p_cd_aerop = ''

set @p_cd_terminal = ltrim(rtrim(@p_cd_terminal))
if left(@p_cd_terminal, 1) = '%'
	set @p_cd_terminal = ''

set @p_cd_cia_aerea = ltrim(rtrim(@p_cd_cia_aerea))
if left(@p_cd_cia_aerea, 1) = '%'
	set @p_cd_cia_aerea = ''

/*
insert into #relatorio
select cd_aerop, 
	cd_terminal, 
	cd_cia_aerea, 
	dt_mov,
	nro_selo_electronico 
from pax_selo_electronico_u (nolock index = pax_selo_electronico_fatura)
where 
	billing_line_id				= 0
	and selo_status 			= '2'
	and dt_mov					between @p_dt_mov_ini and @p_dt_mov_fim	
	and cd_aerop_utilizacao 	= case when @p_cd_aerop 	= '' then cd_aerop_utilizacao 	 else @p_cd_aerop 	 end 
	and cd_terminal_utilizacao	= case when @p_cd_terminal	= '' then cd_terminal_utilizacao else @p_cd_terminal end
	and cd_cia_aerea			= case when @p_cd_cia_aerea	= '' then cd_cia_aerea 			 else @p_cd_cia_aerea end
	and dt_confirma 			= '19000101'
set @v_total_selos = @@rowcount
*/

insert into #relatorio
select cd_aerop, 
	cd_terminal, 
	cd_cia_aerea, 
	dt_mov,
	nro_selo_electronico 
from pax_selo_electronico_u (nolock index = IDX03_BI)
where 
	cd_aerop_utilizacao 		= case when @p_cd_aerop 	= '' then cd_aerop_utilizacao 	 else @p_cd_aerop 	 end 
	and cd_terminal_utilizacao	= case when @p_cd_terminal	= '' then cd_terminal_utilizacao else @p_cd_terminal end
	and cd_cia_aerea			= case when @p_cd_cia_aerea	= '' then cd_cia_aerea 			 else @p_cd_cia_aerea end
--	and selo_status 			= '2'
	and dt_confirma 			= '19000101'
	and dt_mov					between @p_dt_mov_ini and @p_dt_mov_fim	
set @v_total_selos 	= @@rowcount

select 
	cd_aerop	
	,cd_terminal
	,cd_cia_aerea	
	,dt_mov	
	,nro_selo_electronico
	,@v_total_selos total_selos
from #relatorio
order by 1,2,3,4,5

drop table #relatorio




GO

/****** Object:  StoredProcedure [dbo].[psp_rel_selo_eletronico_não_fat_qui]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_rel_selo_eletronico_não_fat_qui    Script Date: 19/09/2008 15:20:22 ******/


-- =============================================
-- Author:		José Muñoz
-- ALTER  date: 20/05/2008
-- Description:	Relatorio de selos Eletr"onicos que não vão ser faturados na quinzena
-- =============================================

/* exec psp_rel_selo_eletronico_não_fat_qui 'SBBR', '20080515' */
CREATE  procedure [dbo].[psp_rel_selo_eletronico_não_fat_qui]
		( @p_cd_aerop		varchar(4)	= ''
		,@p_dt_fim_quinzena	datetime)

as
begin
	set nocount on
	declare @v_dt_processo			datetime
			,@v_dt_fim_quinzena_aux	datetime
			,@v_count				int

	select @v_dt_processo		= getdate()	
		,@v_dt_fim_quinzena_aux	= dateadd(dd,1,@p_dt_fim_quinzena)

	set @p_cd_aerop = ltrim(rtrim(@p_cd_aerop))
	if left(@p_cd_aerop,1) = '%'
		set @p_cd_aerop = ''

	create table #temp_selo_fat
		(cd_aerop_utilizacao	char(4)
		,cd_terminal_utilizacao	char(10)
		,dt_mov					datetime
		,nro_selo_electronico	char(14)
		,agrupador				char(20))

	create index ix_temp_selo_fat on #temp_selo_fat (cd_aerop_utilizacao, cd_terminal_utilizacao, dt_mov, nro_selo_electronico)

	insert into #temp_selo_fat
	exec GEACbl..gsp_sel_itens_faturar_selo_electronico_upd_jm_aux '', '', '', '', @p_dt_fim_quinzena, 'N', @p_cd_aerop

	create table #salida_rep (
		cd_aerop_utilizacao		char(4)
		,cd_terminal_utilizacao	char(10)
		,dt_mov					datetime
		,nro_selo_electronico	char(14)
		,cd_cia_aerea			char(3)
		,motivo					varchar(60))

	insert into #salida_rep
	select a.cd_aerop_utilizacao 
			,a.cd_terminal_utilizacao			
			,a.dt_mov
			,a.nro_selo_electronico
			,a.cd_cia_aerea
			,motivo = case when a.dt_mov > @v_dt_processo	then 'Selo com data a futuro.'
						when a.tp_fat = 'A'					then 'Selo entregue a Vista sem Boleto Gerado.'
						when c.terminal is null	or c.terminal <> a.cd_terminal_utilizacao then 'Terminal não trabalha com Selos. ( Terminal: ' + rtrim(ltrim(a.cd_terminal_utilizacao)) + ')'
						when a.cd_cia_aerea		= ''		then 'Cia aérea inválida.'
						when a.tp_fat			= ''		then 'Tipo de Faturamento inválido.'
						when year(a.dt_mov)		< 2003		then 'Data inválida. Ano menor a 2003'
						else 'Outro motivo. ' end
	from pax_selo_electronico_nao_fat_u a (nolock index = IX_AEROP_DATA)
	left join GEACutcx..cor_tpfatur_selo_u c ( nolock index = P_cor_tpfatur_selo_u)
	on c.cd_aerop		= a.cd_aerop_utilizacao 
	and c.terminal		= a.cd_terminal_utilizacao 
	and c.tp_fatur_pax	= '1'
	where a.cd_aerop_utilizacao	= case when @p_cd_aerop = '' then a.cd_aerop_utilizacao else  @p_cd_aerop end
	and (a.dt_mov				< @v_dt_fim_quinzena_aux or a.dt_mov > @v_dt_processo )
	and not exists (select 1 from #temp_selo_fat b (nolock index = ix_temp_selo_fat)
					where b.cd_aerop_utilizacao		= a.cd_aerop_utilizacao
					and b.cd_terminal_utilizacao	= a.cd_terminal_utilizacao
					and b.dt_mov					= a.dt_mov
					and b.nro_selo_electronico		= a.nro_selo_electronico)
	and a.tp_natureza			<> 'S'

	set @v_count = @@rowcount

	select 	cd_aerop_utilizacao		
		,cd_terminal_utilizacao	
		,dt_mov					
		,nro_selo_electronico	
		,cd_cia_aerea			
		,motivo					
		,total_selo		= @v_count
		,data			= 'Data: ' + convert(varchar(10), @p_dt_fim_quinzena, 103)
	from #salida_rep
	order by cd_aerop_utilizacao , dt_mov 

	drop table #salida_rep 
	drop index #temp_selo_fat.ix_temp_selo_fat
	drop table #temp_selo_fat

	set nocount off
end




GO

/****** Object:  StoredProcedure [dbo].[psp_rel_selo_não_fat_qui]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_rel_selo_não_fat_qui    Script Date: 19/09/2008 15:20:22 ******/
-- =============================================
-- Author:		José Muñoz
-- Create date: 19/05/2008
-- Description:	Relatorio de selos Físicos que não vão ser faturados na quinzena
-- =============================================
CREATE procedure [dbo].[psp_rel_selo_não_fat_qui]
		( @p_cd_aerop		char(4)	= ''
		,@p_dt_fim_quinzena	datetime)

as
begin
	set nocount on
	declare @v_dt_processo			datetime
			,@v_dt_fim_quinzena_aux	datetime
			,@v_count				int

	select @v_dt_processo		= getdate()	
		,@v_dt_fim_quinzena_aux	= dateadd(dd,1,@p_dt_fim_quinzena)

	set @p_cd_aerop = ltrim(rtrim(@p_cd_aerop))
	if left(@p_cd_aerop,1) = '%'
		set @p_cd_aerop = ''

	create table #temp_selo_fat
		(nro_selo		char(10)
		,agrupador		char(20)
		,ano_remesa		int)

	insert into #temp_selo_fat
	exec GEACbl..gsp_sel_itens_faturar_selo_upd '', '', '', '', @p_dt_fim_quinzena, 'N'

	create table #salida_rep (
		cd_aerop_utilizacao		char(4)
		,nro_selo				char(10)
		,ano_remesa				int
		,dt_mov					datetime
		,cd_cia_aerea			char(3)
		,motivo					varchar(60))

	insert into #salida_rep
	select a.cd_aerop_utilizacao 
			,a.nro_selo
			,a.ano_remesa
			,a.dt_mov
			,a.cd_cia_aerea
			,motivo = case when a.dt_mov > @v_dt_processo	then 'Selo com data a futuro.'
						when a.tp_fat = 'A'					then 'Selo entregue a Vista sem Boleto Gerado.'
						when c.terminal is null	or c.terminal <> a.cd_terminal_utilizacao then 'Terminal não trabalha com Selos. ( Terminal: ' + rtrim(ltrim(a.cd_terminal_utilizacao)) + ')'
						when a.cd_cia_aerea		= ''		then 'Cia aérea inválida.'
						when a.tp_fat			= ''		then 'Tipo de Faturamento inválido.'
						else 'Outro motivo. ' end
	from pax_selo_nao_fat_u a (nolock)
	left join GEACutcx..cor_tpfatur_selo_u c ( NOLOCK )
	on c.cd_aerop		= a.cd_aerop_utilizacao 
	and c.terminal		= a.cd_terminal_utilizacao 
	and c.tp_fatur_pax	= '1'
	where not exists (select 1 from #temp_selo_fat b (nolock)
					where b.nro_selo	= a.nro_selo
					and b.ano_remesa	= a.ano_remesa)
	and (a.dt_mov				< @v_dt_fim_quinzena_aux or a.dt_mov > @v_dt_processo )
	and a.tp_natureza			<> 'S'
	and a.cd_aerop_utilizacao	= case when @p_cd_aerop = '' then a.cd_aerop_utilizacao else  @p_cd_aerop end
	
	set @v_count = @@rowcount

	select 	cd_aerop_utilizacao		
		,nro_selo				
		,ano_remesa				
		,dt_mov					
		,cd_cia_aerea
		,motivo					
		,total_selo		= @v_count
		,data			= 'Data: ' + convert(varchar(10), @p_dt_fim_quinzena, 103)
	from #salida_rep
	order by cd_aerop_utilizacao , dt_mov 

	drop table #salida_rep 
	drop table #temp_selo_fat

	set nocount off
end


GO

/****** Object:  StoredProcedure [dbo].[psp_rel_upa_rpax_x_selos_elec]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_rel_upa_rpax_x_selos_elec    Script Date: 19/09/2008 15:20:22 ******/



CREATE      PROC [dbo].[psp_rel_upa_rpax_x_selos_elec] 
(		@p_cd_aerop     		varchar(4)	= ''
    	,@p_cd_terminal			varchar(10)	= ''
    	,@p_cd_cia_aerea		varchar(3)	= ''
		,@p_dt_voo				varchar(10)	= ''
)
as

set nocount on
declare @v_dt_voo		varchar(8)
		,@tot_rpe_dom	integer
		,@tot_rpe_int	integer
		,@tot_rpe		integer
		,@tot_sel_dom	integer	
		,@tot_sel_int	integer
		,@tot_sel		integer
		,@tot_dif_dom	integer
		,@tot_dif_int	integer
		,@tot_dif		integer
		,@tot_fis_dom	integer
		,@tot_fis_int	integer


set @v_dt_voo = left(@p_dt_voo, 4) + substring(@p_dt_voo, 6,2) + right(@p_dt_voo,2)
 
create table #tem_sal_rel_upa_rpax_x_selos_elec
(		nro_selo			varchar(20)  		
		,cd_aerop			char(4)
		,cd_terminal 		char(10)
		,cd_cia_aerea		char(3)
		,dt_voo 			datetime
		,nro_voo			char(5)
		,hr_voo 			char(4)
		,pax_dom_rpe		integer
		,pax_int_rpe		integer
		,pax_total_rpe		integer
		,pax_dom_sel 		integer
		,pax_int_sel 		integer
		,pax_total_sel 		integer
		,tp_reg				char(1)
)

create index ix_tp_reg on #tem_sal_rel_upa_rpax_x_selos_elec (tp_reg)

/* RPAX */
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select  
	'',
	cd_aerop,
	cd_terminal,
	cd_cia_aerea,
	convert(varchar(8),dt_voo,112),
	right(nro_voo,4),
	hr_voo,
	pax_dom_rpe 	= pax_dom_fat + pax_dom_vista,
	pax_int_rpe 	= pax_int_fat + pax_int_vista,
	pax_total_rpe 	= pax_total - pax_tot_isento,
	pax_dom_sel 	= 0,
	pax_int_sel 	= 0,
	pax_total_sel 	= 0,
	tp_reg 			= '1'
From GEACupax..rpax_emb_voo_u (nolock)
where cd_aerop						= @p_cd_aerop
and cd_terminal						= @p_cd_terminal
and cd_cia_aerea					= @p_cd_cia_aerea
and convert(varchar(8),dt_voo,112)	= @v_dt_voo
and inactive_ind 					= '0'

/* Selo eletronico antigo 20 digitos */
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select	
	nro_selo_elec,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	dt_voo			= convert(char(4),year(date_created))+ substring(nro_selo_elec,17,2)+ substring(nro_selo_elec,19,2),
	voo_rea,
	substring(hh_voo_rea,1,4), 
	0,
	0,
	0,
	case when tp_natureza = 'D' then 1 else 0 end,
	case when tp_natureza = 'I' then 1 else 0 end,
	1,
	'1'
From GEACupax..pax_selo_elec_u (nolock index = idx_selo_status)
Where	selo_status  						= '2' 
and cd_aerop_utilizacao						= @p_cd_aerop 
and cd_terminal_utilizacao					= @p_cd_terminal
and convert(varchar(8), dt_voo_rea, 112)  	= @v_dt_voo
and cd_cia_aerea							= @p_cd_cia_aerea


/* Selo eletronico novo 14 digitos */
Select 	nro_selo_electronico,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	dt_voo_rea = convert(varchar(8),dt_voo_rea,112), -- alterado MUNOZ, Tomar en conta a data do selo e não a de movimento
	voo_rea,
	hh_voo_rea = substring(hh_voo_rea,1,4), 
	pax_dom_rpe = 0,
	pax_int_rpe = 0,
	pax_total_rpe = 0,
	pax_dom_sel = case when tp_natureza = 'D' then 1 else 0 end,
	pax_int_sel = case when tp_natureza = 'I' then 1 else 0 end,
	pax_total_sel  = 1,
	tp_reg = '1',
	/*dt_voo = convert(char(4), year(dt_voo_rea)) + substring(nro_selo_electronico,8,4)*/
	dt_voo	= case when dt_confirma <> '19000101' 
				then convert(varchar(8),dt_voo_rea,112) 
				else convert(char(4), year(dt_voo_rea)) + substring(nro_selo_electronico,8,4) end

into #lista
From GEACupax..pax_selo_electronico_u (nolock)
Where cd_aerop								= @p_cd_aerop 
and cd_terminal								= @p_cd_terminal
and cd_cia_aerea							= @p_cd_cia_aerea
and selo_status  							= '2' 
and convert(char(4), year(dt_voo_rea)) 		= left(@v_dt_voo,4)

create index idx_tmp on #lista (dt_voo)

insert into #tem_sal_rel_upa_rpax_x_selos_elec
select	
	nro_selo_electronico,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	dt_voo_rea,
	voo_rea,
	hh_voo_rea, 
	pax_dom_rpe,
	pax_int_rpe,
	pax_total_rpe,
	pax_dom_sel,
	pax_int_sel,
	pax_total_sel,
	tp_reg
From #lista  (nolock)
Where dt_voo = @v_dt_voo

drop table #lista

/* Selos Fisicos */
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select 	
	nro_selo,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	convert(varchar(8),dt_mov,112),
	'',	
	'',
	0,
	0,
	0,
	case when tp_natureza = 'D' then 1 else 0 end,
	case when tp_natureza = 'I' then 1 else 0 end,
	1,
	'2'
from GEACupax..pax_selo_u (nolock)
where selo_status  					= '2' 
and cd_aerop_utilizacao				= @p_cd_aerop 
and cd_terminal_utilizacao			= @p_cd_terminal
and cd_cia_aerea					= @p_cd_cia_aerea
and convert(varchar(8),dt_mov,112)	= @v_dt_voo



/* Calcula Totales */
select  @tot_rpe_dom	= sum(pax_dom_rpe)
		,@tot_rpe_int	= sum(pax_int_rpe)
		,@tot_rpe		= sum(pax_total_rpe)
		,@tot_sel_dom	= sum(pax_dom_sel)
		,@tot_sel_int	= sum(pax_int_sel)
		,@tot_sel		= sum(pax_total_sel)
--		,@tot_dif_dom	= sum(pax_dom_rpe) - sum(pax_dom_sel)
--		,@tot_dif_int	= sum(pax_int_rpe) - sum(pax_int_sel)
		,@tot_dif_dom	= sum(pax_dom_sel) - sum(pax_dom_rpe) 
		,@tot_dif_int	= sum(pax_int_sel) - sum(pax_int_rpe)
		,@tot_dif		= sum(pax_total_rpe) - sum(pax_total_sel)
from #tem_sal_rel_upa_rpax_x_selos_elec (nolock)
where tp_reg	= '1'


select @tot_fis_dom		= sum(pax_dom_sel)
		,@tot_fis_int 	=	sum(pax_int_sel)
from #tem_sal_rel_upa_rpax_x_selos_elec (nolock index = ix_tp_reg)
where tp_reg	= '2'


select cd_aerop
	,cd_terminal
	,cd_cia_aerea
	,dt_voo
	,nro_voo		= right(rtrim(ltrim(nro_voo)),4)
	,hr_voo
	,pax_dom_rpe 	= sum(pax_dom_rpe)
	,pax_int_rpe 	= sum(pax_int_rpe)
	,pax_total_rpe 	= sum(pax_total_rpe)
	,pax_dom_sel 	= sum(pax_dom_sel)
	,pax_int_sel 	= sum(pax_int_sel)
	,pax_total_sel 	= sum(pax_total_sel)
--	,pax_dif_dom	= sum(pax_dom_rpe) - sum(pax_dom_sel)
--	,pax_dif_int	= sum(pax_int_rpe) - sum(pax_int_sel)
	,pax_dif_dom	= sum(pax_dom_sel) - sum(pax_dom_rpe) 
	,pax_dif_int	= sum(pax_int_sel) - sum(pax_int_rpe) 

	,tp_reg
	,tot_rpe_dom	= @tot_rpe_dom
	,tot_rpe_int 	= @tot_rpe_int
	,tot_rpe 		= @tot_rpe
	,tot_sel_dom 	= @tot_sel_dom
	,tot_sel_int 	= @tot_sel_int
	,tot_sel 		= @tot_sel
	,tot_dif_dom 	= @tot_dif_dom
	,tot_dif_int 	= @tot_dif_int
	,tot_dif 		= @tot_dif
	,tot_fis_dom	= @tot_fis_dom
	,tot_fis_int 	= @tot_fis_int
from #tem_sal_rel_upa_rpax_x_selos_elec (nolock index = ix_tp_reg)
where tp_reg	= '1'
group by cd_aerop
	,cd_terminal 
	,cd_cia_aerea
	,dt_voo 
	--right(rtrim(ltrim(nro_voo)),4),
	,nro_voo
	,hr_voo
	,tp_reg
order by nro_voo,dt_voo, hr_voo


drop index #tem_sal_rel_upa_rpax_x_selos_elec.ix_tp_reg
drop table #tem_sal_rel_upa_rpax_x_selos_elec

set nocount off

/*

--- View Anterior

set nocount on
declare @v_dt_voo		varchar(8)
		,@tot_rpe_dom	integer
		,@tot_rpe_int	integer
		,@tot_rpe		integer
		,@tot_sel_dom	integer	
		,@tot_sel_int	integer
		,@tot_sel		integer
		,@tot_dif_dom	integer
		,@tot_dif_int	integer
		,@tot_dif		integer
		,@tot_fis_dom	integer
		,@tot_fis_int	integer


set @v_dt_voo = left(@p_dt_voo, 4) + substring(@p_dt_voo, 6,2) + right(@p_dt_voo,2)
 
create table #tem_sal_rel_upa_rpax_x_selos_elec
(		nro_selo			varchar(20)  		
		,cd_aerop			char(4)
		,cd_terminal 		char(10)
		,cd_cia_aerea		char(3)
		,dt_voo 			datetime
		,nro_voo			char(5)
		,hr_voo 			char(4)
		,pax_dom_rpe		integer
		,pax_int_rpe		integer
		,pax_total_rpe		integer
		,pax_dom_sel 		integer
		,pax_int_sel 		integer
		,pax_total_sel 		integer
		,tp_reg				char(1)
)

create index ix_tp_reg on #tem_sal_rel_upa_rpax_x_selos_elec (tp_reg)

-- RPAX 
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select  
	'',
	cd_aerop,
	cd_terminal,
	cd_cia_aerea,
	convert(varchar(8),dt_voo,112),
	right(nro_voo,4),
	hr_voo,
	pax_dom_rpe 	= pax_dom_fat + pax_dom_vista,
	pax_int_rpe 	= pax_int_fat + pax_int_vista,
	pax_total_rpe 	= pax_total - pax_tot_isento,
	pax_dom_sel 	= 0,
	pax_int_sel 	= 0,
	pax_total_sel 	= 0,
	tp_reg 			= '1'
From GEACupax..rpax_emb_voo_u (nolock index = IDX_01)
where inactive_ind 					= '0'

and cd_aerop						= @p_cd_aerop
and cd_terminal						= @p_cd_terminal
and cd_cia_aerea					= @p_cd_cia_aerea
and convert(varchar(8),dt_voo,112)	= @v_dt_voo


-- Selo eletronico antigo 20 digitos 
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select	
	nro_selo_elec,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	dt_voo			= convert(char(4),year(date_created))+ substring(nro_selo_elec,17,2)+ substring(nro_selo_elec,19,2),
	voo_rea,
	substring(hh_voo_rea,1,4), 
	0,
	0,
	0,
	case when tp_natureza = 'D' then 1 else 0 end,
	case when tp_natureza = 'I' then 1 else 0 end,
	1,
	'1'
From GEACupax..pax_selo_elec_u (nolock index = idx_selo_status)
Where	selo_status  						= '2' 
and cd_aerop_utilizacao						= @p_cd_aerop 
and cd_terminal_utilizacao					= @p_cd_terminal
and convert(varchar(8), dt_voo_rea, 112)  	= @v_dt_voo
and cd_cia_aerea							= @p_cd_cia_aerea


-- Selo eletronico novo 14 digitos 
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select	
	nro_selo_electronico,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	convert(varchar(8),dt_voo_rea,112), -- alterado MUNOZ, Tomar en conta a data do selo e não a de movimento
--	dt_voo 			= case when len(nro_selo_electronico) = 14 then convert(varchar(4), year(dt_voo_rea)) +'-'+ substring(nro_selo_electronico, 8, 2) +'-'+ substring(nro_selo_electronico, 10, 2)
--						else convert(char(10),dt_voo_rea,120) end,
	voo_rea, -- Solimar 04/03/2005 --Substring ( nro_selo_electronico, 4, 4), -- MRP 16/12/2004 ( voo_rea ),
	substring(hh_voo_rea,1,4), 
	0,
	0,
	0,
	case when tp_natureza = 'D' then 1 else 0 end,
	case when tp_natureza = 'I' then 1 else 0 end,
	1,
	'1'
From GEACupax..pax_selo_electronico_u (nolock index = IDX02_BI)
Where cd_aerop								= @p_cd_aerop 
and cd_terminal								= @p_cd_terminal
and cd_cia_aerea							= @p_cd_cia_aerea
and selo_status  							= '2' 
-- nro_selo_electronico
--and convert(varchar(8), dt_voo_rea, 112)	= @v_dt_voo
and convert(char(4), year(dt_voo_rea)) + substring(nro_selo_electronico,8,4) = @v_dt_voo


-- * Selos Fisicos 
insert into #tem_sal_rel_upa_rpax_x_selos_elec
select 	
	nro_selo,
	cd_aerop_utilizacao,
	cd_terminal_utilizacao,
	cd_cia_aerea, 
	convert(varchar(8),dt_mov,112),
	'',	
	'',
	0,
	0,
	0,
	case when tp_natureza = 'D' then 1 else 0 end,
	case when tp_natureza = 'I' then 1 else 0 end,
	1,
	'2'
from GEACupax..pax_selo_u (nolock index = IDX01_BI)
where selo_status  					= '2' 
and cd_aerop_utilizacao				= @p_cd_aerop 
and cd_terminal_utilizacao			= @p_cd_terminal
and cd_cia_aerea					= @p_cd_cia_aerea
and convert(varchar(8),dt_mov,112)	= @v_dt_voo


-- Calcula Totales 
select  @tot_rpe_dom	= sum(pax_dom_rpe)
		,@tot_rpe_int	= sum(pax_int_rpe)
		,@tot_rpe		= sum(pax_total_rpe)
		,@tot_sel_dom	= sum(pax_dom_sel)
		,@tot_sel_int	= sum(pax_int_sel)
		,@tot_sel		= sum(pax_total_sel)
--		,@tot_dif_dom	= sum(pax_dom_rpe) - sum(pax_dom_sel)
--		,@tot_dif_int	= sum(pax_int_rpe) - sum(pax_int_sel)
		,@tot_dif_dom	= sum(pax_dom_sel) - sum(pax_dom_rpe) 
		,@tot_dif_int	= sum(pax_int_sel) - sum(pax_int_rpe)
		,@tot_dif		= sum(pax_total_rpe) - sum(pax_total_sel)
from #tem_sal_rel_upa_rpax_x_selos_elec (nolock)
where tp_reg	= '1'


select @tot_fis_dom		= sum(pax_dom_sel)
		,@tot_fis_int 	=	sum(pax_int_sel)
from #tem_sal_rel_upa_rpax_x_selos_elec (nolock index = ix_tp_reg)
where tp_reg	= '2'


select cd_aerop
	,cd_terminal
	,cd_cia_aerea
	,dt_voo
	,nro_voo		= right(rtrim(ltrim(nro_voo)),4)
	,hr_voo
	,pax_dom_rpe 	= sum(pax_dom_rpe)
	,pax_int_rpe 	= sum(pax_int_rpe)
	,pax_total_rpe 	= sum(pax_total_rpe)
	,pax_dom_sel 	= sum(pax_dom_sel)
	,pax_int_sel 	= sum(pax_int_sel)
	,pax_total_sel 	= sum(pax_total_sel)
--	,pax_dif_dom	= sum(pax_dom_rpe) - sum(pax_dom_sel)
--	,pax_dif_int	= sum(pax_int_rpe) - sum(pax_int_sel)
	,pax_dif_dom	= sum(pax_dom_sel) - sum(pax_dom_rpe) 
	,pax_dif_int	= sum(pax_int_sel) - sum(pax_int_rpe) 

	,tp_reg
	,tot_rpe_dom	= @tot_rpe_dom
	,tot_rpe_int 	= @tot_rpe_int
	,tot_rpe 		= @tot_rpe
	,tot_sel_dom 	= @tot_sel_dom
	,tot_sel_int 	= @tot_sel_int
	,tot_sel 		= @tot_sel
	,tot_dif_dom 	= @tot_dif_dom
	,tot_dif_int 	= @tot_dif_int
	,tot_dif 		= @tot_dif
	,tot_fis_dom	= @tot_fis_dom
	,tot_fis_int 	= @tot_fis_int
from #tem_sal_rel_upa_rpax_x_selos_elec (nolock index = ix_tp_reg)
where tp_reg	= '1'
group by cd_aerop
	,cd_terminal 
	,cd_cia_aerea
	,dt_voo 
	--right(rtrim(ltrim(nro_voo)),4),
	,nro_voo
	,hr_voo
	,tp_reg
order by nro_voo,dt_voo, hr_voo


drop index #tem_sal_rel_upa_rpax_x_selos_elec.ix_tp_reg
drop table #tem_sal_rel_upa_rpax_x_selos_elec

set nocount off

*/




GO

/****** Object:  StoredProcedure [dbo].[psp_rel_valida_quinzena]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_rel_valida_quinzena    Script Date: 19/09/2008 15:20:22 ******/

/* 
exec psp_rel_valida_quinzena '', '20071016', '20071031'
*/

CREATE  proc [dbo].[psp_rel_valida_quinzena] 
		(@p_cd_aerop		varchar(5) = ''
		,@p_data_ini		datetime
		,@p_data_fim		datetime)
as

/* */

if @p_cd_aerop = ''
	set @p_cd_aerop = '%'

select cd_aerop 	= b.cd_aerop,
	no_aerop		= ltrim(rtrim(c.no_aerop)),
	fl_val 			= case when a.fl_val = '1' then 'Sim' else 'Não' end,
	dt_val			= isnull(case when a.dt_val = '19000101' then '' else convert(varchar(10), a.dt_val, 103) end, ''),
	user_res_val	= isnull( rtrim(ltrim(d.last_name)) + ' ' + rtrim(ltrim(d.first_name)) , ''),
	fl_aut 			= case when a.fl_aut = '1' then 'Sim' else 'Não' end,
	dt_aut			= isnull(case when a.dt_aut = '19000101' then '' else convert(varchar(10), a.dt_aut, 103) end ,''),
	user_aut_fat	= isnull( rtrim(ltrim(e.last_name)) + ' ' + rtrim(ltrim(e.first_name)), '')
from GEACutcx..cor_tpfatur_selo_u b (nolock) 
left join pax_val_quinz_hdr_u a (nolock)
on b.cd_aerop 			= a.cd_aerop
and a.dt_mov_ini 		= @p_data_ini
and a.dt_mov_fim		= @p_data_fim
inner join GEACutcx..cor_aeroporto_u c (nolock index = P_cor_aeroporto_u)
on c.cd_aerop 			= b.cd_aerop
left join DBSwact..user_master_1 d (nolock)
on d.user_id			= a.user_res_val
left join DBSwact..user_master_1 e (nolock)
on e.user_id			= a.user_aut_fat
where b.cd_aerop		like @p_cd_aerop
and b.tp_fatur_pax 		= '1'
and b.inactive_ind 		= '0'
and b.dt_vigencia 		= (	select max(h.dt_vigencia) 
							from GEACutcx..cor_tpfatur_selo_u h (nolock)
							where h.cd_aerop 	= b.cd_aerop
							and h.terminal		= b.terminal 
							and h.tp_fatur_pax	= b.tp_fatur_pax) 
order by b.cd_aerop, a.dt_mov_ini



GO

/****** Object:  StoredProcedure [dbo].[psp_reprocesa_arquivo]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_reprocesa_arquivo    Script Date: 19/09/2008 15:20:22 ******/

/*
exec psp_reprocesa_arquivo '0251_T_080616-132753_C03_107.TXT'

exec psp_reprocesa_discrepancia '%','%','%', '0251_T_080616-132753_C03_107.TXT'

select * from pax_baixa_selo_u (nolock) where arquivo = '0251_T_080616-132753_C03_107.TXT'
select * from pax_selos_coletados_u (nolock) where arquivo = '0251_T_080616-132753_C03_107.TXT'


'0051_F_060317-040136_U00_101.txt'
'0051_F_060317-040344_U00_101.txt'

select * from pax_baixa_selo_u (nolock) where arquivo = '0051_F_060418-110405_U00_101.txt'
select * from pax_baixa_selo_u (nolock) where arquivo = '0051_F_060418-110448_U00_101.txt'


*/

CREATE      proc [dbo].[psp_reprocesa_arquivo]
	(@p_arquivo varchar(40))
as

declare @p_linhas	integer
	,@msg			varchar(250)


set @p_linhas	 = 0

select @p_linhas	 = count(1) 
from pax_selos_coletados_u (nolock)
where arquivo = @p_arquivo

if @@rowcount = 0 or @p_linhas = 0
begin
	print 'Não fueron encontradas lineas del archivo'
	return
end

delete pax_discrep_selo_u 
where arquivo = @p_arquivo

set @p_linhas	 = @@rowcount
set @msg = 'Total de discrepancias eliminadas ' + ltrim(rtrim(convert(varchar, @p_linhas)))
print @msg 

delete pax_baixa_selo_u 
where arquivo = @p_arquivo
set @p_linhas	 = @@rowcount
if @p_linhas > 0
	set @msg = 'Arquivo Eliminado ' 
else
	set @msg = 'Arquivo não Existe ' 

print @msg 

update pax_selos_coletados_u 
set status_linha = '0'
where arquivo = @p_arquivo
set @p_linhas	 = @@rowcount
set @msg = 'Total de linhas do arquivo atulizadas para procesar de novo ' + ltrim(rtrim(convert(varchar, @p_linhas)))
print @msg 

exec psp_procurar_arquivos_selos @p_arquivo

if substring(@p_arquivo, 6, 1) = 'F'
	exec psp_procesa_selo_f @p_arquivo
else
	if substring(@p_arquivo, 6, 1) = 'T'
		exec psp_procesa_selo_t @p_arquivo
	else
		if substring(@p_arquivo, 6, 1) = 'L'
			exec psp_procesa_selo_l @p_arquivo
		else
		begin
			print 'Tipo de Arquivo nao e valido'
			return
		end
	
exec psp_reprocesa_discrepancia '%', '%', '%', @p_arquivo


GO

/****** Object:  StoredProcedure [dbo].[psp_reprocesa_discrepancia]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_reprocesa_discrepancia    Script Date: 19/09/2008 15:20:23 ******/







/*

select * from pax_repro_discrepancia order by 1

exec psp_reprocesa_discrepancia 'SBGR', '8', '%', '%', 2007

select * from pax_selo_u (nolock index = P_pax_selo_u)
where nro_selo = 'I00000211'

select * from pax_discrep_selo_u (nolock)
where nro_selo = 'I00000211'

*/



-- sp_helptext psp_reprocesa_discrepancia
-- drop proc psp_reprocesa_discrepancia
-- exec psp_reprocesa_discrepancia 'SBBV', '%', '%'
CREATE                  PROCEDURE [dbo].[psp_reprocesa_discrepancia] 
(		@v_cd_aerop_destino		varchar(4) 		= '%'
		,@v_discrepancia		varchar(10)  	= '%'
		,@v_nro_selo			varchar(10)  	= '%'
		,@v_arquivo				varchar(40)  	= '%'
		,@v_ano_movimento		smallint  		= 2007
)

AS

declare 
	 @p_nro_selo						char(10)
	,@p_arquivo							varchar(255)
	,@nr_total_selos_procesados			real
	,@nr_total_selos_invalidos			real
	,@nr_total_selos_bajados			real
	,@nr_total_selos_procesados_aerop	real
	,@nr_total_selos_invalidos_aerop	real
	,@nr_total_selos_bajados_aerop		real
	,@cod_repro							real
	,@v_mensaje							varchar(255)
	,@p_error							integer
	,@p_tp_natureza						char(1)
	,@p_dt_mov_str						char(10)
	,@msg								varchar(255)
	,@p_nro_rste						char(6)
	,@p_cd_situacao_rste				char(1)
	,@interno_selo_status 				char(1)
	,@interno_dt_mov      				datetime
	,@date_proceso      				datetime
	,@user_proceso      				char(30)
	,@p_cd_terminal_destino				char(10)
	,@p_dt_mov							datetime
	,@p_selo_status       				char(1)
	,@p_cd_motivo         				char(2)
	,@p_tp_coletor   					char(16)
	,@rowcount         					real
	,@error		   						real
	,@suma								int
	,@p_dt_mov_aux 						datetime
	,@p_dt_temp							datetime
	,@cd_aerop							varchar(4)
	,@p_selo_status_ind					char(1)
	,@p_billing_line_id	   				real
	,@p_tp_fat							char(1)
	,@act_qtd_selo						smallint
	,@p_item_fat						char(26)
	,@v_strdiscrep						varchar(255)
	,@p_ano_remesa						integer
	,@tot_discrep_aerop					integer
	,@v_discrepancia_1					varchar(10)

set nocount on

-- VERIFICAR SI EL PROCESO YA ESTA EJECUTANDOSE
declare @cont int 

exec psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont output
if @cont > 1
begin
    set @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    print @msg
    return 3
end

exec psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont output
if @cont > 0
begin
    set @msg = 'O Processo de criar as requisiones se está executando neste momento, estes dois processos não se podem executar simultaneamente.'
    print @msg
    return 3
end

exec psp_verificar_proceso 'gsp_procura_arq_conf_selos_e', @cont output
if @cont > 1
begin
    set @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    print @msg
    return 3
end

exec psp_verificar_proceso 'gsp_valida_ins_selos_conf_ii', @cont output
if @cont > 0
begin
    set @msg = 'O Processo de Confirmação de selos se está executando neste estes momento e estos dois processos não se podem executar simultaneamente.'
    print @msg
    return 3
end

exec psp_verificar_proceso 'gsp_valida_ins_selos_arq', @cont output
if @cont > 0
begin
    set @msg = 'O Processo de validar os Selos se está executando neste momento, estes dois processos não se podem executar simultaneamente.'
    print @msg
    return 3
end


-- INICIALIZACIon DE VARIABLES DE CONTROL
select @nr_total_selos_invalidos		= 0
      ,@nr_total_selos_procesados		= 0
      ,@nr_total_selos_bajados			= 0
      ,@date_proceso      				= getdate()
      ,@user_proceso      				= suser_sname()

insert into pax_repro_discrepancia VALUES 
(	convert(varchar, @date_proceso, 112)
	,right(convert(varchar, @date_proceso, 120) , 8)
	,@user_proceso
	,'0' 
	,' '
	,'@v_cd_aerop_destino: ' + @v_cd_aerop_destino + ' / @v_discrepancia: ' + @v_discrepancia + ' / @v_nro_selo: ' + @v_nro_selo + ' / @v_ano_remesa: ' 
 )

select @cod_repro = @@IDENTITY



/* 002 Ajustar problemas de Datas entre os coletores e as distribuções	*/
/* IMPLEMENTADO POR JOSE MUNOZ											*/
/* DATA: 01/04/2009														*/
/* CONCLUIR RSTE PENDENTES SO DO TIPO FATURADO							*/
/* ORIGINAL
update pax_entrega_selo_ctrl_u 
set cd_situacao_rste 		= 1
where cd_situacao_rste 		= 0
AND convert(varchar, date_created, 112) < convert(varchar, @date_proceso, 112)
*/

update pax_entrega_selo_ctrl_u 
set cd_situacao_rste 		= 1
from pax_entrega_selo_ctrl_u a with (nolock)
where a.cd_situacao_rste 		= 0
and a.cd_situacao_rste 			= 1
and convert(varchar, a.date_created, 112) < convert(varchar, @date_proceso, 112)
and exists (select top 1 *
			from pax_entrega_selo_line_u b with (nolock index = P_pax_entrega_selo_line_u)
			where b.cd_aerop	= a.cd_aerop
			and b.cd_terminal	= a.cd_terminal
			and b.dt_entrega	= a.dt_entrega
			and b.hh_entrega	= a.hh_entrega
			and b.cd_cia_aerea	= a.cd_cia_aerea
			and b.nro_rste		= a.nro_rste
			and b.tp_fat		= 'F')
/* 002 FIM											*/


select 	@rowcount = @@rowcount
set 	@msg = rtrim(ltrim(str(@rowcount))) + ' RSTE Pendentes Foram Concluidos ' + char(13) + char(10) 
print  	@msg 

-- FIM CONCLUIR RSTE PendENTES.

/* 001 Ajustar problemas de Datas entre os coletores e as distribuções */
/* IMPLEMENTADO POR JOSE MUNOZ */
/* DATA: 28/05/2007 */

update pax_selo_u
set dt_mov 				= dateadd(mi, -10, b.dt_mov)
	,chgstamp			= a.chgstamp + 1
	,date_changed 		= getdate()
	,user_id_changed 	= 'JOB REPRO. DIS. (Ajuste data)'
from  pax_selo_u a
inner join pax_discrep_selo_u b
on b.nro_selo = a.nro_selo
and b.ano_remesa = a.ano_remesa 
where a.selo_status 	= '1'
and convert(varchar(8), a.dt_mov, 112)		> '20070501'
and a.billing_line_id	= 0
and a.dt_mov			> b.dt_mov
and b.discrepancia		= '11'
and b.selo_status 		in ('2', '3', '4')

select 	@rowcount = @@rowcount
set 	@msg = rtrim(ltrim(str(@rowcount))) + ' Selos foram ajustados por data de movimento menor a data de distribuçao. ' + char(13) + char(10) 
print  	@msg 

/* 001 FIM Ajustar problemas de Datas entre os coletores e as distribuções */

/* 002 Ajustar ano de remessa nas discrepancias */
/* IMPLEMENTADO POR JOSE MUNOZ */
/* DATA: 03/10/2007 */
update pax_discrep_selo_u
set ano_remesa			= b.ano_remesa
from pax_discrep_selo_u a (nolock)
inner join pax_selo_u b (nolock index = P_pax_selo_u)
on b.nro_selo			= a.nro_selo
and b.ano_remesa		> a.ano_remesa
where a.discrepancia 	= '8'
and a.selo_status		= '2'
and b.selo_status		= '1'


select 	@rowcount = @@rowcount
set 	@msg = rtrim(ltrim(str(@rowcount))) + ' Discrpancias foram ajustadas (Ano re remessa, selos duplicados). ' + char(13) + char(10) 
print  	@msg 

/* 002 FIM Ajustar ano de remessa nas discrepancias */


declare cur_aerop insensitive cursor for
select distinct(cd_aerop_destino) 
from GEACupax..pax_discrep_selo_u (nolock index = P_pax_discrep_selo_u)
where cd_aerop_destino 		LIKE @v_cd_aerop_destino
AND ltrim(rtrim(nro_selo))	LIKE @v_nro_selo
and ltrim(rtrim(arquivo))	LIKE @v_arquivo
and year(dt_mov)			>= @v_ano_movimento

open cur_aerop 
fetch next from cur_aerop into @v_cd_aerop_destino

while @@fetch_status = 0
begin
--    select @v_cd_aerop_destino
    select @nr_total_selos_procesados_aerop		= 0
		,@nr_total_selos_invalidos_aerop	= 0
		,@nr_total_selos_bajados_aerop		= 0
	
    declare cur_tipo_dis insensitive cursor for
    select distinct(discrepancia) 
	from GEACupax..pax_discrep_selo_u (nolock index = P_pax_discrep_selo_u)  
	where cd_aerop_destino = @v_cd_aerop_destino
		AND discrepancia		in('1','2','3','4','5','7', '8', '10','11')
		and discrepancia		like @v_discrepancia
		and ltrim(rtrim(arquivo))	LIKE @v_arquivo
		and year(dt_mov)			>= @v_ano_movimento    
	
	open cur_tipo_dis 
	
    fetch next from cur_tipo_dis into @v_discrepancia_1
    while @@fetch_status = 0
    begin
        declare cur_selo insensitive cursor for
        select nro_selo
			,ano_remesa
			,arquivo
			,substring(nro_selo,1,1)
			,selo_status
			,cd_terminal_destino 	
			,dt_mov                 	
			,selo_status            	
			,cd_motivo	        
			,tp_coletor		
        from GEACupax..pax_discrep_selo_u (nolock index = P_pax_discrep_selo_u) 
        where cd_aerop_destino 		= @v_cd_aerop_destino 
        AND discrepancia 			= @v_discrepancia_1
        AND nro_selo			LIKE @v_nro_selo
		AND discrepancia		in('1','2','3','4','5','7', '8', '10','11')
		and ltrim(rtrim(arquivo))	LIKE @v_arquivo
		and year(dt_mov)			>= @v_ano_movimento


        open cur_selo 
		set @tot_discrep_aerop = @@cursor_rows	
		set @v_mensaje = 'TOTAL DE DISCREPANCIAS [' + @v_discrepancia_1 + '] PARA: ' + @v_cd_aerop_destino + ' --> ' + ltrim(rtrim(str(@tot_discrep_aerop))) + char(13) + char(10) 	
		print @v_mensaje 

        fetch next from cur_selo into @p_nro_selo, @p_ano_remesa, @p_arquivo, @p_tp_natureza, @p_selo_status, @p_cd_terminal_destino, 
                                      @p_dt_mov, @p_selo_status, @p_cd_motivo, @p_tp_coletor

        while @@fetch_status = 0
        begin       
            select @p_error 							= 0
            		,@nr_total_selos_procesados 		= @nr_total_selos_procesados + 1
                  	,@nr_total_selos_procesados_aerop	= @nr_total_selos_procesados_aerop + 1

            begin transaction

            --  Validando o Número do Selo 
            if isnumeric(substring(@p_nro_selo,3,7)) = 0 
            begin
                select @msg 	= '1', @p_selo_status_ind = 'E', @p_error = 1
                	,@v_mensaje = 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ERROR NUMERO DO SELO INVALIDO' + char(13) + char(10) 
                goto NEXT1
            end


            --  Validando a Natureza            
            if @p_tp_natureza NOT IN ('D','I','S') 
            begin
                select @msg = '1', @p_selo_status_ind = 'E', @p_error = 1
                      ,@v_mensaje = 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: NATUREZA INVALIDA' + char(13) + char(10) 
                goto NEXT1
            end
			
            if ( @p_dt_mov > @date_proceso  )
            begin
                select @msg = '10' ,@p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
				select @p_error 	= 1
                   ,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                goto NEXT1
            end
			
            -- EXCLUIR LA DISCREPANCIA PARA PROCESARLA DE NUEVO
			
            delete pax_discrep_selo_u
            where cd_aerop_destino			= @v_cd_aerop_destino
				AND cd_terminal_destino		= @p_cd_terminal_destino
				AND selo_status				= @p_selo_status       
				AND nro_selo				= @p_nro_selo
				AND ano_remesa				= @p_ano_remesa

           	--  VALIDAR SI SELO EXISTE
            select @cd_aerop 			= cd_aerop 
                  ,@p_billing_line_id 	= billing_line_id 
                  ,@p_tp_fat			= tp_fat
                  ,@interno_selo_status = selo_status
                  ,@interno_dt_mov      = dt_mov
            from GEACupax..pax_selo_u (nolock index = P_pax_selo_u) 
            where nro_selo 	= @p_nro_selo
			and ano_remesa	= @p_ano_remesa			

            if @@rowcount = 0
            begin
                select @msg = '1', @p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                select @p_error 	= 1
					,@v_mensaje		= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                goto NEXT1
            end 
			
            -- VALIDAR SI JA FOI FATURADO OU SE TEM  BOLETO GERADO
            if @p_billing_line_id <> 0 and @p_tp_fat = 'F'
            begin
                select @msg = '8', @p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                select @p_error 	= 1
					,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                goto NEXT1
            end

            if @p_billing_line_id <> 0 and @p_tp_fat = 'A' and @interno_selo_status = '2'
            begin
                select @msg = '8', @p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                select @p_error 	= 1
					,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                goto NEXT1
            end


            -- VALIDAR SI O SELO FOI DISTRIBUIDO PARA A CIA AEREA 
            if @interno_selo_status in ('0','9') 
            begin
                select @msg = '4' ,@p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                select @p_error 	= 1
	               ,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
				goto NEXT1
            end 

            --  VALIDAR SI NRO_RSTE ESTA CONCLUIDO
            select @p_nro_rste 			= B.nro_rste
				,@p_cd_situacao_rste 	= B.cd_situacao_rste 
            from GEACupax..pax_entrega_selo_line_u A (nolock index = P_pax_entrega_selo_line_u)
            inner JOIN GEACupax..pax_entrega_selo_ctrl_u B (nolock index = P_pax_entrega_selo_ctrl_u)
            on B.cd_aerop 			= A.cd_aerop
				AND B.cd_terminal 	= A.cd_terminal
				AND B.cd_cia_aerea 	= A.cd_cia_aerea
				AND B.dt_entrega  	= A.dt_entrega
				AND B.hh_entrega  	= A.hh_entrega
				AND B.nro_rste		= A.nro_rste
            where A.cd_aerop 		= @cd_aerop
				AND (A.nro_selo_inicial <= @p_nro_selo and  A.nro_selo_final >= @p_nro_selo)
				AND A.ano_remesa		= @p_ano_remesa
				AND B.cd_situacao_rste 	= '1'

            if @@rowcount = 0 
            begin
                select @msg = '5', @p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                select @p_error 	= 1
                   ,@v_mensaje		= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                goto NEXT1
            end
			             
            -- VALIDA A DATA DO MOVIMENTO. NÃO PODE SER ANTERIOR À DATA DO ÚLTIMO MOVIMENTO DO SELO ( MRP 12/11/2003 )
			if ( @p_dt_mov < @interno_dt_mov  )
			begin
				if @interno_selo_status = '1' AND @p_selo_status = '2'
				begin
					if dateadd(hh,-8,@interno_dt_mov ) > @p_dt_mov
					begin
						select @msg = '11', @p_selo_status_ind = 'E'
						select convert(varchar, @p_dt_mov, 112 ), convert(varchar, @interno_dt_mov, 112 ), @interno_selo_status, @p_selo_status 
						select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
						select @p_error 	= 1
							,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
						goto NEXT1
					end					
				end
				else
				begin
					if (convert(varchar, @p_dt_mov, 112 ) <= convert(varchar, @interno_dt_mov, 112 ))  
						and ((@interno_selo_status = '2' AND @p_selo_status = '3')
						  or (@interno_selo_status = '1' AND @p_selo_status = '3')
						  or (@interno_selo_status = '4' AND @p_selo_status = '3')
						  or (@interno_selo_status = '4' AND @p_selo_status = '2')
						  --or (@interno_selo_status = '1' AND @p_selo_status = '2')
						  or (@interno_selo_status = @p_selo_status))
					begin
						print 'SÓ ELIMINAR A DISCREPÂNCIA, SELO COM DATA DE MOVIMENTO MAIOR À DATA QUE QUER PROCESSAR.'
					end
					else
					begin
						if @p_selo_status = '4'
						begin
							set @p_dt_mov = convert(varchar, @p_dt_mov, 112 ) + ' 23:59:00.000'
						end
						else
						begin
							select @msg = '11', @p_selo_status_ind = 'E'
							select convert(varchar, @p_dt_mov, 112 ), convert(varchar, @interno_dt_mov, 112 ), @interno_selo_status, @p_selo_status 
							select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
							select @p_error 	= 1
								,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
							goto NEXT1
						end
					end
				end
            end

			
			-- VALIDA SE É UM SELO DE TESTE (SOLIMAR 17/12/2004)
			if @interno_selo_status = '7'
			begin
				select @msg = '9', @p_selo_status_ind = 'E' 
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
				select @p_error 	= 1
					,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
				goto NEXT1
			end				
				
            
            -- VALIDAR SI O SELO FUE CANCELADO ANTERIORMENTE
            if @interno_selo_status = '4'
            begin
                if (convert(varchar, @p_dt_mov, 112 ) >= convert(varchar, @interno_dt_mov, 112 ))  AND (@interno_selo_status = @p_selo_status )
                begin
                      print 'O SELO FUE CANCELADO ANTERIORMENTE.'
                end
                else
                begin
                    select @msg = '6',@p_selo_status_ind = 'E'
					select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                    select @p_error 	= 1
                       ,@v_mensaje		= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                    goto NEXT1
                end
            end 

            -- VALIDAR SI O SELO NAO ESTA EN PROCESSO DE TRANFERENCIA            
            if @interno_selo_status = '5'
            begin
                select @msg = '3',@p_selo_status_ind = 'E'
				select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                select @p_error 	= 1
					,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                goto NEXT1
            end 

            --   Utilização 
            if @p_selo_status = '2'
            begin
                --   SELO Já foi utilizado a mais de 12 horas
                if @interno_selo_status = '2' 
                begin
                    -- EXCLUIR POR LA DATA DE PROCESO, EXCLUIR LAS QUE ESTEN ENTRE LAS 12 HORAS
                    select @p_dt_temp = DATEADD (hh, 12, @interno_dt_mov )  
                    if @p_dt_mov > @p_dt_temp  
                    begin                     
                        select @msg = '7',@p_selo_status_ind = 'E'
						select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                        select @p_error 	= 1
							,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                        goto NEXT1
                    end
                    else
                    begin
						select @suma = DATEPART(hh, @p_dt_mov)+ DATEPART(mi, @p_dt_mov)+ DATEPART(ss, @p_dt_mov)
						if @suma  = 0
						begin
							select @p_dt_mov_aux = @interno_dt_mov 
						end
						else
						begin
							select @p_dt_mov_aux = @p_dt_mov
						end
                    end 
                end 
               
               --   Selo não foi distribuido a Cia Aérea
                if @interno_selo_status = '3'
                begin
                    select @msg = '4',@p_selo_status_ind = 'E'
					select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                    select @p_error 	= 1
						,@v_mensaje	= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                    goto NEXT1
                end 

            end 

            --   Devolução
            if @p_selo_status = '3'
            begin
                --   SubRegra (c) 
                if @interno_selo_status = '2'
                begin
                    select @msg = '7',@p_selo_status_ind = 'E'
					select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                    select @p_error 	= 1
						,@v_mensaje		= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                    goto NEXT1
                end 
                       
                --  SubRegra (d) 
                if @interno_selo_status = '3'
                begin
                    select @msg = '12',@p_selo_status_ind = 'E'
					select @v_strdiscrep = ltrim(rtrim(descp)) from GEACCOMMON..dropdowndw_u (nolock index = PK_dropdowndw_u) where tbl_code = 'DSEF' and code = @msg
                    select @p_error 	= 1
						,@v_mensaje		= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ' + @v_strdiscrep + char(13) + char(10) 
                    goto NEXT1
                end 
            end     
               
            --  Cancelamento 
            if @p_selo_status = '4'
            begin
				set @p_selo_status = '4'
            end     

           
            NEXT1:  
            if @p_error = 0
            begin
                select @act_qtd_selo = 1                       
				if (@interno_selo_status = @p_selo_status)   AND (@p_selo_status = '2')  AND (@p_dt_mov_aux = @interno_dt_mov )
                begin
					select @v_mensaje 		= 'SOLO_EXCLUIR_DISCR 1---> '  +  @p_nro_selo + char(13) + char(10) 
						,@act_qtd_selo 		= 0
					print @v_mensaje
					goto SEGUIR 
                end 

				if (convert(varchar, @p_dt_mov, 112 ) <= convert(varchar, @interno_dt_mov, 112 ))  
					and ((@interno_selo_status = '2' AND @p_selo_status = '3')
					  or (@interno_selo_status = '1' AND @p_selo_status = '3')
					  or (@interno_selo_status = '4' AND @p_selo_status = '3')
					  or (@interno_selo_status = '4' AND @p_selo_status = '2')
					  --or (@interno_selo_status = '1' AND @p_selo_status = '2')
					  or (@interno_selo_status = @p_selo_status))
				begin
					select @v_mensaje 		= 'SOLO_EXCLUIR_DISCR 2---> '  +  @p_nro_selo + char(13) + char(10) 
						,@act_qtd_selo 		= 0
					print @v_mensaje
					goto SEGUIR 
				end
				/*
				--  BUSCAR EL ITEM    
				select TOP 1 @p_item_fat = ISNULL(item_id,'')
				from GEACutcx..cor_item_pax_u 	(nolock index = P_cor_item_pax_u)
				where cd_aerop      		= @v_cd_aerop_destino
					AND cd_terminal     	= @p_cd_terminal_destino        
					AND tp_natureza     	= @p_tp_natureza 
					AND dt_vigencia			<= @p_dt_mov
					AND inactive_ind		= '0'
				order by   dt_vigencia desc
				*/
				--  BUSCAR EL ITEM    
				if @p_tp_fat = 'A' and @p_tp_natureza in ('D','I')
				begin
					SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
					FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
					WHERE cd_aerop      		= @v_cd_aerop_destino 

						AND cd_terminal     	= @p_cd_terminal_destino 
						AND tp_natureza     	= @p_tp_natureza 
						AND dt_vigencia			<= @p_dt_mov
						and inactive_ind		= '0'
						AND RIGHT(RTRIM(item_id),1) = 'V'
					ORDER BY   dt_vigencia DESC
				end
				else
				begin
					SELECT TOP 1 @p_item_fat = ISNULL(item_id,'')
					FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
					WHERE cd_aerop      		= @v_cd_aerop_destino 
						AND cd_terminal     	= @p_cd_terminal_destino 
						AND tp_natureza     	= @p_tp_natureza 
						AND dt_vigencia			<= @p_dt_mov
						and inactive_ind		= '0'
						AND RIGHT(RTRIM(item_id),1) <> 'V'
					ORDER BY   dt_vigencia DESC
				end




				
                update GEACupax..pax_selo_u
                set
					cd_aerop_utilizacao    	= @v_cd_aerop_destino
					,cd_terminal_utilizacao = @p_cd_terminal_destino       
					,dt_mov                 = @p_dt_mov
					,selo_status            = @p_selo_status       
					,cd_motivo	           	= @p_cd_motivo         
					,tp_coletor				= @p_tp_coletor   
					,item_fat				= @p_item_fat
					,date_changed			= @date_proceso
					,user_id_changed		= 'REPRO_DISCREP' -- alterado por Solimar em 27/10/2004
					,chgstamp				= chgstamp + 1 -- incluído por Solimar em 03/11/2004
                where 
					nro_selo    			= @p_nro_selo          
					and ano_remesa          = @p_ano_remesa

                select 	@rowcount = @@rowcount, @error = @@error
                if @rowcount <> 0 AND @error = 0
                begin
                    SEGUIR:
                    if @act_qtd_selo = 1
                        update pax_baixa_selo_u
                        set qtd_discrepancias 		= qtd_discrepancias - 1
                            ,qtd_selos 				= qtd_selos + 1
							,qtd_discrepancias_tra	= qtd_discrepancias_tra + 1
                        where arquivo 				= @p_arquivo
                    else
                        update pax_baixa_selo_u
                        set qtd_discrepancias 		= qtd_discrepancias - 1
							,qtd_discrepancias_tra	= qtd_discrepancias_tra + 1
                        where arquivo 				= @p_arquivo

                    commit transaction
                    select @nr_total_selos_bajados 		= @nr_total_selos_bajados + 1
                           ,@nr_total_selos_bajados_aerop	= @nr_total_selos_bajados_aerop + 1
                           ,@v_mensaje 			= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: BAIXADO COM EXITO ' + char(13) + char(10) 
                end
                else
                begin
                    rollback transaction
                    select @v_mensaje 			= 'N° ' + convert(char(7), @nr_total_selos_procesados) + ' --> SELO PROCESADO: ' + @p_nro_selo + '--> RESULTADO: ERROR AL ATUALIZAR HSTORICO DO SELO. rollback PARA EL AEROPORTO' + char(13) + char(10) 
                end
                print @v_mensaje 
            end
	        else
            begin

                exec gsp_ins_selos_discrep @v_cd_aerop_destino, @p_cd_terminal_destino, @p_dt_mov, @p_selo_status, @p_nro_selo    
                  , @p_selo_status, '', @msg ,@p_cd_motivo ,@p_arquivo ,@p_tp_coletor, @date_proceso, @user_proceso, @p_ano_remesa

                select @nr_total_selos_invalidos 		= @nr_total_selos_invalidos + 1
                      ,@nr_total_selos_invalidos_aerop	= @nr_total_selos_invalidos_aerop + 1
				print @v_mensaje

                commit transaction

            end
			
            fetch next from cur_selo into @p_nro_selo, @p_ano_remesa, @p_arquivo, @p_tp_natureza, @p_selo_status, @p_cd_terminal_destino, 
                                          @p_dt_mov, @p_selo_status_ind, @p_cd_motivo, @p_tp_coletor
			
        end

        NEXT2:
        close cur_selo
        deallocate cur_selo
        fetch next from cur_tipo_dis into @v_discrepancia_1
    end
    close cur_tipo_dis 
    deallocate cur_tipo_dis 

    select @v_mensaje = 'TOTAL DE SELOS PROCESADOS PARA ' +  @v_cd_aerop_destino + ' --> ' + ltrim(rtrim(str(@nr_total_selos_procesados_aerop))) + char(13) + char(10) 
    print @v_mensaje 
    select @v_mensaje = 'TOTAL DE SELOS INVALIDOS PARA ' +  @v_cd_aerop_destino + ' --> ' + ltrim(rtrim(str(@nr_total_selos_invalidos_aerop))) + char(13) + char(10) 
    print @v_mensaje 
    select @v_mensaje = 'TOTAL DE SELOS BAIXADOS COM EXITO PARA ' +  @v_cd_aerop_destino + ' --> ' + ltrim(rtrim(str(@nr_total_selos_bajados_aerop))) + char(13) + char(10) 
    print @v_mensaje 
    select @v_mensaje = ' ' +  char(13) + char(10) 
    print @v_mensaje 

    fetch next from cur_aerop into @v_cd_aerop_destino
end

close cur_aerop 
deallocate cur_aerop 


select @v_mensaje = 'TOTAL DE SELOS PROCESADOS --> ' + ltrim(rtrim(str(@nr_total_selos_procesados))) + char(13) + char(10) 
print @v_mensaje 
select @v_mensaje = 'TOTAL DE SELOS INVALIDOS --> ' + ltrim(rtrim(str(@nr_total_selos_invalidos))) + char(13) + char(10) 
print @v_mensaje 
select @v_mensaje = 'TOTAL DE SELOS BAIXADOS COM EXITO --> ' + ltrim(rtrim(str(@nr_total_selos_bajados))) + char(13) + char(10) 
print @v_mensaje 


update pax_repro_discrepancia 
set status_proceso 	= '1'
   ,resultado 		= 'Procesados: ' + ltrim(rtrim(str(@nr_total_selos_procesados))) + '  Baixado: ' + ltrim(rtrim(str(@nr_total_selos_bajados))) + '  Invalidos: ' + ltrim(rtrim(str(@nr_total_selos_invalidos)))
where cod_repro 	= @cod_repro

set nocount off
return 0

















GO

/****** Object:  StoredProcedure [dbo].[psp_sel_col_info_1]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_sel_col_info_1    Script Date: 19/09/2008 15:20:23 ******/

CREATE procedure [dbo].[psp_sel_col_info_1]
( @p_tbl_name varchar(30) )
AS
declare @colid   smallint, 
     @col_name  varchar(30),
   @col_type  tinyint, 
   @col_length tinyint,
   @key_flag  tinyint
declare @object_id integer, @dbs_type smallint,
 @i smallint,   /* Fix for defect 20000301080115 */
 @thiskey varchar(30), /* Fix for defect 20000301080115 */
 @objname varchar(30) /* Fix for defect 20000301080115 */
create table #tmp_col_info_1
(colid  smallint,
 col_name varchar(30),
 col_type   tinyint,
 col_length tinyint,
 key_flag   tinyint
)
select @object_id=id,@objname=name /* Fix for defect 20000301080115 */  
from sysobjects
where  (type = "U" or type = "V") and 
   name = @p_tbl_name
select @colid=Min(colid)
from syscolumns
where id=@object_id
select @i = 1 /* Fix for defect 20000301080115 */
while @colid > 0
begin 
 select  @col_name=name, @col_type=usertype, @col_length=length 
 from syscolumns
 where id=@object_id and colid=@colid
/* Start fix for defect 20000301080115 */
 select @thiskey = index_col(@objname, 1, @i)
 if @thiskey is null
 begin 
  select @key_flag = 0
 end
 else
 begin
  select @key_flag = 1 
 end
/* End fix for defect 20000301080115 */
/* 
Start remove code for defect 20000301080115
 if exists (select *
    from syskeys
    where (id = @object_id) and 
      (key1 = @colid or
       key2 = @colid or
       key3 = @colid or
       key4 = @colid or
       key5 = @colid or
       key6 = @colid or
        key7 = @colid or
        key8 = @colid) ) 
 begin 
  select @key_flag = 1
 end
 else
 begin
  select @key_flag = 0 
 end
End remove code for defect 20000301080115
*/
 insert  into #tmp_col_info_1
 select  @colid, @col_name, @col_type, @col_length, @key_flag 
 select @colid=Min(colid)
 from syscolumns
 where id=@object_id and
   colid > @colid
 
 select @i = @i + 1 /* Fix for defect 20000301080115 */
end
select key_flag, col_name, col_type, col_length
from #tmp_col_info_1
drop table #tmp_col_info_1



GO

/****** Object:  StoredProcedure [dbo].[psp_sel_mesm_info_lang_g]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_sel_mesm_info_lang_g    Script Date: 19/09/2008 15:20:23 ******/

CREATE procedure [dbo].[psp_sel_mesm_info_lang_g]
(
 @p_msg_id                   char(10),                /* Get this message id */
 @p_language_code            char(2) = 'EN',
 @p_language_dialect_code    char(2) = '  ',
    @p_resultset_ind            char(1) = 'Y',
    @p_severity_cd              tinyint = null output,
    @p_user_def                 bit = 0 output,
    @p_msg_text                 varchar(255) = null output,
    @p_msg_text_2               varchar(255) = null output,
    @p_msg_text_3               varchar(255) = null output,
    @p_help_context             int = null output,
    @p_help_file_id             char(4) = null output
)
AS
DECLARE @w_return   int
EXECUTE @w_return = DBSCOMMON..psp_sel_mesm_info_lang
     @p_msg_id = @p_msg_id,
     @p_language_code = @p_language_code,
     @p_language_dialect_code = @p_language_dialect_code,
        @p_resultset_ind = @p_resultset_ind,
        @p_severity_cd = @p_severity_cd OUTPUT,
        @p_user_def = @p_user_def OUTPUT,
        @p_msg_text = @p_msg_text OUTPUT,
        @p_msg_text_2 = @p_msg_text_2 OUTPUT,
        @p_msg_text_3 = @p_msg_text_3 OUTPUT,
        @p_help_context = @p_help_context OUTPUT,
        @p_help_file_id = @p_help_file_id OUTPUT
RETURN @w_return



GO

/****** Object:  StoredProcedure [dbo].[psp_sel_tsdx_2_g]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_sel_tsdx_2_g    Script Date: 19/09/2008 15:20:23 ******/

CREATE procedure [dbo].[psp_sel_tsdx_2_g]
(
    @p_tblfam_id            char(4),
    @p_dist_ent_1_val       char(30) = '*',
    @p_dist_ent_2_val       char(30) = '*',
    @p_primary_copy         char(1) = 'N',
    @p_from_server          char(30) = NULL,
    @p_resultset_ind        char(1) = 'Y',
    @p_server_id            char(30) = null output,
    @p_db_name              char(30) = null output,
    @p_sp_owner_name        char(30) = null output
)
AS
DECLARE @w_return    int
EXECUTE @w_return = DBSctlg..psp_sel_tsdx_2
        @p_tblfam_id = @p_tblfam_id,
        @p_dist_ent_1_val = @p_dist_ent_1_val,
        @p_dist_ent_2_val = @p_dist_ent_2_val,
        @p_primary_copy = @p_primary_copy,
        @p_from_server = @p_from_server,
        @p_resultset_ind = @p_resultset_ind,
        @p_server_id = @p_server_id OUTPUT,
        @p_db_name = @p_db_name OUTPUT,
        @p_sp_owner_name = @p_sp_owner_name OUTPUT
RETURN @w_return



GO

/****** Object:  StoredProcedure [dbo].[psp_sel_tsdx_prim_g]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_sel_tsdx_prim_g    Script Date: 19/09/2008 15:20:23 ******/

CREATE procedure [dbo].[psp_sel_tsdx_prim_g]
(
 @p_tblfam_id            char(4),
 @p_dist_ent_1_val       char(30) = NULL,
 @p_dist_ent_2_val       char(30) = NULL,
    @p_from_server_id       char(30) = NULL,
    @p_from_db_name         char(30) = NULL,
    @p_resultset_ind        char(1) = 'Y',
    @p_primary              char(1) = 'N' output
)
AS
if ( @p_from_server_id IS NULL)
    SELECT  @p_from_server_id = @@servername
if ( @p_from_db_name IS NULL)
    SELECT  @p_from_db_name = db_name()
DECLARE @w_return   int
EXECUTE @w_return = DBSctlg..psp_sel_tsdx_prim
     @p_tblfam_id = @p_tblfam_id,
     @p_dist_ent_1_val = @p_dist_ent_1_val,
     @p_dist_ent_2_val = @p_dist_ent_2_val,
        @p_from_server_id = @p_from_server_id,
        @p_from_db_name = @p_from_db_name,
        @p_resultset_ind = @p_resultset_ind,
        @p_primary = @p_primary output
RETURN @w_return



GO

/****** Object:  StoredProcedure [dbo].[psp_selo_elec_ajusta_dup]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_selo_elec_ajusta_dup    Script Date: 19/09/2008 15:20:23 ******/






/*

EXEC psp_selo_elec_ajusta_dup

EXEC GEACCOMMON..gsp_who2
sp_help pax_selo_electronico_log_u
*/

CREATE       PROC	[dbo].[psp_selo_elec_ajusta_dup]
AS

SET NOCOUNT ON

-- DECLARACION DE VARIABLES  
DECLARE	 @p_cd_aerop			CHAR(4)
	,@p_cd_terminal				CHAR(10)
	,@p_dt_mov					DATETIME
	,@p_nro_selo_electronico	CHAR(10)
	,@p_hh_mov					CHAR(6)
	,@p_tp_natureza				CHAR(1)
	,@p_selo_status				CHAR(1)
	,@p_cd_motivo				CHAR(2)
	,@p_tp_fat					CHAR(1)
	,@p_cd_cia_aerea			CHAR(3)
	,@p_tp_unid					CHAR(1)
	,@p_dt_confirma				DATETIME
	,@p_cd_aerop_utilizacao		CHAR(4)
	,@p_cd_terminal_utilizacao	CHAR(10)
	,@p_tp_coletor				CHAR(16)
	,@p_item_fat				CHAR(26)
	,@p_billing_line_id			INT
	,@p_billing_int_date		DATETIME
	,@p_billing_int_type		CHAR(1)
	,@p_billing_user_1			CHAR(10)
	,@p_voo_rea					CHAR(4)
	,@p_dt_voo_rea				DATETIME
	,@p_hh_voo_rea				CHAR(6)
	,@p_date_created			DATETIME
	,@p_user_id_created			CHAR(30)
	,@p_date_changed			DATETIME
	,@p_user_id_changed			CHAR(30)
	,@p_inactive_ind			CHAR(1)
	,@p_active_date				DATETIME
	,@p_chgstamp				SMALLINT

-- DECLARAR VARIABLES DE TRABAJO
DECLARE
	@date_process				DATETIME
	,@msg						VARCHAR(255)
	,@v_hh_mov_act				CHAR(6)
	,@ROWCOUNT					SMALLINT
	,@v_date_1					DATETIME
	,@v_date_2					DATETIME
	,@v_hora_dife				SMALLINT


SET @date_process = GETDATE()

CREATE TABLE #TEMP_SALIDA (cod 		INTEGER IDENTITY(1,1)
							,dat	DATETIME
							,obs 	VARCHAR(255) NULL)

INSERT INTO #TEMP_SALIDA  VALUES(@date_process, 'INICIO DE PROCESO')

DECLARE @cont INT 

EXEC psp_verificar_proceso 'psp_selo_elec_ajusta_dup', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_ins_arq_selo_elec', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo de baixa de Selos em ejecução.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procurar_arquivos_selos', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de criar as requisições se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_procura_arq_conf_selos_e', @cont OUTPUT
IF @cont > 1
BEGIN
    SET @msg = 'Processo atualmente em execução, não é possível executá-lo simultaneamente duas vezes.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'gsp_valida_ins_selos_conf_ii', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de Confirmação de selos se está executando neste estes momento e estos dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END

EXEC psp_verificar_proceso 'psp_reprocesa_discrepancia', @cont OUTPUT
IF @cont > 0
BEGIN
    SET @msg = 'O Processo de reprocessamento das discrepâncias se está executando neste estes momento dois processos não se podem executar simultaneamente.'
    PRINT @msg
    RETURN 3
END
-- FIM VERIFICA SE PROCESSO JÁ ESTÁ EXECUTANDO

 
-- DECLARAR CURSOR
DECLARE CUR_TEMP_SELO_DUP CURSOR FOR
SELECT	 cd_aerop
	,cd_terminal
	,dt_mov
	,nro_selo_electronico
	,hh_mov
	,tp_natureza
	,selo_status
	,cd_motivo
	,tp_fat
	,cd_cia_aerea
	,tp_unid
	,dt_confirma
	,cd_aerop_utilizacao
	,cd_terminal_utilizacao
	,tp_coletor
	,item_fat
	,billing_line_id
	,billing_int_date
	,billing_int_type
	,billing_user_1
	,voo_rea
	,dt_voo_rea
	,hh_voo_rea
	,date_created
	,user_id_created
	,date_changed
	,user_id_changed
	,inactive_ind
	,active_date
	,chgstamp
FROM pax_selo_elec_dup_u (NOLOCK)
ORDER BY cd_aerop, cd_terminal, dt_mov, nro_selo_electronico, hh_mov

OPEN CUR_TEMP_SELO_DUP
FETCH NEXT FROM CUR_TEMP_SELO_DUP INTO
		 @p_cd_aerop
		,@p_cd_terminal
		,@p_dt_mov
		,@p_nro_selo_electronico
		,@p_hh_mov
		,@p_tp_natureza
		,@p_selo_status
		,@p_cd_motivo
		,@p_tp_fat
		,@p_cd_cia_aerea
		,@p_tp_unid
		,@p_dt_confirma
		,@p_cd_aerop_utilizacao
		,@p_cd_terminal_utilizacao
		,@p_tp_coletor
		,@p_item_fat
		,@p_billing_line_id
		,@p_billing_int_date
		,@p_billing_int_type
		,@p_billing_user_1
		,@p_voo_rea
		,@p_dt_voo_rea
		,@p_hh_voo_rea
		,@p_date_created
		,@p_user_id_created
		,@p_date_changed
		,@p_user_id_changed
		,@p_inactive_ind
		,@p_active_date
		,@p_chgstamp
 
WHILE @@FETCH_STATUS = 0
BEGIN
	
	SET @msg = 'PROCESO: ' + @p_cd_aerop+'-'+ LTRIM(RTRIM(@p_cd_terminal)) +'-'+ CONVERT(VARCHAR,@p_dt_mov,103) +'-'+ @p_nro_selo_electronico +'-'+ @p_hh_mov

	SELECT @v_hh_mov_act 				= hh_mov
	FROM pax_selo_electronico_u (NOLOCK INDEX = P_pax_selo_electronico_u)
	WHERE cd_aerop 						= @p_cd_aerop
		AND cd_terminal 				= @p_cd_terminal
		AND dt_mov 						between  @p_dt_mov and DATEADD(ss,-1,DATEADD(dd,1,@p_dt_mov))
		AND nro_selo_electronico 		= @p_nro_selo_electronico

	SET @ROWCOUNT = @@ROWCOUNT 
		
	IF @ROWCOUNT = 1
	BEGIN
		
		SELECT @v_date_1		= CONVERT(VARCHAR,@p_dt_mov,112) + ' ' + SUBSTRING(@v_hh_mov_act,1,2) +':'+ SUBSTRING(@v_hh_mov_act,3,2) +':'+ SUBSTRING(@v_hh_mov_act,5,2)  
			,@v_date_2			= CONVERT(VARCHAR,@p_dt_mov,112) + ' ' + SUBSTRING(@p_hh_mov,1,2) +':'+ SUBSTRING(@p_hh_mov,3,2) +':'+ SUBSTRING(@p_hh_mov,5,2)  
			,@date_process 		= GETDATE()
		
		SET @v_hora_dife = DATEDIFF(Hour, @v_date_1, @v_date_2)
		
		IF @v_hora_dife <= 0
		BEGIN
			DELETE pax_selo_elec_dup_u 
			WHERE 	cd_aerop			= @p_cd_aerop
				AND cd_terminal			= @p_cd_terminal
				AND dt_mov				= @p_dt_mov
				AND nro_selo_electronico= @p_nro_selo_electronico
				AND hh_mov				= @p_hh_mov
			IF @@ROWCOUNT = 1
				SET @msg = @msg + ' Leitura Duplicada Excluida. ' 
			ELSE
				SET @msg = @msg + ' Nao foi posivel excluir a Leitura Duplicada. ' 
		END
		ELSE
		BEGIN
			IF @v_hora_dife > 0 AND @v_hora_dife <= 12
			BEGIN
				SET @msg = @msg + convert(varchar, @date_process, 113)
				--PRINT @msg 
				BEGIN TRAN			
				UPDATE pax_selo_electronico_u
				SET hh_mov					= @p_hh_mov
					,date_changed           = @date_process
					,user_id_changed     	= 'JOB (Leituras Duplicadas)'
					,chgstamp				= chgstamp + 1
				WHERE 	cd_aerop			= @p_cd_aerop
					AND cd_terminal			= @p_cd_terminal
					AND dt_mov				between  @p_dt_mov and DATEADD(ss,-1,DATEADD(dd,1,@p_dt_mov))
					AND nro_selo_electronico= @p_nro_selo_electronico
				
				IF @@ROWCOUNT = 1
				BEGIN
					DELETE pax_selo_elec_dup_u 
					WHERE 	cd_aerop			= @p_cd_aerop
						AND cd_terminal			= @p_cd_terminal
						AND dt_mov				= @p_dt_mov
						AND nro_selo_electronico= @p_nro_selo_electronico
						AND hh_mov				= @p_hh_mov
					
					IF @@ROWCOUNT =  1
					BEGIN
						COMMIT TRAN
						SET @msg = @msg + ' Leitura Duplicada Actualizada com Exito. '
					END
					ELSE
					BEGIN
						ROLLBACK TRAN
						SET @msg = @msg + ' Nao foi posible excluir a Leitura Duplicada. '
					END
				END
				ELSE
				BEGIN
					ROLLBACK TRAN
					SET @msg = @msg + ' Nao foi posible Atualizar a hora de Leitura do Selo. '
				END
			END
			ELSE
			BEGIN
				BEGIN TRAN
				INSERT INTO pax_selo_electronico_u VALUES (
					 @p_cd_aerop
					,@p_cd_terminal
					,@p_dt_mov
					,@p_nro_selo_electronico
					,@p_tp_natureza
					,@p_selo_status
					,@p_cd_motivo
					,@p_tp_fat
					,@p_cd_cia_aerea
					,@p_tp_unid
					,@p_dt_confirma
					,@p_cd_aerop_utilizacao
					,@p_cd_terminal_utilizacao
					,@p_tp_coletor
					,@p_item_fat
					,@p_billing_line_id
					,@p_billing_int_date
					,@p_billing_int_type
					,@p_billing_user_1
					,@p_voo_rea
					,@p_dt_voo_rea
					,@p_hh_voo_rea
					,@p_hh_mov
					,@p_date_created
					,@p_user_id_created
					,@p_date_changed
					,@p_user_id_changed
					,@p_inactive_ind
					,@p_active_date
					,@p_chgstamp)
				 
				IF @@ROWCOUNT = 1
				BEGIN
					DELETE pax_selo_elec_dup_u 
					WHERE 	cd_aerop			= @p_cd_aerop
						AND cd_terminal			= @p_cd_terminal
						AND dt_mov				= @p_dt_mov
						AND nro_selo_electronico= @p_nro_selo_electronico
						AND hh_mov				= @p_hh_mov
					
					IF @@ROWCOUNT =  1
					BEGIN
						COMMIT TRAN
						SET @msg = @msg + ' Leitura Duplicada Actualizada com Exito. '
					END
					ELSE
					BEGIN
						ROLLBACK TRAN
						SET @msg = @msg + ' Nao foi posivel Incluir a nova a Leitura.'
					END
				END
			END
		END
	END
	ELSE
	BEGIN
		IF @ROWCOUNT = 0
		BEGIN
			SET @msg = @msg + '* SELO NO ENCONTRADO * '
		END
		ELSE
		BEGIN
			IF @ROWCOUNT > 1
			BEGIN
				SET @msg = @msg + '* MAS DE UN SELO ENCONTRADO PARA LA MISMA DATA * '
			END
		END
	END
	
 	INSERT INTO #TEMP_SALIDA VALUES (@date_process, @msg )
	
	FETCH NEXT FROM CUR_TEMP_SELO_DUP INTO
		 @p_cd_aerop
		,@p_cd_terminal
		,@p_dt_mov
		,@p_nro_selo_electronico
		,@p_hh_mov
		,@p_tp_natureza
		,@p_selo_status
		,@p_cd_motivo
		,@p_tp_fat
		,@p_cd_cia_aerea
		,@p_tp_unid
		,@p_dt_confirma
		,@p_cd_aerop_utilizacao
		,@p_cd_terminal_utilizacao
		,@p_tp_coletor
		,@p_item_fat
		,@p_billing_line_id
		,@p_billing_int_date
		,@p_billing_int_type
		,@p_billing_user_1
		,@p_voo_rea
		,@p_dt_voo_rea
		,@p_hh_voo_rea
		,@p_date_created
		,@p_user_id_created
		,@p_date_changed
		,@p_user_id_changed
		,@p_inactive_ind
		,@p_active_date
		,@p_chgstamp
END
 
CLOSE CUR_TEMP_SELO_DUP
DEALLOCATE CUR_TEMP_SELO_DUP

SET @date_process = GETDATE()
INSERT INTO #TEMP_SALIDA  VALUES(@date_process, 'FIN DE PROCESO')

-- PRESENTAR SALIDA DEL PROCESO
DECLARE CUR_TEM_SALIDA CURSOR FOR
SELECT LTRIM(RTRIM(obs)) + CHAR(10) + CHAR(13)
FROM  #TEMP_SALIDA  
ORDER BY 1

OPEN CUR_TEM_SALIDA 
FETCH NEXT FROM CUR_TEM_SALIDA INTO @msg
WHILE @@FETCH_STATUS = 0
BEGIN
	PRINT @msg
	FETCH NEXT FROM CUR_TEM_SALIDA INTO @msg
END
CLOSE CUR_TEM_SALIDA 
DEALLOCATE CUR_TEM_SALIDA 


DROP TABLE #TEMP_SALIDA 

SET NOCOUNT OFF








GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo]    Script Date: 01/05/2011 18:05:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo    Script Date: 19/09/2008 15:20:24 ******/

--DROP PROC psp_status_selo_arquivo
--EXEC master..xp_cmdshell 'type \\s-sewn48\DriveF\SELO_PROCESADO\SBAR1_F_041026-075919_UNA_502.TXT'
--EXEC psp_status_selo_arquivo '\\s-sewn48\DriveF\SELO_PROCESADO', 'SBAR1_F_041026-075919_UNA_502.TXT'

CREATE PROC [dbo].[psp_status_selo_arquivo]
(		 @p_ruta			VARCHAR (255)
		,@p_arquivo			VARCHAR (255)
)

AS

SET NOCOUNT ON

DECLARE @p_tp_selo				char(1)
		,@p_selo_status			char(1)
		,@p_nro_selo			char(10)
		,@p_nro_selo_elec		char(20)
		,@p_exec				char(255)
		,@p_qtd_lineas_arq		INTEGER
		,@msg					VARCHAR(255)
		,@p_count				SMALLINT


IF NOT EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_PRO_SELO' AND xtype = 'U')
	RAISERROR 26000 'NAO EXISTE TABELA TEMPORARIA [TEMP_PRO_SELO].'
	
-- CREATE TABLE dbo.TEMP_PRO_SELO (LINEA VARCHAR(255) )
-- CREATE INDEX IX_NRO_SELO ON TEMP_PRO_SELO (LINEA)
-- GRANT ALL ON TEMP_PRO_SELO TO geaccarga

DELETE TEMP_PRO_SELO 

SELECT @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

IF @p_ruta = '' OR @p_arquivo = ''
BEGIN
	PRINT 'PARÂMETROS INCOMPLETOS'
	GOTO SEGUIR
END

IF SUBSTRING(@p_arquivo,1,2) = 'SB'
BEGIN
  IF SUBSTRING(RIGHT(@p_arquivo,7),1,3) IN (400,401)
  BEGIN
	  SELECT @p_tp_selo = SUBSTRING(@p_arquivo, 31, 1)
	  IF @p_tp_selo NOT IN ('0', '1')
	  BEGIN
		PRINT 'NOME DE ARQUIVO INVÁLIDO'
		GOTO SEGUIR
	  END
  END
  ELSE
  BEGIN
	  IF SUBSTRING(RIGHT(@p_arquivo,7),1,3) in ('500','501','502')
	  BEGIN
		IF SUBSTRING(@p_arquivo, 7, 1) NOT IN ('E','F')
		BEGIN
			PRINT 'NOME DE ARQUIVO INVÁLIDO'
			GOTO SEGUIR
		END
		ELSE
		BEGIN
			SELECT @p_tp_selo = CASE WHEN SUBSTRING(@p_arquivo, 7, 1) = 'F' 
						THEN '0' ELSE '1' END
		END
	  END
  END
END
ELSE
BEGIN
  SELECT @p_tp_selo = '9'
  IF SUBSTRING(@p_arquivo,20,2) <> 'SB'
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
END


SELECT @p_exec = 'master..xp_cmdshell ''bcp GEACupax..TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + ' -c  -t\t -r\n -SSQLSSIII -Ugeaccarga -Pcargageac'''


/*
SELECT @p_exec = 'BULK INSERT TEMP_PRO_SELO FROM ''' + @p_ruta + '\' + @p_arquivo + ''' WITH 
		(
			FIELDTERMINATOR = ''\t'',
			ROWTERMINATOR = ''\n''
		)'
*/


EXECUTE  (@p_exec)

IF @@ERROR <> 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO'
	GOTO SEGUIR
END

SELECT @p_qtd_lineas_arq = COUNT(1) 
FROM TEMP_PRO_SELO (NOLOCK)
IF @p_qtd_lineas_arq = 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO (NÃO CARREGOU ARQUIVO TEMPORÁRIO ERRO DE BCP)'
	GOTO SEGUIR
END



IF @p_tp_selo = '0'
BEGIN
	SELECT SUBSTRING(A.LINEA, 14,9) 
/*		,rtrim(ltrim(C.descp))
		,@p_qtd_lineas_arq */
	FROM TEMP_PRO_SELO A (NOLOCK)
	left JOIN pax_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	ORDER BY 1
END
IF @p_tp_selo = '1'
BEGIN

	SELECT SUBSTRING(A.LINEA, 11,20) 
/*		,rtrim(ltrim(C.descp))
		,@p_qtd_lineas_arq */
	FROM TEMP_PRO_SELO A (NOLOCK)
	left JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	ORDER BY 1
END
IF @p_tp_selo = '9'
BEGIN
	SELECT SUBSTRING(A.LINEA, 2,20) 
/*		,rtrim(ltrim(C.descp)) 
		,@p_qtd_lineas_arq*/
	FROM TEMP_PRO_SELO A (NOLOCK)
	left JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 2,20)
	left JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	ON C.tbl_code 	= 'STSL'
    	AND C.code	= B.selo_status
	ORDER BY 1
END

SEGUIR:	
DELETE TEMP_PRO_SELO 

SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo1]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo1    Script Date: 19/09/2008 15:20:24 ******/


--drop procedure psp_status_selo_arquivo1
--EXEC psp_status_selo_arquivo1 '\\s-sewn48\DriveF\SELO_PROCESADO', 'SBBE_1_1_U_NA_04052004-134834_0_401.TXT'
--EXEC psp_status_selo_arquivo1 '\\s-sewn48\DriveF\SELO_PROCESADO', 'SBSP_1_1_U_NA_15052004-083754_1_401.TXT'
CREATE PROC [dbo].[psp_status_selo_arquivo1]
(		 @p_ruta			VARCHAR (255)
		,@p_arquivo			VARCHAR (255)
)

AS

SET NOCOUNT ON

DECLARE @p_tp_selo				char(1)
		,@p_selo_status			char(1)
		,@p_nro_selo			char(10)
		,@p_nro_selo_elec		char(20)
		,@p_exec				char(255)
		,@p_qtd_lineas_arq		INTEGER
		,@msg					VARCHAR(255)
		,@p_count				SMALLINT


IF not EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_PRO_SELO' AND xtype = 'U')
	RAISERROR 26000 'NAO EXIXTE TABELA TEMPORARIA [TEMP_PRO_SELO].'
	
-- CREATE TABLE dbo.TEMP_PRO_SELO (LINEA VARCHAR(255) )
-- CREATE INDEX IX_NRO_SELO ON TEMP_PRO_SELO (LINEA)
-- GRANT ALL ON TEMP_PRO_SELO TO geaccarga

DELETE TEMP_PRO_SELO 

Select * into ##TEMP_PRO_SELO from TEMP_PRO_SELO

SELECT @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

IF @p_ruta = '' OR @p_arquivo = ''
BEGIN
	PRINT 'PARÂMETROS INCOMPLETOS'
	GOTO SEGUIR
END

IF SUBSTRING(@p_arquivo,1,2) = 'SB'
BEGIN
  SELECT @p_tp_selo = SUBSTRING(@p_arquivo, 31, 1)
  IF @p_tp_selo NOT IN ('0', '1')
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
end
ELSE
BEGIN
  SELECT @p_tp_selo = '9'
  IF SUBSTRING(@p_arquivo,20,2) <> 'SB'
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
END


--SELECT @p_exec = 'master..xp_cmdshell ''dir ' + @p_ruta + '\' + @p_arquivo + ' /B'''

--INSERT INTO TEMP_PRO_SELO
--EXEC (@p_exec) 

--DELETE TEMP_PRO_SELO
--WHERE LEFT(LINEA, 2) = 'Ou' OR LEFT(LINEA, 2) = '--'
	
--SELECT @p_count = COUNT(1) FROM TEMP_PRO_SELO
--IF @p_count = 0
--BEGIN
--	PRINT 'ARQUIVO NO EXISTE'
--	GOTO SEGUIR
--END

--TRUNCATE TABLE TEMP_PRO_SELO

SELECT @p_exec = 'master..xp_cmdshell ''bcp GEACupax..##TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + ' -c -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''


/*SELECT @p_exec = 'BULK INSERT #TEMP_PRO_SELO FROM ''' + @p_ruta + '\' + @p_arquivo + ''' WITH 
		(
			FIELDTERMINATOR = ''\t'',
			ROWTERMINATOR = ''\n''
		)'*/
--SELECT @p_exec = 'master..xp_cmdshell "bcp GEACupax..#TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + 
--	' -c -t/t -r/n -SSQLSSIII -Ugeaccarga - Pcargageac"'

--SELECT @p_exec 
EXECUTE  (@p_exec)
IF @@ERROR <> 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO'
	GOTO SEGUIR
END

SELECT @p_qtd_lineas_arq = COUNT(1) 
FROM ##TEMP_PRO_SELO (NOLOCK)
IF @p_qtd_lineas_arq = 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO (NÃO CARREGOU ARQUIVO TEMPORÁRIO ERRO DE BCP)'
	GOTO SEGUIR
END

-- SELECT @msg = 'CANTIDAD DE LINEAS DEL ARQUIVO ' + LTRIM(RTRIM(STR(@p_qtd_lineas_arq))) + CHAR(10) + CHAR(13)
-- PRINT @msg


IF @p_tp_selo = '0'
BEGIN
	SELECT SUBSTRING(A.LINEA, 14,9) 
		,rtrim(ltrim(C.descp))
--		,@p_qtd_lineas_arq 
	FROM ##TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status

END
IF @p_tp_selo = '1'
BEGIN

	SELECT SUBSTRING(A.LINEA, 11,20) 
		,rtrim(ltrim(C.descp))
--		,@p_qtd_lineas_arq
	FROM ##TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status

END
IF @p_tp_selo = '9'
BEGIN
	SELECT SUBSTRING(A.LINEA, 2,20) 
		,rtrim(ltrim(C.descp)) 
--		,@p_qtd_lineas_arq
	FROM ##TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 2,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	ON C.tbl_code 	= 'STSL'
    	AND C.code	= B.selo_status
END


SEGUIR:	
--DELETE #TEMP_PRO_SELO
--DROP TABLE 	#TEMP_PRO_SELO


SET NOCOUNT OFF












GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo_antigo]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo_antigo    Script Date: 19/09/2008 15:20:24 ******/


CREATE PROC [dbo].[psp_status_selo_arquivo_antigo] 
(		 @p_ruta			VARCHAR (255)
		,@p_arquivo			VARCHAR (255)
)

AS

SET NOCOUNT ON

DECLARE @p_tp_selo				char(1)
		,@p_selo_status			char(1)
		,@p_nro_selo			char(10)
		,@p_nro_selo_elec		char(20)
		,@p_exec				char(255)
		,@p_qtd_lineas_arq		INTEGER
		,@msg					VARCHAR(255)
		,@p_count				SMALLINT


IF not EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_PRO_SELO' AND xtype = 'U')
	RAISERROR 26000 'NAO EXIXTE TABELA TEMPORARIA [TEMP_PRO_SELO].'
	
-- CREATE TABLE dbo.TEMP_PRO_SELO (LINEA VARCHAR(255) )
-- CREATE INDEX IX_NRO_SELO ON TEMP_PRO_SELO (LINEA)
-- GRANT ALL ON TEMP_PRO_SELO TO geaccarga

DELETE TEMP_PRO_SELO 

SELECT @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

IF @p_ruta = '' OR @p_arquivo = ''
BEGIN
	PRINT 'PARAMETROS INCOMPLETOS'
	GOTO SEGUIR
END

SELECT @p_tp_selo = SUBSTRING(@p_arquivo, 31, 1)
IF @p_tp_selo NOT IN ('0', '1')
BEGIN
	PRINT 'NOMBRE DE ARQUIVO NO VALIDO'
	GOTO SEGUIR
END

--SELECT @p_exec = 'master..xp_cmdshell ''dir ' + @p_ruta + '\' + @p_arquivo + ' /B'''

--INSERT INTO TEMP_PRO_SELO
--EXEC (@p_exec) 

--DELETE TEMP_PRO_SELO
--WHERE LEFT(LINEA, 2) = 'Ou' OR LEFT(LINEA, 2) = '--'
	
--SELECT @p_count = COUNT(1) FROM TEMP_PRO_SELO
--IF @p_count = 0
--BEGIN
--	PRINT 'ARQUIVO NO EXISTE'
--	GOTO SEGUIR
--END

--TRUNCATE TABLE TEMP_PRO_SELO

--SELECT @p_exec = 'master..xp_cmdshell ''bcp GEACupax..TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + ' -c -t\t -r\n -SSQLSSIII -Ugeaccarga -Pcargageac'''


SELECT @p_exec = 'BULK INSERT TEMP_PRO_SELO FROM ''' + @p_ruta + '\' + @p_arquivo + ''' WITH 
		(
			FIELDTERMINATOR = ''\t'',
			ROWTERMINATOR = ''\n''
		)'

--SELECT @p_exec 
EXECUTE  (@p_exec)
IF @@ERROR <> 0
BEGIN
	PRINT 'ERROR AL CARGAR LAS LINEAS DEL ARCHIVO'
	GOTO SEGUIR
END

SELECT @p_qtd_lineas_arq = COUNT(1) 
FROM TEMP_PRO_SELO (NOLOCK)
IF @p_qtd_lineas_arq = 0
BEGIN
	PRINT 'ERROR AL CARGAR LAS LINEAS DEL ARCHIVO (NO CARGO ARCHIVO TEMPORAL ERROR DE BCP)'
	GOTO SEGUIR
END

-- SELECT @msg = 'CANTIDAD DE LINEAS DEL ARQUIVO ' + LTRIM(RTRIM(STR(@p_qtd_lineas_arq))) + CHAR(10) + CHAR(13)
-- PRINT @msg


IF @p_tp_selo = '0'
BEGIN
	SELECT SUBSTRING(A.LINEA, 14,9) 
		,C.descp 
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
    ON 	C.tbl_code 	= 'STSL'
    AND C.code 		= B.selo_status

END
ELSE
BEGIN

	SELECT SUBSTRING(A.LINEA, 11,20) 
		,C.descp 
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
    ON 	C.tbl_code 	= 'STSL'
    AND C.code 		= B.selo_status

END

SEGUIR:	
--DELETE TEMP_PRO_SELO
--DROP TABLE 	TEMP_PRO_SELO


SET NOCOUNT OFF








GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo_carga]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo_carga    Script Date: 19/09/2008 15:20:24 ******/


CREATE procedure [dbo].[psp_status_selo_arquivo_carga]( @p_ruta varchar (255), @p_arquivo varchar (255) )
AS

set nocount on

DECLARE @p_tp_selo       char(1)
		,@p_selo_status    char(1)
		,@p_nro_selo       char(10)
		,@p_nro_selo_elec  char(20)
		,@p_exec           char(255)
		,@p_qtd_lineas_arq INTEGER
		,@error            SMALLINT


set @error = 0

delete TEMP_PRO_SELO 

select @p_arquivo = ltrim(rtrim(@p_arquivo))
      ,@p_ruta	   = ltrim(rtrim(@p_ruta))

if @p_ruta = '' OR @p_arquivo = ''
begin
	print 'PARAMETROS INCOMPLETOS'
	set	@error = 1	
	goto SEGUIR
end

IF SUBSTRING(@p_arquivo,1,2) = 'SB'
BEGIN
	IF SUBSTRING(RIGHT(@p_arquivo,7),1,3) IN (400,401)
	BEGIN
		SELECT @p_tp_selo = SUBSTRING(@p_arquivo, 31, 1)
		IF @p_tp_selo NOT IN ('0', '1')
		BEGIN
			PRINT 'NOME DE ARQUIVO INVÁLIDO'
			SET	@error = 1
			GOTO SEGUIR
		END
	END
	ELSE
	BEGIN
		IF SUBSTRING(RIGHT(@p_arquivo,7),1,3) in ('500','501','502','503','504','600')
		BEGIN
			IF SUBSTRING(@p_arquivo, 7, 1) NOT IN ('E','F','L')
			BEGIN
				PRINT 'NOME DE ARQUIVO INVALIDO'
				SET	@error = 1
				GOTO SEGUIR
			END
			ELSE
			BEGIN
				SELECT @p_tp_selo = CASE WHEN SUBSTRING(@p_arquivo, 7, 1) = 'F' THEN '0' ELSE '1' END
			END
		END
	END
END
ELSE
BEGIN
	SELECT @p_tp_selo = '9'
	IF SUBSTRING(@p_arquivo,20,2) <> 'SB'
	BEGIN
		PRINT 'NOME DE ARQUIVO INVALIDO'
		SET	@error = 1
		GOTO SEGUIR
	END
END

set @p_exec = 'master..xp_cmdshell ''bcp GEACupax..TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + ' -c  -t\t -r\n -SSQLSSII -Ugeaccarga -Pcargageac'''

EXECUTE (@p_exec)

IF @@ERROR <> 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO'
	SET	@error = 1
	GOTO SEGUIR
END

SELECT @p_qtd_lineas_arq = COUNT(1) FROM TEMP_PRO_SELO (NOLOCK)

IF @p_qtd_lineas_arq = 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO (NÃO CARREGOU ARQUIVO TEMPORÁRIO ERRO DE BCP)'
	SET	@error = 1
	GOTO SEGUIR
END
SEGUIR:
IF @error <> 0
   DELETE TEMP_PRO_SELO 


set nocount off




GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo_completo]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo_completo    Script Date: 19/09/2008 15:20:24 ******/
--drop procedure psp_status_selo_arquivo_completo
--EXEC psp_status_selo_arquivo_completo '\\s-sewn48\DriveF\SELO_PROCESADO', 'SBCG_1_1_U_NA_06052004-184921_0_401.TXT'
--EXEC psp_status_selo_arquivo_completo '\\s-sewn48\DriveF\SELO_PROCESADO', 'SBBR_1_1_U_NA_14052004-090439_1_401.TXT'
--EXEC psp_status_selo_arquivo_completo '\\s-sewn48\DriveF\CONFSELO_ERROES', 'JJ040519000000-3542SBBR.TXT'
--EXEC psp_status_selo_arquivo_completo '\\s-sewn14\Tam\Selo', 'JJ040501230000-2352SBRJ.TXT'

CREATE procedure [dbo].[psp_status_selo_arquivo_completo]
(		 @p_ruta			VARCHAR (255)
		,@p_arquivo			VARCHAR (255)
)

AS

SET NOCOUNT ON

DECLARE @p_tp_selo				char(1)
		,@p_selo_status			char(1)
		,@p_nro_selo			char(10)
		,@p_nro_selo_elec		char(20)
		,@p_exec				char(255)
		,@p_qtd_lineas_arq		INTEGER
		,@msg					VARCHAR(255)
		,@p_count				SMALLINT


IF not EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_PRO_SELO' AND xtype = 'U')
	RAISERROR 26000 'NAO EXIXTE TABELA TEMPORARIA [TEMP_PRO_SELO].'
	
-- CREATE TABLE dbo.TEMP_PRO_SELO (LINEA VARCHAR(255) )
-- CREATE INDEX IX_NRO_SELO ON TEMP_PRO_SELO (LINEA)
-- GRANT ALL ON TEMP_PRO_SELO TO geaccarga

DELETE TEMP_PRO_SELO 

SELECT @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

IF @p_ruta = '' OR @p_arquivo = ''
BEGIN
	PRINT 'PARÂMETROS INCOMPLETOS'
	GOTO SEGUIR
END

IF SUBSTRING(@p_arquivo,1,2) = 'SB'
BEGIN
  SELECT @p_tp_selo = SUBSTRING(@p_arquivo, 31, 1)
  IF @p_tp_selo NOT IN ('0', '1')
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
end
ELSE
BEGIN
  SELECT @p_tp_selo = '9'
  IF SUBSTRING(@p_arquivo,20,2) <> 'SB'
  BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
  END
END


--SELECT @p_exec = 'master..xp_cmdshell ''dir ' + @p_ruta + '\' + @p_arquivo + ' /B'''

--INSERT INTO TEMP_PRO_SELO
--EXEC (@p_exec) 

--DELETE TEMP_PRO_SELO
--WHERE LEFT(LINEA, 2) = 'Ou' OR LEFT(LINEA, 2) = '--'
	
--SELECT @p_count = COUNT(1) FROM TEMP_PRO_SELO
--IF @p_count = 0
--BEGIN
--	PRINT 'ARQUIVO NO EXISTE'
--	GOTO SEGUIR
--END

--TRUNCATE TABLE TEMP_PRO_SELO

--SELECT @p_exec = 'master..xp_cmdshell ''bcp GEACupax..TEMP_PRO_SELO in ' + @p_ruta + '\' + @p_arquivo + ' -c -t\t -r\n -SSQLSSIII -Ugeaccarga -Pcargageac'''


SELECT @p_exec = 'BULK INSERT TEMP_PRO_SELO FROM ''' + @p_ruta + '\' + @p_arquivo + ''' WITH 
		(
			FIELDTERMINATOR = ''\t'',
			ROWTERMINATOR = ''\n''
		)'

--SELECT @p_exec 
EXECUTE  (@p_exec)
IF @@ERROR <> 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO'
	GOTO SEGUIR
END

SELECT @p_qtd_lineas_arq = COUNT(1) 
FROM TEMP_PRO_SELO (NOLOCK)
IF @p_qtd_lineas_arq = 0
BEGIN
	PRINT 'ERRO AO CARREGAR AS LINHAS DO ARQUIVO (NÃO CARREGOU ARQUIVO TEMPORÁRIO ERRO DE BCP)'
	GOTO SEGUIR
END

-- SELECT @msg = 'CANTIDAD DE LINEAS DEL ARQUIVO ' + LTRIM(RTRIM(STR(@p_qtd_lineas_arq))) + CHAR(10) + CHAR(13)
-- PRINT @msg


IF @p_tp_selo = '0'
BEGIN
	Select 'Arquivo: ' + @p_ruta + '\' + @p_arquivo
	select 'Quantidade de linhas do arquivo: ' + convert(char(10),@p_qtd_lineas_arq)
	select 'Status do arquivo: ' + status_arq from pax_baixa_selo_u where arquivo = @p_arquivo
	Select 'Status atual dos selos:'
	SELECT SUBSTRING(A.LINEA, 14,9) Selo 
		,substring(C.descp,1,15) Status
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status

	Select 'Discrepâncias:'
	SELECT SUBSTRING(A.LINEA, 14,9) selo 
	,substring(D.descp,1,15) status_atual
	,convert(char(10),F.dt_mov,120) dt_mov
	,substring(F.tp_coletor,1,2)
	,B.discrepancia
	,substring(C.msg,1,30) descrição
	,substring(E.descp,1,15) status_baixa
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_discrep_selo_u B (NOLOCK)
	ON B.nro_selo	= SUBSTRING(A.LINEA, 14,9) 	
	inner join pax_tbl_messages_selos C (NOLOCK) 
	on B.discrepancia = C.msg_id +':'+C.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	ON D.tbl_code 	= 'STSL'
	AND D.code	= B.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
	ON E.tbl_code 	= 'STSL'
	AND E.code	= B.selo_status_ind
	INNER JOIN pax_selo_u F (NOLOCK) 
	ON B.nro_selo = F.nro_selo



END
IF @p_tp_selo = '1'
BEGIN
	Select 'Arquivo: ' + @p_ruta + '\' + @p_arquivo
	select 'Quantidade de linhas do arquivo: ' + convert(char(10),@p_qtd_lineas_arq)
	select 'Status do arquivo: ' + status_arq from pax_baixa_selo_u where arquivo = @p_arquivo
	--Select 'Status atual dos selos:'
	/*SELECT SUBSTRING(A.LINEA, 11,20) Selo
		,substring(C.descp,1,15) Status
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status*/
	
	Select 'Qtde selos por status:'
	SELECT substring(C.descp,1,15) Status, count(*) Qtde_selos
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	C.tbl_code 	= 'STSL'
	    AND C.code 		= B.selo_status
	group by substring(C.descp,1,15)
	order by substring(C.descp,1,15)

	Select 'Qtde selos existentes:'
	SELECT  count(*)
	FROM TEMP_PRO_SELO A (NOLOCK)
	INNER JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 11,20)

	/*Select 'Linhas com erro:'
	select substring(a.linha,1,30)
		,substring(C.descp,1,15) Status
		,convert(char(10),b.dt_mov,120)
		,substring(D.descp,1,15) Tipo_coletor
		,a.dt_processo
		,substring(a.obs,1,30)
 	from pax_selos_arquivo_log_processo a (nolock)
	inner join pax_selo_elec_u b (nolock)
	on b.nro_selo_elec = substring(a.linha,11,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	   ON 	C.tbl_code 	= 'STSL'
	   AND C.code 		= b.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	D.tbl_code 	= 'TPCL'
	    AND D.code 		= b.tp_coletor
	where a.arquivo = @p_arquivo*/

	Select 'Linhas com erro:'
	select 	substring(C.descp,1,15) Status
		,substring(D.descp,1,15) Tipo_coletor
		,substring(a.obs,1,30)Motivo_erro
		,count(*) Qtde_erros
 	from pax_selos_arquivo_log_processo a (nolock)
	inner join pax_selo_elec_u b (nolock)
	on b.nro_selo_elec = substring(a.linha,11,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	   ON 	C.tbl_code 	= 'STSL'
	   AND C.code 		= b.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	D.tbl_code 	= 'TPCL'
	    AND D.code 		= b.tp_coletor
	where a.arquivo = @p_arquivo
	group by substring(C.descp,1,15),substring(D.descp,1,15),substring(a.obs,1,30)
	order by substring(C.descp,1,15),substring(D.descp,1,15),substring(a.obs,1,30)

END
IF @p_tp_selo = '9'
BEGIN
	Select @p_ruta + @p_arquivo
	select convert(char(10),@p_qtd_lineas_arq) + ' linhas'
	select convert(char(10),@p_qtd_lineas_arq-2) + ' selos'

	SELECT SUBSTRING(A.LINEA, 2,20) Linha
		,SUBSTRING(C.descp,1,15) Status
		,substring(D.descp,1,15) Tipo_coletor
		,convert(char(10),dt_confirma,120) Dt_confirma
	FROM TEMP_PRO_SELO A (NOLOCK)
	left JOIN pax_selo_elec_u B (NOLOCK)
	ON B.nro_selo_elec	= SUBSTRING(A.LINEA, 2,20)
	INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	ON C.tbl_code 	= 'STSL'
    	AND C.code	= B.selo_status
	INNER JOIN GEACCOMMON..dropdowndw_u D (NOLOCK INDEX = PK_dropdowndw_u)
	    ON 	D.tbl_code 	= 'TPCL'
	    AND D.code 		= B.tp_coletor

END

SEGUIR:	
--DELETE TEMP_PRO_SELO
--DROP TABLE 	TEMP_PRO_SELO


SET NOCOUNT OFF








GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo_conf_lectura]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo_conf_lectura    Script Date: 19/09/2008 15:20:24 ******/








/*

DROP PROC psp_status_selo_arquivo

EXEC master..xp_cmdshell 'type \\s-sewn48\DriveF\ConfSelo_procesado\RG070331045000-2127SBPA.TXT'
EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\ConfSelo_procesado\JJ050517001500-3366SBVT.TXT'

EXEC psp_status_selo_arquivo_carga '\\s-sewn48\DriveF\ConfSelo_procesado', 'RG070331045000-2127SBPA.TXT'
SELECT len(LINEA), '*' + LINEA + '*',  * FROM TEMP_PRO_SELO A (NOLOCK)

EXEC psp_status_selo_arquivo_conf_lectura '\\s-sewn48\DriveF\ConfSelo_procesado', 'RG070331045000-2127SBPA.TXT'

select * from pax_selo_electronico_u (nolock) 
where cd_aerop = 'SBAR'
and cd_terminal = '1' 
and nro_selo_electronico = '0013567010'


execute psp_status_selo_arquivo_carga @p_ruta ='\\s-sewn48\DriveF\ConfSelo_procesado' ,@p_arquivo ='JJ061120075000-3039SBSP.TXT' 
select * from GEACupax..TEMP_PRO_SELO order by 1
execute psp_status_selo_arquivo_conf_lectura @p_ruta ='\\s-sewn48\DriveF\ConfSelo_procesado' ,@p_arquivo ='JJ061120075000-3039SBSP.TXT' 

1*00130211119001T00042

*/

CREATE            PROC [dbo].[psp_status_selo_arquivo_conf_lectura]
(		 @p_ruta			VARCHAR (255)
		,@p_arquivo			VARCHAR (255)
)

AS

SET NOCOUNT ON

DECLARE @p_tp_selo				char(1)
		,@p_selo_status			char(1)
		,@p_nro_selo			char(10)
		,@p_nro_selo_elec		char(20)
		,@p_exec				char(255)
		,@p_qtd_lineas_arq		INTEGER
		,@p_count				SMALLINT
		,@v_cd_aerop			CHAR(4)
		,@v_dt_mov				CHAR(8)
		,@d_dt_mov				datetime

IF NOT EXISTS (SELECT 1 FROM sysobjects WHERE name = 'TEMP_PRO_SELO' AND xtype = 'U')
	RAISERROR 26000 'NAO EXISTE TABELA TEMPORARIA [TEMP_PRO_SELO].'

/*	
 CREATE TABLE dbo.TEMP_PRO_SELO (LINEA VARCHAR(255) )
 CREATE INDEX IX_NRO_SELO ON TEMP_PRO_SELO (LINEA)
 GRANT ALL ON TEMP_PRO_SELO TO geaccarga
*/


SELECT @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

IF @p_ruta = '' OR @p_arquivo = ''
BEGIN
	PRINT 'PARÂMETROS INCOMPLETOS'
	GOTO SEGUIR
END

IF SUBSTRING(@p_arquivo,1,2) NOT IN ('JJ', 'G3', 'WJ', 'RG', 'O6', 'P8', '8R', 'AD')
BEGIN
	PRINT 'NOME DE ARQUIVO INVÁLIDO'
	GOTO SEGUIR
END

SELECT @v_cd_aerop 		= SUBSTRING(@p_arquivo,20,4)
		,@d_dt_mov		= SUBSTRING(@p_arquivo,3,6)

set @v_dt_mov		= convert(varchar(8), @d_dt_mov, 112)


SELECT CASE WHEN LEN(A.LINEA) >= 22 THEN SUBSTRING(A.LINEA, 3,14) 
			ELSE SUBSTRING(A.LINEA, 3,10) END
	,case when SUBSTRING(A.LINEA, 17,1) = 'T' then 'T - Transferido'
		 when SUBSTRING(A.LINEA, 17,1) = 'U' then 'U - Utilizado'
		 when SUBSTRING(A.LINEA, 17,1) = 'C' then 'C - Cancelado'
		 when SUBSTRING(A.LINEA, 17,1) = 'D' then 'U - Devolvido'
		else SUBSTRING(A.LINEA, 17,1) + ' - Não definido' end
	,case when B.selo_status is null then '' else convert(datetime, SUBSTRING(@p_arquivo,3,6)) end
	,rtrim(ltrim(C.descp))
	,case when B.selo_status is null then '' else convert(datetime, SUBSTRING(@p_arquivo,3,6)) end
FROM TEMP_PRO_SELO A (NOLOCK)
LEFT JOIN pax_selo_electronico_u B 	(NOLOCK INDEX = nro_selo_electronico)
ON B.nro_selo_electronico			= CASE WHEN LEN(A.LINEA) >= 22 THEN SUBSTRING(A.LINEA, 3,14) ELSE SUBSTRING(A.LINEA, 3,10) END
and B.cd_aerop						= @v_cd_aerop
and B.cd_terminal					= '1'
and year(dt_voo_rea)				= convert(int, substring(@v_dt_mov,1,4))
/*
LEFT JOIN pax_selo_electronico_u B 	(NOLOCK INDEX = P_pax_selo_electronico_u)
ON B.cd_aerop						= @v_cd_aerop
and B.cd_terminal					= '1'
AND B.nro_selo_electronico			= CASE WHEN LEN(A.LINEA) = 22 THEN SUBSTRING(A.LINEA, 3,14) 
										ELSE SUBSTRING(A.LINEA, 3,10) END
and year(dt_voo_rea)				= convert(int, substring(@v_dt_mov,1,4))
*/

--and substring(A.LINEA,10,4)			= substring(@v_dt_mov,5,4)
--AND CONVERT(varchar, B.dt_mov,112)	= '20' + SUBSTRING(@p_arquivo,3,6)
LEFT JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
    ON 	C.tbl_code 	= 'STSL'
    AND C.code 		= isnull(B.selo_status, 'Z')
WHERE LEFT(A.LINEA,1)	= '1'
ORDER BY 1


SEGUIR:	
DELETE TEMP_PRO_SELO 

SET NOCOUNT OFF









GO

/****** Object:  StoredProcedure [dbo].[psp_status_selo_arquivo_lectura]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_status_selo_arquivo_lectura    Script Date: 19/09/2008 15:20:25 ******/





CREATE    PROC [dbo].[psp_status_selo_arquivo_lectura]
(		 @p_ruta			varchar (255)
		,@p_arquivo			varchar (255)
)

AS

/*

Aterado por Munoz
Data : 28/05/2007
Asunto: Colocar dos campos adicionales en la consulta

*/


/*

DROP PROC psp_status_selo_arquivo
master..xp_cmdshell 'type \\s-sewn48\DriveF\SELO_PROCESADO\SBAR1_E_040826-082304_UNA_500.TXT'

0131_T_060727-134521_U00_102.txt

master..xp_cmdshell 'dir \\s-sewn48\DriveF\SELO_PROCESADO\SBAR1_E_*.*'050112-083824_UNA_600.TXT'


EXEC psp_status_selo_arquivo_carga '\\s-sewn48\DriveF\SELO_PROCESADO', '0571_F_070515-011011_U00_105.TXT'


EXEC psp_status_selo_arquivo_lectura '\\s-sewn48\DriveF\SELO_PROCESADO', '0571_F_070515-011011_U00_105.TXT'


select * from pax_selo_electronico_u (nolock) 
where cd_aerop = 'SBAR'
and cd_terminal = '1' 
and nro_selo_electronico = '0013567010'

*/

set nocount on

Declare @p_tp_selo				Char(1)
		,@p_selo_status			Char(1)
		,@p_nro_selo			Char(14)
		,@p_nro_selo_elec		Char(20)
		,@p_exec				Char(255)
		,@p_qtd_lineas_arq		integer
		,@p_count				smallint
		,@v_cd_aerop			Char(4)
		,@v_dt_mov				Char(8)

if not exists (select 1 from sysobjects where name = 'TEMP_PRO_SELO' and xtype = 'U')
	raiserror 26000 'NAO EXISTE TABELA TEMPORARIA [TEMP_PRO_SELO].'

/*	
 CREATE TABLE dbo.TEMP_PRO_SELO (LINEA varchar(255) )
 CREATE INDEX IX_NRO_SELO on TEMP_PRO_SELO (LINEA)
 GRANT ALL on TEMP_PRO_SELO TO geaccarga
*/


select @p_arquivo 		= LTRIM(RTRIM(@p_arquivo))
	,@p_ruta			= LTRIM(RTRIM(@p_ruta))

if @p_ruta = '' OR @p_arquivo = ''
Begin
	print 'PARÂMETROS INCOMPLETOS'
	goto SEGUIR
End

if substring(@p_arquivo,1,2) = 'SB'
Begin
	if substring(right(@p_arquivo,7),1,3) IN (400,401)
	Begin
		select @p_tp_selo = substring(@p_arquivo, 31, 1)
		if @p_tp_selo not IN ('0', '1')
		Begin
			print 'NOME DE ARQUIVO INVÁLIDO'
			goto SEGUIR
		End
	End
	else
	Begin
		if substring(right(@p_arquivo,7),1,3) in ('500','501','502','503','504', '600')
		Begin
			if substring(@p_arquivo, 7, 1) not IN ('E','F','L')
			Begin
				print 'NOME DE ARQUIVO INVÁLIDO'
				goto SEGUIR
			End
			else
			Begin
				select @p_tp_selo = CASE WHEN substring(@p_arquivo, 7, 1) = 'F' THEN '0' 
										 WHEN substring(@p_arquivo, 7, 1) = 'L' THEN 'L'
										 else '1' End
			End
		End
	End
End
else
Begin
	select @p_tp_selo = '9'
	-- Alterado por PEDRO 09/01/2006
	if substring(@p_arquivo,20,2) <> 'SB'
	Begin
		if substring( @p_arquivo, 6, 1 ) = 'F'
		Begin
			select A.nro_selo 
				,case when A.tp_baixa = 'U' then 'U - Utilização'
						when A.tp_baixa = 'C' then 'C - Cancelamento'
						when A.tp_baixa = 'D' then 'D - Devolução'
						else A.tp_baixa + 'Situção não definida.' end
				,convert(datetime,'20' + substring(A.linha,1,6))
				,rtrim(ltrim(d.descp))
				,B.dt_mov
			from pax_selos_coletados_u A (NOLOCK)
			Left join pax_selo_u B (NOLOCK)
			on B.nro_selo	= A.nro_selo
			AND B.ano_remesa	= (select max(d.ano_remesa) 
									from pax_selo_u d (NOLOCK index = P_pax_selo_u)
									where d.nro_selo		= A.nro_selo)
			Left join GEACCOMMON..dropdowndw_u d (NOLOCK INDEX = PK_dropdowndw_u)
			on 	d.tbl_code 	= 'STSL'
			and d.code 		= B.selo_status
			where A.arquivo = @p_arquivo 
			and A.nro_selo 	<> ''
			Order By 1
		End
		if substring( @p_arquivo, 6, 1 ) IN ( 'L', 'T' )
		Begin
			select A.nro_selo 
				,case when A.tp_baixa = 'U' then 'U - Utilização'
						when A.tp_baixa = 'C' then 'C - Cancelamento'
						when A.tp_baixa = 'D' then 'D - Devolução'
						else A.tp_baixa + 'Situção não definida.' end
				,convert(datetime,'20' + substring(A.linha,1,6)) --case when B.selo_status is null then '19000101' else B.dt_mov end 
				,rtrim(ltrim(d.descp))
				,case when B.selo_status is null then '19000101' else B.dt_mov end 
			from pax_selos_coletados_u A (NOLOCK)
			Left join pax_selo_electronico_u B (NOLOCK)
			on B.nro_selo_electronico	= A.nro_selo and
			B.cd_aerop = ( select top 1 cd_aerop	FROM GEACutcx..cor_aeroporto_u Y (NOLOCK INDEX = P_cor_aeroporto_u )
							WHERE A.cd_aerop_num = Y.cd_aerop_num
			and inactive_ind 		= '0' ) and
			year(B.dt_mov)				= convert(int,'20' + substring(A.linha,1,2)) and 
			B.cd_terminal = substring( A.arquivo, 4, 1 )
			Left join GEACCOMMON..dropdowndw_u d (NOLOCK INDEX = PK_dropdowndw_u)
			on 	d.tbl_code 	= 'STSL'
			and d.code 		= isnull(B.selo_status,'Z')
			where A.arquivo = @p_arquivo 
			and A.nro_selo <> ''
			Order By 1
		End
		-- fim Alteracao por PEDRO 09/01/2006
	End
End


if @p_tp_selo = '0'
Begin
	select substring(A.LINEA, 14,9) 
		,rtrim(ltrim(C.descp))
		,convert(datetime,'20' + substring(A.LINEA,1,6))
		,rtrim(ltrim(C.descp))
		,B.dt_mov
	from TEMP_PRO_SELO A (NOLOCK)
	Left join pax_selo_u B (NOLOCK)
	on B.nro_selo	= substring(A.LINEA, 14,9) 
	Left join GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    on 	C.tbl_code 	= 'STSL'
	    and C.code 		= B.selo_status
	Order By 1
End

if @p_tp_selo = '1'
Begin
	select substring(A.LINEA, 11,20) 
		,rtrim(ltrim(C.descp))
		,convert(datetime,'20' + substring(A.LINEA,1,6))
		,rtrim(ltrim(C.descp))
		,B.dt_mov
	from TEMP_PRO_SELO A (NOLOCK)
	Left join pax_selo_elec_u B (NOLOCK)
	on B.nro_selo_elec	= substring(A.LINEA, 11,20)
	Left join GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    on 	C.tbl_code 	= 'STSL'
	    and C.code 		= B.selo_status
	Order By 1
End

if @p_tp_selo = 'L'
Begin
	set @v_cd_aerop 		= substring(@p_arquivo,1,4)
	select substring(A.LINEA, 12,10) 
		,rtrim(ltrim(ISNULL(C.descp,'Selo Não Existe')))
		,case when B.selo_status is null then '19000101' else convert(datetime,'20' + substring(A.LINEA,1,6)) end 
		,rtrim(ltrim(ISNULL(C.descp,'Selo Não Existe')))
		,B.dt_mov
	from TEMP_PRO_SELO A (NOLOCK)
	Left join gvw_selo_electronico_por_dia B (NOLOCK)
	on B.nro_selo_electronico = substring(A.LINEA, 12,10)
	and B.cd_aerop             = @v_cd_aerop
	and convert(varchar, B.dt_mov,112)	= '20' + substring(A.LINEA,1,6)
	Left join GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	    on 	C.tbl_code 	= 'STSL'
	    and C.code 		= isnull(B.selo_status,'Z')
	Order By 1
End


if @p_tp_selo = '9'
Begin
	select substring(A.LINEA, 2,20) 
		,rtrim(ltrim(C.descp)) 
	from TEMP_PRO_SELO A (NOLOCK)
	Left join pax_selo_elec_u B (NOLOCK)
	on B.nro_selo_elec	= substring(A.LINEA, 2,20)
	Left join GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
	on C.tbl_code 	= 'STSL'
    	and C.code	= B.selo_status
	Order By 1
End

SEGUIR:	
DELETE TEMP_PRO_SELO 

set nocount OFF




GO

/****** Object:  StoredProcedure [dbo].[psp_teste_arq_conf]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_teste_arq_conf    Script Date: 19/09/2008 15:20:25 ******/

--drop procedure psp_teste_arq_conf
--execute psp_teste_arq_conf
--select * from arquivos_conf
--delete arquivos_conf where linea is null

create proc [dbo].[psp_teste_arq_conf]
as
set nocount on
drop table arquivos_conf
create table arquivos_conf (linea varchar (255))

INSERT INTO arquivos_conf
--EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\ConfSelo_procesado\*.txt /b' 
--EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\ConfSelo_ja_enviados\*.txt /b' 
EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\ConfSelo_erroes\*.txt /b' 
--EXEC master..xp_cmdshell 'dir \\s-sewn14\Tam\Selo\*.txt /b' 

set nocount off

/* relaciona com os arquivos já processados

select substring(a.linea,1,30), substring(b.arquivo,1,30),b.status_arq from arquivos_conf a 
left join pax_conf_baixa_selo_u b
on ltrim(rtrim(a.linea)) = b.arquivo
--where --a.linea like 'JJ0407%'--status_arq = 0
ORDER BY status_arq

*/

/* atualiza o status dos arquivos relacionados como pendentes para os que estão como processados com erro

begin transaction
update pax_conf_baixa_selo_u
set status_arq = '0' from
arquivos_conf as a 
left join pax_conf_baixa_selo_u as b
on ltrim(rtrim(a.linea)) = b.arquivo
where
status_arq = '2'

*/-- commit


/* atualiza IDEM
begin transaction
update pax_conf_baixa_selo_u
set status_arq = '0'
where
substring(arquivo,1,8) = 'JJ040503'
and status_arq = '2'
commit
*/


/*seleciona somente um arquivo
select substring(a.linea,1,30)
,substring(b.arquivo,1,30)
,b.status_arq from arquivos_conf a 
left join pax_conf_baixa_selo_u b
on ltrim(rtrim(a.linea)) = b.arquivo
where arquivo = 'JJ040415140001-3580SBBR.TXT'
ORDER BY status_arq */

/* verifica quantidade de arquivos já enviados

select substring(a.arquivo,1,30),ltrim(rtrim(b.linea)) from pax_conf_baixa_selo_u a
left join arquivos_conf b
on ltrim(rtrim(b.linea)) = a.arquivo
where a.arquivo like 'JJ0407%'
and convert(datetime,'20'+substring(a.arquivo,3,2)+'-'+substring(a.arquivo,5,2)+'-'+
	substring(a.arquivo,7,2)) = '2004-07-25'

select substring(a.arquivo,1,30),ltrim(rtrim(b.linea)) from pax_conf_baixa_selo_u a
left join arquivos_conf b
on ltrim(rtrim(b.linea)) = a.arquivo
where a.arquivo like 'JJ0407%'
and b.linea is null
and convert(datetime,'20'+substring(a.arquivo,3,2)+'-'+substring(a.arquivo,5,2)+'-'+
	substring(a.arquivo,7,2)) = '2004-07-25'

select convert(datetime,'20'+substring(a.arquivo,3,2)+'-'+substring(a.arquivo,5,2)+'-'+
	substring(a.arquivo,7,2)),count(*)  from pax_conf_baixa_selo_u a
left join arquivos_conf b
on ltrim(rtrim(b.linea)) = a.arquivo
where a.arquivo like 'JJ0407%'
--and convert(datetime,'20'+substring(a.arquivo,3,2)+'-'+substring(a.arquivo,5,2)+'-'+
	--substring(a.arquivo,7,2)) <='2004-07-26'
and b.linea is null
group by convert(datetime,'20'+substring(a.arquivo,3,2)+'-'+substring(a.arquivo,5,2)+'-'+
	substring(a.arquivo,7,2))
order by convert(datetime,'20'+substring(a.arquivo,3,2)+'-'+substring(a.arquivo,5,2)+'-'+
	substring(a.arquivo,7,2))

*/






GO

/****** Object:  StoredProcedure [dbo].[psp_teste_arq_fisico]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_teste_arq_fisico    Script Date: 19/09/2008 15:20:25 ******/
--drop procedure psp_teste_arq_fisico
--execute psp_teste_arq_fisico
--select * from arquivos_fisico
--delete arquivos_fisico where linea is null

create proc [dbo].[psp_teste_arq_fisico]
as
set nocount on
drop table arquivos_fisico
create table arquivos_fisico (linea varchar (255))

INSERT INTO arquivos_fisico
EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\Selo\*.txt /b' 
--EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\Selo_erroes\*.txt /b' 
--EXEC master..xp_cmdshell 'dir \\s-sewn48\DriveF\Selo_procesado\*.txt /b' 

set nocount off

/* relaciona com os arquivos já processados
select substring(a.linea,1,30), substring(b.arquivo,1,30),b.status_arq from arquivos_fisico a 
left join pax_baixa_selo_u b
on ltrim(rtrim(a.linea)) = b.arquivo
--where status_arq = 2
ORDER BY status_arq*/

/* atualiza o status dos arquivos relacionados como pendentes para os que estão como processados com erro
begin transaction
update pax_baixa_selo_u
set status_arq = '0' 
--select *
from arquivos_fisico as a 
left join pax_baixa_selo_u as b
on ltrim(rtrim(a.linea)) = b.arquivo
where
status_arq = '2'*/
--commit 
--rollback
/*seleciona registro de um arquivo
SELECT * FROM pax_baixa_selo_u
WHERE arquivo = 'SBCY_1_1_U_NA_03052004-091113_0_400.TXT'*/

/*altera status de um arquivo
begin transaction
update pax_baixa_selo_u
set status_arq = '0' 
where
arquivo = 'SBCY_1_1_U_NA_03052004-091113_0_400.TXT'
--commit*/




GO

/****** Object:  StoredProcedure [dbo].[psp_tot_pax_dia]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_tot_pax_dia    Script Date: 19/09/2008 15:20:25 ******/

create proc [dbo].[psp_tot_pax_dia] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_cd_cia_aerea    char(3), 
                 @p_tp_natureza     char(1), 
                 @p_periodo_de      datetime, 
                 @p_periodo_ate     datetime) 
AS 
  SELECT Sum(Isnull(pax_total,0))
    FROM rpax_emb_dia_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND tp_natureza     = @p_tp_natureza 
     AND periodo_de      = @p_periodo_de 
     AND periodo_ate     = @p_periodo_ate 



GO

/****** Object:  StoredProcedure [dbo].[psp_trigger_ams_event_2_g]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_trigger_ams_event_2_g    Script Date: 19/09/2008 15:20:25 ******/

CREATE procedure [dbo].[psp_trigger_ams_event_2_g]
(
        @p_event_id             char(10),
        @p_next_step_ent_val    char(30),
        @p_from_user_arg        char(30),
        @p_from_act_arg         char(10),
        @p_assign_to_arg        char(1),
        @p_to_owner_arg         char(30),
        @p_msg_priority         tinyint  = 3,
        @p_prev_server_name     char(30) = "",
        @p_prev_seq_nbr         char(15),
        @p_col_val_1            varchar(255) = "",
        @p_col_val_2            varchar(255) = "",
        @p_col_val_3            varchar(255) = "",
        @p_col_val_4            varchar(255) = "",
        @p_col_val_5            varchar(255) = "",
        @p_col_val_6            varchar(255) = "",
        @p_col_val_7            varchar(255) = "",
        @p_col_val_8            varchar(255) = "",
        @p_col_val_9            varchar(255) = "",
        @p_col_val_10           varchar(255) = "",
        @p_col_val_11           varchar(255) = "",
        @p_col_val_12           varchar(255) = "",
        @p_col_val_13           varchar(255) = "",
        @p_col_val_14           varchar(255) = "",
        @p_col_val_15           varchar(255) = "",
        @p_col_val_16           varchar(255) = "",
        @p_col_val_17           varchar(255) = "",
        @p_col_val_18           varchar(255) = "",
        @p_col_val_19           varchar(255) = "",
        @p_col_val_20           varchar(255) = "",
        @p_col_val_21           varchar(255) = "",
        @p_col_val_22           varchar(255) = "",
        @p_col_val_23           varchar(255) = "",
        @p_col_val_24           varchar(255) = "",
        @p_col_val_25           varchar(255) = "",
        @p_col_val_26           varchar(255) = "",
        @p_col_val_27           varchar(255) = "",
        @p_col_val_28           varchar(255) = "",
        @p_col_val_29           varchar(255) = "",
        @p_col_val_30           varchar(255) = "",
        @p_col_val_31           varchar(255) = "",
        @p_col_val_32           varchar(255) = ""
)
AS
DECLARE @w_ret int
EXEC @w_ret = sp_dbs_authenticate
IF @w_ret != 0 RETURN
DECLARE @w_return    int
EXECUTE @w_return = DBSwact..psp_trigger_ams_event_2
            @p_event_id = @p_event_id,
            @p_next_step_ent_val = @p_next_step_ent_val,
            @p_from_user_arg = @p_from_user_arg,
            @p_from_act_arg = @p_from_act_arg,
            @p_assign_to_arg = @p_assign_to_arg,
            @p_to_owner_arg = @p_to_owner_arg,
            @p_msg_priority = @p_msg_priority,
            @p_prev_server_name = @p_prev_server_name,
            @p_prev_seq_nbr = @p_prev_seq_nbr,
            @p_col_val_1 = @p_col_val_1,
            @p_col_val_2 = @p_col_val_2,
            @p_col_val_3 = @p_col_val_3,
            @p_col_val_4 = @p_col_val_4,
            @p_col_val_5 = @p_col_val_5,
            @p_col_val_6 = @p_col_val_6,
            @p_col_val_7 = @p_col_val_7,
            @p_col_val_8 = @p_col_val_8,
            @p_col_val_9 = @p_col_val_9,
            @p_col_val_10 = @p_col_val_10,
            @p_col_val_11 = @p_col_val_11,
            @p_col_val_12 = @p_col_val_12,
            @p_col_val_13 = @p_col_val_13,
            @p_col_val_14 = @p_col_val_14,
            @p_col_val_15 = @p_col_val_15,
            @p_col_val_16 = @p_col_val_16,
            @p_col_val_17 = @p_col_val_17,
            @p_col_val_18 = @p_col_val_18,
            @p_col_val_19 = @p_col_val_19,
            @p_col_val_20 = @p_col_val_20,
            @p_col_val_21 = @p_col_val_21,
            @p_col_val_22 = @p_col_val_22,
            @p_col_val_23 = @p_col_val_23,
            @p_col_val_24 = @p_col_val_24,
            @p_col_val_25 = @p_col_val_25,
            @p_col_val_26 = @p_col_val_26,
            @p_col_val_27 = @p_col_val_27,
            @p_col_val_28 = @p_col_val_28,
            @p_col_val_29 = @p_col_val_29,
            @p_col_val_30 = @p_col_val_30,
            @p_col_val_31 = @p_col_val_31,
            @p_col_val_32 = @p_col_val_32
RETURN @w_return



GO

/****** Object:  StoredProcedure [dbo].[psp_val_appm_installed_g]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_val_appm_installed_g    Script Date: 19/09/2008 15:20:25 ******/

CREATE procedure [dbo].[psp_val_appm_installed_g]
(
 @p_appl_id              char(3)
)
AS
DECLARE @w_return    int
EXECUTE @w_return = DBSctlg..psp_val_appm_installed
    @p_appl_id = @p_appl_id
RETURN @w_return



GO

/****** Object:  StoredProcedure [dbo].[psp_val_nro_voos]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_val_nro_voos    Script Date: 19/09/2008 15:20:26 ******/

CREATE PROCEDURE [dbo].[psp_val_nro_voos]
(  @p_ciaaerea CHAR(3)
  ,@p_nro_voo CHAR(7)
)
AS
SELECT
  SUBSTRING(nr_voo, 4, 7)
 ,nr_voo
FROM 
 GEACutcx..cor_nro_voo_tipo_voo_u (NOLOCK)
WHERE
 LEFT(nr_voo, 3) = @p_ciaaerea
and       SUBSTRING(nr_voo, 4, 7) = @p_nro_voo



GO

/****** Object:  StoredProcedure [dbo].[psp_val_user_g]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_val_user_g    Script Date: 19/09/2008 15:20:26 ******/

CREATE procedure [dbo].[psp_val_user_g]
(
 @p_user_id      char(30)
)
AS
DECLARE @w_return    int
EXECUTE @w_return = DBSwact..psp_val_user
     @p_user_id = @p_user_id
RETURN @w_return



GO

/****** Object:  StoredProcedure [dbo].[psp_valida_data_embarque_dia]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_data_embarque_dia    Script Date: 19/09/2008 15:20:26 ******/

CREATE Proc [dbo].[psp_valida_data_embarque_dia] (@p_cd_aerop   char(4)
      ,@p_cd_terminal  char(10)
      ,@p_cd_cia_aerea char(3)
      ,@p_tp_natureza  char(1)
      ,@p_data_ins     datetime)
As
Declare  @p_periodo_de  datetime                
 ,@p_periodo_ate datetime
/*** Verifica se existe registro com essa chave ***/
If Not Exists (select * from rpax_emb_dia_u 
    where cd_aerop   = @p_cd_aerop
      and cd_terminal  = @p_cd_terminal 
      and cd_cia_aerea = @p_cd_cia_aerea
      and tp_natureza  = @p_tp_natureza)
   Select '0'
/** Busca o Range de datas **/
select 
  @p_periodo_de  = periodo_de 
 ,@p_periodo_ate = periodo_ate
from 
 rpax_emb_dia_u 
where 
     cd_aerop   = @p_cd_aerop
 and cd_terminal  = @p_cd_terminal 
 and cd_cia_aerea = @p_cd_cia_aerea
 and tp_natureza  = @p_tp_natureza  
/** Informa se já existe essa data **/
/*If  @p_data_ins = @p_periodo_de or @p_data_ins = @p_periodo_ate 
  Begin
    Select '777'
    Return 
  End 
*/
If  @p_data_ins Between @p_periodo_de and @p_periodo_ate 
 Begin
    Select '666'
    Return 
 End 
 Else
 Begin
    Select '000'
    Return 
 End 



GO

/****** Object:  StoredProcedure [dbo].[psp_valida_exec_proceso]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_valida_exec_proceso    Script Date: 19/09/2008 15:20:26 ******/

/*
sp_who2 active
sp_who2 189
dbcc inputbuffer (189)
DECLARE 	@cont 		INT 
EXEC @cont = psp_valida_exec_proceso
SELECT @cont 		
*/

CREATE PROCEDURE [dbo].[psp_valida_exec_proceso] 
AS

SET NOCOUNT ON

CREATE TABLE #gtb_ret (
	spid 			Int NULL,
	dbname 			Char (9) NULL,
	usuario 		Char (20) NULL,
	cmd 			Char (60) null,
	blocked 		Int NULL,
	status  		Char (15) NULL,
	cpu 			Int NULL,
	physical_io 	Int NULL,
	net_library 	Char (15) NULL ) --,
--	cmd_ib Char (255)  )

Create table #gtb_ib (
	ev_type 	Char (30) NULL,
	param 		Char (30) NULL,	
	cmd 		Char (255) NULL )

Declare @w_spid 	Int,
	@w_dbname 		Char (9),
	@w_user 		Char (20),
	@w_cmd 			Char (60),
	@w_blocked 		Int,
	@w_status  		Char (15),
	@w_cpu 			Int,
	@w_physical_io 	Int,
	@w_net_library 	Char (15),
	@w_cmd_ib 		Char (255),
	@w_exec_cmd 	Char (255),
	@w_lr 			Char (2),
	@cont 			INT

Declare cur_spid Cursor For
Select a.spid, dbname = Left (b.name, 9), usuario = Left (suser_sname (a.sid), 20), a.cmd, a.blocked, status = Left (a.status, 15), a.cpu, a.physical_io, net_library
From
	master..sysprocesses a (NOLOCK) ,
	master..sysdatabases b (NOLOCK)
Where
	a.dbid = b.dbid and
	a.cmd <> 'AWAITING COMMAND' 
Order by 
	a.spid

Open cur_spid
Fetch cur_spid Into @w_spid, @w_dbname, @w_user, @w_cmd, @w_blocked, @w_status, @w_cpu, @w_physical_io, @w_net_library
While @@Fetch_Status = 0
  Begin
    Select @w_exec_cmd = 'DBCC INPUTBUFFER (' + Ltrim ( Str (@w_spid) ) + ')'
    Insert Into #gtb_ib
    Exec ( @w_exec_cmd )

    Select @w_cmd_ib = cmd From #gtb_ib
    delete #gtb_ib

    Select @w_lr = Char (13)
    Select @w_cmd_ib = Replace (@w_cmd_ib, @w_lr, ' ')

    Select @w_lr = Char (10)
    Select @w_cmd_ib = Replace (@w_cmd_ib, @w_lr, ' ')

    Select @w_cmd = Rtrim ( Left (@w_cmd_ib, 60) )

    Insert Into #gtb_ret Values (
    	@w_spid, @w_dbname, @w_user, @w_cmd, @w_blocked, @w_status, @w_cpu, @w_physical_io, @w_net_library)
  
    Fetch cur_spid Into @w_spid, @w_dbname, @w_user, @w_cmd, @w_blocked, @w_status, @w_cpu, @w_physical_io, @w_net_library
  End

Close cur_spid
Deallocate cur_spid

SELECT @cont = ISNULL(COUNT(1),0) from #gtb_ret (NOLOCK)
WHERE (UPPER(cmd) LIKE '%PSP_PROCURAR_ARQUIVOS_SELOS%')
OR (UPPER(cmd) LIKE '%PSP_PROCESA_SELO_F%') 
OR (UPPER(cmd) LIKE '%PSP_PROCESA_SELO_L%') 
OR (UPPER(cmd) LIKE '%PSP_PROCESA_SELO_T%')

IF @cont > 0
	RETURN 5

SET NOCOUNT OFF



GO

/****** Object:  StoredProcedure [dbo].[psp_valida_existe_rgs]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_existe_rgs    Script Date: 19/09/2008 15:20:26 ******/

CREATE Proc [dbo].[psp_valida_existe_rgs]        (@p_cd_aerop   char(4)
      ,@p_cd_terminal  char(10)
      ,@p_cd_cia_aerea char(3)
      ,@p_tp_natureza  char(1)
      ,@p_data_ins     datetime)
As
/*** Verifica se existe registro com essa chave ***/
If Exists (select * from rpax_emb_dia_u 
    where cd_aerop   = @p_cd_aerop
      and cd_terminal  = @p_cd_terminal 
      and cd_cia_aerea = @p_cd_cia_aerea
      and tp_natureza  = @p_tp_natureza
      and periodo_de   = @p_data_ins)
   Select '1'
 Else 
   Select '0'



GO

/****** Object:  StoredProcedure [dbo].[psp_valida_item]    Script Date: 01/05/2011 18:05:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_item    Script Date: 19/09/2008 15:20:26 ******/

CREATE  PROC [dbo].[psp_valida_item] ( 
	@p_cd_aerop			char(4)
	,@p_cd_terminal		char(10)
	,@p_tp_natureza		char(1)
	,@p_dt_voo			datetime
	,@p_tipo_output		char(1) 	= '0' -- 0 faz select e 1 nao faz
	,@p_item_id			char(26) 	= '' output)
AS

IF EXISTS (SELECT * FROM GEACutcx..cor_item_pax_u (nolock index = P_cor_item_pax_u)
	WHERE cd_aerop   = @p_cd_aerop
	AND cd_terminal  = @p_cd_terminal 
	AND tp_natureza  = @p_tp_natureza
	AND dt_vigencia  <= @p_dt_voo)
begin
	if @p_tipo_output = '0' 
	BEGIN
		SELECT item_id FROM  GEACutcx..cor_item_pax_u (nolock index = P_cor_item_pax_u)
		WHERE cd_aerop   = @p_cd_aerop
		AND cd_terminal  = @p_cd_terminal 
		AND tp_natureza  = @p_tp_natureza 
		AND dt_vigencia  <= @p_dt_voo
	End
	else
	begin
		SELECT @p_item_id =  item_id FROM  GEACutcx..cor_item_pax_u (nolock index = P_cor_item_pax_u)
		WHERE cd_aerop   = @p_cd_aerop
		AND cd_terminal  = @p_cd_terminal 
		AND tp_natureza  = @p_tp_natureza 
		AND dt_vigencia  <= @p_dt_voo
	end
end
ELSE 
BEGIN
	if @p_tipo_output = '0' 
	begin
		SELECT 'NDA'
	end
	else
	begin
		select @p_item_id = 'NDA'
	END
END
/*
     IF NOT EXISTS (SELECT * FROM GEACutcx..cor_item_pax_u 
 WHERE      cd_aerop     = @p_cd_aerop
        AND cd_terminal  = @p_cd_terminal 
        AND tp_natureza  = @p_tp_natureza
        AND dt_vigencia  <= CONVERT(DateTime, @p_dt_voo) )
 SELECT 'NDA'
    ELSE 
 SELECT item_id FROM  GEACutcx..cor_item_pax_u 
 WHERE      cd_aerop     = @p_cd_aerop
        AND cd_terminal  = @p_cd_terminal 
        AND tp_natureza  = @p_tp_natureza 
        AND dt_vigencia  <= CONVERT(DateTime, @p_dt_voo)
*/




GO

/****** Object:  StoredProcedure [dbo].[psp_valida_itens_gerados]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_itens_gerados    Script Date: 19/09/2008 15:20:27 ******/

Create Proc [dbo].[psp_valida_itens_gerados] ( 
  @p_cd_aerop     char(4)
 ,@p_cd_terminal  char(10)
 ,@p_cd_cia_aerea char(3)
 ,@p_nro_voo      char(5)
 ,@p_dt_voo       varchar(10)
 ,@p_hr_voo       char(5)
 ,@p_tp_natureza  char(1)
 ,@p_tp_fat       char(1))
As
  If Exists (Select * from rpax_itens_u Where 
       cd_aerop     = @p_cd_aerop
  and cd_terminal  = @p_cd_terminal  
  and cd_cia_aerea = @p_cd_cia_aerea 
  and nro_voo      = @p_nro_voo      
  and dt_voo       = @p_dt_voo       
  and hr_voo       = @p_hr_voo       
  and tp_natureza  = @p_tp_natureza  
  and tp_fat       = @p_tp_fat       
  and billing_line_id <> 0 )
    Begin
   Select 'S'
    End 
  Else
    Begin
   Select 'N'
    End
 



GO

/****** Object:  StoredProcedure [dbo].[psp_valida_itens_rpax_fat]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_itens_rpax_fat    Script Date: 19/09/2008 15:20:27 ******/

Create Proc [dbo].[psp_valida_itens_rpax_fat] (
  @p_cd_aerop      char(4)
 ,@p_cd_terminal   char(10)
 ,@p_cd_cia_aerea  char(3)
 ,@p_nro_voo       char(5)
 ,@p_dt_voo        Varchar(10)
 ,@p_hr_voo        char(5)
 ,@p_tp_natureza   char(1)
 ,@p_tp_fat        char(1))
As
If Exists (Select * from rpax_itens_u Where 
      cd_aerop   = @p_cd_aerop
  and cd_terminal  = @p_cd_terminal
  and cd_cia_aerea = @p_cd_cia_aerea
  and nro_voo   = @p_nro_voo
  and dt_voo   = Convert(DAtetime,@p_dt_voo)
  and hr_voo   = @p_hr_voo
  and tp_natureza  = @p_tp_natureza
  and tp_fat   = @p_tp_fat
  and tp_rpax      = 'V')
 Select 'Y'
Else 
 Select 'N'



GO

/****** Object:  StoredProcedure [dbo].[psp_valida_politica_data]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_politica_data    Script Date: 19/09/2008 15:20:27 ******/


Create Proc [dbo].[psp_valida_politica_data] (
			 @p_tipo_data_bl char(2)
			,@p_dt_inserida  datetime) 
As

Declare  @i_dt_inicio datetime 
        ,@i_dt_fim    datetime
/** Seleciona as Datas para esse sistema **/ 

Select   
	 @i_dt_inicio = dt_abertura 
        ,@i_dt_fim    = dt_fechamento
From
	GEACutcx..cor_date_policy_u 
Where
	tipo_data_bl = @p_tipo_data_bl

  If @p_dt_inserida Between @i_dt_inicio and @i_dt_fim 
    Begin
      Select 'S'
    End 
  Else
    Begin
      Select 'N'
    End    




GO

/****** Object:  StoredProcedure [dbo].[psp_valida_terminal]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_valida_terminal    Script Date: 19/09/2008 15:20:27 ******/

CREATE Proc [dbo].[psp_valida_terminal] (@p_cd_aerop    char(4)
    ,@p_cd_terminal char(10)) as
Select * from 
      GEACutcx..cor_terminal_aerop_u 
where cd_aerop     = @p_cd_aerop   
      and terminal   = @p_cd_terminal
      and inactive_ind  = '0'
   



GO

/****** Object:  StoredProcedure [dbo].[psp_verifica_boleto]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_verifica_boleto    Script Date: 19/09/2008 15:20:27 ******/




CREATE   PROC [dbo].[psp_verifica_boleto]
(	@p_cd_aerop 			CHAR(4)
	,@p_cd_terminal 		CHAR(10)
	,@p_dt_entrega			DATETIME
	,@p_hh_entrega			CHAR(6)
	,@p_cd_cia_aerea		CHAR(3)
	,@p_nro_rste			CHAR(6)
)
AS

DECLARE @v_nro_selo_inicial 	CHAR(10)
	,@v_nro_selo_final			CHAR(10)
	,@str_numboleto				CHAR(22)
	,@p_ano_remesa				INTEGER

SET @str_numboleto 		= '0'

DECLARE cur_lotes_selos CURSOR FOR
SELECT nro_selo_inicial 
	,nro_selo_final
	,ano_remesa
FROM pax_entrega_selo_line_u (NOLOCK INDEX = P_pax_entrega_selo_line_u)
WHERE cd_aerop 			= @p_cd_aerop
 AND cd_terminal 		= @p_cd_terminal
 AND dt_entrega			= @p_dt_entrega
 AND hh_entrega 		= @p_hh_entrega
 AND cd_cia_aerea 		= @p_cd_cia_aerea
 AND nro_rste 			= @p_nro_rste

OPEN cur_lotes_selos
FETCH NEXT FROM cur_lotes_selos INTO @v_nro_selo_inicial, @v_nro_selo_final, @p_ano_remesa
WHILE @@FETCH_STATUS = 0
BEGIN
	
	SELECT TOP 1 @str_numboleto = RIGHT(LTRIM(RTRIM( STR( billing_line_id + 1000000000))),9)
	FROM GEACupax..pax_selo_u      		(NOLOCK INDEX = P_pax_selo_u)
	WHERE nro_selo BETWEEN @v_nro_selo_inicial AND @v_nro_selo_final
		AND ano_remesa		= @p_ano_remesa	
		AND billing_line_id	<> 0
	
	IF @@ROWCOUNT > 0
		GOTO SALIR	
	
	FETCH NEXT FROM cur_lotes_selos INTO @v_nro_selo_inicial, @v_nro_selo_final, @p_ano_remesa
END

SALIR:

SELECT @str_numboleto

CLOSE cur_lotes_selos
DEALLOCATE cur_lotes_selos






GO

/****** Object:  StoredProcedure [dbo].[psp_verifica_permiso]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_verifica_permiso    Script Date: 19/09/2008 15:20:27 ******/




CREATE   PROCEDURE [dbo].[psp_verifica_permiso]
(	@p_wijt_location	CHAR(30)
	,@p_sec_group_id	CHAR(30)
	,@p_user_id		CHAR(30)
)
AS

SELECT last_name, first_name 
FROM DBSwact..user_master_1
WHERE UPPER(sec_group_id) 	= UPPER(@p_sec_group_id)
  AND wijt_location 		= @p_wijt_location
  AND user_id				= @p_user_id




GO

/****** Object:  StoredProcedure [dbo].[psp_verificar_proceso]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.psp_verificar_proceso    Script Date: 19/09/2008 15:20:27 ******/

CREATE   PROCEDURE [dbo].[psp_verificar_proceso] (
	@p_name 	VARCHAR (2000), 
	@cont 		INT OUTPUT)
AS

Set nocount on

CREATE TABLE #gtb_ret (
	spid 			Int NULL,
	dbname 			VARCHAR (2000) NULL,
	usuario 		VARCHAR (2000) NULL,
	cmd 			VARCHAR (2000) null,
	blocked 		Int NULL,
	status  		VARCHAR (2000) NULL,
	cpu 			Int NULL,
	physical_io 	Int NULL,
	net_library 	VARCHAR (2000) NULL ) --,
--	cmd_ib Char (255)  )

Create table #gtb_ib (
	ev_type 	VARCHAR (2000) NULL,
	param 		VARCHAR (2000) NULL,	
	cmd 		VARCHAR (2000) NULL )

Declare @w_spid 	Int,
	@w_dbname 		VARCHAR (2000),
	@w_user 		VARCHAR (2000),
	@w_cmd 			VARCHAR (2000),
	@w_blocked 		Int,
	@w_status  		VARCHAR (2000),
	@w_cpu 			Int,
	@w_physical_io 	Int,
	@w_net_library 	VARCHAR (2000),
	@w_cmd_ib 		VARCHAR (2000),
	@w_exec_cmd 	VARCHAR (2000),
	@w_lr 			VARCHAR (2000)
	

Declare cur_spid Cursor For
Select a.spid, dbname = Left (b.name, 9), usuario = Left (suser_sname (a.sid), 20), a.cmd, a.blocked, status = Left (a.status, 15), a.cpu, a.physical_io, net_library
From
	master..sysprocesses a (NOLOCK) ,
	master..sysdatabases b (NOLOCK)
Where
	a.dbid = b.dbid and
	a.cmd <> 'AWAITING COMMAND' 
Order by 
	a.spid

Open cur_spid
Fetch cur_spid Into @w_spid, @w_dbname, @w_user, @w_cmd, @w_blocked, @w_status, @w_cpu, @w_physical_io, @w_net_library
While @@Fetch_Status = 0
  Begin
    Select @w_exec_cmd = 'DBCC INPUTBUFFER (' + Ltrim ( Str (@w_spid) ) + ')'
    Insert Into #gtb_ib
    Exec ( @w_exec_cmd )

    Select @w_cmd_ib = cmd From #gtb_ib
    delete #gtb_ib

    Select @w_lr = Char (13)
    Select @w_cmd_ib = Replace (@w_cmd_ib, @w_lr, ' ')

    Select @w_lr = Char (10)
    Select @w_cmd_ib = Replace (@w_cmd_ib, @w_lr, ' ')

    Select @w_cmd = Rtrim ( Left (@w_cmd_ib, 60) )

    Insert Into #gtb_ret Values (
    	@w_spid, @w_dbname, @w_user, @w_cmd, @w_blocked, @w_status, @w_cpu, @w_physical_io, @w_net_library)
  
    Fetch cur_spid Into @w_spid, @w_dbname, @w_user, @w_cmd, @w_blocked, @w_status, @w_cpu, @w_physical_io, @w_net_library
  End

Close cur_spid
Deallocate cur_spid

SELECT @cont = COUNT(1) from #gtb_ret 
WHERE UPPER(cmd) LIKE '%' + UPPER(@p_name) + '%'

Set nocount off
GO

/****** Object:  StoredProcedure [dbo].[psp_verificar_uso_selos_por_rste]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.psp_verificar_uso_selos_por_rste    Script Date: 19/09/2008 15:20:28 ******/


CREATE    PROCEDURE [dbo].[psp_verificar_uso_selos_por_rste]
(	@p_cd_aerop 			CHAR(4)
	,@p_cd_terminal 		CHAR(10)
	,@p_dt_entrega			DATETIME
	,@p_hh_entrega			CHAR(6)
	,@p_cd_cia_aerea		CHAR(3)
	,@p_nro_rste			CHAR(6)
)
AS

DECLARE @v_nro_selo_inicial 	CHAR(10)
	,@v_nro_selo_final			CHAR(10)
	,@total  					REAL
	,@sub_total  				REAL
	,@p_ano_remesa				INTEGER

SELECT @total 		= 0
	,@sub_total		= 0

DECLARE cur_lote_selo CURSOR FOR
SELECT nro_selo_inicial 
	,nro_selo_final
	,ano_remesa
FROM pax_entrega_selo_line_u (NOLOCK INDEX = P_pax_entrega_selo_line_u)
WHERE cd_aerop 			= @p_cd_aerop
 AND cd_terminal 		= @p_cd_terminal
 AND dt_entrega			= @p_dt_entrega
 AND hh_entrega 		= @p_hh_entrega
 AND cd_cia_aerea 		= @p_cd_cia_aerea
 AND nro_rste 			= @p_nro_rste

OPEN cur_lote_selo
FETCH NEXT FROM cur_lote_selo INTO @v_nro_selo_inicial, @v_nro_selo_final, @p_ano_remesa
WHILE @@FETCH_STATUS = 0
BEGIN

	SELECT @sub_total = COUNT(nro_selo)
	FROM GEACupax..pax_selo_u      		(NOLOCK INDEX = P_pax_selo_u)
	WHERE nro_selo BETWEEN @v_nro_selo_inicial AND @v_nro_selo_final
		AND ano_remesa		= @p_ano_remesa
		AND selo_status  	not in ('0', '1')
	
	SELECT @total = @total + @sub_total

	FETCH NEXT FROM cur_lote_selo INTO @v_nro_selo_inicial, @v_nro_selo_final, @p_ano_remesa
END


IF @total > 0
    SELECT @total


CLOSE cur_lote_selo
DEALLOCATE cur_lote_selo


SALIR:




GO

/****** Object:  StoredProcedure [dbo].[pst_del_docs_all]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_del_docs_all    Script Date: 19/09/2008 15:20:28 ******/

CREATE Procedure [dbo].[pst_del_docs_all]
(
 @p_tbl_id       char(4),
 @p_activity_key varchar(255)
)
AS
DECLARE @w_ret int  EXEC @w_ret = sp_dbs_authenticate  IF @w_ret != 0 RETURN
DECLARE @w_hash_key int
EXEC @w_hash_key = pst_hash_activity_key @p_activity_key 
DELETE doc_attachment
 where tbl_id  = @p_tbl_id
 and hash_key   = @w_hash_key
 and activity_key  = @p_activity_key



GO

/****** Object:  StoredProcedure [dbo].[pst_del_docs_by_activity_key]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_del_docs_by_activity_key    Script Date: 19/09/2008 15:20:28 ******/

CREATE Procedure [dbo].[pst_del_docs_by_activity_key]
(
 @p_tbl_id       char(4),
 @p_activity_key varchar(255),
 @p_seq_nbr integer 
)
AS
DECLARE @w_ret int  EXEC @w_ret = sp_dbs_authenticate  IF @w_ret != 0 RETURN
DECLARE @w_hash_key int
EXEC @w_hash_key = pst_hash_activity_key @p_activity_key 
DELETE doc_attachment
 where tbl_id  = @p_tbl_id
 and hash_key   = @w_hash_key
 and seq_nbr   = @p_seq_nbr
 and activity_key  = @p_activity_key



GO

/****** Object:  StoredProcedure [dbo].[pst_hash_activity_key]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_hash_activity_key    Script Date: 19/09/2008 15:20:28 ******/

CREATE Procedure [dbo].[pst_hash_activity_key]
(
 @p_activity_key varchar(255)
)
AS
DECLARE @w_ret int  EXEC @w_ret = sp_dbs_authenticate  IF @w_ret != 0 RETURN
DECLARE  @w_pos   smallint,
  @w_len  smallint,
  @w_hash  int,
  @w_part  int,
  @w_two_30 int,
  @w_low_bit bit
select @w_pos = 1,
 @w_len = datalength(@p_activity_key),
 @w_hash = 0,
 @w_part = 0,
 @w_two_30 = power(2,30)
WHILE @w_pos <= @w_len BEGIN
 SELECT @w_part = ASCII(SUBSTRING(@p_activity_key, @w_pos, 1)) & 127
 SELECT @w_pos = @w_pos + 1
 IF @w_pos <= @w_len
  SELECT @w_part = @w_part * 256 + ASCII(SUBSTRING(@p_activity_key, @w_pos, 1))
 SELECT @w_pos = @w_pos + 1
 IF @w_pos <= @w_len
  SELECT @w_part = @w_part * 256 + ASCII(SUBSTRING(@p_activity_key, @w_pos, 1))
 SELECT @w_pos = @w_pos + 1
 IF @w_pos <= @w_len
  SELECT @w_part = @w_part * 256 + ASCII(SUBSTRING(@p_activity_key, @w_pos, 1))
 SELECT @w_pos = @w_pos + 1
 IF @w_hash > @w_two_30
  SELECT @w_hash = ((@w_hash - @w_two_30) * 2 + 1) ^ @w_part
 ELSE
  SELECT @w_hash = (@w_hash * 2) ^ @w_part
END
RETURN @w_hash



GO

/****** Object:  StoredProcedure [dbo].[pst_ins_docs_1]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_ins_docs_1    Script Date: 19/09/2008 15:20:28 ******/

/*********************************************************************/
/* pst_ins_docs_1                                                    */
/*                                                                   */
/* insert row into doc_attachment table                              */
/*********************************************************************/
CREATE procedure [dbo].[pst_ins_docs_1]
 @p_tbl_id    char(4),
 @p_seq_nbr    int,
 @p_activity_key  varchar(255),
 @p_doc_id    varchar(255),
 @p_doc_name   varchar(100),
 @p_doc_provider  varchar(30),
 @p_doc_type   varchar(80),
 @p_doc_descp   varchar(100),
 @p_doc_author   varchar(50),
 @p_doc_create_date  varchar(30),
 @p_user_id    char(30),
 @p_dist_ent_1_val char(30),
 @p_dist_ent_2_val char(30),
 @p_vendor_char  varchar(255),
 @p_vendor_int   int
as
declare @w_ret int
exec @w_ret = sp_dbs_authenticate
if @w_ret != 0
 RETURN
DECLARE @w_hash_key int
EXEC @w_hash_key = pst_hash_activity_key @p_activity_key 
INSERT doc_attachment
 (tbl_id,
 hash_key,
 seq_nbr,
 activity_key,
 doc_id,
 doc_name,
 doc_provider,
 doc_type,
 doc_descp,
 doc_author,
 doc_create_date,
 user_id,
 dist_ent_1_val,
 dist_ent_2_val,
 vendor_char,
 vendor_int)
VALUES (@p_tbl_id,
 @w_hash_key,
 @p_seq_nbr,
 @p_activity_key,
 @p_doc_id,
 @p_doc_name,
 @p_doc_provider,
 @p_doc_type,
 @p_doc_descp,
 @p_doc_author,
 @p_doc_create_date,
 @p_user_id,
 @p_dist_ent_1_val,
 @p_dist_ent_2_val,
 @p_vendor_char,
 @p_vendor_int)



GO

/****** Object:  StoredProcedure [dbo].[pst_mov_docs_1]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_mov_docs_1    Script Date: 19/09/2008 15:20:28 ******/

/*********************************************************************/
/* pst_mov_docs_1                                                    */
/* copy all rows for one activity_key to new_tbl_id.                 */
/* Delete all rows for old_tbl_id if successful                      */
/* Used to move attachments when tbl_id changes                      */
/*********************************************************************/
CREATE procedure [dbo].[pst_mov_docs_1]
 @p_tbl_id   char(4),
 @p_activity_key  varchar(255),
 @p_new_tbl_id   char(4)
as
declare @w_ret int
exec @w_ret = sp_dbs_authenticate
if @w_ret != 0
 RETURN
DECLARE @w_hash_key int
EXEC @w_hash_key = pst_hash_activity_key @p_activity_key 
INSERT doc_attachment
SELECT @p_new_tbl_id, 
 hash_key,
 seq_nbr,
 activity_key,
 doc_id,
 doc_name,
 doc_provider,
 doc_type,
 doc_descp,
 doc_author,
 doc_create_date,
 user_id,
 dist_ent_1_val,
 dist_ent_2_val,
 vendor_char,
 vendor_int
FROM doc_attachment
WHERE tbl_id= @p_tbl_id
 and hash_key = @w_hash_key
 and activity_key = @p_activity_key
if @@error != 0 
begin
      rollback transaction
      return -100
end
DELETE doc_attachment
 where tbl_id  = @p_tbl_id
 and hash_key   = @w_hash_key
 and activity_key  = @p_activity_key



GO

/****** Object:  StoredProcedure [dbo].[pst_sel_docs_by_activity_key]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_sel_docs_by_activity_key    Script Date: 19/09/2008 15:20:28 ******/

CREATE Procedure [dbo].[pst_sel_docs_by_activity_key]
(
 @p_tbl_id       char(4),
 @p_activity_key varchar(255)
)
AS
DECLARE @w_ret int  EXEC @w_ret = sp_dbs_authenticate  IF @w_ret != 0 RETURN
DECLARE @w_hash_key int
EXEC @w_hash_key = pst_hash_activity_key @p_activity_key 
SELECT doc_id,
 seq_nbr,
       doc_name,
       doc_type,
       doc_descp,
       doc_provider,
       doc_author,
       doc_create_date,
       user_id
from doc_attachment
where tbl_id= @p_tbl_id
    and hash_key = @w_hash_key
  and activity_key = @p_activity_key
order by seq_nbr



GO

/****** Object:  StoredProcedure [dbo].[pst_sel_docs_test]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.pst_sel_docs_test    Script Date: 19/09/2008 15:20:28 ******/

/* test for existing rows in doc_attachment table
*  return 1 if rows exist for this activity key, 0 if none
*/
CREATE Procedure [dbo].[pst_sel_docs_test]
(
 @p_tbl_id       char(4),
 @p_activity_key varchar(255)
)
AS
DECLARE @w_ret int  EXEC @w_ret = sp_dbs_authenticate  IF @w_ret != 0 RETURN
DECLARE @w_hash_key int
EXEC @w_hash_key = pst_hash_activity_key @p_activity_key 
if exists
 (SELECT doc_id
  FROM doc_attachment
  WHERE tbl_id = @p_tbl_id
    and hash_key = @w_hash_key
    and activity_key = @p_activity_key)
 select 1
else
 select 0



GO

/****** Object:  StoredProcedure [dbo].[sp_ReplaceFileOrDirNames]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[sp_ReplaceFileOrDirNames] 
  (@pathToObject varchar(200),
   @oldName 	varchar(50),
   @newName 	varchar(50))
as
begin
	declare @winCmd  varchar(400)
  	declare @isFileThere     bit
	declare @isDirectory	 bit
	declare @parentDirExists bit
	declare @fullNamewithPath varchar(250)

	set nocount on 

	set @fullNamewithPath = @pathToObject+'\'+ @oldName 	

	set @winCmd = 'rename ' + @pathToObject+'\'+@oldName + ' ' + @newName

	print @winCmd
	exec master..xp_cmdShell @winCmd

	--drop table #temp
	set nocount off
   
end
GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_spfx]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_spfx    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_spfx]
(       
 @p_file_id      char(8),
 @p_proc_name    varchar(30),
 @p_notes        varchar(255),
 @p_tfam_gen_seq int  = null,
 @p_udak_flg char(1)  = "N"
)
AS
EXECUTE DBSctlg.dbo.psp_upd_spfx @p_file_id, @p_proc_name, @p_notes, @p_tfam_gen_seq, @p_udak_flg



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_spfx_seq]    Script Date: 01/05/2011 18:05:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_spfx_seq    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_spfx_seq]
( 
 @p_proc_name varchar(30),
 @p_tfam_gen_seq smallint
)
AS
EXECUTE DBSctlg.dbo.psp_upd_spfx_seq @p_proc_name, @p_tfam_gen_seq



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_sptx]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_sptx    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_sptx]
(
 @p_file_id      char(8),
 @p_tbl_id       char(4)
)
AS
EXECUTE DBSctlg.dbo.psp_upd_sptx @p_file_id, @p_tbl_id



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_sptx2]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_sptx2    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_sptx2]
(
 @p_file_id      char(8),
 @p_tbl_name     char(30)
)
AS
EXECUTE DBSctlg.dbo.psp_upd_sptx2 @p_file_id, @p_tbl_name



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_trfx]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_trfx    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_trfx]
(       
 @p_file_id              char(8),
 @p_triggering_tbl       char(4),
 @p_trigger_name         varchar(30),
 @p_notes                varchar(255),
 @p_udak_flg  char(1)  = "N"
)
AS
EXECUTE  DBSctlg.dbo.psp_upd_trfx @p_file_id, @p_triggering_tbl, @p_trigger_name, @p_notes, @p_udak_flg



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_trtx]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_trtx    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_trtx]
(       
 @p_file_id      char(8),
 @p_tbl_id       char(4)
)
AS
EXECUTE DBSctlg.dbo.psp_upd_trtx @p_file_id, @p_tbl_id



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_trtx2]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_trtx2    Script Date: 19/09/2008 15:20:29 ******/

CREATE procedure [dbo].[sp_dbs_upd_trtx2]
(       
 @p_file_id      char(8),
 @p_tbl_name     char(30)
)
AS
EXECUTE DBSctlg.dbo.psp_upd_trtx2 @p_file_id, @p_tbl_name



GO

/****** Object:  StoredProcedure [dbo].[sp_dbs_upd_vwtx]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.sp_dbs_upd_vwtx    Script Date: 19/09/2008 15:20:30 ******/

CREATE procedure [dbo].[sp_dbs_upd_vwtx]
(
 @p_view_id      char(4),
 @p_tbl_id       char(4)
)
AS
EXECUTE DBSctlg.dbo.psp_upd_vwtx @p_view_id, @p_tbl_id



GO

/****** Object:  StoredProcedure [dbo].[teste_jm_1]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.teste_jm_1    Script Date: 19/09/2008 15:20:30 ******/
CREATE proc [dbo].[teste_jm_1] 
as

select 	cd_cia_aerea
	,no_cia_aerea
	,0 		tot_fis_dom
	,0 tot_ele_dom
	,0 sub_tot_dom
	,0 tot_fis_int
	,0 tot_ele_int
	,0 sub_tot_int
	,0 sub_tot_pag
	,0 tot_fis_ise
	,0 sub_tot_con
	,0 sub_tot_otr
	,0 sub_tot_nao_pag
	,0 tot_geral
	,0 valor_reais
from GEACutcx..cor_cia_aerea_u 



GO

/****** Object:  StoredProcedure [dbo].[usp_buscar_selo_alterar]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_buscar_selo_alterar    Script Date: 19/09/2008 15:20:30 ******/

CREATE PROCEDURE [dbo].[usp_buscar_selo_alterar] 
( 	 @p_nro_selo_ini		CHAR(10)
	,@p_nro_selo_fin		CHAR(10)
)
AS

SELECT nro_selo, selo_status
FROM pax_selo_u (NOLOCK INDEX = P_pax_selo_u)
WHERE nro_selo BETWEEN  @p_nro_selo_ini AND @p_nro_selo_fin


GO

/****** Object:  StoredProcedure [dbo].[usp_del_up1a]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up1a    Script Date: 19/09/2008 15:20:30 ******/

 
CREATE PROCEDURE [dbo].[usp_del_up1a] 
               ( @p_cd_cia_aerea    char(3), 
                 @p_dt_arquivo      datetime, 
                 @p_arquivo         char(255), 
                 @p_old_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_conf_baixa_selo_u 
   WHERE cd_cia_aerea    = @p_cd_cia_aerea 
     AND dt_arquivo      = @p_dt_arquivo 
     AND arquivo         = @p_arquivo 
     AND chgstamp        = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_conf_baixa_selo_u 
                   WHERE cd_cia_aerea    = @p_cd_cia_aerea 
                     AND dt_arquivo      = @p_dt_arquivo 
                     AND arquivo         = @p_arquivo ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_up1a_com]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up1a_com    Script Date: 19/09/2008 15:20:30 ******/

 
CREATE PROCEDURE [dbo].[usp_del_up1a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_arquivo   datetime,  
                 @p_arquivo      char(255),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_conf_baixa_selo__comnt_u 
   WHERE cd_cia_aerea = @p_cd_cia_aerea 
     AND dt_arquivo   = @p_dt_arquivo 
     AND arquivo      = @p_arquivo 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_conf_baixa_selo__comnt_u 
                   WHERE cd_cia_aerea = @p_cd_cia_aerea 
                     AND dt_arquivo   = @p_dt_arquivo 
                     AND arquivo      = @p_arquivo 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_up2a]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up2a    Script Date: 19/09/2008 15:20:30 ******/



CREATE PROCEDURE [dbo].[usp_del_up2a] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_cd_cia_aerea    char(3), 
                 @p_old_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_ini_ope_selo_elet_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND chgstamp        = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_ini_ope_selo_elet_u 
                   WHERE cd_aerop        = @p_cd_aerop 
                     AND cd_terminal     = @p_cd_terminal 
                     AND cd_cia_aerea    = @p_cd_cia_aerea ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_up2a_com]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up2a_com    Script Date: 19/09/2008 15:20:30 ******/



CREATE PROCEDURE [dbo].[usp_del_up2a_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_ini_ope_selo_ele_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_ini_ope_selo_ele_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_up3a]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up3a    Script Date: 19/09/2008 15:20:31 ******/

 
CREATE PROCEDURE [dbo].[usp_del_up3a] 
               ( @p_serial       char(9), 
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_coletor_u 
   WHERE serial       = @p_serial 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_coletor_u 
                   WHERE serial       = @p_serial ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_up3a_com]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up3a_com    Script Date: 19/09/2008 15:20:31 ******/

 
CREATE PROCEDURE [dbo].[usp_del_up3a_com] 
               ( @p_serial       char(9),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_coletor_u_comnt_u 
   WHERE serial       = @p_serial 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_coletor_u_comnt_u 
                   WHERE serial       = @p_serial 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_up6a]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up6a    Script Date: 19/09/2008 15:20:31 ******/



CREATE PROCEDURE [dbo].[usp_del_up6a] 
               ( @p_tp_unid             char(1), 
                 @p_cd_aerop            char(4), 
                 @p_cd_terminal         char(10), 
                 @p_tp_unid_destino     char(1), 
                 @p_cd_aerop_destino    char(4), 
                 @p_cd_terminal_destino char(10), 
                 @p_dt_devolucao        datetime, 
                 @p_nro_selo_inicial    char(10), 
                 @p_nro_selo_final      char(10), 
                 @p_old_chgstamp        smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_remesa_dev_u 
   WHERE tp_unid             = @p_tp_unid 
     AND cd_aerop            = @p_cd_aerop 
     AND cd_terminal         = @p_cd_terminal 
     AND tp_unid_destino     = @p_tp_unid_destino 
     AND cd_aerop_destino    = @p_cd_aerop_destino 
     AND cd_terminal_destino = @p_cd_terminal_destino 
     AND dt_devolucao        = @p_dt_devolucao 
     AND nro_selo_inicial    = @p_nro_selo_inicial 
     AND nro_selo_final      = @p_nro_selo_final 
     AND chgstamp            = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_remesa_dev_u 
                   WHERE tp_unid             = @p_tp_unid 
                     AND cd_aerop            = @p_cd_aerop 
                     AND cd_terminal         = @p_cd_terminal 
                     AND tp_unid_destino     = @p_tp_unid_destino 
                     AND cd_aerop_destino    = @p_cd_aerop_destino 
                     AND cd_terminal_destino = @p_cd_terminal_destino 
                     AND dt_devolucao        = @p_dt_devolucao 
                     AND nro_selo_inicial    = @p_nro_selo_inicial 
                     AND nro_selo_final      = @p_nro_selo_final ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_up6a_com]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up6a_com    Script Date: 19/09/2008 15:20:31 ******/



CREATE PROCEDURE [dbo].[usp_del_up6a_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_devolucao        datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1),  
                 @p_old_chgstamp        smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_remesa_dev_u_comnt_u 
   WHERE tp_unid             = @p_tp_unid 
     AND cd_aerop            = @p_cd_aerop 
     AND cd_terminal         = @p_cd_terminal 
     AND tp_unid_destino     = @p_tp_unid_destino 
     AND cd_aerop_destino    = @p_cd_aerop_destino 
     AND cd_terminal_destino = @p_cd_terminal_destino 
     AND dt_devolucao        = @p_dt_devolucao 
     AND nro_selo_inicial    = @p_nro_selo_inicial 
     AND nro_selo_final      = @p_nro_selo_final 
     AND type_cd             = @p_type_cd 
     AND chgstamp            = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_remesa_dev_u_comnt_u 
                   WHERE tp_unid             = @p_tp_unid 
                     AND cd_aerop            = @p_cd_aerop 
                     AND cd_terminal         = @p_cd_terminal 
                     AND tp_unid_destino     = @p_tp_unid_destino 
                     AND cd_aerop_destino    = @p_cd_aerop_destino 
                     AND cd_terminal_destino = @p_cd_terminal_destino 
                     AND dt_devolucao        = @p_dt_devolucao 
                     AND nro_selo_inicial    = @p_nro_selo_inicial 
                     AND nro_selo_final      = @p_nro_selo_final 
                     AND type_cd             = @p_type_cd 
                     AND seq_nbr             = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_up7a]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up7a    Script Date: 19/09/2008 15:20:31 ******/



CREATE PROCEDURE [dbo].[usp_del_up7a] 
               ( @p_cd_cia_aerea     char(3), 
                 @p_dt_inicio        datetime, 
                 @p_dt_final         datetime, 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_cred_cia_u 
   WHERE cd_cia_aerea     = @p_cd_cia_aerea 
     AND dt_inicio        = @p_dt_inicio 
     AND dt_final         = @p_dt_final 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_cred_cia_u 
                   WHERE cd_cia_aerea     = @p_cd_cia_aerea 
                     AND dt_inicio        = @p_dt_inicio 
                     AND dt_final         = @p_dt_final ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_up7a_com]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_up7a_com    Script Date: 19/09/2008 15:20:31 ******/

 
CREATE PROCEDURE [dbo].[usp_del_up7a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_inicio    datetime,  
                 @p_dt_final     datetime,  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_cred_cia_u_comnt_u 
   WHERE cd_cia_aerea = @p_cd_cia_aerea 
     AND dt_inicio    = @p_dt_inicio 
     AND dt_final     = @p_dt_final 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_cred_cia_u_comnt_u 
                   WHERE cd_cia_aerea = @p_cd_cia_aerea 
                     AND dt_inicio    = @p_dt_inicio 
                     AND dt_final     = @p_dt_final 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_upaa_com]    Script Date: 01/05/2011 18:05:22 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upaa_com    Script Date: 19/09/2008 15:20:31 ******/


CREATE PROCEDURE [dbo].[usp_del_upaa_com] 
               ( @p_nro_selo     char(10),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_selo_u_comnt_u 
   WHERE nro_selo     = @p_nro_selo 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_u_comnt_u 
                   WHERE nro_selo     = @p_nro_selo 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upca_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upca_com    Script Date: 19/09/2008 15:20:31 ******/


CREATE PROCEDURE [dbo].[usp_del_upca_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_remessa          datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1),  
                 @p_old_chgstamp        smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_lote_selo_u_comnt_u 
   WHERE tp_unid             = @p_tp_unid 
     AND cd_aerop            = @p_cd_aerop 
     AND cd_terminal         = @p_cd_terminal 
     AND tp_unid_destino     = @p_tp_unid_destino 
     AND cd_aerop_destino    = @p_cd_aerop_destino 
     AND cd_terminal_destino = @p_cd_terminal_destino 
     AND dt_remessa          = @p_dt_remessa 
     AND nro_selo_inicial    = @p_nro_selo_inicial 
     AND nro_selo_final      = @p_nro_selo_final 
     AND type_cd             = @p_type_cd 
     AND chgstamp            = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_lote_selo_u_comnt_u 
                   WHERE tp_unid             = @p_tp_unid 
                     AND cd_aerop            = @p_cd_aerop 
                     AND cd_terminal         = @p_cd_terminal 
                     AND tp_unid_destino     = @p_tp_unid_destino 
                     AND cd_aerop_destino    = @p_cd_aerop_destino 
                     AND cd_terminal_destino = @p_cd_terminal_destino 
                     AND dt_remessa          = @p_dt_remessa 
                     AND nro_selo_inicial    = @p_nro_selo_inicial 
                     AND nro_selo_final      = @p_nro_selo_final 
                     AND type_cd             = @p_type_cd 
                     AND seq_nbr             = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upea]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_del_upea    Script Date: 19/09/2008 15:20:32 ******/




CREATE PROCEDURE [dbo].[usp_del_upea] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_dt_mov          datetime, 
                 @p_hh_mm           	char(6),
                 @p_tp_selo           	char(1),
                 @p_old_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_baixa_selo_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
     AND dt_mov          = @p_dt_mov 
     AND hh_mm           = @p_hh_mm 
     AND tp_selo  = @p_tp_selo
     AND chgstamp        = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_baixa_selo_u 
                   WHERE cd_aerop        = @p_cd_aerop 
                     AND cd_terminal     = @p_cd_terminal 
                     AND dt_mov          = @p_dt_mov 
                     AND hh_mm           = @p_hh_mm 
	       AND tp_selo  	= @p_tp_selo )
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upea_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_del_upea_com    Script Date: 19/09/2008 15:20:32 ******/




CREATE PROCEDURE [dbo].[usp_del_upea_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_mov       datetime,  
                 @p_hh_mm        char(6),  
                 @p_tp_selo        char(1),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_baixa_selo_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND dt_mov       = @p_dt_mov 
     AND hh_mm        = @p_hh_mm 
     AND tp_selo = @p_tp_selo
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_baixa_selo_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND dt_mov       = @p_dt_mov 
                     AND hh_mm        = @p_hh_mm 
     	       AND tp_selo = @p_tp_selo
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upga]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upga    Script Date: 19/09/2008 15:20:32 ******/



CREATE  PROCEDURE [dbo].[usp_del_upga] 
               ( @p_cd_aerop         char(4), 
				@p_cd_terminal      char(10), 
				@p_dt_entrega       datetime, 
				@p_hh_entrega       char(6), 
				@p_cd_cia_aerea     char(3), 
				@p_nro_rste         char(6), 
				@p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_entrega_selo_ctrl_u 
   WHERE cd_aerop       = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND dt_entrega       = @p_dt_entrega 
	 AND hh_entrega       = @p_hh_entrega
     AND nro_rste         = @p_nro_rste 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_entrega_selo_ctrl_u 
                   WHERE cd_aerop         = @p_cd_aerop 
					AND cd_terminal       = @p_cd_terminal 
					AND cd_cia_aerea     = @p_cd_cia_aerea 
					AND dt_entrega        = @p_dt_entrega 
					AND hh_entrega       = @p_hh_entrega
					AND nro_rste          = @p_nro_rste ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_del_upga_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upga_com    Script Date: 19/09/2008 15:20:32 ******/



CREATE PROCEDURE [dbo].[usp_del_upga_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_hh_entrega   char(6),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rste     char(6),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_entrega_selo_ctr_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND dt_entrega   = @p_dt_entrega 
     AND hh_entrega   = @p_hh_entrega 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND nro_rste     = @p_nro_rste 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_entrega_selo_ctr_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND dt_entrega   = @p_dt_entrega 
                     AND hh_entrega   = @p_hh_entrega 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND nro_rste     = @p_nro_rste 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_upha]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upha    Script Date: 19/09/2008 15:20:32 ******/


CREATE PROCEDURE [dbo].[usp_del_upha] 
               ( @p_cd_aerop_destino    char(4), 
                 @p_cd_terminal_destino char(10), 
                 @p_dt_mov              datetime, 
                 @p_selo_status         char(1), 
                 @p_nro_selo            char(10), 
                 @p_old_chgstamp        smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_discrep_selo_u 
   WHERE cd_aerop_destino    = @p_cd_aerop_destino 
     AND cd_terminal_destino = @p_cd_terminal_destino 
     AND dt_mov              = @p_dt_mov 
     AND selo_status         = @p_selo_status 
     AND nro_selo            = @p_nro_selo 
     AND chgstamp            = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_discrep_selo_u 
                   WHERE cd_aerop_destino    = @p_cd_aerop_destino 
                     AND cd_terminal_destino = @p_cd_terminal_destino 
                     AND dt_mov              = @p_dt_mov 
                     AND selo_status         = @p_selo_status 
                     AND nro_selo            = @p_nro_selo ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upha_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upha_com    Script Date: 19/09/2008 15:20:32 ******/


CREATE PROCEDURE [dbo].[usp_del_upha_com] 
               ( @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_mov              datetime,  
                 @p_selo_status         char(1),  
                 @p_nro_selo            char(10),  
                 @p_type_cd             char(1),  
                 @p_old_chgstamp        smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_discrep_selo_u_comnt_u 
   WHERE cd_aerop_destino    = @p_cd_aerop_destino 
     AND cd_terminal_destino = @p_cd_terminal_destino 
     AND dt_mov              = @p_dt_mov 
     AND selo_status         = @p_selo_status 
     AND nro_selo            = @p_nro_selo 
     AND type_cd             = @p_type_cd 
     AND chgstamp            = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_discrep_selo_u_comnt_u 
                   WHERE cd_aerop_destino    = @p_cd_aerop_destino 
                     AND cd_terminal_destino = @p_cd_terminal_destino 
                     AND dt_mov              = @p_dt_mov 
                     AND selo_status         = @p_selo_status 
                     AND nro_selo            = @p_nro_selo 
                     AND type_cd             = @p_type_cd 
                     AND seq_nbr             = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upia]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upia    Script Date: 19/09/2008 15:20:32 ******/


CREATE PROCEDURE [dbo].[usp_del_upia] 
               ( @p_cd_aerop           char(4), 
                 @p_cd_terminal        char(10), 
                 @p_cd_cia_aerea       char(3), 
                 @p_dt_voo             datetime, 
                 @p_hr_voo             char(4), 
                 @p_nro_voo            char(5), 
                 @p_old_chgstamp       smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_desemb_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal        = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND nro_voo            = @p_nro_voo 
     AND dt_voo             = @p_dt_voo 
     AND hr_voo             = @p_hr_voo 
     AND chgstamp           = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_desemb_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal     = @p_cd_terminal 
                     AND cd_cia_aerea  = @p_cd_cia_aerea 
                     AND nro_voo         = @p_nro_voo 
                     AND dt_voo             = @p_dt_voo 
                     AND hr_voo             = @p_hr_voo ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upia_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upia_com    Script Date: 19/09/2008 15:20:32 ******/


CREATE PROCEDURE [dbo].[usp_del_upia_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_desemb_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND dt_voo       = @p_dt_voo 
     AND hr_voo       = @p_hr_voo 
     AND nro_voo      = @p_nro_voo 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_desemb_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND dt_voo       = @p_dt_voo 
                     AND hr_voo       = @p_hr_voo 
                     AND nro_voo      = @p_nro_voo 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upj3_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upj3_com    Script Date: 19/09/2008 15:20:33 ******/


CREATE PROCEDURE [dbo].[usp_del_upj3_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_embarque  datetime,  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_emb_dia_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND tp_natureza  = @p_tp_natureza 
     AND periodo_de   = @p_periodo_de 
     AND periodo_ate  = @p_periodo_ate 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND dt_embarque  = @p_dt_embarque 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_dia_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND tp_natureza  = @p_tp_natureza 
                     AND periodo_de   = @p_periodo_de 
                     AND periodo_ate  = @p_periodo_ate 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND dt_embarque  = @p_dt_embarque 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upj4_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upj4_com    Script Date: 19/09/2008 15:20:33 ******/


CREATE PROCEDURE [dbo].[usp_del_upj4_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_dt_embarque  datetime,  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_emb_dia_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND tp_natureza  = @p_tp_natureza 
     AND periodo_de   = @p_periodo_de 
     AND periodo_ate  = @p_periodo_ate 
     AND dt_embarque  = @p_dt_embarque 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_dia_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND tp_natureza  = @p_tp_natureza 
                     AND periodo_de   = @p_periodo_de 
                     AND periodo_ate  = @p_periodo_ate 
                     AND dt_embarque  = @p_dt_embarque 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upja]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upja    Script Date: 19/09/2008 15:20:33 ******/


CREATE PROCEDURE [dbo].[usp_del_upja] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_cd_cia_aerea    char(3), 
                 @p_tp_natureza     char(1), 
                 @p_periodo_de      datetime, 
                 @p_periodo_ate     datetime, 
                 @p_dt_embarque     datetime, 
                 @p_old_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_emb_dia_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND tp_natureza     = @p_tp_natureza 
     AND periodo_de      = @p_periodo_de 
     AND periodo_ate     = @p_periodo_ate 
     AND dt_embarque     = @p_dt_embarque 
     AND chgstamp        = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_dia_u 
                   WHERE cd_aerop        = @p_cd_aerop 
                     AND cd_terminal     = @p_cd_terminal 
                     AND cd_cia_aerea    = @p_cd_cia_aerea 
                     AND tp_natureza     = @p_tp_natureza 
                     AND periodo_de      = @p_periodo_de 
                     AND periodo_ate     = @p_periodo_ate 
                     AND dt_embarque     = @p_dt_embarque ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upja_com]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upja_com    Script Date: 19/09/2008 15:20:33 ******/


CREATE PROCEDURE [dbo].[usp_del_upja_com] 
               ( @p_cd_aerop     char(4),  
             @p_cd_terminal  char(10),
             @p_cd_cia_aerea char(3),
             @p_tp_natureza  char(1),
             @p_periodo_de   datetime,
             @p_periodo_ate  datetime,
             @p_dt_embarque  datetime, 
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_emb_dia_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
   and cd_terminal  = @p_cd_terminal 
          and cd_cia_aerea = @p_cd_cia_aerea
          and tp_natureza  = @p_tp_natureza  
          and periodo_de   = @p_periodo_de  
          and periodo_ate  = @p_periodo_ate
          and dt_embarque  = @p_dt_embarque 
    AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_dia_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
   and cd_terminal  = @p_cd_terminal 
          and cd_cia_aerea = @p_cd_cia_aerea
          and tp_natureza  = @p_tp_natureza  
          and periodo_de   = @p_periodo_de  
          and periodo_ate  = @p_periodo_ate
          and dt_embarque  = @p_dt_embarque 
                    AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upka]    Script Date: 01/05/2011 18:05:23 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upka    Script Date: 19/09/2008 15:20:33 ******/


CREATE PROCEDURE [dbo].[usp_del_upka] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_dt_entrega      datetime, 
                 @p_cd_cia_aerea    char(3), 
                 @p_nro_rdev        char(6), 
                 @p_old_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_dev_selo_ctrl_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
     AND dt_entrega      = @p_dt_entrega 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND nro_rdev        = @p_nro_rdev 
     AND chgstamp        = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_dev_selo_ctrl_u 
                   WHERE cd_aerop        = @p_cd_aerop 
                     AND cd_terminal     = @p_cd_terminal 
                     AND dt_entrega      = @p_dt_entrega 
                     AND cd_cia_aerea    = @p_cd_cia_aerea 
                     AND nro_rdev        = @p_nro_rdev ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upka_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upka_com    Script Date: 19/09/2008 15:20:33 ******/


CREATE PROCEDURE [dbo].[usp_del_upka_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rdev     char(6),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_dev_selo_ctrl_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND dt_entrega   = @p_dt_entrega 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND nro_rdev     = @p_nro_rdev 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_dev_selo_ctrl_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND dt_entrega   = @p_dt_entrega 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND nro_rdev     = @p_nro_rdev 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upla]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upla    Script Date: 19/09/2008 15:20:33 ******/





CREATE   PROCEDURE [dbo].[usp_del_upla] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(14), 
                 @p_old_chgstamp           smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_selo_electronico_u 
   WHERE cd_aerop               	= @p_cd_aerop 
     AND cd_terminal            	= @p_cd_terminal 
     AND CONVERT(VARCHAR,dt_mov,112)= @p_dt_mov 
     AND nro_selo_electronico   	= @p_nro_selo_electronico 
     AND chgstamp               	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_electronico_u 
                   WHERE cd_aerop               	= @p_cd_aerop 
                     AND cd_terminal            	= @p_cd_terminal 
                     AND CONVERT(VARCHAR,dt_mov,112)= @p_dt_mov 
                     AND nro_selo_electronico   	= @p_nro_selo_electronico ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_del_upla_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upla_com    Script Date: 19/09/2008 15:20:34 ******/




CREATE  PROCEDURE [dbo].[usp_del_upla_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_type_cd              char(1),  
                 @p_old_chgstamp         smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_selo_electronico_comnt_u 
   WHERE cd_aerop             		= @p_cd_aerop 
     AND cd_terminal          		= @p_cd_terminal 
     AND CONVERT(VARCHAR,dt_mov,112)= @p_dt_mov 
     AND nro_selo_electronico 		= @p_nro_selo_electronico 
     AND type_cd              		= @p_type_cd 
     AND chgstamp             		= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_electronico_comnt_u 
                   WHERE cd_aerop             		= @p_cd_aerop 
                     AND cd_terminal          		= @p_cd_terminal 
                     AND CONVERT(VARCHAR,dt_mov,112)= @p_dt_mov 
                     AND nro_selo_electronico 		= @p_nro_selo_electronico 
                     AND type_cd              		= @p_type_cd 
                     AND seq_nbr              		= 1 ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upma]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upma    Script Date: 19/09/2008 15:20:34 ******/


CREATE PROCEDURE [dbo].[usp_del_upma] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_cd_cia_aerea     char(3), 
                 @p_dt_voo           datetime, 
                 @p_hr_voo           char(4), 
                 @p_nro_voo          char(5), 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_emb_voo_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND dt_voo           = @p_dt_voo 
     AND hr_voo           = @p_hr_voo 
     AND nro_voo          = @p_nro_voo 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_voo_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND cd_terminal       = @p_cd_terminal 
                     AND cd_cia_aerea     = @p_cd_cia_aerea 
                     AND dt_voo            = @p_dt_voo 
                     AND hr_voo            = @p_hr_voo 
                     AND nro_voo           = @p_nro_voo ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upma_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upma_com    Script Date: 19/09/2008 15:20:34 ******/


CREATE PROCEDURE [dbo].[usp_del_upma_com] 
               ( @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_dt_voo        datetime,  
                 @p_hr_voo        char(4),  
                 @p_nro_voo       char(5),  
                 @p_type_cd       char(1),  
                 @p_old_chgstamp  smallint ) 
AS 
  DECLARE  @ret  int 
  DECLARE  @result  int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
--  BEGIN TRANSACTION 
  DELETE rpax_emb_voo_u_comnt_u 
   WHERE cd_aerop      = @p_cd_aerop 
     AND cd_terminal   = @p_cd_terminal 
     AND cd_cia_aerea  = @p_cd_cia_aerea 
     AND dt_voo        = @p_dt_voo 
     AND hr_voo        = @p_hr_voo 
     AND nro_voo       = @p_nro_voo 
     AND type_cd       = @p_type_cd 
     AND chgstamp      = @p_old_chgstamp 
  SELECT @result = @@rowcount
/*
  IF @result > 0 AND @p_nro_voo = '99999'
  BEGIN
        ROLLBACK TRANSACTION
        RAISERROR 20001 'Nao se pode modificar este comentario.' 
        RETURN 
  END
  ELSE
      COMMIT TRANSACTION
*/
  IF @result = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_voo_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal   = @p_cd_terminal 
                     AND cd_cia_aerea  = @p_cd_cia_aerea 
                     AND dt_voo        = @p_dt_voo 
                     AND hr_voo        = @p_hr_voo 
                     AND nro_voo       = @p_nro_voo 
                     AND type_cd       = @p_type_cd 
                     AND seq_nbr       = 1 ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upn1]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upn1    Script Date: 19/09/2008 15:20:34 ******/

 
CREATE PROCEDURE [dbo].[usp_del_upn1] 
               ( @p_cd_aerop         char(4), 
                 @p_dt_mov_ini       datetime, 
                 @p_dt_mov_fim       datetime, 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_val_quinz_hdr_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND dt_mov_ini       = @p_dt_mov_ini 
     AND dt_mov_fim       = @p_dt_mov_fim 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_val_quinz_hdr_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND dt_mov_ini       = @p_dt_mov_ini 
                     AND dt_mov_fim       = @p_dt_mov_fim ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_upn1_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upn1_com    Script Date: 19/09/2008 15:20:34 ******/

 
CREATE PROCEDURE [dbo].[usp_del_upn1_com] 
               ( @p_cd_aerop     char(4),  
                 @p_dt_mov_ini   datetime,  
                 @p_dt_mov_fim   datetime,  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_val_quinz_hdr_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND dt_mov_ini   = @p_dt_mov_ini 
     AND dt_mov_fim   = @p_dt_mov_fim 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_val_quinz_hdr_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND dt_mov_ini   = @p_dt_mov_ini 
                     AND dt_mov_fim   = @p_dt_mov_fim 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_upna]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upna    Script Date: 19/09/2008 15:20:34 ******/


CREATE PROCEDURE [dbo].[usp_del_upna] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_voo          char(5), 
                 @p_dt_voo           datetime, 
                 @p_hr_voo           char(8), 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_itens_u 
   WHERE cd_aerop       = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_voo          = @p_nro_voo 
     AND dt_voo           = @p_dt_voo 
     AND hr_voo           = @p_hr_voo 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_itens_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND cd_cia_aerea  = @p_cd_cia_aerea 
                     AND nro_voo          = @p_nro_voo 
                     AND dt_voo           = @p_dt_voo 
                     AND hr_voo           = @p_hr_voo ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upoa]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upoa    Script Date: 19/09/2008 15:20:34 ******/




CREATE  PROCEDURE [dbo].[usp_del_upoa] 
               ( @p_cd_aerop          	char(4), 
                 @p_cd_terminal       	char(10), 
                 @p_dt_entrega        	datetime,
				 @p_hh_entrega       	char(6), 
                 @p_cd_cia_aerea      	char(3), 
                 @p_nro_rste          	char(6), 
                 @p_nro_selo_inicial  	char(10), 
                 @p_nro_selo_final    	char(10),
                 @p_chgstamp_old  		smallint)
AS 
DECLARE  @ret    int 
DECLARE  @row    int 
EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
--  BEGIN TRANSACTION 
  DELETE pax_entrega_selo_line_u 
   WHERE cd_aerop       	= @p_cd_aerop 
	AND cd_terminal       	= @p_cd_terminal 
	AND cd_cia_aerea     	= @p_cd_cia_aerea 
	AND dt_entrega        	= @p_dt_entrega 
	AND hh_entrega       	= @p_hh_entrega 
	AND nro_rste          	= @p_nro_rste 
	AND nro_selo_inicial  	= @p_nro_selo_inicial 
	AND nro_selo_final    	= @p_nro_selo_final 
	AND chgstamp    = @p_chgstamp_old
  SELECT @row = @@rowcount
 
  IF @row = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
				FROM pax_entrega_selo_line_u 
				WHERE cd_aerop          	= @p_cd_aerop 
					AND cd_terminal       	= @p_cd_terminal 
					AND cd_cia_aerea      	= @p_cd_cia_aerea 
					AND dt_entrega        	= @p_dt_entrega 
					AND hh_entrega       	= @p_hh_entrega
					AND nro_rste           	= @p_nro_rste 
					AND nro_selo_inicial  	= @p_nro_selo_inicial 
					AND nro_selo_final    	= @p_nro_selo_final ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
/*
  ELSE
  BEGIN
        UPDATE  pax_selo_u
            SET         tp_fat                  = ' '
               ,cd_cia_aerea            = ' '
  ,selo_status             = '0'
  ,item_fat              = ' '
  ,nro_rste                = ' '
                ,date_changed            = GETDATE()
          ,user_id_changed         = suser_sname()
  ,chgstamp   = chgstamp + 1
            FROM  pax_selo_u   
            WHERE
  nro_selo Between @p_nro_selo_inicial and @p_nro_selo_final
        IF @@rowcount = 0 
        BEGIN
            ROLLBACK TRANSACTION
            RAISERROR 25001 'Nao foi possível atualizar o status dos selos'
            RETURN
        END
        ELSE
        BEGIN
            COMMIT TRANSACTION
        END 
  END 
*/





GO

/****** Object:  StoredProcedure [dbo].[usp_del_upoa_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upoa_com    Script Date: 19/09/2008 15:20:35 ******/



CREATE PROCEDURE [dbo].[usp_del_upoa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_hh_entrega       char(6),  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1),  
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_entrega_selo_lin_comnt_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND dt_entrega       = @p_dt_entrega 
     AND hh_entrega       = @p_hh_entrega 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rste         = @p_nro_rste 
     AND nro_selo_inicial = @p_nro_selo_inicial 
     AND nro_selo_final   = @p_nro_selo_final 
     AND type_cd          = @p_type_cd 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_entrega_selo_lin_comnt_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND dt_entrega       = @p_dt_entrega 
                     AND hh_entrega       = @p_hh_entrega 
                     AND cd_cia_aerea     = @p_cd_cia_aerea 
                     AND nro_rste         = @p_nro_rste 
                     AND nro_selo_inicial = @p_nro_selo_inicial 
                     AND nro_selo_final   = @p_nro_selo_final 
                     AND type_cd          = @p_type_cd 
                     AND seq_nbr          = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_uppa]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uppa    Script Date: 19/09/2008 15:20:35 ******/


CREATE PROCEDURE [dbo].[usp_del_uppa] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_dt_mov           datetime, 
                 @p_hh_mm            char(6), 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_baixa_selecao_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND dt_mov           = @p_dt_mov 
     AND hh_mm            = @p_hh_mm 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_baixa_selecao_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND dt_mov           = @p_dt_mov 
                     AND hh_mm            = @p_hh_mm ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_uppa_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uppa_com    Script Date: 19/09/2008 15:20:35 ******/


CREATE PROCEDURE [dbo].[usp_del_uppa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_mov       datetime,  
                 @p_hh_mm        char(6),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_baixa_selecao_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND dt_mov       = @p_dt_mov 
     AND hh_mm        = @p_hh_mm 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_baixa_selecao_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND dt_mov       = @p_dt_mov 
                     AND hh_mm        = @p_hh_mm 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_uppb_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uppb_com    Script Date: 19/09/2008 15:20:35 ******/


CREATE PROCEDURE [dbo].[usp_del_uppb_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_mov       datetime,  
                 @p_hh_mm        char(6),  
                 @p_selo_status  char(1),  
                 @p_nro_selo     char(10),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_selos_baixa_sele_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND dt_mov       = @p_dt_mov 
     AND hh_mm        = @p_hh_mm 
     AND selo_status  = @p_selo_status 
     AND nro_selo     = @p_nro_selo 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selos_baixa_sele_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND dt_mov       = @p_dt_mov 
                     AND hh_mm        = @p_hh_mm 
                     AND selo_status  = @p_selo_status 
                     AND nro_selo     = @p_nro_selo 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upqa_com]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upqa_com    Script Date: 19/09/2008 15:20:35 ******/


CREATE PROCEDURE [dbo].[usp_del_upqa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_ano_rste     char(4),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_param_rste_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND ano_rste     = @p_ano_rste 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_param_rste_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND ano_rste     = @p_ano_rste 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upra]    Script Date: 01/05/2011 18:05:24 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upra    Script Date: 19/09/2008 15:20:35 ******/



CREATE PROCEDURE [dbo].[usp_del_upra] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(10), 
                 @p_hh_mov                 char(6), 
                 @p_old_chgstamp           smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_selo_elec_dup_u 
   WHERE cd_aerop               = @p_cd_aerop 
     AND cd_terminal            = @p_cd_terminal 
     AND dt_mov                 = @p_dt_mov 
     AND nro_selo_electronico   = @p_nro_selo_electronico 
     AND hh_mov                 = @p_hh_mov 
     AND chgstamp               = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_elec_dup_u 
                   WHERE cd_aerop               = @p_cd_aerop 
                     AND cd_terminal            = @p_cd_terminal 
                     AND dt_mov                 = @p_dt_mov 
                     AND nro_selo_electronico   = @p_nro_selo_electronico 
                     AND hh_mov                 = @p_hh_mov ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_upra_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upra_com    Script Date: 19/09/2008 15:20:36 ******/



CREATE PROCEDURE [dbo].[usp_del_upra_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_hh_mov               char(6),  
                 @p_type_cd              char(1),  
                 @p_old_chgstamp         smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_selo_elec_dup_u_comnt_u 
   WHERE cd_aerop             = @p_cd_aerop 
     AND cd_terminal          = @p_cd_terminal 
     AND dt_mov               = @p_dt_mov 
     AND nro_selo_electronico = @p_nro_selo_electronico 
     AND hh_mov               = @p_hh_mov 
     AND type_cd              = @p_type_cd 
     AND chgstamp             = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_elec_dup_u_comnt_u 
                   WHERE cd_aerop             = @p_cd_aerop 
                     AND cd_terminal          = @p_cd_terminal 
                     AND dt_mov               = @p_dt_mov 
                     AND nro_selo_electronico = @p_nro_selo_electronico 
                     AND hh_mov               = @p_hh_mov 
                     AND type_cd              = @p_type_cd 
                     AND seq_nbr              = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_upsa]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upsa    Script Date: 19/09/2008 15:20:36 ******/


CREATE PROCEDURE [dbo].[usp_del_upsa] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_cd_cia_aerea           char(3), 
                 @p_nro_voo                char(5), 
                 @p_dt_voo                 datetime, 
                 @p_hr_voo                 char(4), 
                 @p_tp_rpax                char(1), 
                 @p_recv_doc_id            char(22), 
                 @p_old_chgstamp           smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_boleto_cancelado_u 
   WHERE cd_aerop               = @p_cd_aerop 
     AND cd_terminal            = @p_cd_terminal 
     AND cd_cia_aerea           = @p_cd_cia_aerea 
     AND nro_voo                = @p_nro_voo 
     AND dt_voo                 = @p_dt_voo 
     AND hr_voo                 = @p_hr_voo 
     AND tp_rpax                = @p_tp_rpax 
     AND recv_doc_id            = @p_recv_doc_id 
     AND chgstamp               = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_boleto_cancelado_u 
                   WHERE cd_aerop               = @p_cd_aerop 
                     AND cd_terminal            = @p_cd_terminal 
                     AND cd_cia_aerea           = @p_cd_cia_aerea 
                     AND nro_voo                = @p_nro_voo 
                     AND dt_voo                 = @p_dt_voo 
                     AND hr_voo                 = @p_hr_voo 
                     AND tp_rpax                = @p_tp_rpax 
                     AND recv_doc_id            = @p_recv_doc_id ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upsa_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upsa_com    Script Date: 19/09/2008 15:20:36 ******/


CREATE PROCEDURE [dbo].[usp_del_upsa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_tp_rpax      char(1),  
                 @p_recv_doc_id  char(22),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE rpax_boleto_cancelad_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND nro_voo      = @p_nro_voo 
     AND dt_voo       = @p_dt_voo 
     AND hr_voo       = @p_hr_voo 
     AND tp_rpax      = @p_tp_rpax 
     AND recv_doc_id  = @p_recv_doc_id 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_boleto_cancelad_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  = @p_cd_terminal 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND nro_voo      = @p_nro_voo 
                     AND dt_voo       = @p_dt_voo 
                     AND hr_voo       = @p_hr_voo 
                     AND tp_rpax      = @p_tp_rpax 
                     AND recv_doc_id  = @p_recv_doc_id 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upta]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upta    Script Date: 19/09/2008 15:20:36 ******/


CREATE PROCEDURE [dbo].[usp_del_upta] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_cd_cia_aerea           char(3), 
                 @p_nro_rste               char(6), 
                 @p_nro_selo_inicial       char(10), 
                 @p_nro_selo_final         char(10), 
                 @p_tp_fat                 char(1), 
                 @p_recv_doc_id            char(22), 
                 @p_old_chgstamp           smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE selo_boleto_cancelado_u 
   WHERE cd_aerop               = @p_cd_aerop 
     AND cd_terminal            = @p_cd_terminal 
     AND dt_mov                 = @p_dt_mov 
     AND cd_cia_aerea           = @p_cd_cia_aerea 
     AND nro_rste               = @p_nro_rste 
     AND nro_selo_inicial       = @p_nro_selo_inicial 
     AND nro_selo_final         = @p_nro_selo_final 
     AND tp_fat                 = @p_tp_fat 
     AND recv_doc_id            = @p_recv_doc_id 
     AND chgstamp               = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM selo_boleto_cancelado_u 
                   WHERE cd_aerop               = @p_cd_aerop 
                     AND cd_terminal            = @p_cd_terminal 
                     AND dt_mov                 = @p_dt_mov 
                     AND cd_cia_aerea           = @p_cd_cia_aerea 
                     AND nro_rste               = @p_nro_rste 
                     AND nro_selo_inicial       = @p_nro_selo_inicial 
                     AND nro_selo_final         = @p_nro_selo_final 
                     AND tp_fat                 = @p_tp_fat 
                     AND recv_doc_id            = @p_recv_doc_id ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upta_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upta_com    Script Date: 19/09/2008 15:20:36 ******/


CREATE PROCEDURE [dbo].[usp_del_upta_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_mov           datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_tp_fat           char(1),  
                 @p_recv_doc_id      char(22),  
                 @p_type_cd          char(1),  
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE selo_boleto_cancelad_comnt_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND dt_mov           = @p_dt_mov 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rste         = @p_nro_rste 
     AND nro_selo_inicial = @p_nro_selo_inicial 
     AND nro_selo_final   = @p_nro_selo_final 
     AND tp_fat           = @p_tp_fat 
     AND recv_doc_id      = @p_recv_doc_id 
     AND type_cd          = @p_type_cd 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM selo_boleto_cancelad_comnt_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND dt_mov           = @p_dt_mov 
                     AND cd_cia_aerea     = @p_cd_cia_aerea 
                     AND nro_rste         = @p_nro_rste 
                     AND nro_selo_inicial = @p_nro_selo_inicial 
                     AND nro_selo_final   = @p_nro_selo_final 
                     AND tp_fat           = @p_tp_fat 
                     AND recv_doc_id      = @p_recv_doc_id 
                     AND type_cd          = @p_type_cd 
                     AND seq_nbr          = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upwa]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upwa    Script Date: 19/09/2008 15:20:36 ******/


CREATE PROCEDURE [dbo].[usp_del_upwa] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_dt_entrega       datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_rdev         char(6), 
                 @p_nro_selo_inicial char(10), 
                 @p_nro_selo_final   char(10), 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_dev_selo_line_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND dt_entrega       = @p_dt_entrega 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rdev         = @p_nro_rdev 
     AND nro_selo_inicial = @p_nro_selo_inicial 
     AND nro_selo_final   = @p_nro_selo_final 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_dev_selo_line_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND dt_entrega       = @p_dt_entrega 
                     AND cd_cia_aerea     = @p_cd_cia_aerea 
                     AND nro_rdev         = @p_nro_rdev 
                     AND nro_selo_inicial = @p_nro_selo_inicial 
                     AND nro_selo_final   = @p_nro_selo_final ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upwa_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upwa_com    Script Date: 19/09/2008 15:20:36 ******/


CREATE PROCEDURE [dbo].[usp_del_upwa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rdev         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1),  
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_dev_selo_line_u_comnt_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND dt_entrega       = @p_dt_entrega 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rdev         = @p_nro_rdev 
     AND nro_selo_inicial = @p_nro_selo_inicial 
     AND nro_selo_final   = @p_nro_selo_final 
     AND type_cd          = @p_type_cd 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_dev_selo_line_u_comnt_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND dt_entrega       = @p_dt_entrega 
                     AND cd_cia_aerea     = @p_cd_cia_aerea 
                     AND nro_rdev         = @p_nro_rdev 
                     AND nro_selo_inicial = @p_nro_selo_inicial 
                     AND nro_selo_final   = @p_nro_selo_final 
                     AND type_cd          = @p_type_cd 
                     AND seq_nbr          = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_del_upz1_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_upz1_com    Script Date: 19/09/2008 15:20:37 ******/

 
CREATE PROCEDURE [dbo].[usp_del_upz1_com] 
               ( @p_cd_aerop     char(4),  
                 @p_dt_mov_ini   datetime,  
                 @p_dt_mov_fim   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_valida_quinzena__comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND dt_mov_ini   = @p_dt_mov_ini 
     AND dt_mov_fim   = @p_dt_mov_fim 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_valida_quinzena__comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND dt_mov_ini   = @p_dt_mov_ini 
                     AND dt_mov_fim   = @p_dt_mov_fim 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_uqaa]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uqaa    Script Date: 19/09/2008 15:20:37 ******/

 
CREATE PROCEDURE [dbo].[usp_del_uqaa] 
               ( @p_cd_aerop         char(4), 
                 @p_data_mov         datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_voo          char(5), 
                 @p_old_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_fiscal_head_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND data_mov         = @p_data_mov 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_voo          = @p_nro_voo 
     AND chgstamp         = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_fiscal_head_u 
                   WHERE cd_aerop         = @p_cd_aerop 
                     AND data_mov         = @p_data_mov 
                     AND cd_cia_aerea     = @p_cd_cia_aerea 
                     AND nro_voo          = @p_nro_voo ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_uqaa_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uqaa_com    Script Date: 19/09/2008 15:20:37 ******/

 
CREATE PROCEDURE [dbo].[usp_del_uqaa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_data_mov     datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_fiscal_head_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND data_mov     = @p_data_mov 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND nro_voo      = @p_nro_voo 
     AND type_cd      = @p_type_cd 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_fiscal_head_u_comnt_u 
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND data_mov     = @p_data_mov 
                     AND cd_cia_aerea = @p_cd_cia_aerea 
                     AND nro_voo      = @p_nro_voo 
                     AND type_cd      = @p_type_cd 
                     AND seq_nbr      = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_uqba_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uqba_com    Script Date: 19/09/2008 15:20:37 ******/

 
CREATE PROCEDURE [dbo].[usp_del_uqba_com] 
               ( @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_numero        int,  
                 @p_nro_voo_lista char(5),  
                 @p_type_cd       char(1),  
                 @p_old_chgstamp  smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_fiscal_det_u_comnt_u 
   WHERE cd_aerop      = @p_cd_aerop 
     AND data_mov      = @p_data_mov 
     AND cd_cia_aerea  = @p_cd_cia_aerea 
     AND nro_voo       = @p_nro_voo 
     AND numero        = @p_numero 
     AND nro_voo_lista = @p_nro_voo_lista 
     AND type_cd       = @p_type_cd 
     AND chgstamp      = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_fiscal_det_u_comnt_u 
                   WHERE cd_aerop      = @p_cd_aerop 
                     AND data_mov      = @p_data_mov 
                     AND cd_cia_aerea  = @p_cd_cia_aerea 
                     AND nro_voo       = @p_nro_voo 
                     AND numero        = @p_numero 
                     AND nro_voo_lista = @p_nro_voo_lista 
                     AND type_cd       = @p_type_cd 
                     AND seq_nbr       = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_del_uqca]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uqca    Script Date: 19/09/2008 15:20:37 ******/



CREATE PROCEDURE [dbo].[usp_del_uqca] 
               ( @p_cd_aerop       char(4), 
                 @p_aurorizador_id char(30), 
                 @p_old_chgstamp   smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_val_qui_res_u 
   WHERE cd_aerop       = @p_cd_aerop 
     AND aurorizador_id = @p_aurorizador_id 
     AND chgstamp       = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_val_qui_res_u 
                   WHERE cd_aerop       = @p_cd_aerop 
                     AND aurorizador_id = @p_aurorizador_id ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_del_uqca_com]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_del_uqca_com    Script Date: 19/09/2008 15:20:37 ******/

 
CREATE PROCEDURE [dbo].[usp_del_uqca_com] 
               ( @p_cd_aerop       char(4),  
                 @p_aurorizador_id char(30),  
                 @p_type_cd        char(1),  
                 @p_old_chgstamp   smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DELETE pax_val_qui_res_u_comnt_u 
   WHERE cd_aerop       = @p_cd_aerop 
     AND aurorizador_id = @p_aurorizador_id 
     AND type_cd        = @p_type_cd 
     AND chgstamp       = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_val_qui_res_u_comnt_u 
                   WHERE cd_aerop       = @p_cd_aerop 
                     AND aurorizador_id = @p_aurorizador_id 
                     AND type_cd        = @p_type_cd 
                     AND seq_nbr        = 1 ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_gtb_ctrl_email_u]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_gtb_ctrl_email_u    Script Date: 19/09/2008 15:20:37 ******/

CREATE  proc [dbo].[usp_ins_gtb_ctrl_email_u]
(		@p_email_from				varchar(255)
		,@p_email_to                varchar(255)
		,@p_email_subject           varchar(255)
		,@p_email_body              text
		,@p_email_status            char(1)
		,@p_email_to_copy			varchar(255)
		,@p_email_to_hide_copy		varchar(255)
		,@p_user_id_created         char (30)= ''
		,@p_date_created            datetime = '19000101'
)
as

if @p_user_id_created = ''
	set @p_user_id_created = suser_sname()

if @p_date_created	= '19000101'
	set @p_date_created	= getdate()

insert into GEACupax..gtb_ctrl_email_u (
		email_from
		,email_to 
		,email_subject
		,email_body
		,email_status
		,email_to_copy	
		,email_to_hide_copy	
		,user_id_created
		,date_created)
values (
		@p_email_from
		,@p_email_to 
		,@p_email_subject
		,@p_email_body
		,@p_email_status
		,@p_email_to_copy	
		,@p_email_to_hide_copy
		,@p_user_id_created
		,@p_date_created)





GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up1a]    Script Date: 01/05/2011 18:05:25 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up1a    Script Date: 19/09/2008 15:20:37 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_up1a] 
               ( @p_cd_cia_aerea    char(3), 
                 @p_dt_arquivo      datetime, 
                 @p_arquivo         char(255), 
                 @p_qtd_selos       float, 
                 @p_status_arq      char(1), 
                 @p_date_created    datetime, 
                 @p_user_id_created char(30), 
                 @p_date_changed    datetime, 
                 @p_user_id_changed char(30), 
                 @p_inactive_ind    char(1), 
                 @p_active_date     datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_conf_baixa_selo_u 
            ( cd_cia_aerea, 
              dt_arquivo, 
              arquivo, 
              qtd_selos, 
              status_arq, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_cia_aerea, 
              @p_dt_arquivo, 
              @p_arquivo, 
              @p_qtd_selos, 
              @p_status_arq, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up1a_com]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up1a_com    Script Date: 19/09/2008 15:20:38 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_up1a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_arquivo   datetime,  
                 @p_arquivo      char(255),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_conf_baixa_selo__comnt_u 
            ( cd_cia_aerea, 
              dt_arquivo, 
              arquivo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_cia_aerea, 
              @p_dt_arquivo, 
              @p_arquivo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up1a_hist]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up1a_hist    Script Date: 19/09/2008 15:20:38 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_up1a_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_dt_arquivo    datetime,  
                 @p_arquivo       char(255) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_conf_baixa_sel_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_cia_aerea,  
              @p_dt_arquivo,  
              @p_arquivo,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up2a]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up2a    Script Date: 19/09/2008 15:20:38 ******/




CREATE   PROCEDURE [dbo].[usp_ins_up2a] 
		( @p_cd_aerop        char(4), 
		@p_cd_terminal     char(10), 
		@p_cd_cia_aerea    char(3), 
		@p_dt_inicio       datetime, 
		@p_date_created    datetime, 
		@p_user_id_created char(30), 
		@p_date_changed    datetime, 
		@p_user_id_changed char(30), 
		@p_inactive_ind    char(1), 
		@p_active_date     datetime ) 
		AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 

IF @p_active_date = ''
	SET @p_active_date = GETDATE()

SELECT @p_user_id_created 	= SUSER_SNAME()		
	,@p_date_created		= GETDATE()
INSERT INTO pax_ini_ope_selo_elet_u 
	( cd_aerop, 
	cd_terminal, 
	cd_cia_aerea, 
	dt_inicio, 
	date_created, 
	user_id_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp ) 
VALUES ( @p_cd_aerop, 
	@p_cd_terminal, 
	@p_cd_cia_aerea, 
	@p_dt_inicio, 
	@p_date_created, 
	@p_user_id_created, 
	'19000101', 
	'', 
	'0',			--@p_inactive_ind, 
	@p_active_date, 
	0 ) 




GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up2a_com]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up2a_com    Script Date: 19/09/2008 15:20:38 ******/



CREATE PROCEDURE [dbo].[usp_ins_up2a_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_ini_ope_selo_ele_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up2a_hist]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up2a_hist    Script Date: 19/09/2008 15:20:38 ******/



CREATE PROCEDURE [dbo].[usp_ins_up2a_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_ini_ope_selo_e_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_cd_cia_aerea,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up3a]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up3a    Script Date: 19/09/2008 15:20:38 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_up3a] 
               ( @p_serial      char(9), 
                 @p_dependencia char(3), 
                 @p_sigla       char(4) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_coletor_u 
            ( serial, 
              dependencia, 
              sigla, 
              chgstamp ) 
     VALUES ( @p_serial, 
              @p_dependencia, 
              @p_sigla, 
              0 ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up3a_com]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up3a_com    Script Date: 19/09/2008 15:20:38 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_up3a_com] 
               ( @p_serial   char(9),  
                 @p_type_cd  char(1),  
                 @p_seq_nbr  smallint,  
                 @p_text     varchar(255),  
                 @p_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_coletor_u_comnt_u 
            ( serial, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_serial, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up3a_hist]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up3a_hist    Script Date: 19/09/2008 15:20:38 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_up3a_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_serial        char(9) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_coletor_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_serial,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up6a]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up6a    Script Date: 19/09/2008 15:20:39 ******/


CREATE      PROCEDURE [dbo].[usp_ins_up6a] 
				( @p_tp_unid             char(1), 
				@p_cd_aerop            	char(4), 
				@p_cd_terminal         	char(10), 
				@p_tp_unid_destino     	char(1), 
				@p_cd_aerop_destino    	char(4), 
				@p_cd_terminal_destino 	char(10), 
				@p_dt_devolucao        	datetime, 
				@p_nro_selo_inicial    	char(10), 
				@p_nro_selo_final      	char(10), 
				@p_motivo_dev          	varchar(255), 
				@p_dt_confirma			datetime,
				@p_oper_confirma		char(15),
				@p_qtd_selos			float,
				@p_date_created        	datetime, 
				@p_user_id_created     	char(30), 
				@p_date_changed        	datetime, 
				@p_user_id_changed     	char(30), 
				@p_inactive_ind        	char(1), 
				@p_active_date         	datetime ) 
AS 
DECLARE @ret 	int 
	,@qtd		int
	, @rowcount	int

	
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
IF @p_active_date = ''
	SET @p_active_date = GETDATE()


begin tran dev_rem
update pax_selo_u
set selo_status 		= '9'
,tp_unid 				= @p_tp_unid_destino
,cd_aerop 				= @p_cd_aerop_destino
,cd_terminal			= @p_cd_terminal_destino
,tp_unid_destino 		= ''
,cd_aerop_destino 		= ''
,cd_terminal_destino	= ''
,user_id_changed		= suser_sname()
,date_changed			= getdate()
,chgstamp				= chgstamp + 1
where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
and billing_line_id = 0
and selo_status		= '0'

set @rowcount	= @@rowcount
if @rowcount <> @p_qtd_selos
begin 
	rollback tran dev_rem
	raiserror 25002 'Não e posivél fazer a devolução de tudos os Selos.'
	return
end
else
begin
	
	INSERT INTO pax_remesa_dev_u 
		( tp_unid, 
		cd_aerop, 
		cd_terminal, 
		tp_unid_destino, 
		cd_aerop_destino, 
		cd_terminal_destino, 
		dt_devolucao, 
		nro_selo_inicial, 
		nro_selo_final, 
		motivo_dev, 
		dt_confirma,
		oper_confirma,
		qtd_selos,
		date_created, 
		user_id_created, 
		date_changed, 
		user_id_changed, 
		inactive_ind, 
		active_date, 
		chgstamp ) 
	VALUES ( @p_tp_unid, 
		@p_cd_aerop, 
		@p_cd_terminal, 
		@p_tp_unid_destino, 
		@p_cd_aerop_destino, 
		@p_cd_terminal_destino, 
		@p_dt_devolucao, 
		@p_nro_selo_inicial, 
		@p_nro_selo_final, 
		@p_motivo_dev, 
		@p_dt_confirma,
		@p_oper_confirma,
		@p_qtd_selos,
		getdate(),			--@p_date_created, 
		suser_sname(),		--@p_user_id_created, 
		@p_date_changed, 
		@p_user_id_changed, 
		'0',				--@p_inactive_ind, 
		@p_active_date, 
		0 ) 

	if @@rowcount <> 1
	begin
		rollback tran dev_rem
		raiserror 25002 'Não e posivél fazer a devolução.'
		return
	end 	
end

commit tran dev_rem





GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up6a_com]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up6a_com    Script Date: 19/09/2008 15:20:39 ******/



CREATE PROCEDURE [dbo].[usp_ins_up6a_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_devolucao        datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1),  
                 @p_seq_nbr             smallint,  
                 @p_text                varchar(255),  
                 @p_chgstamp            smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_remesa_dev_u_comnt_u 
            ( tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_devolucao, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_devolucao, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up6a_hist]    Script Date: 01/05/2011 18:05:26 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up6a_hist    Script Date: 19/09/2008 15:20:39 ******/



CREATE PROCEDURE [dbo].[usp_ins_up6a_hist] 
               ( @p_chg_trans           char(8),  
                 @p_chg_type            char(1),  
                 @p_col_id              int,  
                 @p_data_chg_from       varchar(255),  
                 @p_data_chg_to         varchar(255),  
                 @p_user_id             char(10),  
                 @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_devolucao        datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_remesa_dev_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_tp_unid,  
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_tp_unid_destino,  
              @p_cd_aerop_destino,  
              @p_cd_terminal_destino,  
              @p_dt_devolucao,  
              @p_nro_selo_inicial,  
              @p_nro_selo_final,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up7a]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_up7a    Script Date: 19/09/2008 15:20:39 ******/
CREATE PROCEDURE [dbo].[usp_ins_up7a] 
			( @p_cd_cia_aerea     char(3), 
			@p_dt_inicio        datetime, 
			@p_dt_final         datetime, 
			@p_valor            float, 
			@p_justificativa    varchar(500), 
			@p_processado       char(1), 
			@p_dt_processamento datetime, 
			@p_nu_boleto_ss     int, 
			@p_inactive_ind     char(1), 
			@p_data_desativacao datetime, 
			@p_tp_natureza		char(1)) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
INSERT INTO pax_cred_cia_u 
	( cd_cia_aerea, 
	dt_inicio, 
	dt_final, 
	valor, 
	justificativa, 
	processado, 
	dt_processamento, 
	nu_boleto_ss, 
	inactive_ind, 
	data_desativacao, 
	tp_natureza,
	chgstamp ) 
VALUES ( @p_cd_cia_aerea, 
	@p_dt_inicio, 
	@p_dt_final, 
	@p_valor, 
	@p_justificativa, 
	@p_processado, 
	@p_dt_processamento, 
	@p_nu_boleto_ss, 
	@p_inactive_ind, 
	@p_data_desativacao, 
	@p_tp_natureza,
	0 ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up7a_com]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up7a_com    Script Date: 19/09/2008 15:20:39 ******/



CREATE PROCEDURE [dbo].[usp_ins_up7a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_inicio    datetime,  
                 @p_dt_final     datetime,  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_cred_cia_u_comnt_u 
            ( cd_cia_aerea, 
              dt_inicio, 
              dt_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_cia_aerea, 
              @p_dt_inicio, 
              @p_dt_final, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_up7a_hist]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_up7a_hist    Script Date: 19/09/2008 15:20:39 ******/



CREATE PROCEDURE [dbo].[usp_ins_up7a_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_dt_inicio     datetime,  
                 @p_dt_final      datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_cred_cia_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_cia_aerea,  
              @p_dt_inicio,  
              @p_dt_final,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upaa]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upaa    Script Date: 19/09/2008 15:20:40 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_upaa] 
               ( @p_nro_selo               char(10), 
                 @p_ano_remesa             int, 
                 @p_tp_natureza            char(1), 
                 @p_dt_mov                 datetime, 
                 @p_selo_status            char(1), 
                 @p_cd_motivo              char(2), 
                 @p_tp_fat                 char(1), 
                 @p_cd_cia_aerea           char(3), 
                 @p_tp_unid                char(1), 
                 @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_tp_unid_destino        char(1), 
                 @p_cd_aerop_destino       char(4), 
                 @p_cd_terminal_destino    char(10), 
                 @p_dt_confirma            datetime, 
                 @p_cd_aerop_utilizacao    char(4), 
                 @p_cd_terminal_utilizacao char(10), 
                 @p_nfm                    char(20), 
                 @p_nro_rste               char(6), 
                 @p_tp_coletor             char(16), 
                 @p_item_fat               char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date       datetime, 
                 @p_billing_int_type       char(1), 
                 @p_billing_user_1         char(10), 
                 @p_date_created           datetime, 
                 @p_user_id_created        char(30), 
                 @p_date_changed           datetime, 
                 @p_user_id_changed        char(30), 
                 @p_inactive_ind           char(1), 
                 @p_active_date            datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_u 
            ( nro_selo, 
              ano_remesa, 
              tp_natureza, 
              dt_mov, 
              selo_status, 
              cd_motivo, 
              tp_fat, 
              cd_cia_aerea, 
              tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_confirma, 
              cd_aerop_utilizacao, 
              cd_terminal_utilizacao, 
              nfm, 
              nro_rste, 
              tp_coletor, 
              item_fat, 
              billing_line_id, 
              billing_int_date, 
              billing_int_type, 
              billing_user_1, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_nro_selo, 
              @p_ano_remesa, 
              @p_tp_natureza, 
              @p_dt_mov, 
              @p_selo_status, 
              @p_cd_motivo, 
              @p_tp_fat, 
              @p_cd_cia_aerea, 
              @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_confirma, 
              @p_cd_aerop_utilizacao, 
              @p_cd_terminal_utilizacao, 
              @p_nfm, 
              @p_nro_rste, 
              @p_tp_coletor, 
              @p_item_fat, 
              @p_billing_line_id, 
              @p_billing_int_date, 
              @p_billing_int_type, 
              @p_billing_user_1, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upaa_com]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upaa_com    Script Date: 19/09/2008 15:20:40 ******/


CREATE PROCEDURE [dbo].[usp_ins_upaa_com] 
               ( @p_nro_selo char(10),  
                 @p_type_cd  char(1),  
                 @p_seq_nbr  smallint,  
                 @p_text     varchar(255),  
                 @p_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_u_comnt_u 
            ( nro_selo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_nro_selo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upba]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upba    Script Date: 19/09/2008 15:20:40 ******/


CREATE PROCEDURE [dbo].[usp_ins_upba] 
               ( @p_nro_selo               char(10), 
                 @p_tp_natureza            char(1), 
                 @p_dt_mov                 datetime, 
                 @p_selo_status            char(1), 
                 @p_cd_motivo              char(2), 
                 @p_tp_fat                 char(1), 
                 @p_cd_cia_aerea           char(3), 
                 @p_tp_unid                char(1), 
                 @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_tp_unid_destino        char(1), 
                 @p_cd_aerop_destino       char(4), 
                 @p_cd_terminal_destino    char(10), 
                 @p_dt_confirma            datetime, 
                 @p_cd_aerop_utilizacao    char(4), 
                 @p_cd_terminal_utilizacao char(10), 
                 @p_nfm                    char(20), 
                 @p_nro_rste               char(6), 
                 @p_tp_coletor             char(16), 
                 @p_item_fat               char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date       datetime, 
                 @p_billing_int_type       char(1), 
                 @p_billing_user_1         char(10), 
                 @p_date_created           datetime, 
                 @p_user_id_created        char(30), 
                 @p_date_changed           datetime, 
                 @p_user_id_changed        char(30), 
                 @p_inactive_ind           char(1), 
                 @p_active_date            datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_log_u 
            ( nro_selo, 
              tp_natureza, 
              dt_mov, 
              selo_status, 
              cd_motivo, 
              tp_fat, 
              cd_cia_aerea, 
              tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_confirma, 
              cd_aerop_utilizacao, 
              cd_terminal_utilizacao, 
              nfm, 
              nro_rste, 
              tp_coletor, 
              item_fat, 
              billing_line_id, 
              billing_int_date, 
              billing_int_type, 
              billing_user_1, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_nro_selo, 
              @p_tp_natureza, 
              @p_dt_mov, 
              @p_selo_status, 
              @p_cd_motivo, 
              @p_tp_fat, 
              @p_cd_cia_aerea, 
              @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_confirma, 
              @p_cd_aerop_utilizacao, 
              @p_cd_terminal_utilizacao, 
              @p_nfm, 
              @p_nro_rste, 
              @p_tp_coletor, 
              @p_item_fat, 
              @p_billing_line_id, 
              @p_billing_int_date, 
              @p_billing_int_type, 
              @p_billing_user_1, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upca]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_upca    Script Date: 19/09/2008 15:20:40 ******/


CREATE PROCEDURE [dbo].[usp_ins_upca] 
               ( @p_tp_unid               char(1), 
                 @p_cd_aerop              char(4), 
                 @p_cd_terminal           char(10), 
                 @p_tp_unid_destino      char(1), 
                 @p_cd_aerop_destino     char(4), 
                 @p_cd_terminal_destino  char(10), 
                 @p_dt_remessa            datetime, 
                 @p_nro_selo_inicial      char(10), 
                 @p_nro_selo_final        char(10), 
                 @p_qtd_selos             float,
                 @p_cd_situacao           char(1), 
                 @p_dt_confirma           datetime, 
                 @p_oper_confirma        char(15), 
                 @p_motivo_cnc            varchar(100), 
                 @p_nfm                   char(20), 
                 @p_date_created         datetime, 
                 @p_user_id_created      char(30), 
                 @p_date_changed         datetime, 
                 @p_user_id_changed      char(30), 
                 @p_inactive_ind          char(1), 
                 @p_active_date           datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  /* SIEMPRE QUE EL REGISTRO ES NUEVO, LA SITUACION ES 0: PENDENTE */
  SELECT @p_cd_situacao = '0'
  /* SIEMPRE QUE EL REGISTRO ES NUEVO, LA SITUACION ES 0: PENDENTE */
  INSERT INTO pax_lote_selo_u 
            ( tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_remessa, 
              nro_selo_inicial, 
              nro_selo_final, 
              qtd_selos, 
              cd_situacao, 
              dt_confirma, 
              oper_confirma, 
              motivo_cnc, 
              nfm, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_remessa, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_qtd_selos,
              @p_cd_situacao, 
              @p_dt_confirma, 
              @p_oper_confirma, 
              @p_motivo_cnc, 
              @p_nfm, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upca_com]    Script Date: 01/05/2011 18:05:27 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upca_com    Script Date: 19/09/2008 15:20:40 ******/


CREATE PROCEDURE [dbo].[usp_ins_upca_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_remessa          datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1),  
                 @p_seq_nbr             smallint,  
                 @p_text                varchar(255),  
                 @p_chgstamp            smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_lote_selo_u_comnt_u 
            ( tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_remessa, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_remessa, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upea]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upea    Script Date: 19/09/2008 15:20:40 ******/






CREATE   PROCEDURE [dbo].[usp_ins_upea] 
			( @p_cd_aerop        	char(4), 
			@p_cd_terminal     	char(10), 
			@p_dt_mov          	datetime, 
			@p_hh_mm           	char(6),
			@p_tp_selo           	char(1),
			@p_selo_status     	char(1), 
			@p_arquivo         	char(255), 
			@p_cd_motivo       	char(2), 
			@p_qtd_selos       	FLOAT, 
			@p_tp_coletor      	char(16), 
			@p_tp_baixa       	char(1), 
			@p_status_arq      	char(1), 
			@p_qtd_lineas_arq	FLOAT, 
			@p_qtd_discrepancias FLOAT, 
			@p_qtd_lineas_erro      FLOAT, 
			@p_qtd_discrepancias_tra	FLOAT,
			@p_qtd_duplicados			FLOAT,
			@p_date_created    	datetime, 
			@p_user_id_created 	char(30), 
			@p_date_changed    	datetime, 
			@p_user_id_changed 	char(30), 
			@p_inactive_ind    	char(1), 
			@p_active_date     	datetime ) 
AS 
  DECLARE 	@ret 		int 
		,@err		REAL
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  IF @p_active_date = ''
	SET @p_active_date = GETDATE()

  IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
	SELECT @p_user_id_created =  suser_sname()		

  INSERT INTO pax_baixa_selo_u 
			( cd_aerop, 
			cd_terminal, 
			dt_mov, 
			hh_mm, 
			tp_selo,
			selo_status, 
			arquivo, 
			cd_motivo, 
			qtd_selos, 
			tp_coletor, 
			tp_baixa, 
			status_arq, 
			qtd_lineas_arq,
			qtd_discrepancias,
			qtd_lineas_erro,
			qtd_discrepancias_tra,
			qtd_duplicados,
			date_created, 
			user_id_created, 
			date_changed, 
			user_id_changed, 
			inactive_ind, 
			active_date, 
			chgstamp ) 
     VALUES ( @p_cd_aerop, 
				@p_cd_terminal, 
				@p_dt_mov, 
				@p_hh_mm, 
				@p_tp_selo,
				@p_selo_status, 
				@p_arquivo, 
				@p_cd_motivo, 
				@p_qtd_selos, 
				@p_tp_coletor, 
				@p_tp_baixa, 
				@p_status_arq, 
				@p_qtd_lineas_arq,
				@p_qtd_discrepancias,
				@p_qtd_lineas_erro,
				@p_qtd_discrepancias_tra,
				@p_qtd_duplicados,
				getdate(),		--@p_date_created, 
				@p_user_id_created, 
				@p_date_changed, 
				@p_user_id_changed, 
				'0',			--@p_inactive_ind, 
				@p_active_date, 
				0 ) 

     SELECT @err = @@ERROR
     IF @err <> 0 
     BEGIN
          SELECT @err = @err + 13000
          PRINT @err
          RAISERROR @err 'ERROR DE INSERCION'
     END







GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upea_com]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_upea_com    Script Date: 19/09/2008 15:20:40 ******/




CREATE PROCEDURE [dbo].[usp_ins_upea_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_tp_selo       char(1),  
                 @p_type_cd     char(1),  
                 @p_seq_nbr     smallint,  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selo_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
	tp_selo,
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
	 @p_tp_selo,
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp )



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upea_hist]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_upea_hist    Script Date: 19/09/2008 15:20:41 ******/




CREATE PROCEDURE [dbo].[usp_ins_upea_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_dt_mov        datetime,  
                 @p_hh_mm         char(6),
	    @p_tp_selo  	     char (1) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selo_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_hh_mm,  
 	@p_tp_selo,
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to )



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upga]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_upga    Script Date: 19/09/2008 15:20:41 ******/





CREATE   PROCEDURE [dbo].[usp_ins_upga] 
			( @p_cd_aerop         char(4), 
			@p_cd_terminal      char(10), 
			@p_dt_entrega       datetime,
			@p_hh_entrega       char(6),  
			@p_cd_cia_aerea     char(3), 
			@p_nro_rste         char(6), 
			@p_no_funcio        varchar(40), 
			@p_cd_situacao_rste char(1),
			@p_ano_remesa		integer,
			@p_date_created     datetime, 
			@p_user_id_created  char(30), 
			@p_date_changed     datetime, 
			@p_user_id_changed  char(30), 
			@p_inactive_ind     char(1), 
			@p_active_date      datetime ) 
AS 
DECLARE @ret int
EXEC @ret = sp_dbs_authenticate 
IF @p_active_date = ''
	SET @p_active_date = GETDATE()

IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
	SELECT @p_user_id_created =  suser_sname()  
/*
 -- Prepara data no formato correto
  DECLARE  @pos1 int, @pos2 int 
 select @pos1 =  CHARINDEX('/', @p_dt_entrega_char, 1)
 select @pos2 = CHARINDEX('/',@p_dt_entrega_char, @pos1+1)
 declare @p_dt_entrega datetime
 select @p_dt_entrega =  substring(@p_dt_entrega_char,@pos1+ 1,@pos2 - @pos1 - 1) + "/" +  substring(@p_dt_entrega_char,1,@pos1-1) + "/" + substring(@p_dt_entrega_char,@pos2+1,4)
-- Fim da preparaçao
*/
IF @ret != 0 RETURN 
 
INSERT INTO pax_entrega_selo_ctrl_u 
			( cd_aerop, 
			cd_terminal, 
			dt_entrega,  
			hh_entrega,
			cd_cia_aerea, 
			nro_rste, 
			no_funcio, 
			cd_situacao_rste,
			ano_remesa,
			date_created, 
			user_id_created, 
			date_changed, 
			user_id_changed, 
			inactive_ind, 
			active_date, 
			chgstamp ) 
     VALUES ( @p_cd_aerop, 
			@p_cd_terminal, 
			@p_dt_entrega, 
			@p_hh_entrega,
			@p_cd_cia_aerea, 
			@p_nro_rste, 
			@p_no_funcio, 
			@p_cd_situacao_rste,
			@p_ano_remesa,
			getdate(),  --@p_date_created, 
			@p_user_id_created, 
			@p_date_changed, 
			@p_user_id_changed, 
			'0',   --@p_inactive_ind, 
			@p_active_date, 
			0 ) 







GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upga_com]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upga_com    Script Date: 19/09/2008 15:20:41 ******/



CREATE PROCEDURE [dbo].[usp_ins_upga_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_hh_entrega   char(6),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rste     char(6),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_entrega_selo_ctr_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              hh_entrega, 
              cd_cia_aerea, 
              nro_rste, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_hh_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upga_hist]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upga_hist    Script Date: 19/09/2008 15:20:41 ******/



CREATE PROCEDURE [dbo].[usp_ins_upga_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_dt_entrega    datetime,  
                 @p_hh_entrega    char(6),  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_rste      char(6) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_entrega_selo_c_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_entrega,  
              @p_hh_entrega,  
              @p_cd_cia_aerea,  
              @p_nro_rste,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upha_com]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upha_com    Script Date: 19/09/2008 15:20:41 ******/


CREATE PROCEDURE [dbo].[usp_ins_upha_com] 
               ( @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_mov              datetime,  
                 @p_selo_status         char(1),  
                 @p_nro_selo            char(10),  
                 @p_type_cd             char(1),  
                 @p_seq_nbr             smallint,  
                 @p_text                varchar(255),  
                 @p_chgstamp            smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_discrep_selo_u_comnt_u 
            ( cd_aerop_destino, 
              cd_terminal_destino, 
              dt_mov, 
              selo_status, 
              nro_selo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_mov, 
              @p_selo_status, 
              @p_nro_selo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upia]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upia    Script Date: 19/09/2008 15:20:41 ******/


CREATE PROCEDURE [dbo].[usp_ins_upia] 
               ( @p_cd_aerop            char(4), 
                 @p_cd_terminal         char(10), 
                 @p_cd_cia_aerea        char(3), 
                 @p_dt_voo              datetime, 
                 @p_hr_voo              char(4), 
                 @p_nro_voo             char(5), 
                 @p_tp_natureza         char(1), 
                 @p_tp_voo              char(1), 
                 @p_mt_aeronave         char(10), 
                 @p_desem_pax_dom   int, 
                 @p_desem_pax_int      int, 
                 @p_desem_bagagem_dom  float, 
                 @p_desem_bagagem_int  float, 
                 @p_desem_carga_dom    float, 
                 @p_desem_carga_int   float, 
                 @p_desem_correio_dom  float, 
                 @p_desem_correio_int  float, 
     @p_rpax_participa  char(1), 
     @p_desem_pax_dom_conex   float, 
     @p_desem_pax_int_conex   float, 
     @p_desem_bagagem_dom_conex  float, 
     @p_desem_bagagem_int_conex  float, 
     @p_desem_carga_dom_conex  float, 
     @p_desem_carga_int_conex   float, 
     @p_desem_correio_dom_conex  float, 
     @p_desem_correio_int_conex   float, 
                 @p_com_voo_gen        varchar(250), 
                 @p_date_created        datetime, 
                 @p_user_id_created     char(30), 
                 @p_date_changed       datetime, 
                 @p_user_id_changed    char(30), 
                 @p_inactive_ind        char(1), 
                 @p_active_date         datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 

  If @p_user_id_created = '' or @p_user_id_created is null 
    Begin
      select @p_user_id_created = suser_sname()
    End 

  INSERT INTO rpax_desemb_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              nro_voo, 
              dt_voo, 
              hr_voo, 
              tp_natureza, 
              tp_voo, 
              mt_aeronave, 
              desem_pax_dom, 
              desem_pax_int, 
              desem_bagagem_dom, 
              desem_bagagem_int, 
              desem_carga_dom, 
              desem_carga_int, 
              desem_correio_dom, 
              desem_correio_int, 
              rpax_participa,  
 desem_pax_dom_conex,
 desem_pax_int_conex,
 desem_bagagem_dom_conex,
 desem_bagagem_int_conex, 
 desem_carga_dom_conex, 
 desem_carga_int_conex, 
 desem_correio_dom_conex, 
 desem_correio_int_conex, 
             com_voo_gen, 
             date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_tp_natureza, 
              @p_tp_voo, 
              @p_mt_aeronave, 
              @p_desem_pax_dom, 
              @p_desem_pax_int, 
              @p_desem_bagagem_dom, 
              @p_desem_bagagem_int, 
              @p_desem_carga_dom, 
              @p_desem_carga_int, 
              @p_desem_correio_dom, 
              @p_desem_correio_int, 
              @p_rpax_participa, 
 @p_desem_pax_dom_conex, 
 @p_desem_pax_int_conex, 
 @p_desem_bagagem_dom_conex,
 @p_desem_bagagem_int_conex,
 @p_desem_carga_dom_conex,
 @p_desem_carga_int_conex,
 @p_desem_correio_dom_conex,
 @p_desem_correio_int_conex,
             @p_com_voo_gen , 
               getdate(),  --@p_date_created, 
              @p_user_id_created,      
              @p_date_changed, 
              @p_user_id_changed, 
              '0', 
              @p_active_date, 
              0 ) 





GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upia_com]    Script Date: 01/05/2011 18:05:28 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upia_com    Script Date: 19/09/2008 15:20:41 ******/


CREATE PROCEDURE [dbo].[usp_ins_upia_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_desemb_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              dt_voo, 
              hr_voo, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_nro_voo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upia_hist]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upia_hist    Script Date: 19/09/2008 15:20:41 ******/


CREATE PROCEDURE [dbo].[usp_ins_upia_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_dt_voo        datetime,  
                 @p_hr_voo        char(4),  
                 @p_nro_voo       char(5) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_desemb_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_cd_cia_aerea,  
              @p_dt_voo,  
              @p_hr_voo,  
              @p_nro_voo,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upj3_com]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upj3_com    Script Date: 19/09/2008 15:20:42 ******/


CREATE PROCEDURE [dbo].[usp_ins_upj3_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_embarque  datetime,  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_dia_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              tp_natureza, 
              periodo_de, 
              periodo_ate, 
              cd_cia_aerea, 
              dt_embarque, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_natureza, 
              @p_periodo_de, 
              @p_periodo_ate, 
              @p_cd_cia_aerea, 
              @p_dt_embarque, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upj4_com]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upj4_com    Script Date: 19/09/2008 15:20:42 ******/


CREATE PROCEDURE [dbo].[usp_ins_upj4_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_dt_embarque  datetime,  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_dia_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              tp_natureza, 
              periodo_de, 
              periodo_ate, 
              dt_embarque, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_tp_natureza, 
              @p_periodo_de, 
              @p_periodo_ate, 
              @p_dt_embarque, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upja]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upja    Script Date: 19/09/2008 15:20:42 ******/


CREATE  PROCEDURE [dbo].[usp_ins_upja] 
               ( @p_cd_aerop         		char(4), 
                 @p_cd_terminal      		char(10), 
                 @p_cd_cia_aerea     		char(3), 
                 @p_tp_natureza      		char(1), 
                 @p_periodo_de       		datetime, 
                 @p_periodo_ate      		datetime, 
                 @p_dt_embarque      		datetime, 
                 @p_pax_total        		int, 
                 @p_date_created     		datetime, 
                 @p_user_id_created  		char(30), 
                 @p_date_changed     		datetime, 
                 @p_user_id_changed  		char(30), 
                 @p_inactive_ind     		char(1), 
                 @p_active_date      		datetime ) 
AS 
  DECLARE 		  @ret 							int 
                 ,@p_nro_voo       			datetime
                 ,@p_hr_voo       			char(4)
                 ,@p_dt_voo       			datetime
                 ,@p_tp_voo       			char(1)
                 ,@p_tipo_output       		char(1)
                 ,@p_item_id_int       		char(26)
                 ,@p_item_id_dom       		char(26)
                 ,@p_pax_dom_vista       	INT
                 ,@p_pax_int_vista       	INT
                 ,@p_pax_dom_fat       		INT
                 ,@p_pax_int_fat       		INT

SELECT @p_tipo_output 	= '1'
	,@p_item_id_dom 	= ''
	,@p_item_id_int 	= ''


EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

/* ALTERAÇÃO 001						*/
/* VALIDAÇÃO DE AEROPORTO INATIVO		*/
/* DATA: 05/03/2009						*/
/* SOLICITAÇÃO	: ROGERIO NENO			*/
/* IMPLEMENTADO : JOSE ANTONIO MUÑOZ	*/
if exists (select 1 from GEACutcx..cor_aeroporto_u with (nolock index = P_cor_aeroporto_u)
			where cd_aerop		= @p_cd_aerop
			and inactive_ind	= '1')
begin
	Raiserror 25002 'Aeroporto Inátivo.'
	return 0
end
/* ALTERAÇÃO 001 FIM					*/

IF @p_active_date 	= ''
  SET @p_active_date 	= GETDATE()

IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
  SELECT @p_user_id_created =  suser_sname()  

BEGIN TRANSACTION
  INSERT INTO rpax_emb_dia_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              tp_natureza, 
              periodo_de, 
              periodo_ate, 
              dt_embarque, 
              pax_total, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_tp_natureza, 
              @p_periodo_de, 
              @p_periodo_ate, 
              @p_dt_embarque, 
              @p_pax_total, 
              getdate(),  --@p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              '0',   --@p_inactive_ind, 
              @p_active_date, 
              0 ) 

IF @@ERROR <> 0
BEGIN
    ROLLBACK TRANSACTION
    RAISERROR 26000 'ERROR AL INSERTAR EMBARQUE POR VOO'
    GOTO FIM
END 
ELSE
BEGIN

    DELETE rpax_itens_u
	   WHERE cd_aerop        	= @p_cd_aerop 
	     AND cd_terminal     		= @p_cd_terminal 
	     AND cd_cia_aerea    	= @p_cd_cia_aerea 
	     AND dt_voo          		= @p_dt_voo 
	     AND hr_voo          		= @p_hr_voo 
	     AND nro_voo         		= @p_nro_voo 


    EXEC psp_valida_item  
        @p_cd_aerop,      
        @p_cd_terminal,   
        'D',   
        @p_dt_voo ,       
        @p_tipo_output,               
        @p_item_id_dom                      output

    EXEC psp_valida_item  
        @p_cd_aerop,      
        @p_cd_terminal,   
        'I',   
        @p_dt_voo ,       
        @p_tipo_output,               
        @p_item_id_int                      output

-- Incluindo A vista, Domestico
    exec    psp_ins_upd_itens_rpax 
        @p_cd_aerop         
        ,@p_cd_terminal      
        ,@p_cd_cia_aerea  
        ,@p_nro_voo          
        ,@p_dt_voo           
        ,@p_hr_voo          
        ,'D' -- @p_tp_rpax          (V)oo e (D)Diaria
        ,'D' --@p_tp_natureza   
        ,@p_tp_voo          
        ,'A' -- @p_tp_fat          
        ,@p_pax_dom_vista --@p_pax_total       
        , @p_item_id_dom
    IF @@error <> 0
    BEGIN
        ROLLBACK TRANSACTION 
        RAISERROR 26001 'Erro na transacao' 
        GOTO FIM
    END
    
    -- Incluindo A vista,Internacional
    EXEC    psp_ins_upd_itens_rpax 
        @p_cd_aerop         
        ,@p_cd_terminal      
        ,@p_cd_cia_aerea  
        ,@p_nro_voo          
        ,@p_dt_voo           
        ,@p_hr_voo          
        ,'D' -- @p_tp_rpax          (V)oo e (D)Diaria
        ,'I' --@p_tp_natureza   
        ,@p_tp_voo          
        ,'A' -- @p_tp_fat          
        ,@p_pax_int_vista --@p_pax_total       
        , @p_item_id_int
        
    IF @@error <> 0
    BEGIN
        ROLLBACK
        RAISERROR 26002 'Erro na transacao' 
        GOTO FIM
    END
    
    -- Incluindo Faturado, Domestica
    EXEC    psp_ins_upd_itens_rpax 
      @p_cd_aerop         
     ,@p_cd_terminal      
     ,@p_cd_cia_aerea  
     ,@p_nro_voo          
     ,@p_dt_voo           
     ,@p_hr_voo          
     ,'D' -- @p_tp_rpax          (V)oo e (D)Diaria
     ,'D' --@p_tp_natureza   
     ,@p_tp_voo          
     ,'F' -- @p_tp_fat          
     ,@p_pax_dom_fat --@p_pax_total       
     ,@p_item_id_dom
    
    
    IF @@error <> 0
    BEGIN
        ROLLBACK
        RAISERROR 26002 'Erro na transacao' 
        GOTO FIM
    END

    -- Incluindo Faturado,Internacional
    EXEC    psp_ins_upd_itens_rpax 
      @p_cd_aerop         
     ,@p_cd_terminal      
     ,@p_cd_cia_aerea  
     ,@p_nro_voo          
     ,@p_dt_voo           
     ,@p_hr_voo          
     ,'D' -- @p_tp_rpax          (V)oo e (D)Diaria
     ,'I' --@p_tp_natureza   
     ,@p_tp_voo          
     ,'F' -- @p_tp_fat          
     ,@p_pax_int_fat --@p_pax_total       
     ,@p_item_id_int
    IF @@error <> 0
    BEGIN
        ROLLBACK
        RAISERROR 26002 'Erro na transacao'
        GOTO FIM
    END
    COMMIT TRANSACTION
END

FIM:
GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upja_hist]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upja_hist    Script Date: 19/09/2008 15:20:42 ******/


CREATE PROCEDURE [dbo].[usp_ins_upja_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_tp_natureza   char(1),  
                 @p_periodo_de    datetime,  
                 @p_periodo_ate   datetime,  
                 @p_dt_embarque   datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_dia_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_cd_cia_aerea,  
              @p_tp_natureza,  
              @p_periodo_de,  
              @p_periodo_ate,  
              @p_dt_embarque,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upka]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upka    Script Date: 19/09/2008 15:20:42 ******/



CREATE PROCEDURE [dbo].[usp_ins_upka] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_dt_entrega      datetime, 
                 @p_cd_cia_aerea    char(3), 
                 @p_nro_rdev        char(6), 
                 @p_arquivo         char(255), 
                 @p_date_created    datetime, 
                 @p_user_id_created char(30), 
                 @p_date_changed    datetime, 
                 @p_user_id_changed char(30), 
                 @p_inactive_ind    char(1), 
                 @p_active_date     datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_ctrl_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              cd_cia_aerea, 
              nro_rdev, 
              arquivo, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rdev, 
              @p_arquivo, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 




GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upka_com]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upka_com    Script Date: 19/09/2008 15:20:42 ******/


CREATE PROCEDURE [dbo].[usp_ins_upka_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rdev     char(6),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_ctrl_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              cd_cia_aerea, 
              nro_rdev, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rdev, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upka_hist]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upka_hist    Script Date: 19/09/2008 15:20:42 ******/


CREATE PROCEDURE [dbo].[usp_ins_upka_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_dt_entrega    datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_rdev      char(6) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_ctrl__history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_entrega,  
              @p_cd_cia_aerea,  
              @p_nro_rdev,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upla]    Script Date: 01/05/2011 18:05:29 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upla    Script Date: 19/09/2008 15:20:43 ******/











CREATE         PROCEDURE [dbo].[usp_ins_upla] 
			( @p_cd_aerop				char(4), 
			@p_cd_terminal				char(10), 
			@p_dt_mov					datetime, 
			@p_nro_selo_electronico		char(14), 
			@p_tp_natureza				char(1), 
			@p_selo_status				char(1), 
			@p_cd_motivo				char(2), 
			@p_tp_fat					char(1), 
			@p_cd_cia_aerea				char(3), 
			@p_tp_unid					char(1), 
			@p_dt_confirma				datetime, 
			@p_cd_aerop_utilizacao		char(4), 
			@p_cd_terminal_utilizacao	char(10), 
			@p_tp_coletor				char(16), 
			@p_item_fat					char(26), 
			@p_billing_line_id			int, 
			@p_billing_int_date			datetime, 
			@p_billing_int_type			char(1), 
			@p_billing_user_1			char(10), 
			@p_voo_rea					char(4), 					
			@p_dt_voo_rea				datetime,
			@p_hh_voo_rea				char(6), 
			@p_hh_mov					char(6), 
			@p_date_created				datetime, 
			@p_user_id_created			char(30), 
			@p_date_changed				datetime, 
			@p_user_id_changed			char(30), 
			@p_inactive_ind				char(1), 
			@p_active_date				datetime ) 
AS 
DECLARE @ret 		int 
	,@v_item_fat	char(26)

EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 

IF @p_active_date 	= ''
  	SET @p_active_date 	= GETDATE()

IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
  	SELECT @p_user_id_created =  suser_sname()  

IF @p_tp_coletor = 'MA'
	SET @p_tp_coletor = '03'

--  BUSCAR EL ITEM    

/* 001 Alteração para utilizar item de selos a vista
	- Responsable	: José Muñoz
	- Data			: 04/10/2007
*/
if @p_tp_fat = 'A' and @p_tp_natureza in ('D','I')
begin
	SELECT TOP 1 @v_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 

	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) = 'V'
	ORDER BY   dt_vigencia DESC
end
else
begin
	SELECT TOP 1 @v_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) <> 'V'
	ORDER BY   dt_vigencia DESC
end

/* Original 
SELECT TOP 1 @v_item_fat = ISNULL(item_id,'')
FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
WHERE cd_aerop      		= @p_cd_aerop 
    AND cd_terminal     	= @p_cd_terminal 
    AND tp_natureza     	= @p_tp_natureza 
    AND dt_vigencia			<= @p_dt_mov
    AND inactive_ind		= '0'
ORDER BY   dt_vigencia DESC
*/
/* 001 FIM Alteração para utilizar item de selos a vista
	- Responsable	: José Muñoz
	- Data			: 04/10/2007
*/


INSERT INTO pax_selo_electronico_u 
	( cd_aerop, 
	cd_terminal, 
	dt_mov, 
	nro_selo_electronico, 
	tp_natureza, 
	selo_status, 
	cd_motivo, 
	tp_fat, 
	cd_cia_aerea, 
	tp_unid, 
	dt_confirma, 
	cd_aerop_utilizacao, 
	cd_terminal_utilizacao, 
	tp_coletor, 
	item_fat, 
	billing_line_id, 
	billing_int_date, 
	billing_int_type, 
	billing_user_1, 
	voo_rea,
	dt_voo_rea,
	hh_voo_rea,
	hh_mov,
	user_id_created, 
	date_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp ) 
VALUES ( @p_cd_aerop, 
	@p_cd_terminal, 
	@p_dt_mov, 
	@p_nro_selo_electronico, 
	@p_tp_natureza, 
	@p_selo_status, 
	@p_cd_motivo, 
	@p_tp_fat, 
	@p_cd_cia_aerea, 
	@p_tp_unid, 
	@p_dt_confirma, 
	@p_cd_aerop_utilizacao, 
	@p_cd_terminal_utilizacao, 
	@p_tp_coletor, 
	@v_item_fat, 
	@p_billing_line_id, 
	@p_billing_int_date, 
	@p_billing_int_type, 
	@p_billing_user_1, 
	@p_voo_rea,
	@p_dt_voo_rea,
	@p_hh_voo_rea,
	@p_hh_mov,
	@p_user_id_created, 
	getdate(),		
	@p_date_changed, 
	@p_user_id_changed, 
	'0',
	@p_active_date, 
	0 ) 
	







GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upla_com]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upla_com    Script Date: 19/09/2008 15:20:43 ******/




CREATE  PROCEDURE [dbo].[usp_ins_upla_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(14),  
                 @p_type_cd              char(1),  
                 @p_seq_nbr              smallint,  
                 @p_text                 varchar(255),  
                 @p_chgstamp             smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_electronico_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upla_hist]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upla_hist    Script Date: 19/09/2008 15:20:43 ******/




CREATE  PROCEDURE [dbo].[usp_ins_upla_hist] 
               ( @p_chg_trans            char(8),  
                 @p_chg_type             char(1),  
                 @p_col_id               int,  
                 @p_data_chg_from        varchar(255),  
                 @p_data_chg_to          varchar(255),  
                 @p_user_id              char(10),  
                 @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(14) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_electroni_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_nro_selo_electronico,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upma]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upma    Script Date: 19/09/2008 15:20:43 ******/
-- drop proc usp_ins_upma 
CREATE  PROCEDURE [dbo].[usp_ins_upma] 
               ( @p_cd_aerop        		char(4), 
                 @p_cd_terminal     		char(10), 
                 @p_cd_cia_aerea    		char(3), 
                 @p_dt_voo          		datetime, 
                 @p_hr_voo          		char(4), 
                 @p_nro_voo         		char(5), 
                 @p_tp_natureza     		char(1), 
                 @p_tp_voo          		char(1), 
                 @p_pax_dom_fat     		int, 
                 @p_pax_int_fat     		int, 
                 @p_pax_tot_fat     		int, 
                 @p_pax_dom_vista   		int, 
                 @p_pax_int_vista   		int, 
                 @p_pax_tot_vista   		int, 
                 @p_pax_colo        		int, 
                 @p_pax_transito    		int, 
                 @p_pax_conexao_dom 		int, 
                 @p_pax_conexao_int 		int, 
                 @p_pax_iac2110     		int, 
                 @p_pax_tot_isento  		int, 
                 @p_pax_total       		int, 
                 @p_emb_bagagem_dom 		int, 
                 @p_emb_bagagem_int 		int, 
                 @p_emb_carga_dom   		int, 
                 @p_emb_carga_int   		int, 
                 @p_emb_correio_dom 		int, 
                 @p_emb_correio_int 		int, 
                 @p_rpax_participa  		char(15), 
                 @p_mt_aeronave     		char(10), 
                 @p_com_voo_gen        		varchar(250), 
                 @p_date_created    		datetime, 
                 @p_user_id_created 		char(30), 
                 @p_date_changed    		datetime, 
                 @p_user_id_changed 		char(30), 
                 @p_inactive_ind    		char(1), 
                 @p_active_date     		datetime ) 
AS 

DECLARE @ret int 
 EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

IF @p_active_date = ''
	SET @p_active_date = GETDATE()

IF @p_inactive_ind = '1' 
	SET @p_active_date = GETDATE()

If @p_user_id_created = '' or @p_user_id_created is null
Begin
	select @p_user_id_created = suser_sname()
End 

BEGIN  TRANSACTION

  INSERT INTO rpax_emb_voo_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              dt_voo, 
              hr_voo, 
              nro_voo, 
              tp_natureza, 
              tp_voo, 
              pax_dom_fat, 
              pax_int_fat, 
              pax_tot_fat, 
              pax_dom_vista, 
              pax_int_vista, 
              pax_tot_vista, 
              pax_colo, 
              pax_transito, 
              pax_conexao_dom, 
              pax_conexao_int, 
              pax_iac2110, 
              pax_tot_isento, 
              pax_total, 
              emb_bagagem_dom, 
              emb_bagagem_int, 
              emb_carga_dom, 
              emb_carga_int, 
              emb_correio_dom, 
              emb_correio_int, 
              rpax_participa, 
              mt_aeronave, 
             com_voo_gen, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_nro_voo, 
              @p_tp_natureza, 
              @p_tp_voo, 
              @p_pax_dom_fat, 
              @p_pax_int_fat, 
              @p_pax_tot_fat, 
              @p_pax_dom_vista, 
              @p_pax_int_vista, 
              @p_pax_tot_vista, 
              @p_pax_colo, 
              @p_pax_transito, 
              @p_pax_conexao_dom, 
              @p_pax_conexao_int, 
              @p_pax_iac2110, 
              @p_pax_tot_isento, 
              @p_pax_total, 
              @p_emb_bagagem_dom, 
              @p_emb_bagagem_int, 
              @p_emb_carga_dom, 
    @p_emb_carga_int, 
              @p_emb_correio_dom, 
              @p_emb_correio_int, 
              @p_rpax_participa, 
              @p_mt_aeronave, 
              @p_com_voo_gen , 
              getdate(),  --@p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              '0',   --@p_inactive_ind, 
              @p_active_date, 
              0 ) 
IF @@error <> 0
BEGIN
   ROLLBACK
   RAISERROR 20002 'Erro na transacao' 
   GOTO FIM
END
declare @p_tipo_output 	char(1)
	,@p_item_id_dom 		char(26)
	,@p_item_id_int 		char(26)

select @p_tipo_output 		= '1'
	,@p_item_id_dom 		= ''
	,@p_item_id_int 		= ''


delete rpax_itens_u
WHERE cd_aerop        		= @p_cd_aerop 
	AND cd_terminal     	= @p_cd_terminal 
	AND cd_cia_aerea    	= @p_cd_cia_aerea 
	AND dt_voo          	= @p_dt_voo 
	AND hr_voo          	= @p_hr_voo 
	AND nro_voo         	= @p_nro_voo 


EXEC psp_valida_item  
	@p_cd_aerop,      
	@p_cd_terminal,   
	'D',   
	@p_dt_voo ,       
	@p_tipo_output,               
	@p_item_id_dom                      output

EXEC psp_valida_item  
	@p_cd_aerop,      
	@p_cd_terminal,   
	'I',   
	@p_dt_voo ,       
	@p_tipo_output,               
	@p_item_id_int                      output

-- Incluindo A vista, Domestico
exec psp_ins_upd_itens_rpax 
	@p_cd_aerop         
	,@p_cd_terminal      
	,@p_cd_cia_aerea  
	,@p_nro_voo          
	,@p_dt_voo           
	,@p_hr_voo          
	,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
	,'D' --@p_tp_natureza   
	,@p_tp_voo          
	,'A' -- @p_tp_fat          
	,@p_pax_dom_vista --@p_pax_total       
	, @p_item_id_dom
IF @@error <> 0
BEGIN
   ROLLBACK
   RAISERROR 20002 'Erro na transacao' 
   GOTO FIM
END
-- Incluindo A vista,Internacional
EXEC    psp_ins_upd_itens_rpax 
  @p_cd_aerop         
 ,@p_cd_terminal      
 ,@p_cd_cia_aerea  
 ,@p_nro_voo          
 ,@p_dt_voo           
 ,@p_hr_voo          
 ,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
 ,'I' --@p_tp_natureza   
 ,@p_tp_voo          
 ,'A' -- @p_tp_fat          
 ,@p_pax_int_vista --@p_pax_total       
 , @p_item_id_int
IF @@error <> 0
BEGIN
   ROLLBACK
   RAISERROR 20002 'Erro na transacao' 
   GOTO FIM
END
-- Incluindo Faturado, Domestica
EXEC    psp_ins_upd_itens_rpax 
  @p_cd_aerop         
 ,@p_cd_terminal      
 ,@p_cd_cia_aerea  
 ,@p_nro_voo          
 ,@p_dt_voo           
 ,@p_hr_voo          
 ,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
 ,'D' --@p_tp_natureza   
 ,@p_tp_voo          
 ,'F' -- @p_tp_fat          
 ,@p_pax_dom_fat --@p_pax_total       
 ,@p_item_id_dom
IF @@error <> 0
BEGIN
   ROLLBACK
   RAISERROR 20002 'Erro na transacao' 
   GOTO FIM
END
-- Incluindo Faturado,Internacional
EXEC    psp_ins_upd_itens_rpax 
  @p_cd_aerop         
 ,@p_cd_terminal      
 ,@p_cd_cia_aerea  
 ,@p_nro_voo          
 ,@p_dt_voo           
 ,@p_hr_voo          
 ,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
 ,'I' --@p_tp_natureza   
 ,@p_tp_voo          
 ,'F' -- @p_tp_fat          
 ,@p_pax_int_fat --@p_pax_total       
 ,@p_item_id_int
IF @@error <> 0
BEGIN
   ROLLBACK
   RAISERROR 20002 'Erro na transacao'
   GOTO FIM
END
COMMIT TRANSACTION
FIM:












GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upma_com]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upma_com    Script Date: 19/09/2008 15:20:44 ******/


CREATE PROCEDURE [dbo].[usp_ins_upma_com] 
               ( @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_dt_voo        datetime,  
                 @p_hr_voo        char(4),  
                 @p_nro_voo       char(5),  
                 @p_type_cd       char(1),  
                 @p_seq_nbr       smallint,  
                 @p_text           varchar(255),  
                 @p_chgstamp      smallint ) 
AS 
    
    INSERT INTO rpax_emb_voo_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              dt_voo, 
              hr_voo, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_nro_voo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upma_hist]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upma_hist    Script Date: 19/09/2008 15:20:44 ******/


CREATE PROCEDURE [dbo].[usp_ins_upma_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_dt_voo        datetime,  
                 @p_hr_voo        char(4),  
                 @p_nro_voo       char(5) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_voo_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_cd_cia_aerea,  
              @p_dt_voo,  
              @p_hr_voo,  
              @p_nro_voo,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upn1]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upn1    Script Date: 19/09/2008 15:20:44 ******/



CREATE PROCEDURE [dbo].[usp_ins_upn1] 
			( @p_cd_aerop         char(4), 
			@p_dt_mov_ini       datetime, 
			@p_dt_mov_fim       datetime, 
			@p_com_quin_atu     int, 
			@p_com_quin_ant     int, 
			@p_com_quin_ano_ant int, 
			@p_tot_voo_no_per   int, 
			@p_tot_voo_conf     int, 
			@p_qua_sel_dis      int, 
			@p_qua_sel_pen      int, 
			@p_consideracoes    varchar(255), 
			@p_fl_val           char(1), 
			@p_user_res_val     varchar(30), 
			@p_dt_val           datetime, 
			@p_fl_aut           char(1), 
			@p_user_aut_fat     varchar(30), 
			@p_dt_aut           datetime,
			@p_qua_sel_dis_geral      int, 
			@p_qua_sel_pen_geral      int) 
AS 
DECLARE @ret int 
 EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

INSERT INTO pax_val_quinz_hdr_u 
	( cd_aerop, 
	dt_mov_ini, 
	dt_mov_fim, 
	com_quin_atu, 
	com_quin_ant, 
	com_quin_ano_ant, 
	tot_voo_no_per, 
	tot_voo_conf, 
	qua_sel_dis, 
	qua_sel_pen, 
	consideracoes, 
	fl_val, 
	user_res_val, 
	dt_val, 
	fl_aut, 
	user_aut_fat, 
	dt_aut, 
	qua_sel_dis_geral,
	qua_sel_pen_geral,
	chgstamp ) 
VALUES ( @p_cd_aerop, 
	@p_dt_mov_ini, 
	@p_dt_mov_fim, 
	@p_com_quin_atu, 
	@p_com_quin_ant, 
	@p_com_quin_ano_ant, 
	@p_tot_voo_no_per, 
	@p_tot_voo_conf, 
	@p_qua_sel_dis, 
	@p_qua_sel_pen, 
	@p_consideracoes, 
	@p_fl_val, 
	@p_user_res_val, 
	@p_dt_val, 
	@p_fl_aut, 
	@p_user_aut_fat, 
	@p_dt_aut, 
	@p_qua_sel_dis_geral,
	@p_qua_sel_pen_geral,
	0 ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upn1_com]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upn1_com    Script Date: 19/09/2008 15:20:44 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_upn1_com] 
               ( @p_cd_aerop   char(4),  
                 @p_dt_mov_ini datetime,  
                 @p_dt_mov_fim datetime,  
                 @p_type_cd    char(1),  
                 @p_seq_nbr    smallint,  
                 @p_text       varchar(255),  
                 @p_chgstamp   smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_quinz_hdr_u_comnt_u 
            ( cd_aerop, 
              dt_mov_ini, 
              dt_mov_fim, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_dt_mov_ini, 
              @p_dt_mov_fim, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upn1_hist]    Script Date: 01/05/2011 18:05:30 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upn1_hist    Script Date: 19/09/2008 15:20:44 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_upn1_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_dt_mov_ini    datetime,  
                 @p_dt_mov_fim    datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_quinz_hdr__history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_dt_mov_ini,  
              @p_dt_mov_fim,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upoa]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upoa    Script Date: 19/09/2008 15:20:45 ******/




CREATE   PROCEDURE [dbo].[usp_ins_upoa] 
			( @p_cd_aerop         	char(4), 
			@p_cd_terminal      	char(10), 
			@p_dt_entrega       	datetime, 
			@p_hh_entrega       	char(6),  
			@p_cd_cia_aerea     	char(3), 
			@p_nro_rste         	char(6), 
			@p_nro_selo_inicial 	char(10), 
			@p_nro_selo_final   	char(10), 
			@p_qtd_selos        	decimal(7,2), 
			@p_tp_fat           	char(1), 
			@p_ano_remesa			int,
			@p_date_created     	datetime, 
			@p_user_id_created  	char(30), 
			@p_date_changed     	datetime, 
			@p_user_id_changed 		Char(30), 
			@p_inactive_ind     	char(1), 
			@p_active_date      	datetime ) 
AS 
DECLARE 	@ret 			int 
	,@p_item_id 			char(26)
	,@p_tp_natureza 		char(1)

EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 

IF @p_active_date = ''
	SET @p_active_date = GETDATE()

IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
	SELECT @p_user_id_created =  suser_sname()		

BEGIN TRANSACTION
INSERT INTO pax_entrega_selo_line_u 
	( cd_aerop, 
	cd_terminal, 
	dt_entrega, 
	hh_entrega,
	cd_cia_aerea, 
	nro_rste, 
	nro_selo_inicial, 
	nro_selo_final, 
	qtd_selos, 
	tp_fat, 
	ano_remesa,
	date_created, 
	user_id_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp ) 
VALUES ( @p_cd_aerop, 
	@p_cd_terminal, 
	@p_dt_entrega, 
	@p_hh_entrega,
	@p_cd_cia_aerea, 
	@p_nro_rste, 
	@p_nro_selo_inicial, 
	@p_nro_selo_final, 
	@p_qtd_selos, 
	@p_tp_fat, 
	@p_ano_remesa,
	GETDATE(),		--@p_date_created, 
	@p_user_id_created, 
	@p_date_changed, 
	@p_user_id_changed, 
	'0',			--@p_inactive_ind, 
	@p_active_date, 
	0 ) 



SELECT @p_item_id = '', @p_tp_natureza = LEFT(@p_nro_selo_inicial,1)

SET ROWCOUNT 1 
SELECT @p_item_id = ISNULL(item_id,'')
FROM GEACutcx..cor_item_pax_u 	(NOLOCK)
WHERE cd_aerop      		= @p_cd_aerop 
	AND cd_terminal     	= @p_cd_terminal 
	AND tp_natureza     	= @p_tp_natureza 
	AND dt_vigencia			<= @p_dt_entrega
ORDER BY   dt_vigencia DESC
SET ROWCOUNT 0 

IF @p_item_id = ''
BEGIN
   ROLLBACK
   RAISERROR 26001 'Não se a especificado el item a Faturar' 
   GOTO FIM
END

/*
UPDATE GEACupax..pax_selo_u
SET item_fat 		= @p_item_id
        ,date_changed	= GETDATE()	
WHERE
     	nro_selo 	>=  @p_nro_selo_inicial
    AND nro_selo 	<=  @p_nro_selo_final


IF @@ROWCOUNT = 0 
BEGIN
   ROLLBACK
   RAISERROR 26002 'Não fue posible atualizar la tabela se Selos' 
   GOTO FIM
END
*/

COMMIT TRANSACTION

FIM:







GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upoa_com]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upoa_com    Script Date: 19/09/2008 15:20:45 ******/



CREATE PROCEDURE [dbo].[usp_ins_upoa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_hh_entrega       char(6),  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1),  
                 @p_seq_nbr          smallint,  
                 @p_text             varchar(255),  
                 @p_chgstamp         smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_entrega_selo_lin_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              hh_entrega, 
              cd_cia_aerea, 
              nro_rste, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_hh_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upoa_hist]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upoa_hist    Script Date: 19/09/2008 15:20:45 ******/



CREATE PROCEDURE [dbo].[usp_ins_upoa_hist] 
               ( @p_chg_trans        char(8),  
                 @p_chg_type         char(1),  
                 @p_col_id           int,  
                 @p_data_chg_from    varchar(255),  
                 @p_data_chg_to      varchar(255),  
                 @p_user_id          char(10),  
                 @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_hh_entrega       char(6),  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_entrega_selo_l_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_entrega,  
              @p_hh_entrega,  
              @p_cd_cia_aerea,  
              @p_nro_rste,  
              @p_nro_selo_inicial,  
              @p_nro_selo_final,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppa]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppa    Script Date: 19/09/2008 15:20:45 ******/

CREATE PROCEDURE [dbo].[usp_ins_uppa] 
			( @p_cd_aerop          char(4), 
			@p_cd_terminal       char(10), 
			@p_dt_mov            datetime, 
			@p_hh_mm             char(6), 
			@p_selo_status       char(1), 
			@p_cd_motivo         char(2), 
			@p_periodo_de        datetime, 
			@p_periodo_ate       datetime, 
			@p_cd_cia_aerea      char(3), 
			@p_nro_rste          char(6), 
			@p_nro_selo_inicial  char(10), 
			@p_nro_selo_final    char(10), 
			@p_qtd_selos         decimal(7,2), 
			@p_tp_baixa          char(1), 
			@p_fl_distribuidos       char(1), 
			@p_fl_utilizados       char(1), 
			@p_ano_remesa	int,	
			@p_fl_pendentes       char(1), 
			@p_date_created      datetime, 
			@p_user_id_created   char(30), 
			@p_date_changed      datetime, 
			@p_user_id_changed char(30), 
			@p_inactive_ind      char(1), 
			@p_active_date       datetime ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

IF @p_active_date = ''
	SET @p_active_date = GETDATE()
IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
	SELECT @p_user_id_created =  suser_sname()  

INSERT INTO pax_baixa_selecao_u 
	( cd_aerop, 
	cd_terminal, 
	dt_mov, 
	hh_mm, 
	selo_status, 
	cd_motivo, 
	periodo_de, 
	periodo_ate, 
	cd_cia_aerea, 
	nro_rste, 
	nro_selo_inicial, 
	nro_selo_final, 
	qtd_selos, 
	tp_baixa, 
	fl_distribuidos,
	fl_utilizados,
	ano_remesa,
	fl_pendentes,
	date_created, 
	user_id_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp ) 
VALUES ( @p_cd_aerop, 
	@p_cd_terminal, 
	@p_dt_mov, 
	@p_hh_mm, 
	@p_selo_status, 
	@p_cd_motivo, 
	@p_periodo_de, 
	@p_periodo_ate, 
	@p_cd_cia_aerea, 
	@p_nro_rste, 
	@p_nro_selo_inicial, 
	@p_nro_selo_final, 
	@p_qtd_selos, 
	@p_tp_baixa, 
	@p_fl_distribuidos,
	@p_fl_utilizados,
	@p_ano_remesa,
	@p_fl_pendentes,
	getdate(),  --@p_date_created, 
	@p_user_id_created, 
	@p_date_changed, 
	@p_user_id_changed, 
	'0',   --@p_inactive_ind, 
	@p_active_date, 
	0 )


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppa_com]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppa_com    Script Date: 19/09/2008 15:20:46 ******/


CREATE PROCEDURE [dbo].[usp_ins_uppa_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_type_cd     char(1),  
                 @p_seq_nbr     smallint,  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selecao_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppa_hist]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppa_hist    Script Date: 19/09/2008 15:20:46 ******/


CREATE PROCEDURE [dbo].[usp_ins_uppa_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_dt_mov        datetime,  
                 @p_hh_mm         char(6) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selecao__history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_hh_mm,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppa_tab]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppa_tab    Script Date: 19/09/2008 15:20:46 ******/

CREATE PROCEDURE [dbo].[usp_ins_uppa_tab]
               ( @p_cd_aerop         char(4),
                 @p_cd_terminal      char(10),
                 @p_dt_mov           datetime,
                 @p_selo_status      char(1),
                 @p_cd_motivo        char(2),
                 @p_periodo_de       datetime,
                 @p_periodo_ate      datetime,
                 @p_user_id          char(30),
                 @p_inactive_ind     char(1),
                 @p_nro_selo_inicial char(10),
                 @p_nro_selo_final   char(10) )
AS
  DECLARE @ret int
     EXEC @ret = sp_dbs_authenticate
  IF @ret != 0 RETURN
/*
  INSERT INTO pax_baixa_selecao_u
            ( cd_aerop,
              cd_terminal,
              dt_mov,
              selo_status,
              cd_motivo,
              periodo_de,
              periodo_ate,
              user_id,
              inactive_ind,
              nro_selo_inicial,
              nro_selo_final,
              chgstamp )
     VALUES ( @p_cd_aerop,
              @p_cd_terminal,
              @p_dt_mov,
              @p_selo_status,
              @p_cd_motivo,
              @p_periodo_de,
              @p_periodo_ate,
              @p_user_id,
              @p_inactive_ind,
              @p_nro_selo_inicial,
              @p_nro_selo_final,
              0 )
*/



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppb_com]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppb_com    Script Date: 19/09/2008 15:20:46 ******/


CREATE PROCEDURE [dbo].[usp_ins_uppb_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_selo_status char(1),  
                 @p_nro_selo    char(10),  
                 @p_type_cd     char(1),  
                 @p_seq_nbr     smallint,  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selos_baixa_sele_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
              selo_status, 
              nro_selo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
              @p_selo_status, 
              @p_nro_selo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppb_hist]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppb_hist    Script Date: 19/09/2008 15:20:47 ******/


CREATE PROCEDURE [dbo].[usp_ins_uppb_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_dt_mov        datetime,  
                 @p_hh_mm         char(6),  
                 @p_selo_status   char(1),  
                 @p_nro_selo      char(10) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selos_baixa_se_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_hh_mm,  
              @p_selo_status,  
              @p_nro_selo,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uppb_tab]    Script Date: 01/05/2011 18:05:31 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uppb_tab    Script Date: 19/09/2008 15:20:47 ******/


CREATE PROCEDURE [dbo].[usp_ins_uppb_tab] 
               ( @p_cd_aerop     char(4), 
                 @p_cd_terminal  char(10), 
                 @p_dt_mov       datetime, 
                 @p_hh_mm        char(5), 
                 @p_selo_status  char(1), 
                 @p_cd_motivo    char(2), 
                 @p_nro_selo     char(10), 
                 @p_inactive_ind char(1) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selecao_selos_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
              selo_status, 
              cd_motivo, 
              nro_selo, 
              inactive_ind, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
              @p_selo_status, 
              @p_cd_motivo, 
              @p_nro_selo, 
              @p_inactive_ind, 
              0 ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upqa]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_upqa    Script Date: 19/09/2008 15:20:47 ******/



CREATE PROCEDURE [dbo].[usp_ins_upqa] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_ano_rste         char(4), 
                 @p_ultimo_rste      int, 
                 @p_ultimo_rcld      int, 
                 @p_ultimo_rdev      int, 
                 @p_date_created     datetime, 
                 @p_user_id_created  char(30), 
                 @p_date_changed     datetime, 
                 @p_user_id_changed  char(30), 
                 @p_inactive_ind     char(1), 
                 @p_active_date      datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_param_rste_u 
            ( cd_aerop, 
              cd_terminal, 
              ano_rste, 
              ultimo_rste, 
              ultimo_rcld,
              ultimo_rdev,
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_ano_rste, 
              @p_ultimo_rste, 
              @p_ultimo_rcld,
              @p_ultimo_rdev,
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 




GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upqa_com]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upqa_com    Script Date: 19/09/2008 15:20:47 ******/


CREATE PROCEDURE [dbo].[usp_ins_upqa_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_ano_rste    char(4),  
                 @p_type_cd     char(1),  
                 @p_seq_nbr     smallint,  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_param_rste_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              ano_rste, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_ano_rste, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upra]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upra    Script Date: 19/09/2008 15:20:47 ******/



CREATE PROCEDURE [dbo].[usp_ins_upra] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(10), 
                 @p_hh_mov                 char(6), 
                 @p_tp_natureza            char(1), 
                 @p_selo_status            char(1), 
                 @p_cd_motivo              char(2), 
                 @p_tp_fat                 char(1), 
                 @p_cd_cia_aerea           char(3), 
                 @p_tp_unid                char(1), 
                 @p_dt_confirma            datetime, 
                 @p_cd_aerop_utilizacao    char(4), 
                 @p_cd_terminal_utilizacao char(10), 
                 @p_tp_coletor             char(16), 
                 @p_item_fat               char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date       datetime, 
                 @p_billing_int_type       char(1), 
                 @p_billing_user_1         char(10), 
                 @p_voo_rea                char(4), 
                 @p_dt_voo_rea             datetime, 
                 @p_hh_voo_rea             char(6), 
                 @p_date_created           datetime, 
                 @p_user_id_created        char(30), 
                 @p_date_changed           datetime, 
                 @p_user_id_changed        char(30), 
                 @p_inactive_ind           char(1), 
                 @p_active_date            datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_elec_dup_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              hh_mov, 
              tp_natureza, 
              selo_status, 
              cd_motivo, 
              tp_fat, 
              cd_cia_aerea, 
              tp_unid, 
              dt_confirma, 
              cd_aerop_utilizacao, 
              cd_terminal_utilizacao, 
              tp_coletor, 
              item_fat, 
              billing_line_id, 
              billing_int_date, 
              billing_int_type, 
              billing_user_1, 
              voo_rea, 
              dt_voo_rea, 
              hh_voo_rea, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_hh_mov, 
              @p_tp_natureza, 
              @p_selo_status, 
              @p_cd_motivo, 
              @p_tp_fat, 
              @p_cd_cia_aerea, 
              @p_tp_unid, 
              @p_dt_confirma, 
              @p_cd_aerop_utilizacao, 
              @p_cd_terminal_utilizacao, 
              @p_tp_coletor, 
              @p_item_fat, 
              @p_billing_line_id, 
              @p_billing_int_date, 
              @p_billing_int_type, 
              @p_billing_user_1, 
              @p_voo_rea, 
              @p_dt_voo_rea, 
              @p_hh_voo_rea, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upra_com]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upra_com    Script Date: 19/09/2008 15:20:47 ******/



CREATE PROCEDURE [dbo].[usp_ins_upra_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_hh_mov               char(6),  
                 @p_type_cd              char(1),  
                 @p_seq_nbr              smallint,  
                 @p_text                 varchar(255),  
                 @p_chgstamp             smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_elec_dup_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              hh_mov, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_hh_mov, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upra_hist]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upra_hist    Script Date: 19/09/2008 15:20:48 ******/



CREATE PROCEDURE [dbo].[usp_ins_upra_hist] 
               ( @p_chg_trans            char(8),  
                 @p_chg_type             char(1),  
                 @p_col_id               int,  
                 @p_data_chg_from        varchar(255),  
                 @p_data_chg_to          varchar(255),  
                 @p_user_id              char(10),  
                 @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_hh_mov               char(6) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_elec_dup__history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_nro_selo_electronico,  
              @p_hh_mov,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upsa]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upsa    Script Date: 19/09/2008 15:20:48 ******/



CREATE PROCEDURE [dbo].[usp_ins_upsa] 
               ( @p_cd_aerop                char(4), 
                 @p_cd_terminal             char(10), 
                 @p_cd_cia_aerea            char(3), 
                 @p_nro_voo                 char(5), 
                 @p_dt_voo                   datetime, 
                 @p_hr_voo                   char(4), 
                 @p_tp_rpax                  char(1), 
                 @p_recv_doc_id             char(22), 
                 @p_user_field_description  varchar(255), 
                 @p_item_id    char(26), 
                 @p_date_created            datetime, 
                 @p_user_id_created         char(30), 
                 @p_date_changed            datetime, 
                 @p_user_id_changed         char(30), 
                 @p_inactive_ind            char(1), 
                 @p_active_date             datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
  IF @p_active_date = ''
 SET @p_active_date = GETDATE()
  IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
 SELECT @p_user_id_created =  suser_sname()  
  INSERT INTO rpax_boleto_cancelado_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              nro_voo, 
              dt_voo, 
              hr_voo, 
              tp_rpax, 
              recv_doc_id, 
              user_field_description, 
              item_id, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_tp_rpax, 
              @p_recv_doc_id, 
              @p_user_field_description, 
              @p_item_id, 
              getdate(),  --@p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              '0',   --@p_inactive_ind, 
              @p_active_date, 
              0 ) 




GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upsa_com]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upsa_com    Script Date: 19/09/2008 15:20:48 ******/


CREATE PROCEDURE [dbo].[usp_ins_upsa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_tp_rpax      char(1),  
                 @p_recv_doc_id  char(22),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_boleto_cancelad_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              nro_voo, 
              dt_voo, 
              hr_voo, 
              tp_rpax, 
              recv_doc_id, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_tp_rpax, 
              @p_recv_doc_id, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upsa_hist]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upsa_hist    Script Date: 19/09/2008 15:20:48 ******/


CREATE PROCEDURE [dbo].[usp_ins_upsa_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_cd_terminal   char(10),  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_dt_voo        datetime,  
                 @p_hr_voo        char(4),  
                 @p_tp_rpax       char(1),  
                 @p_recv_doc_id   char(22) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_boleto_cancel_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_cd_cia_aerea,  
              @p_nro_voo,  
              @p_dt_voo,  
              @p_hr_voo,  
              @p_tp_rpax,  
              @p_recv_doc_id,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upsv]    Script Date: 01/05/2011 18:05:32 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upsv    Script Date: 19/09/2008 15:20:49 ******/


CREATE PROCEDURE [dbo].[usp_ins_upsv] 
               ( @p_cd_aerop             char(4), 
                 @p_cd_terminal          char(10), 
                 @p_cd_cia_aerea         char(3), 
                 @p_nro_voo              char(5), 
                 @p_dt_voo               datetime, 
                 @p_hr_voo               char(4), 
                 @p_tp_rpax              char(1), 
                 @p_recv_doc_id          char(22), 
                 @p_billing_line_id      int, 
                 @p_billing_int_date     datetime, 
                 @p_item_id              varchar(26), 
                 @p_item_descp           varchar(35), 
                 @p_recv_doc_status_code char(1) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO gvw_boletos_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              nro_voo, 
              dt_voo, 
              hr_voo, 
              tp_rpax, 
              recv_doc_id, 
              billing_line_id, 
              billing_int_date, 
              item_id, 
              item_descp, 
              recv_doc_status_code ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_tp_rpax, 
              @p_recv_doc_id, 
              @p_billing_line_id, 
              @p_billing_int_date, 
              @p_item_id, 
              @p_item_descp, 
              @p_recv_doc_status_code ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upta]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upta    Script Date: 19/09/2008 15:20:49 ******/



CREATE PROCEDURE [dbo].[usp_ins_upta] 
               ( @p_cd_aerop                char(4), 
                 @p_cd_terminal             char(10), 
                 @p_dt_mov                  datetime, 
                 @p_cd_cia_aerea            char(3), 
                 @p_nro_rste                 char(6), 
                 @p_nro_selo_inicial        char(10), 
                 @p_nro_selo_final          char(10), 
                 @p_tp_fat                   char(1), 
                 @p_recv_doc_id             char(22), 
                 @p_user_field_description  varchar(255), 
                 @p_item_id                  varchar(26), 
                 @p_date_created            datetime, 
                 @p_user_id_created         char(30), 
                 @p_date_changed            datetime, 
                 @p_user_id_changed         char(30), 
                 @p_inactive_ind            char(1), 
                 @p_active_date             datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  IF @p_active_date = ''
 SET @p_active_date = GETDATE()
  IF  @p_user_id_created IS NULL OR LTRIM(RTRIM(@p_user_id_created)) = ''                     
 SELECT @p_user_id_created =  suser_sname()  
  INSERT INTO selo_boleto_cancelado_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              cd_cia_aerea, 
              nro_rste, 
              nro_selo_inicial, 
              nro_selo_final, 
              tp_fat, 
              recv_doc_id, 
              user_field_description, 
              item_id, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_tp_fat, 
              @p_recv_doc_id, 
              @p_user_field_description, 
              @p_item_id, 
              GETDATE(),  --@p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              '0',   --@p_inactive_ind, 
              @p_active_date, 
              0 ) 




GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upta_com]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upta_com    Script Date: 19/09/2008 15:20:49 ******/


CREATE PROCEDURE [dbo].[usp_ins_upta_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_mov           datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_tp_fat           char(1),  
                 @p_recv_doc_id      char(22),  
                 @p_type_cd          char(1),  
                 @p_seq_nbr          smallint,  
                 @p_text             varchar(255),  
                 @p_chgstamp         smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO selo_boleto_cancelad_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              cd_cia_aerea, 
              nro_rste, 
              nro_selo_inicial, 
              nro_selo_final, 
              tp_fat, 
              recv_doc_id, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_tp_fat, 
              @p_recv_doc_id, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upta_hist]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upta_hist    Script Date: 19/09/2008 15:20:49 ******/


CREATE PROCEDURE [dbo].[usp_ins_upta_hist] 
               ( @p_chg_trans        char(8),  
                 @p_chg_type         char(1),  
                 @p_col_id           int,  
                 @p_data_chg_from    varchar(255),  
                 @p_data_chg_to      varchar(255),  
                 @p_user_id          char(10),  
                 @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_mov           datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_tp_fat           char(1),  
                 @p_recv_doc_id      char(22) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO selo_boleto_cancel_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_cd_cia_aerea,  
              @p_nro_rste,  
              @p_nro_selo_inicial,  
              @p_nro_selo_final,  
              @p_tp_fat,  
              @p_recv_doc_id,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upua]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upua    Script Date: 19/09/2008 15:20:49 ******/


CREATE PROCEDURE [dbo].[usp_ins_upua] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_dt_mov           datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_rste         char(6), 
                 @p_nro_selo_inicial char(10), 
                 @p_nro_selo_final   char(10), 
                 @p_tp_fat           char(1), 
                 @p_tp_natureza      char(1), 
                 @p_recv_doc_id      char(22), 
                 @p_item_id          varchar(26), 
                 @p_selo_status      char(1) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO gvw_selos_boletos_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              cd_cia_aerea, 
              nro_rste, 
              nro_selo_inicial, 
              nro_selo_final, 
              tp_fat, 
              tp_natureza, 
              recv_doc_id, 
              item_id, 
              selo_status ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_tp_fat, 
              @p_tp_natureza, 
              @p_recv_doc_id, 
              @p_item_id, 
              @p_selo_status ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upv3]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upv3    Script Date: 19/09/2008 15:20:49 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_upv3] 
               ( @p_nro_selo               char(10), 
                 @p_ano_remesa             int, 
                 @p_tp_natureza            char(1), 
                 @p_dt_mov                 datetime, 
                 @p_selo_status            char(1), 
                 @p_date_changed_char      char(20), 
                 @p_cd_motivo              char(2), 
                 @p_tp_fat                 char(1), 
                 @p_cd_cia_aerea           char(3), 
                 @p_tp_unid                char(1), 
                 @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_tp_unid_destino        char(1), 
                 @p_cd_aerop_destino       char(4), 
                 @p_cd_terminal_destino    char(10), 
                 @p_dt_confirma            datetime, 
                 @p_cd_aerop_utilizacao    char(4), 
                 @p_cd_terminal_utilizacao char(10), 
                 @p_nfm                    char(20), 
                 @p_nro_rste               char(6), 
                 @p_tp_coletor             char(16), 
                 @p_item_fat               char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date       datetime, 
                 @p_billing_int_type       char(1), 
                 @p_billing_user_1         char(10), 
                 @p_recv_doc_id            char(22), 
                 @p_date_created           datetime, 
                 @p_user_id_created        char(30), 
                 @p_user_id_changed        char(30), 
                 @p_inactive_ind           char(1), 
                 @p_active_date            datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO gvw_pax_selo_log_u 
            ( nro_selo, 
              ano_remesa, 
              tp_natureza, 
              dt_mov, 
              selo_status, 
              date_changed_char, 
              cd_motivo, 
              tp_fat, 
              cd_cia_aerea, 
              tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_confirma, 
              cd_aerop_utilizacao, 
              cd_terminal_utilizacao, 
              nfm, 
              nro_rste, 
              tp_coletor, 
              item_fat, 
              billing_line_id, 
              billing_int_date, 
              billing_int_type, 
              billing_user_1, 
              recv_doc_id, 
              date_created, 
              user_id_created, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_nro_selo, 
              @p_ano_remesa, 
              @p_tp_natureza, 
              @p_dt_mov, 
              @p_selo_status, 
              @p_date_changed_char, 
              @p_cd_motivo, 
              @p_tp_fat, 
              @p_cd_cia_aerea, 
              @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_confirma, 
              @p_cd_aerop_utilizacao, 
              @p_cd_terminal_utilizacao, 
              @p_nfm, 
              @p_nro_rste, 
              @p_tp_coletor, 
              @p_item_fat, 
              @p_billing_line_id, 
              @p_billing_int_date, 
              @p_billing_int_type, 
              @p_billing_user_1, 
              @p_recv_doc_id, 
              @p_date_created, 
              @p_user_id_created, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upv5]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upv5    Script Date: 19/09/2008 15:20:50 ******/



CREATE PROCEDURE [dbo].[usp_ins_upv5] 
               ( @p_cd_aerop             char(4), 
                 @p_cd_terminal          char(10), 
                 @p_dt_mov               datetime, 
                 @p_nro_selo_electronico char(10), 
                 @p_hh_mov               char(6), 
                 @p_user_id              char(20), 
                 @p_dt_time              datetime, 
                 @p_chg_trans            char(8), 
                 @p_chg_type             char(1), 
                 @p_col_id               int, 
                 @p_col_label            varchar(40), 
                 @p_data_chg_from        varchar(255), 
                 @p_data_chg_to          varchar(255), 
                 @p_activity_desc        varchar(40), 
                 @p_usuario              char(40) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO gvw_selos_sup_excluidos_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              hh_mov, 
              user_id, 
              dt_time, 
              chg_trans, 
              chg_type, 
              col_id, 
              col_label, 
              data_chg_from, 
              data_chg_to, 
              activity_desc, 
              usuario ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_hh_mov, 
              @p_user_id, 
              @p_dt_time, 
              @p_chg_trans, 
              @p_chg_type, 
              @p_col_id, 
              @p_col_label, 
              @p_data_chg_from, 
              @p_data_chg_to, 
              @p_activity_desc, 
              @p_usuario ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upv6]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upv6    Script Date: 19/09/2008 15:20:50 ******/


CREATE  PROCEDURE [dbo].[usp_ins_upv6] 
               ( @p_cd_aerop     char(4), 
                 @p_data_mov     datetime, 
                 @p_cd_cia_aerea char(3), 
                 @p_nro_voo      char(5) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
return
/*
  INSERT INTO pax_fiscal_dia_vw_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo ) 
     VALUES ( @p_cd_aerop, 
              data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo ) 
*/




GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upwa]    Script Date: 01/05/2011 18:05:33 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upwa    Script Date: 19/09/2008 15:20:50 ******/


CREATE PROCEDURE [dbo].[usp_ins_upwa] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_dt_entrega       datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_rdev         char(6), 
                 @p_nro_selo_inicial char(10), 
                 @p_nro_selo_final   char(10), 
                 @p_qtd_selos        float, 
                 @p_date_created     datetime, 
                 @p_user_id_created  char(30), 
                 @p_date_changed     datetime, 
                 @p_user_id_changed  char(30), 
                 @p_inactive_ind     char(1), 
                 @p_active_date      datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_line_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              cd_cia_aerea, 
              nro_rdev, 
              nro_selo_inicial, 
              nro_selo_final, 
              qtd_selos, 
              date_created, 
              user_id_created, 
              date_changed, 
              user_id_changed, 
              inactive_ind, 
              active_date, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rdev, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_qtd_selos, 
              @p_date_created, 
              @p_user_id_created, 
              @p_date_changed, 
              @p_user_id_changed, 
              @p_inactive_ind, 
              @p_active_date, 
              0 ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upwa_com]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upwa_com    Script Date: 19/09/2008 15:20:50 ******/


CREATE PROCEDURE [dbo].[usp_ins_upwa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rdev         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1),  
                 @p_seq_nbr          smallint,  
                 @p_text             varchar(255),  
                 @p_chgstamp         smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_line_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              cd_cia_aerea, 
              nro_rdev, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rdev, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upwa_hist]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upwa_hist    Script Date: 19/09/2008 15:20:50 ******/


CREATE PROCEDURE [dbo].[usp_ins_upwa_hist] 
               ( @p_chg_trans        char(8),  
                 @p_chg_type         char(1),  
                 @p_col_id           int,  
                 @p_data_chg_from    varchar(255),  
                 @p_data_chg_to      varchar(255),  
                 @p_user_id          char(10),  
                 @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rdev         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_line__history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_entrega,  
              @p_cd_cia_aerea,  
              @p_nro_rdev,  
              @p_nro_selo_inicial,  
              @p_nro_selo_final,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upz1_com]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upz1_com    Script Date: 19/09/2008 15:20:51 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_upz1_com] 
               ( @p_cd_aerop     char(4),  
                 @p_dt_mov_ini   datetime,  
                 @p_dt_mov_fim   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_valida_quinzena__comnt_u 
            ( cd_aerop, 
              dt_mov_ini, 
              dt_mov_fim, 
              cd_cia_aerea, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_dt_mov_ini, 
              @p_dt_mov_fim, 
              @p_cd_cia_aerea, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upz1_hist]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upz1_hist    Script Date: 19/09/2008 15:20:51 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_upz1_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_dt_mov_ini    datetime,  
                 @p_dt_mov_fim    datetime,  
                 @p_cd_cia_aerea  char(3) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_valida_quinzen_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_dt_mov_ini,  
              @p_dt_mov_fim,  
              @p_cd_cia_aerea,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upza]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upza    Script Date: 19/09/2008 15:20:51 ******/




CREATE  PROCEDURE [dbo].[usp_ins_upza] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(10), 
                 @p_date_changed_char      char(20), 
                 @p_tp_natureza            char(1), 
                 @p_selo_status            char(1), 
                 @p_cd_motivo              char(2), 
                 @p_tp_fat                 char(1), 
                 @p_cd_cia_aerea           char(3), 
                 @p_tp_unid                char(1), 
                 @p_dt_confirma            datetime, 
                 @p_cd_aerop_utilizacao    char(4), 
                 @p_cd_terminal_utilizacao char(10), 
                 @p_tp_coletor             char(16), 
                 @p_item_fat               char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date       datetime, 
                 @p_billing_int_type       char(1), 
                 @p_billing_user_1         char(10),
				 @p_voo_rea					char(4), 					
				 @p_dt_voo_rea				datetime,
				 @p_hh_voo_rea				char(6), 
                 @p_recv_doc_id            char(22), 
                 @p_date_created           datetime, 
                 @p_user_id_created        char(30), 
                 @p_user_id_changed        char(30), 
                 @p_inactive_ind           char(1), 
                 @p_active_date            datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO gvw_pax_selo_electronico_log_u 
			( cd_aerop, 
			cd_terminal, 
			dt_mov, 
			nro_selo_electronico, 
			date_changed_char, 
			tp_natureza, 
			selo_status, 
			cd_motivo, 
			tp_fat, 
			cd_cia_aerea, 
			tp_unid, 
			dt_confirma, 
			cd_aerop_utilizacao, 
			cd_terminal_utilizacao, 
			tp_coletor, 
			item_fat, 
			billing_line_id, 
			billing_int_date, 
			billing_int_type, 
			billing_user_1, 
			recv_doc_id, 
			voo_rea,
			dt_voo_rea,
			hh_voo_rea,
			date_created, 
			user_id_created, 
			user_id_changed, 
			inactive_ind, 
			active_date, 
			chgstamp ) 
     VALUES ( @p_cd_aerop, 
			@p_cd_terminal, 
			@p_dt_mov, 
			@p_nro_selo_electronico, 
			@p_date_changed_char, 
			@p_tp_natureza, 
			@p_selo_status, 
			@p_cd_motivo, 
			@p_tp_fat, 
			@p_cd_cia_aerea, 
			@p_tp_unid, 
			@p_dt_confirma, 
			@p_cd_aerop_utilizacao, 
			@p_cd_terminal_utilizacao, 
			@p_tp_coletor, 
			@p_item_fat, 
			@p_billing_line_id, 
			@p_billing_int_date, 
			@p_billing_int_type, 
			@p_billing_user_1, 
			@p_recv_doc_id, 
			@p_voo_rea,
			@p_dt_voo_rea,
			@p_hh_voo_rea,
			@p_date_created, 
			@p_user_id_created, 
			@p_user_id_changed, 
			@p_inactive_ind, 
			@p_active_date, 
			0 ) 



GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upza_com]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upza_com    Script Date: 19/09/2008 15:20:51 ******/



CREATE PROCEDURE [dbo].[usp_ins_upza_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_type_cd              char(1),  
                 @p_seq_nbr              smallint,  
                 @p_text                 varchar(255),  
                 @p_chgstamp             smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_electronico_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_upza_hist]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_upza_hist    Script Date: 19/09/2008 15:20:51 ******/



CREATE PROCEDURE [dbo].[usp_ins_upza_hist] 
               ( @p_chg_trans            char(8),  
                 @p_chg_type             char(1),  
                 @p_col_id               int,  
                 @p_data_chg_from        varchar(255),  
                 @p_data_chg_to          varchar(255),  
                 @p_user_id              char(10),  
                 @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_electroni_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_cd_terminal,  
              @p_dt_mov,  
              @p_nro_selo_electronico,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqaa]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqaa    Script Date: 19/09/2008 15:20:52 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqaa] 
               ( @p_cd_aerop         char(4), 
                 @p_data_mov         datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_voo          char(5), 
                 @p_fl_fiscalizado   char(1), 
                 @p_user_ficalizador char(30), 
                 @p_fl_validado      char(1), 
                 @p_user_validador   char(30) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_head_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo, 
              fl_fiscalizado, 
              user_ficalizador, 
              fl_validado, 
              user_validador, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_fl_fiscalizado, 
              @p_user_ficalizador, 
              @p_fl_validado, 
              @p_user_validador, 
              0 ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqaa_com]    Script Date: 01/05/2011 18:05:34 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqaa_com    Script Date: 19/09/2008 15:20:52 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqaa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_data_mov     datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_seq_nbr      smallint,  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_head_u_comnt_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqaa_com_adc]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqaa_com_adc    Script Date: 19/09/2008 15:20:52 ******/



CREATE PROCEDURE [dbo].[usp_ins_uqaa_com_adc] 
               ( @p_cd_aerop     char(4),  
                 @p_data_mov     datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5))

AS 
DECLARE @ret		int, 
     @p_type_cd		char(1),  
     @p_seq_nbr		smallint,  
     @p_text		varchar(255),  
     @p_chgstamp	smallint

EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

select @ret = isnull(max(seq_nbr) ,0)
from pax_fiscal_head_u_comnt_u 
where cd_aerop		= @p_cd_aerop 
and data_mov		= @p_data_mov
and cd_cia_aerea	= @p_cd_cia_aerea
and nro_voo			= @p_nro_voo

select @p_type_cd	= 'A'
	,@p_seq_nbr		= @ret + 1 
	,@p_text		= case when @ret = 0 then '****** Atualizado por: ' + ltrim(rtrim(suser_sname())) + ' no dia: ' + convert (varchar(10), getdate(), 103) + ' as: ' + convert (varchar(10), getdate(), 108)+ ' ******'
						else '  ****** Atualizado por: ' + ltrim(rtrim(suser_sname())) + ' no dia: ' + convert (varchar(10), getdate(), 103) + ' as: ' + convert (varchar(10), getdate(), 108) + ' ******' end 
	,@p_chgstamp     = 0

 
INSERT INTO pax_fiscal_head_u_comnt_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
VALUES ( @p_cd_aerop, 
              @p_data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_type_cd, 
              @ret + 1, 
              @p_text, 
              @p_chgstamp) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqaa_hist]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqaa_hist    Script Date: 19/09/2008 15:20:52 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqaa_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_head_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_data_mov,  
              @p_cd_cia_aerea,  
              @p_nro_voo,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqba]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqba    Script Date: 19/09/2008 15:20:52 ******/

/*

exec usp_ins_uqba 'SBBR', '20071009', 'TAM', '3444'

select * into pax_fiscal_det_u_bk_munoz_20071009 from pax_fiscal_det_u 
where cd_aerop	= 'SBBR'
and data_mov		= '20071009'

select * into pax_fiscal_head_u_u_bk_munoz_20071009 from pax_fiscal_head_u 
where cd_aerop	= 'SBBR'
and data_mov		= '20071009'

select * from pax_fiscal_head_u_u_bk_munoz_20071009

pax_fiscal_head_u
and cd_cia_aerea	= 'TAM'
and nro_voo		= 'TODOS'

order by 1,3,4,5,6,2
w
*/

CREATE       proc [dbo].[usp_ins_uqba]
	(@p_cd_aerop		char(4)
	,@p_data_mov		datetime
	,@p_cd_cia_aerea	char(3)
	,@p_nro_voo			char(5))
as

set nocount on 

/****************************************************/
/*  BUSCAR INFORMAÇÃO DA TABELAS DE SELOS E RPE     */
declare @v_selo_status	char(1)
	,@v_data_fim		datetime
	,@v_mes_dia			char(4)

select @v_selo_status	= '2'
	,@v_data_fim 		= dateadd(ms, -550, dateadd(dd, 1, @p_data_mov))
	,@v_mes_dia			= substring(convert(varchar(8), @p_data_mov,112),5,4)

set nocount on

create table  #table_xx_1
(	cd_aerop					char(4)
	,dt_mov						datetime
	,cd_cia_aerea				char(4)
	,voo_rea					char(6)
	,qtd_selo_electronico_d		int
	,qtd_selo_electronico_d_c	int
	,qtd_selo_electronico_i		int
	,qtd_selo_electronico_i_c	int
	,qtd_selo_fisico_d			int
	,qtd_selo_fisico_i			int
	,qtd_selo_d					int
	,qtd_selo_i					int	
	,qtd_total					int	
	,qtd_rpe					int
	,qtd_pax_conexao			int
	,qtd_pax_isento				int
	,qtd_dif					int)

create table  #table_xx_2
(	numero						integer IDENTITY 
	,cd_aerop					char(4)
	,dt_mov						datetime
	,cd_cia_aerea				char(4)
	,voo_rea					char(6)
	,qtd_selo_electronico_d		int
	,qtd_selo_electronico_d_c	int
	,qtd_selo_electronico_i		int
	,qtd_selo_electronico_i_c	int
	,qtd_selo_fisico_d			int
	,qtd_selo_fisico_i			int
	,qtd_selo_d					int
	,qtd_selo_i					int	
	,qtd_total					int	
	,qtd_rpe					int
	,qtd_pax_conexao			int
	,qtd_pax_isento				int
	,qtd_dif					int)


/*Buscar selos Fisicos*/
if @p_nro_voo = 'TODOS' or isnumeric(@p_nro_voo) = 1
begin
	insert into #table_xx_1
		select
		cd_aerop					= a.cd_aerop_utilizacao
		,dt_mov						= convert(varchar(8),a.dt_mov,112)
		,cd_cia_aerea				= a.cd_cia_aerea
		,voo_rea					= 'FISIC'
		,qtd_selo_electronico_d		= 0
		,qtd_selo_electronico_d_c	= 0
		,qtd_selo_electronico_i		= 0
		,qtd_selo_electronico_i_c	= 0
		,qtd_selo_fisico_d			= case when a.tp_natureza = 'D' then 1 else 0 end
		,qtd_selo_fisico_i			= case when a.tp_natureza = 'I' then 1 else 0 end
		,qtd_selo_d					= case when a.tp_natureza = 'D' then 1 else 0 end
		,qtd_selo_i					= case when a.tp_natureza = 'I' then 1 else 0 end	
		,qtd_total					= 1	
		,qtd_rpe					= 0
		,qtd_pax_conexao			= 0
		,qtd_pax_isento				= 0
		,qtd_dif					= 0
	from pax_selo_u	a (nolock index = IDX01_BI)
	where a.selo_status			= @v_selo_status
	and a.cd_aerop_utilizacao	= @p_cd_aerop
	and a.cd_cia_aerea 			= @p_cd_cia_aerea
	and a.dt_mov 				between @p_data_mov and @v_data_fim
	and a.tp_fat				= 'F'
end

if @p_nro_voo = 'TODOS'
begin
	/*Buscar selos Eletronicos*/
	insert into #table_xx_1
	select cd_aerop					= a.cd_aerop
		,dt_mov						= convert(char(4), year(a.dt_voo_rea)) + substring(a.nro_selo_electronico,8,4)
		,cd_cia_aerea				= a.cd_cia_aerea
		,voo_rea					= voo_rea
		,qtd_selo_electronico_d		= case when a.tp_natureza = 'D' and tp_coletor = '01' then 1 else 0 end
		,qtd_selo_electronico_d_c	= case when a.tp_natureza = 'D' and dt_confirma <> '19000101' then 1 else 0 end
		,qtd_selo_electronico_i		= case when a.tp_natureza = 'I' and tp_coletor = '01' then 1 else 0 end
		,qtd_selo_electronico_i_c	= case when a.tp_natureza = 'I' and dt_confirma <> '19000101' then 1 else 0 end
		,qtd_selo_fisico_d			= 0
		,qtd_selo_fisico_i			= 0
		,qtd_selo_d					= case when a.tp_natureza = 'D' then 1 else 0 end
		,qtd_selo_i					= case when a.tp_natureza = 'I' then 1 else 0 end	
		,qtd_total					= 1	
		,qtd_rpe					= 0
		,qtd_pax_conexao			= 0
		,qtd_pax_isento				= 0
		,qtd_dif					= 0
	from pax_selo_electronico_u	a (nolock index = IDX02_BI)
	where a.cd_aerop		= @p_cd_aerop
	and a.cd_cia_aerea 		= @p_cd_cia_aerea
	and year(a.dt_voo_rea)	= year(@p_data_mov)
	and substring(a.nro_selo_electronico,8,4) = @v_mes_dia
	and a.selo_status		= @v_selo_status
end 
else
begin
	insert into #table_xx_1
	select cd_aerop					= a.cd_aerop
		,dt_mov						= convert(char(4), year(a.dt_voo_rea)) + substring(a.nro_selo_electronico,8,4)
		,cd_cia_aerea				= a.cd_cia_aerea
		,voo_rea					= voo_rea
		,qtd_selo_electronico_d		= case when a.tp_natureza = 'D' and tp_coletor = '01' then 1 else 0 end
		,qtd_selo_electronico_d_c	= case when a.tp_natureza = 'D' and dt_confirma <> '19000101' then 1 else 0 end
		,qtd_selo_electronico_i		= case when a.tp_natureza = 'I' and tp_coletor = '01' then 1 else 0 end
		,qtd_selo_electronico_i_c	= case when a.tp_natureza = 'I' and dt_confirma <> '19000101' then 1 else 0 end
		,qtd_selo_fisico_d			= 0
		,qtd_selo_fisico_i			= 0
		,qtd_selo_d					= case when a.tp_natureza = 'D' then 1 else 0 end
		,qtd_selo_i					= case when a.tp_natureza = 'I' then 1 else 0 end	
		,qtd_total					= 1	
		,qtd_rpe					= 0
		,qtd_pax_conexao			= 0
		,qtd_pax_isento				= 0
		,qtd_dif					= 0
	from pax_selo_electronico_u	a (nolock index = IDX02_BI)
	where a.cd_aerop		= @p_cd_aerop
	and a.cd_cia_aerea 		= @p_cd_cia_aerea
	and year(a.dt_voo_rea)	= year(@p_data_mov)
	and substring(a.nro_selo_electronico,8,4) = @v_mes_dia
	and substring(a.nro_selo_electronico,4,4) = @p_nro_voo
	and a.selo_status		= @v_selo_status
end 

/*Buscar RPE*/
if @p_nro_voo = 'TODOS'
begin
	insert into #table_xx_1
	select cd_aerop					= a.cd_aerop
		,dt_mov						= dt_voo
		,cd_cia_aerea				= a.cd_cia_aerea
		,voo_rea					= convert(char(5),convert(int,nro_voo))
		,qtd_selo_electronico_d		= 0
		,qtd_selo_electronico_d_c	= 0
		,qtd_selo_electronico_i		= 0
		,qtd_selo_electronico_i_c	= 0
		,qtd_selo_fisico_d			= 0
		,qtd_selo_fisico_i			= 0
		,qtd_selo_d					= 0
		,qtd_selo_i					= 0
		,qtd_total					= 0	
		,qtd_rpe					= pax_tot_fat 
		,qtd_pax_conexao			= pax_conexao_dom + pax_conexao_int
		,qtd_pax_isento				= pax_tot_isento
		,qtd_dif					= 0
	from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
	where a.cd_aerop 		= @p_cd_aerop
	and a.cd_terminal 		= '1'
	and a.cd_cia_aerea		= @p_cd_cia_aerea
	and a.dt_voo			between @p_data_mov and @v_data_fim
	and a.inactive_ind		= '0'
	and a.tp_voo			<> '2'
end
else
begin
	insert into #table_xx_1
	select cd_aerop					= a.cd_aerop
		,dt_mov						= dt_voo
		,cd_cia_aerea				= a.cd_cia_aerea
		,voo_rea					= convert(char(5),convert(int,nro_voo))
		,qtd_selo_electronico_d		= 0
		,qtd_selo_electronico_d_c	= 0
		,qtd_selo_electronico_i		= 0
		,qtd_selo_electronico_i_c	= 0
		,qtd_selo_fisico_d			= 0
		,qtd_selo_fisico_i			= 0
		,qtd_selo_d					= 0
		,qtd_selo_i					= 0
		,qtd_total					= 0	
		,qtd_rpe					= pax_tot_fat 
		,qtd_pax_conexao			= pax_conexao_dom + pax_conexao_int
		,qtd_pax_isento				= pax_tot_isento
		,qtd_dif					= 0
	from rpax_emb_voo_u a (nolock index = P_rpax_emb_voo_u)
	where a.cd_aerop 			= @p_cd_aerop
	and a.cd_terminal 			= '1'
	and a.cd_cia_aerea			= @p_cd_cia_aerea
	and a.dt_voo				between @p_data_mov and @v_data_fim
	and ltrim(rtrim(a.nro_voo))	= ltrim(rtrim(@p_nro_voo))
	and a.inactive_ind			= '0'
	and a.tp_voo				<> '2'
end 


/*Calcular e mostar totais*/
INSERT INTO #table_xx_2 
	(cd_aerop
	,dt_mov		
	,cd_cia_aerea
	,voo_rea
	,qtd_selo_electronico_d		
	,qtd_selo_electronico_d_c	
	,qtd_selo_electronico_i		
	,qtd_selo_electronico_i_c	
	,qtd_selo_fisico_d
	,qtd_selo_fisico_i
	,qtd_selo_d
	,qtd_selo_i
	,qtd_total
	,qtd_rpe
	,qtd_pax_conexao
	,qtd_pax_isento
	,qtd_dif)
select cd_aerop
	,dt_mov
	,cd_cia_aerea
	,voo_rea
	,qtd_selo_electronico_d 	= sum(qtd_selo_electronico_d)
	,qtd_selo_electronico_d_c 	= sum(qtd_selo_electronico_d_c)
	,qtd_selo_electronico_i		= sum(qtd_selo_electronico_i)
	,qtd_selo_electronico_i_c	= sum(qtd_selo_electronico_i_c)
	,qtd_selo_fisico_d			= sum(qtd_selo_fisico_d)
	,qtd_selo_fisico_i			= sum(qtd_selo_fisico_i)
	,qtd_selo_d					= sum(qtd_selo_d)
	,qtd_selo_i					= sum(qtd_selo_i)
	,qtd_total					= sum(qtd_total)
	,qtd_rpe					= sum(qtd_rpe)
	,qtd_pax_conexao			= sum(qtd_pax_conexao)
	,qtd_pax_isento				= sum(qtd_pax_isento)
	,qtd_dif					= sum(qtd_rpe) - sum(qtd_total) 
from #table_xx_1 
group by cd_aerop
	,dt_mov
	,cd_cia_aerea
	,voo_rea
order by 1,2,3,4

/****************************************************/
/* COLOCAR INFORMAÇÃO NA TABELA DEFINITIVA          */

select * 
into #table_xx_3
from pax_fiscal_det_u
where cd_aerop 							= @p_cd_aerop
and convert(varchar(8),data_mov,112) 	= convert(varchar(8),@p_data_mov,112)
and cd_cia_aerea						= @p_cd_cia_aerea
and nro_voo								= @p_nro_voo 
and ( qtd_boa_ise_dom	<> 0
or qtd_boa_ise_int		<> 0
or qtd_boa_con_dom		<> 0
or qtd_boa_con_int		<> 0
or qtd_boa_emb_dom		<> 0
or qtd_boa_emb_int		<> 0
or qtd_man_ise_dom		<> 0
or qtd_man_ise_Int		<> 0
or qtd_man_con_dom		<> 0
or qtd_man_con_int		<> 0
or qtd_man_emb_dom		<> 0
or qtd_man_emb_int		<> 0
or qtd_man_tra_dom		<> 0
or qtd_man_tra_int		<> 0
or cont_bilhetes 		<> 0
or cont_man_voo 		<> 0
or cont_pax_aero		<> 0
or comentario			<> '')

--print @@rowcount

delete from pax_fiscal_det_u
where cd_aerop 							= @p_cd_aerop
and convert(varchar(8),data_mov,112) 	= convert(varchar(8),@p_data_mov,112)
and cd_cia_aerea						= @p_cd_cia_aerea
and nro_voo								= @p_nro_voo 

insert into pax_fiscal_det_u
select 
	@p_cd_aerop
	,@p_data_mov 
	,@p_cd_cia_aerea
	,@p_nro_voo
	,numero					-- numero
	,voo_rea				-- nro_voo_lista
	,qtd_selo_fisico_d		-- sel_lid_dom_fis
	,qtd_selo_electronico_d	-- sel_lid_dom_ele
	,qtd_selo_fisico_i		-- sel_lid_int_fis
	,qtd_selo_electronico_i	-- sel_lid_int_ele
	,qtd_selo_fisico_d + qtd_selo_fisico_i + qtd_selo_electronico_d	+ qtd_selo_electronico_i -- sel_lid_tot
	,qtd_selo_electronico_d_c	-- sel_conf_dom_ele
	,qtd_selo_electronico_i_c	-- sel_conf_int_ele
	,qtd_total				-- sel_tot_fat
	,qtd_rpe				-- tot_rpe
	,0				-- cont_bilhetes
	,0				-- cont_man_voo
	,0				-- cont_pax_aero
	,qtd_pax_isento	-- tot_pax_ise
	,case when qtd_total = qtd_rpe then 'S' else 'N' end	-- fl_voo_lib_fat
	,case when qtd_total = qtd_rpe or voo_rea = 'FISIC' then 'N' else 'S' end	-- fl_dados_inconsistentes
	,qtd_pax_conexao	-- qtd_pax_con
	,0				-- qtd_boa_ise_dom
	,0				-- qtd_boa_ise_int
	,0				-- qtd_boa_con_dom
	,0				-- qtd_boa_con_int
	,0				-- qtd_boa_emb_dom
	,0				-- qtd_boa_emb_int
	,0				-- qtd_man_ise_dom
	,0				-- qtd_man_ise_Int
	,0				-- qtd_man_con_dom
	,0				-- qtd_man_con_int
	,0				-- qtd_man_emb_dom
	,0				-- qtd_man_emb_int
	,0				-- qtd_man_tra_dom
	,0				-- qtd_man_tra_int
	,''				-- comentario
	,suser_sname()	-- matricula
	,getdate()		-- data_hora
	,0
from #table_xx_2 

update pax_fiscal_det_u
set qtd_boa_ise_dom			= b.qtd_boa_ise_dom
	,qtd_boa_ise_int		= b.qtd_boa_ise_int
	,qtd_boa_con_dom		= b.qtd_boa_con_dom
	,qtd_boa_con_int		= b.qtd_boa_con_int
	,qtd_boa_emb_dom		= b.qtd_boa_emb_dom
	,qtd_boa_emb_int		= b.qtd_boa_emb_int
	,qtd_man_ise_dom		= b.qtd_man_ise_dom
	,qtd_man_ise_Int		= b.qtd_man_ise_Int
	,qtd_man_con_dom		= b.qtd_man_con_dom
	,qtd_man_con_int		= b.qtd_man_con_int
	,qtd_man_emb_dom		= b.qtd_man_emb_dom
	,qtd_man_emb_int		= b.qtd_man_emb_int
	,qtd_man_tra_dom		= b.qtd_man_tra_dom
	,qtd_man_tra_int		= b.qtd_man_tra_int
	,cont_bilhetes			= b.cont_bilhetes
	,cont_man_voo			= b.cont_man_voo
	,cont_pax_aero			= b.cont_pax_aero
	,comentario				= b.comentario
from pax_fiscal_det_u a, #table_xx_3 b
where a.cd_aerop 						= b.cd_aerop
and convert(varchar(8),a.data_mov,112) 	= convert(varchar(8),b.data_mov,112)
and a.cd_cia_aerea						= b.cd_cia_aerea
and a.nro_voo							= b.nro_voo
and a.nro_voo_lista						= b.nro_voo_lista

--select * from #table_xx_3
--select * from #table_xx_2
--select * from #table_xx_1

drop table #table_xx_3
drop table #table_xx_2
drop table #table_xx_1 

set nocount off





GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqba_com]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqba_com    Script Date: 19/09/2008 15:20:53 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqba_com] 
               ( @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_numero        int,  
                 @p_nro_voo_lista char(5),  
                 @p_type_cd       char(1),  
                 @p_seq_nbr       smallint,  
                 @p_text          varchar(255),  
                 @p_chgstamp      smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_det_u_comnt_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo, 
              numero, 
              nro_voo_lista, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_numero, 
              @p_nro_voo_lista, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqba_hist]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqba_hist    Script Date: 19/09/2008 15:20:53 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqba_hist] 
               ( @p_chg_trans     char(8),  
                 @p_chg_type      char(1),  
                 @p_col_id        int,  
                 @p_data_chg_from varchar(255),  
                 @p_data_chg_to   varchar(255),  
                 @p_user_id       char(10),  
                 @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_numero        int,  
                 @p_nro_voo_lista char(5) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_det_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_data_mov,  
              @p_cd_cia_aerea,  
              @p_nro_voo,  
              @p_numero,  
              @p_nro_voo_lista,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqca]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqca    Script Date: 19/09/2008 15:20:53 ******/



CREATE PROCEDURE [dbo].[usp_ins_uqca] 
               ( @p_cd_aerop       char(4), 
                 @p_aurorizador_id char(30), 
                 @p_inactive_ind   char(1), 
                 @p_dt_inactive    datetime ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_qui_res_u 
            ( cd_aerop, 
              aurorizador_id, 
              inactive_ind, 
              dt_inactive, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_aurorizador_id, 
              @p_inactive_ind, 
              @p_dt_inactive, 
              0 ) 


GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqca_com]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqca_com    Script Date: 19/09/2008 15:20:53 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqca_com] 
               ( @p_cd_aerop       char(4),  
                 @p_aurorizador_id char(30),  
                 @p_type_cd        char(1),  
                 @p_seq_nbr        smallint,  
                 @p_text           varchar(255),  
                 @p_chgstamp       smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_qui_res_u_comnt_u 
            ( cd_aerop, 
              aurorizador_id, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_aurorizador_id, 
              @p_type_cd, 
              @p_seq_nbr, 
              @p_text, 
              @p_chgstamp ) 

GO

/****** Object:  StoredProcedure [dbo].[usp_ins_uqca_hist]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_ins_uqca_hist    Script Date: 19/09/2008 15:20:53 ******/

 
CREATE PROCEDURE [dbo].[usp_ins_uqca_hist] 
               ( @p_chg_trans      char(8),  
                 @p_chg_type       char(1),  
                 @p_col_id         int,  
                 @p_data_chg_from  varchar(255),  
                 @p_data_chg_to    varchar(255),  
                 @p_user_id        char(10),  
                 @p_cd_aerop       char(4),  
                 @p_aurorizador_id char(30) ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_qui_res_u_history_u 
     VALUES ( @p_user_id,  
               getdate(), 
              @p_cd_aerop,  
              @p_aurorizador_id,  
              @p_chg_trans,  
              @p_chg_type,  
              @p_col_id,  
              @p_data_chg_from,  
              @p_data_chg_to ) 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_rpax_faturado]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

/****** Object:  Stored Procedure dbo.usp_sel_rpax_faturado    ******/

 
CREATE PROCEDURE [dbo].[usp_sel_rpax_faturado] 
 ( @p_cd_aerop      char(4)
 ,@p_cd_terminal   char(10)
 ,@p_cd_cia_aerea  char(3)
 ,@p_nro_voo       char(5)
 ,@p_dt_voo        Varchar(10)
 ,@p_hr_voo        char(5))
As
If Exists ( 

Select * from rpax_itens_u Where 
      cd_aerop			= @p_cd_aerop
  and cd_terminal		= @p_cd_terminal
  and cd_cia_aerea		= @p_cd_cia_aerea
  and nro_voo			= @p_nro_voo
  and dt_voo			= Convert(DAtetime,@p_dt_voo)
  and hr_voo			= @p_hr_voo
  and billing_line_id	> 0
  --and tp_natureza		= @p_tp_natureza
  --and tp_fat			= @p_tp_fat
  --and tp_rpax			= 'V'
 
)
 Select 'Y'
Else 
 Select 'N'






	 
GO

/****** Object:  StoredProcedure [dbo].[usp_sel_transaction_id]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_transaction_id    Script Date: 19/09/2008 15:20:53 ******/


CREATE PROCEDURE [dbo].[usp_sel_transaction_id] 
 @p_transaction_id             char(45)   = " " output
,@p_result_ind     char(01)   = "Y"
AS
-- Declaracion de variables
declare @w_seq    int                        
declare @w_suid    smallint
declare @w_transaction_id               char(45)
declare @w_date_string                  varchar(30)
-- Asignacion de valores a las variables
select @w_seq                           = convert(int, uid)
from DBSwact..sysusers (NOLOCK)
where sid                              = suser_sid()
   
if @@rowcount                          = 0
begin
   select @w_seq                           = convert(int, uid)
     from sysusers (NOLOCK)
    where sid                              = suser_sid()
--   if @@rowcount                          = 0
--   begin
--      return 1
--   end
end  

select @w_seq=isnull(@w_seq,1)
 
select @w_date_string                   = convert(varchar(30), getdate(), 121)
select @w_transaction_id  = substring(@w_date_string,  1, 4)
                                        + substring(@w_date_string,  6, 2)
                                        + substring(@w_date_string,  9, 2)
                                        + substring(@w_date_string, 12, 2)
                                        + substring(@w_date_string, 15, 2)
                                        + substring(@w_date_string, 18, 2)
                                        + substring(@w_date_string, 21, 3)
                                        + right("000000" + ltrim(rtrim(convert(char(20), @w_seq))), 6)
select @p_transaction_id                = @w_transaction_id
if @p_result_ind                        = "Y"
begin
   select @p_transaction_id
end
return 0




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up1a]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up1a    Script Date: 19/09/2008 15:20:53 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_up1a] 
               ( @p_cd_cia_aerea    char(3), 
                 @p_dt_arquivo      datetime, 
                 @p_arquivo         char(255) ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_conf_baixa_selo__comnt_u 
               WHERE cd_cia_aerea    = @p_cd_cia_aerea 
                 AND dt_arquivo      = @p_dt_arquivo 
                 AND arquivo         = @p_arquivo) 
      SELECT @w_com_flg = "Y" 
  ELSE 
      SELECT @w_com_flg = "N" 
 
  SELECT cd_cia_aerea, 
         dt_arquivo, 
         arquivo, 
         qtd_selos, 
         status_arq, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_conf_baixa_selo_u 
   WHERE cd_cia_aerea    = @p_cd_cia_aerea 
     AND dt_arquivo      = @p_dt_arquivo 
     AND arquivo         = @p_arquivo 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up1a_com]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up1a_com    Script Date: 19/09/2008 15:20:54 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_up1a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_arquivo   datetime,  
                 @p_arquivo      char(255),  
                 @p_type_cd      char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_conf_baixa_selo__comnt_u 
   WHERE cd_cia_aerea = @p_cd_cia_aerea 
     AND dt_arquivo   = @p_dt_arquivo 
     AND arquivo      = @p_arquivo 
     AND type_cd      = @p_type_cd 
   ORDER  
      BY seq_nbr 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up2a]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up2a    Script Date: 19/09/2008 15:20:54 ******/



CREATE PROCEDURE [dbo].[usp_sel_up2a] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10), 
                 @p_cd_cia_aerea    char(3) ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_ini_ope_selo_ele_comnt_u 
               WHERE cd_aerop        = @p_cd_aerop 
                 AND cd_terminal     = @p_cd_terminal 
                 AND cd_cia_aerea    = @p_cd_cia_aerea) 
      SELECT @w_com_flg = "Y" 
  ELSE 
      SELECT @w_com_flg = "N" 
 
  SELECT cd_cia_aerea, 
         dt_inicio, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_ini_ope_selo_elet_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up2a_com]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up2a_com    Script Date: 19/09/2008 15:20:54 ******/



CREATE PROCEDURE [dbo].[usp_sel_up2a_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_ini_ope_selo_ele_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND type_cd      = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up2a_tab]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up2a_tab    Script Date: 19/09/2008 15:20:54 ******/



CREATE PROCEDURE [dbo].[usp_sel_up2a_tab] 
               ( @p_cd_aerop        char(4), 
                 @p_cd_terminal     char(10) ) 
AS 
  SELECT cd_cia_aerea, 
         dt_inicio, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp 
    FROM pax_ini_ope_selo_elet_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal     = @p_cd_terminal 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up3a]    Script Date: 01/05/2011 18:05:35 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up3a    Script Date: 19/09/2008 15:20:54 ******/



CREATE  PROCEDURE [dbo].[usp_sel_up3a] 
               ( @p_serial      char(9) ) 
AS 
DECLARE        @w_com_flg     char(1) 

IF EXISTS ( SELECT * 
                FROM pax_coletor_u_comnt_u 
               WHERE serial      = @p_serial) 
      SELECT @w_com_flg = "Y" 
ELSE 
      SELECT @w_com_flg = "N" 
 
SELECT a.serial, 
	a.dependencia, 
	a.sigla, 
	a.chgstamp, 
	@w_com_flg,
	isnull(b.dependencia_descp, ''),
 	isnull(c.no_aerop, '')
FROM pax_coletor_u a (nolock index = P_pax_coletor_u)
left join GEACrpt..infra_dependencias b(nolock)
on b.dependencia	= a.dependencia
left join GEACutcx..cor_aeroporto_u c(nolock index = P_cor_aeroporto_u)
on c.cd_aerop		= a.sigla
WHERE a.serial      = @p_serial 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up3a_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up3a_com    Script Date: 19/09/2008 15:20:55 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_up3a_com] 
               ( @p_serial     char(9),  
                 @p_type_cd    char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_coletor_u_comnt_u 
   WHERE serial     = @p_serial 
     AND type_cd    = @p_type_cd 
   ORDER  
      BY seq_nbr 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up6a]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up6a    Script Date: 19/09/2008 15:20:55 ******/






CREATE    PROCEDURE [dbo].[usp_sel_up6a] 
               ( @p_tp_unid             char(1), 
                 @p_cd_aerop            char(4), 
                 @p_cd_terminal         char(10), 
                 @p_tp_unid_destino     char(1), 
                 @p_cd_aerop_destino    char(4), 
                 @p_cd_terminal_destino char(10), 
                 @p_dt_devolucao        datetime, 
                 @p_nro_selo_inicial    char(10), 
                 @p_nro_selo_final      char(10) ) 
AS 
DECLARE        @w_com_flg             char(1) 

IF EXISTS ( SELECT * 
            FROM pax_remesa_dev_u_comnt_u 
           WHERE tp_unid             = @p_tp_unid 
             AND cd_aerop            = @p_cd_aerop 
             AND cd_terminal         = @p_cd_terminal 
             AND tp_unid_destino     = @p_tp_unid_destino 
             AND cd_aerop_destino    = @p_cd_aerop_destino 
             AND cd_terminal_destino = @p_cd_terminal_destino 
             AND dt_devolucao        = @p_dt_devolucao 
             AND nro_selo_inicial    = @p_nro_selo_inicial 
             AND nro_selo_final      = @p_nro_selo_final) 
	SELECT @w_com_flg = 'Y'
ELSE 
	SELECT @w_com_flg = 'N' 
 
SELECT tp_unid, 
	cd_aerop, 
	cd_terminal, 
	tp_unid_destino, 
	cd_aerop_destino, 
	cd_terminal_destino, 
	dt_devolucao, 
	nro_selo_inicial, 
	nro_selo_final, 
	motivo_dev, 
	dt_confirma,
	oper_confirma,
	qtd_selos,
	date_created, 
	user_id_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp, 
	@w_com_flg 
FROM pax_remesa_dev_u (index = P_pax_remesa_dev_u)
WHERE tp_unid             	= @p_tp_unid 
	AND cd_aerop            = @p_cd_aerop 
	AND cd_terminal         = @p_cd_terminal 
	AND tp_unid_destino     = @p_tp_unid_destino 
	AND cd_aerop_destino    = @p_cd_aerop_destino 
	AND cd_terminal_destino = @p_cd_terminal_destino 
	AND dt_devolucao        = @p_dt_devolucao 
	AND nro_selo_inicial    = @p_nro_selo_inicial 
	AND nro_selo_final      = @p_nro_selo_final 
 





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up6a_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up6a_com    Script Date: 19/09/2008 15:20:55 ******/



CREATE PROCEDURE [dbo].[usp_sel_up6a_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_devolucao        datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_remesa_dev_u_comnt_u 
   WHERE tp_unid             = @p_tp_unid 
     AND cd_aerop            = @p_cd_aerop 
     AND cd_terminal         = @p_cd_terminal 
     AND tp_unid_destino     = @p_tp_unid_destino 
     AND cd_aerop_destino    = @p_cd_aerop_destino 
     AND cd_terminal_destino = @p_cd_terminal_destino 
     AND dt_devolucao        = @p_dt_devolucao 
     AND nro_selo_inicial    = @p_nro_selo_inicial 
     AND nro_selo_final      = @p_nro_selo_final 
     AND type_cd             = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up7a]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up7a    Script Date: 19/09/2008 15:20:55 ******/





CREATE PROCEDURE [dbo].[usp_sel_up7a] 
               ( @p_cd_cia_aerea     char(3), 
                 @p_dt_inicio        datetime, 
                 @p_dt_final         datetime ) 
AS 
DECLARE        @w_com_flg          char(1) 

IF EXISTS ( SELECT * 
		FROM pax_cred_cia_u_comnt_u 
		WHERE cd_cia_aerea     = @p_cd_cia_aerea 
		AND dt_inicio        = @p_dt_inicio 
		AND dt_final         = @p_dt_final) 
	SELECT @w_com_flg = 'Y' 
ELSE 
	SELECT @w_com_flg = 'N' 

SELECT a.cd_cia_aerea, 
	a.dt_inicio, 
	a.dt_final, 
	a.valor, 
	a.justificativa, 
	a.processado, 
	a.dt_processamento, 
	a.nu_boleto_ss, 
	a.inactive_ind, 
	a.data_desativacao, 
	a.tp_natureza,
	a.chgstamp, 
	@w_com_flg,
	b.no_cia_aerea 
FROM pax_cred_cia_u a (nolock index = P_pax_cred_cia_u)
inner join GEACutcx..cor_cia_aerea_u  b (NOLOCK INDEX = P_cor_cia_aerea_u)
on b.cd_cia_aerea  = a.cd_cia_aerea
WHERE a.cd_cia_aerea     = @p_cd_cia_aerea 
AND a.dt_inicio        = @p_dt_inicio 
AND a.dt_final         = @p_dt_final 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_up7a_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_up7a_com    Script Date: 19/09/2008 15:20:56 ******/



CREATE PROCEDURE [dbo].[usp_sel_up7a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_inicio    datetime,  
                 @p_dt_final     datetime,  
                 @p_type_cd      char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_cred_cia_u_comnt_u 
   WHERE cd_cia_aerea = @p_cd_cia_aerea 
     AND dt_inicio    = @p_dt_inicio 
     AND dt_final     = @p_dt_final 
     AND type_cd      = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upaa]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upaa    Script Date: 19/09/2008 15:20:56 ******/



CREATE  PROCEDURE [dbo].[usp_sel_upaa] 
               ( @p_nro_selo               char(10), 
                 @p_ano_remesa             int ) 
AS 
  DECLARE        @w_com_flg                char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_selo_u_comnt_u 
               WHERE nro_selo               = @p_nro_selo 
                 AND ano_remesa             = @p_ano_remesa) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT nro_selo, 
         ano_remesa, 
         tp_natureza, 
         dt_mov, 
         selo_status, 
         cd_motivo, 
         tp_fat, 
         cd_cia_aerea, 
         tp_unid, 
         cd_aerop, 
         cd_terminal, 
         tp_unid_destino, 
         cd_aerop_destino, 
         cd_terminal_destino, 
         dt_confirma, 
         cd_aerop_utilizacao, 
         cd_terminal_utilizacao, 
         nfm, 
         nro_rste, 
         tp_coletor, 
         item_fat, 
         billing_line_id, 
         billing_int_date, 
         billing_int_type, 
         billing_user_1, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_selo_u 
   WHERE nro_selo               = @p_nro_selo 
     AND ano_remesa             = @p_ano_remesa 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upaa_2]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upaa_2    Script Date: 19/09/2008 15:20:56 ******/


CREATE  PROCEDURE [dbo].[usp_sel_upaa_2]
               ( @p_nro_selo_ini		char(10) 
   				,@p_nro_selo_fin		char(10)
				,@p_ano_remesa			int = 2005
) 
AS 
 
  SELECT TOP 1
         billing_line_id
    FROM GEACupax..pax_selo_u  (NOLOCK index = P_pax_selo_u)
   WHERE nro_selo between @p_nro_selo_ini and @p_nro_selo_fin
	and ano_remesa = @p_ano_remesa
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upaa_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upaa_com    Script Date: 19/09/2008 15:20:57 ******/


CREATE PROCEDURE [dbo].[usp_sel_upaa_com] 
               ( @p_nro_selo   char(10),  
                 @p_type_cd    char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_selo_u_comnt_u  (nolock)
   WHERE nro_selo   = @p_nro_selo 
     AND type_cd    = @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upba]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upba    Script Date: 19/09/2008 15:20:57 ******/


CREATE PROCEDURE [dbo].[usp_sel_upba] 
               ( @p_nro_selo                char(10), 
                 @p_tp_natureza        char(1), 
                 @p_dt_mov                datetime, 
                 @p_selo_status         char(1))
AS 
  DECLARE        @w_com_flg                char(1) 
 
      SELECT @w_com_flg = 'N' 
 
  SELECT tp_natureza, 
         dt_mov, 
         selo_status, 
         cd_motivo, 
         tp_fat, 
         cd_cia_aerea, 
         tp_unid, 
         cd_aerop, 
         cd_terminal, 
         tp_unid_destino, 
         cd_aerop_destino, 
         cd_terminal_destino, 
         dt_confirma, 
         cd_aerop_utilizacao, 
         cd_terminal_utilizacao, 
         nfm, 
         nro_rste, 
         tp_coletor, 
         item_fat, 
         billing_line_id, 
         billing_int_date, 
         billing_int_type, 
         billing_user_1, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_selo_log_u (nolock index = P_pax_selo_log_u)
   WHERE nro_selo                	= @p_nro_selo 
     AND tp_natureza             	= @p_tp_natureza 
     AND dt_mov                  	= @p_dt_mov 
     AND selo_status             	= @p_selo_status




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upba_tab]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upba_tab    Script Date: 19/09/2008 15:20:58 ******/


CREATE PROCEDURE [dbo].[usp_sel_upba_tab] 
               ( @p_nro_selo               char(10) ) 
AS 

  SELECT a.tp_natureza, 
         a.dt_mov, 
         a.selo_status, 
         cd_motivo = Rtrim(b.cd_motivo) + ' - ' + Rtrim(b.ds_motivocnc),
         a.tp_fat, 
         a.cd_cia_aerea, 
         a.tp_unid, 
         a.cd_aerop, 
         a.cd_terminal, 
         a.tp_unid_destino, 
         a.cd_aerop_destino, 
         a.cd_terminal_destino, 
         a.dt_confirma, 
         a.cd_aerop_utilizacao, 
         a.cd_terminal_utilizacao, 
         a.nfm, 
         a.nro_rste, 
         a.tp_coletor, 
         a.item_fat, 
         a.billing_line_id, 
         a.billing_int_date, 
         a.billing_int_type, 
         a.billing_user_1, 
         a.date_created, 
         a.user_id_created, 
         a.date_changed, 
         a.user_id_changed, 
         a.inactive_ind, 
         a.active_date, 
         a.chgstamp, 
         descp_tp_natureza  	= LTRIM(RTRIM(c.descp)),
         descp_tp_coletor   		= LTRIM(RTRIM(d.descp)),
         descp_tp_unid   		= LTRIM(RTRIM(e.descp)),
         descp_tp_unid_destino  	= LTRIM(RTRIM(f.descp))
    FROM GEACupax..pax_selo_log_u     a (NOLOCK INDEX = P_pax_selo_log_u)
    LEFT JOIN GEACutcx..cor_motivocnc_selo_u b (NOLOCK)
    On   a.cd_motivo  	= b.cd_motivo
    LEFT JOIN GEACCOMMON..dropdowndw_u c (NOLOCK INDEX = dropdowndw_u_ndx)
    ON  c.tbl_code  	= 'NTRZ'
    AND  c.code   	= a.tp_natureza  
    LEFT JOIN GEACCOMMON..dropdowndw_u d (NOLOCK INDEX = dropdowndw_u_ndx)
    ON  d.tbl_code  	= 'TPCL'
    AND  d.code   	= a.tp_coletor  
    LEFT JOIN GEACCOMMON..dropdowndw_u e (NOLOCK INDEX = dropdowndw_u_ndx)
    ON  e.tbl_code  	= 'TPUN'
    AND  e.code   	= a.tp_unid  
    LEFT JOIN GEACCOMMON..dropdowndw_u f (NOLOCK INDEX = dropdowndw_u_ndx)
    ON  f.tbl_code  	= 'TPUN'
    AND  f.code   	= a.tp_unid_destino  
   WHERE nro_selo         = @p_nro_selo 
   --ORDER BY            date_changed







GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upca]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upca    Script Date: 19/09/2008 15:20:58 ******/


CREATE PROCEDURE [dbo].[usp_sel_upca] 
               ( @p_tp_unid               		char(1), 
                 @p_cd_aerop              	char(4), 
                 @p_cd_terminal           	char(10), 
                 @p_tp_unid_destino      	char(1), 
                 @p_cd_aerop_destino     	char(4), 
                 @p_cd_terminal_destino  	char(10), 
                 @p_dt_remessa            	datetime, 
                 @p_nro_selo_inicial      	char(10), 
                 @p_nro_selo_final        	char(10) ) 
AS 
  DECLARE        @w_com_flg             char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_lote_selo_u_comnt_u (NOLOCK)
               WHERE tp_unid             	= @p_tp_unid 
                 AND cd_aerop            		= @p_cd_aerop 
                 AND cd_terminal         		= @p_cd_terminal 
                 AND tp_unid_destino     	= @p_tp_unid_destino 
                 AND cd_aerop_destino    	= @p_cd_aerop_destino 
                 AND cd_terminal_destino 	= @p_cd_terminal_destino 
                 AND dt_remessa          	= @p_dt_remessa 
                 AND nro_selo_inicial    	= @p_nro_selo_inicial 
                 AND nro_selo_final      	= @p_nro_selo_final) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT tp_unid, 
         cd_aerop, 
         cd_terminal, 
         tp_unid_destino, 
         cd_aerop_destino, 
         cd_terminal_destino, 
         dt_remessa, 
         nro_selo_inicial, 
         nro_selo_final, 
        convert(money, qtd_selos), 
         cd_situacao, 
         dt_confirma, 
         oper_confirma, 
         motivo_cnc, 
         nfm, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_lote_selo_u  (NOLOCK INDEX = P_pax_lote_selo_u)
   WHERE tp_unid             	= @p_tp_unid 
     AND cd_aerop            	= @p_cd_aerop 
     AND cd_terminal         	= @p_cd_terminal 
     AND tp_unid_destino     	= @p_tp_unid_destino 
     AND cd_aerop_destino    	= @p_cd_aerop_destino 
     AND cd_terminal_destino 	= @p_cd_terminal_destino 
     AND dt_remessa          	= @p_dt_remessa 
     AND nro_selo_inicial    	= @p_nro_selo_inicial 
     AND nro_selo_final      	= @p_nro_selo_final 
 






GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upca_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upca_com    Script Date: 19/09/2008 15:20:58 ******/


CREATE PROCEDURE [dbo].[usp_sel_upca_com] 
               ( @p_tp_unid             		char(1),  
                 @p_cd_aerop            		char(4),  
                 @p_cd_terminal         		char(10),  
                 @p_tp_unid_destino     	char(1),  
                 @p_cd_aerop_destino    	char(4),  
                 @p_cd_terminal_destino 	char(10),  
                 @p_dt_remessa          		datetime,  
                 @p_nro_selo_inicial    		char(10),  
                 @p_nro_selo_final      		char(10),  
                 @p_type_cd             		char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_lote_selo_u_comnt_u  (NOLOCK)
   WHERE tp_unid             	= @p_tp_unid 
     AND cd_aerop            	= @p_cd_aerop 
     AND cd_terminal         	= @p_cd_terminal 
     AND tp_unid_destino     	= @p_tp_unid_destino 
     AND cd_aerop_destino    	= @p_cd_aerop_destino 
     AND cd_terminal_destino 	= @p_cd_terminal_destino 
     AND dt_remessa          	= @p_dt_remessa 
     AND nro_selo_inicial    	= @p_nro_selo_inicial 
     AND nro_selo_final      	= @p_nro_selo_final 
     AND type_cd             		= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upea]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upea    Script Date: 19/09/2008 15:20:58 ******/





CREATE   PROCEDURE [dbo].[usp_sel_upea]
               ( @p_cd_aerop      	char(4),
                 @p_cd_terminal     	char(10),
                 @p_dt_mov          	datetime,
                 @p_hh_mm           	char(6),
                 @p_tp_selo           	char(1) ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_baixa_selo_u_comnt_u (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal     	= @p_cd_terminal 
                 AND dt_mov          	= @p_dt_mov 
                 AND hh_mm           	= @p_hh_mm
                 AND tp_selo           	= @p_tp_selo )
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
		cd_terminal, 
		dt_mov, 
		hh_mm, 
		tp_selo,
		selo_status, 
		arquivo, 
		cd_motivo, 
		qtd_selos, 
		tp_coletor, 
		tp_baixa, 
		status_arq,
		qtd_lineas_arq,	
		qtd_discrepancias, 
		qtd_lineas_erro,      
		qtd_discrepancias_tra,
		qtd_duplicados,
		date_created, 
		user_id_created, 
		date_changed, 
		user_id_changed, 
		inactive_ind, 
		active_date, 
		chgstamp, 
		@w_com_flg
    FROM pax_baixa_selo_u (NOLOCK INDEX = P_pax_baixa_selo_u)
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND dt_mov          	= @p_dt_mov 
     AND hh_mm           	= @p_hh_mm
     AND tp_selo           	= @p_tp_selo







GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upea_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upea_com    Script Date: 19/09/2008 15:20:58 ******/




CREATE PROCEDURE [dbo].[usp_sel_upea_com] 
               ( @p_cd_aerop    	char(4),  
                 @p_cd_terminal 	char(10),  
                 @p_dt_mov      	datetime,  
                 @p_hh_mm       	char(6),  
                 @p_type_cd     	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_baixa_selo_u_comnt_u  (NOLOCK)
   WHERE cd_aerop    	= @p_cd_aerop 
     AND cd_terminal 	= @p_cd_terminal 
     AND dt_mov      	= @p_dt_mov 
     AND hh_mm       	= @p_hh_mm 
     AND type_cd     	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upga]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upga    Script Date: 19/09/2008 15:20:58 ******/




CREATE   PROCEDURE [dbo].[usp_sel_upga] 
			( @p_cd_aerop         	char(4), 
			@p_cd_terminal      	char(10), 
			@p_dt_entrega       	datetime, 
			@p_hh_entrega       	char(6),   
			@p_cd_cia_aerea     	char(3), 
			@p_nro_rste         	char(6) ) 
AS 
DECLARE        @w_com_flg         char(1) 

IF EXISTS ( SELECT * 
			FROM pax_entrega_selo_ctr_comnt_u (NOLOCK)
			WHERE cd_aerop         		= @p_cd_aerop 
				AND cd_terminal      	= @p_cd_terminal 
				AND cd_cia_aerea     	= @p_cd_cia_aerea 
				AND dt_entrega       	= @p_dt_entrega 
				AND hh_entrega       	= @p_hh_entrega
				AND nro_rste         	= @p_nro_rste) 
  SELECT @w_com_flg = 'Y' 
ELSE 
  SELECT @w_com_flg = 'N'  

SELECT cd_aerop, 
     cd_terminal, 
     CONVERT(VARCHAR,dt_entrega,112),  --dt_entrega, 
	 hh_entrega,
     cd_cia_aerea, 
     nro_rste, 
     no_funcio, 
     cd_situacao_rste,
	 ano_remesa,
     date_created, 
     user_id_created, 
     date_changed, 
     user_id_changed, 
     inactive_ind, 
     active_date, 
     chgstamp, 
     @w_com_flg 
FROM pax_entrega_selo_ctrl_u (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
WHERE cd_aerop       		= @p_cd_aerop 
	AND cd_terminal      	= @p_cd_terminal 
	AND CONVERT(VARCHAR,dt_entrega,112)       = CONVERT(VARCHAR,@p_dt_entrega,112) 
	AND hh_entrega       	= @p_hh_entrega
	AND cd_cia_aerea   		= @p_cd_cia_aerea 
	AND nro_rste         	= @p_nro_rste 
 










GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upga_com]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upga_com    Script Date: 19/09/2008 15:20:59 ******/



CREATE PROCEDURE [dbo].[usp_sel_upga_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_hh_entrega   char(6),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rste     char(6),  
                 @p_type_cd      char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_entrega_selo_ctr_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND cd_terminal  = @p_cd_terminal 
     AND dt_entrega   = @p_dt_entrega 
     AND hh_entrega   = @p_hh_entrega 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND nro_rste     = @p_nro_rste 
     AND type_cd      = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upha]    Script Date: 01/05/2011 18:05:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upha    Script Date: 19/09/2008 15:20:59 ******/

Create Proc [dbo].[usp_sel_upha] (@cd_aerop char(4))
As
Create Table #temp (cd_aerop char(4))
Select * from #temp



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upha_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upha_com    Script Date: 19/09/2008 15:21:00 ******/


CREATE PROCEDURE [dbo].[usp_sel_upha_com] 
               ( @p_cd_aerop_destino    	char(4),  
                 @p_cd_terminal_destino 	char(10),  
                 @p_dt_mov              		datetime,  
                 @p_selo_status         		char(1),  
                 @p_nro_selo            		char(10),  
                 @p_type_cd             		char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_discrep_selo_u_comnt_u (NOLOCK)
   WHERE cd_aerop_destino    	= @p_cd_aerop_destino 
     AND cd_terminal_destino 	= @p_cd_terminal_destino 
     AND dt_mov              		= @p_dt_mov 
     AND selo_status         	= @p_selo_status 
     AND nro_selo            		= @p_nro_selo 
     AND type_cd             		= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upha_tab]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upha_tab    Script Date: 19/09/2008 15:21:00 ******/


CREATE PROCEDURE [dbo].[usp_sel_upha_tab] 
               ( @p_cd_aerop_destino    	char(4), 
                 @p_cd_terminal_destino 	char(10), 
                 @p_dt_mov              		datetime, 
                 @p_selo_status         		char(1) ) 
AS 
  SELECT nro_selo, 
         selo_status_ind, 
         cd_cia_aerea, 
         discrepancia, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp 
    FROM pax_discrep_selo_u (NOLOCK INDEX = P_pax_discrep_selo_u)
   WHERE cd_aerop_destino    	= @p_cd_aerop_destino 
     AND cd_terminal_destino 	= @p_cd_terminal_destino 
     AND dt_mov              		= @p_dt_mov 
     AND selo_status         	= @p_selo_status 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upia]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upia    Script Date: 19/09/2008 15:21:00 ******/


CREATE PROCEDURE [dbo].[usp_sel_upia] 
               ( @p_cd_aerop           	char(4), 
                 @p_cd_terminal        	char(10), 
                 @p_cd_cia_aerea      	char(3), 
                 @p_dt_voo             	datetime, 
                 @p_hr_voo             	char(4),
                 @p_nro_voo            	char(5)) 
AS 
  DECLARE        @w_com_flg           char(1) 
 
  IF EXISTS ( SELECT * 
                FROM rpax_desemb_u_comnt_u  (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal        	= @p_cd_terminal 
                 AND cd_cia_aerea     	= @p_cd_cia_aerea 
                 AND nro_voo            	= @p_nro_voo 
                 AND dt_voo             	= @p_dt_voo 
                 AND hr_voo             	= @p_hr_voo) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
         cd_terminal, 
         cd_cia_aerea, 
         dt_voo, 
         hr_voo, 
         nro_voo, 
         tp_natureza, 
         tp_voo, 
         mt_aeronave, 
         desem_pax_dom, 
         desem_pax_int, 
         desem_bagagem_dom, 
         desem_bagagem_int, 
         desem_carga_dom, 
         desem_carga_int, 
         desem_correio_dom, 
         desem_correio_int, 
         rpax_participa,  
         desem_pax_dom_conex,
         desem_pax_int_conex,
         desem_bagagem_dom_conex,
         desem_bagagem_int_conex,
         desem_carga_dom_conex,
         desem_carga_int_conex,
         desem_correio_dom_conex,
         desem_correio_int_conex,
         com_voo_gen,  
        date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM rpax_desemb_u (NOLOCK INDEX = P_rpax_desemb_u )
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal        	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo            	= @p_nro_voo 
     AND dt_voo             	= @p_dt_voo 
     AND hr_voo             	= @p_hr_voo 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upia_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upia_com    Script Date: 19/09/2008 15:21:00 ******/


CREATE PROCEDURE [dbo].[usp_sel_upia_com] 
               ( @p_cd_aerop     	char(4),  
                 @p_cd_terminal  	char(10),  
                 @p_cd_cia_aerea 	char(3),  
                 @p_dt_voo       	datetime,  
                 @p_hr_voo       	char(4),  
                 @p_nro_voo      	char(5),  
                 @p_type_cd      	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM rpax_desemb_u_comnt_u  (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND dt_voo       	= @p_dt_voo 
     AND hr_voo       	= @p_hr_voo 
     AND nro_voo      	= @p_nro_voo 
     AND type_cd      	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upj3_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upj3_com    Script Date: 19/09/2008 15:21:00 ******/


CREATE PROCEDURE [dbo].[usp_sel_upj3_com] 
               ( @p_cd_aerop     	char(4),  
                 @p_cd_terminal  	char(10),  
                 @p_tp_natureza  	char(1),  
                 @p_periodo_de   	datetime,  
                 @p_periodo_ate  	datetime,  
                 @p_cd_cia_aerea 	char(3),  
                 @p_dt_embarque  	datetime,  
                 @p_type_cd      	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM rpax_emb_dia_u_comnt_u  (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND tp_natureza  	= @p_tp_natureza 
     AND periodo_de   	= @p_periodo_de 
     AND periodo_ate  	= @p_periodo_ate 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND dt_embarque  	= @p_dt_embarque 
     AND type_cd      	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upj4_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upj4_com    Script Date: 19/09/2008 15:21:00 ******/


CREATE PROCEDURE [dbo].[usp_sel_upj4_com] 
               ( @p_cd_aerop     	char(4),  
                 @p_cd_terminal  	char(10),  
                 @p_cd_cia_aerea 	char(3),  
                 @p_tp_natureza  	char(1),  
                 @p_periodo_de   	datetime,  
                 @p_periodo_ate  	datetime,  
                 @p_dt_embarque  	datetime,  
                 @p_type_cd      	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM rpax_emb_dia_u_comnt_u (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND tp_natureza  	= @p_tp_natureza 
     AND periodo_de   	= @p_periodo_de 
     AND periodo_ate  	= @p_periodo_ate 
     AND dt_embarque  	= @p_dt_embarque 
     AND type_cd      	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upja]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upja    Script Date: 19/09/2008 15:21:01 ******/


CREATE PROCEDURE [dbo].[usp_sel_upja] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_cd_cia_aerea    	char(3), 
                 @p_tp_natureza     	char(1), 
                 @p_periodo_de      	datetime, 
                 @p_periodo_ate     	datetime, 
                 @p_dt_embarque     	datetime ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM rpax_emb_dia_u_comnt_u (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal     	= @p_cd_terminal 
                 AND cd_cia_aerea    	= @p_cd_cia_aerea 
                 AND tp_natureza     	= @p_tp_natureza 
                 AND periodo_de      	= @p_periodo_de 
                 AND periodo_ate     	= @p_periodo_ate 
                 AND dt_embarque     = @p_dt_embarque) 
      SELECT @w_com_flg = 'Y'
  ELSE 
      SELECT @w_com_flg = 'N'
 
  SELECT dt_embarque, 
         pax_total, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM rpax_emb_dia_u (NOLOCK INDEX = P_rpax_emb_dia_u)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND tp_natureza     	= @p_tp_natureza 
     AND periodo_de      	= @p_periodo_de 
     AND periodo_ate     	= @p_periodo_ate 
     AND dt_embarque     	= @p_dt_embarque 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upja_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upja_com    Script Date: 19/09/2008 15:21:01 ******/


CREATE PROCEDURE [dbo].[usp_sel_upja_com] 
               ( @p_cd_aerop   	char(4)  
            ,@p_cd_terminal  	char(10)
            ,@p_cd_cia_aerea 	char(3)
            ,@p_tp_natureza  	char(1)
            ,@p_periodo_de   	datetime
            ,@p_periodo_ate  	datetime
            ,@p_dt_embarque  	datetime 
                ,@p_type_cd    	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM rpax_emb_dia_u_comnt_u (NOLOCK)
   WHERE      cd_aerop     	= @p_cd_aerop 
   	and cd_terminal  	= @p_cd_terminal 
          	and cd_cia_aerea 	= @p_cd_cia_aerea
          	and tp_natureza  	= @p_tp_natureza  
          	and periodo_de   	= @p_periodo_de  
          	and periodo_ate  	= @p_periodo_ate
          	and dt_embarque  	= @p_dt_embarque
     	AND type_cd    		= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upja_tab]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upja_tab    Script Date: 19/09/2008 15:21:01 ******/


CREATE PROCEDURE [dbo].[usp_sel_upja_tab] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_cd_cia_aerea    	char(3), 
                 @p_tp_natureza     	char(1), 
                 @p_periodo_de      	datetime, 
                 @p_periodo_ate     	datetime ) 
AS 
  SELECT dt_embarque, 
         pax_total, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp 
    FROM rpax_emb_dia_u (NOLOCK INDEX = P_rpax_emb_dia_u)
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND tp_natureza     	= @p_tp_natureza 
     AND periodo_de      	= @p_periodo_de 
     AND periodo_ate     	= @p_periodo_ate 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upka]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upka    Script Date: 19/09/2008 15:21:01 ******/


CREATE PROCEDURE [dbo].[usp_sel_upka] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_dt_entrega      	datetime, 
                 @p_cd_cia_aerea    	char(3), 
                 @p_nro_rdev        	char(6) ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_dev_selo_ctrl_u_comnt_u (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal     	= @p_cd_terminal 
                 AND dt_entrega      	= @p_dt_entrega 
                 AND cd_cia_aerea    	= @p_cd_cia_aerea 
                 AND nro_rdev        	= @p_nro_rdev) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
         cd_terminal, 
         dt_entrega, 
         cd_cia_aerea, 
         nro_rdev, 
         arquivo, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_dev_selo_ctrl_u (NOLOCK INDEX = P_pax_dev_selo_ctrl_u )
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND dt_entrega      	= @p_dt_entrega 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_rdev        	= @p_nro_rdev 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upka_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upka_com    Script Date: 19/09/2008 15:21:01 ******/


CREATE PROCEDURE [dbo].[usp_sel_upka_com] 
               ( @p_cd_aerop     	char(4),  
                 @p_cd_terminal  	char(10),  
                 @p_dt_entrega   	datetime,  
                 @p_cd_cia_aerea 	char(3),  
                 @p_nro_rdev     	char(6),  
                 @p_type_cd      	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_dev_selo_ctrl_u_comnt_u  (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND dt_entrega   	= @p_dt_entrega 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND nro_rdev     	= @p_nro_rdev 
     AND type_cd      	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upla]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upla    Script Date: 19/09/2008 15:21:01 ******/








CREATE      PROCEDURE [dbo].[usp_sel_upla] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(14) ) 
AS 
DECLARE        @w_com_flg                char(1) 
 
IF EXISTS ( SELECT * 
            FROM pax_selo_electronico_comnt_u 
           WHERE cd_aerop               		= @p_cd_aerop 
             AND cd_terminal            		= @p_cd_terminal 
             AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
             AND nro_selo_electronico   		= @p_nro_selo_electronico) 
	SELECT @w_com_flg = 'Y' 
ELSE 
	SELECT @w_com_flg = 'N' 
 
SELECT nro_selo_electronico, 
	tp_natureza, 
	selo_status, 
	cd_motivo, 
	tp_fat, 
	cd_cia_aerea, 
	tp_unid, 
	dt_confirma, 
	cd_aerop_utilizacao, 
	cd_terminal_utilizacao, 
	tp_coletor, 
	item_fat, 
	billing_line_id, 
	billing_int_date, 
	billing_int_type, 
	billing_user_1, 
	voo_rea,
	dt_voo_rea,
	hh_voo_rea,
	hh_mov,
	date_created, 
	user_id_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp, 
	@w_com_flg 
FROM pax_selo_electronico_u (NOLOCK INDEX = P_pax_selo_electronico_u)
WHERE cd_aerop               		= @p_cd_aerop 
	AND cd_terminal            		= @p_cd_terminal 
	AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
	AND nro_selo_electronico   		= @p_nro_selo_electronico 
 






GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upla_com]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upla_com    Script Date: 19/09/2008 15:21:02 ******/





CREATE   PROCEDURE [dbo].[usp_sel_upla_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(14),  
                 @p_type_cd              char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_selo_electronico_comnt_u 
   WHERE cd_aerop             			= @p_cd_aerop 
     AND cd_terminal          			= @p_cd_terminal 
     AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
     AND nro_selo_electronico 			= @p_nro_selo_electronico 
     AND type_cd              			= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upla_tab]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upla_tab    Script Date: 19/09/2008 15:21:02 ******/





/*

exec usp_sel_upla_tab 'SBBR', '1', '20041112'

*/


CREATE      PROCEDURE [dbo].[usp_sel_upla_tab] 
	( 	@p_cd_aerop               char(4), 
		@p_cd_terminal            char(10), 
		@p_dt_mov                 datetime ) 
AS 
SELECT A.nro_selo_electronico 
	,A.tp_natureza 
	,A.selo_status 
	,A.cd_motivo 
	,A.tp_fat 
	,A.cd_cia_aerea 
	,A.tp_unid 
	,A.dt_confirma 
	,A.cd_aerop_utilizacao 
	,A.cd_terminal_utilizacao 
	,A.tp_coletor 
	,A.item_fat 
	,A.billing_line_id 
	,A.billing_int_date 
	,A.billing_int_type 
	,A.billing_user_1 
	,A.voo_rea
	,A.dt_voo_rea
	,A.hh_voo_rea
	,A.hh_mov	
	,A.date_created 
	,A.user_id_created 
	,A.date_changed 
	,A.user_id_changed 
	,A.inactive_ind 
	,A.active_date 
	,A.chgstamp
	,ds_natureza	= LTRIM(RTRIM(B.descp)) 
	,ds_selo_status	= LTRIM(RTRIM(C.descp)) 
	,ds_motivocnc	= LTRIM(RTRIM(ISNULL(D.ds_motivocnc,'')))
	,ds_tp_fat		= LTRIM(RTRIM(E.descp))
	,ds_cia_aerea	= LTRIM(RTRIM(F.no_cia_aerea))
	,ds_unid		= LTRIM(RTRIM(ISNULL(G.descp,'')))
	,ds_aerop_utilizacao = CASE WHEN A.cd_aerop_utilizacao IS NULL THEN '' ELSE A.cd_aerop_utilizacao + ' - ' + LTRIM(RTRIM(H.no_aerop)) END 
	,ds_tp_coletor	= LTRIM(RTRIM(I.descp))
FROM pax_selo_electronico_u A (nolock)
INNER JOIN GEACCOMMON..dropdowndw_u B (NOLOCK INDEX = PK_dropdowndw_u)
ON B.tbl_code			= 'NTRI'
AND B.code				= A.tp_natureza
INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
ON C.tbl_code			= 'STSL'
AND C.code				= A.selo_status
LEFT JOIN GEACutcx..cor_motivocnc_selo_u D (NOLOCK INDEX = P_cor_motivocnc_selo_u)
ON D.cd_motivo			= A.cd_motivo
INNER JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
ON E.tbl_code			= 'TPFT'
AND E.code				= A.tp_fat
INNER JOIN GEACutcx..cor_cia_aerea_u F (NOLOCK INDEX = P_cor_cia_aerea_u)
ON F.cd_cia_aerea		= A.cd_cia_aerea
LEFT JOIN GEACCOMMON..dropdowndw_u G (NOLOCK INDEX = PK_dropdowndw_u)
ON G.tbl_code			= 'TPUN'
AND G.code				= A.tp_unid
LEFT JOIN GEACutcx..cor_aeroporto_u H (NOLOCK INDEX = P_cor_aeroporto_u)
ON H.cd_aerop			= A.cd_aerop_utilizacao
INNER JOIN GEACCOMMON..dropdowndw_u I (NOLOCK INDEX = PK_dropdowndw_u)
ON I.tbl_code			= 'TPCL'
AND I.code				= A.tp_coletor
WHERE A.cd_aerop						= @p_cd_aerop 
	AND A.cd_terminal					= @p_cd_terminal 
	AND CONVERT(VARCHAR,A.dt_mov,112)	= @p_dt_mov 









GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upma]    Script Date: 01/05/2011 18:05:37 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upma    Script Date: 19/09/2008 15:21:02 ******/


CREATE PROCEDURE [dbo].[usp_sel_upma] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_cd_cia_aerea     	char(3), 
                 @p_dt_voo           	datetime, 
                 @p_hr_voo           	char(4), 
                 @p_nro_voo          	char(5) ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM rpax_emb_voo_u_comnt_u  (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal      	= @p_cd_terminal 
                 AND cd_cia_aerea     	= @p_cd_cia_aerea 
                 AND dt_voo           	= @p_dt_voo 
                 AND hr_voo           	= @p_hr_voo 
                 AND nro_voo          	= @p_nro_voo) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
         cd_terminal, 
         cd_cia_aerea, 
         dt_voo, 
         hr_voo, 
         nro_voo, 
         tp_natureza, 
         tp_voo, 
         pax_dom_fat, 
         pax_int_fat, 
         pax_tot_fat, 
         pax_dom_vista, 
         pax_int_vista, 
         pax_tot_vista, 
         pax_colo, 
         pax_transito, 
         pax_conexao_dom, 
         pax_conexao_int, 
         pax_iac2110, 
         pax_tot_isento, 
         pax_total, 
         emb_bagagem_dom, 
         emb_bagagem_int, 
         emb_carga_dom, 
         emb_carga_int, 
         emb_correio_dom, 
         emb_correio_int, 
         rpax_participa, 
         mt_aeronave, 
         com_voo_gen, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg
    FROM rpax_emb_voo_u  (NOLOCK INDEX = P_rpax_emb_voo_u )
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND nro_voo          	= @p_nro_voo 

select *  FROM rpax_emb_voo_u 
where cd_aerop = 'SBEG' and
cd_terminal = 2 and
cd_cia_aerea = 'TIB' and
dt_voo = '2010-04-18'
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upma_com]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upma_com    Script Date: 19/09/2008 15:21:02 ******/


CREATE PROCEDURE [dbo].[usp_sel_upma_com] 
               ( @p_cd_aerop     	char(4),  
                 @p_cd_terminal  	char(10),  
                 @p_cd_cia_aerea 	char(3),  
                 @p_dt_voo       	datetime,  
                 @p_hr_voo       	char(4),  
                 @p_nro_voo      	char(5),  
                 @p_type_cd      	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM rpax_emb_voo_u_comnt_u  (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND dt_voo       	= @p_dt_voo 
     AND hr_voo       	= @p_hr_voo 
     AND nro_voo      	= @p_nro_voo 
     AND type_cd      	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upn1]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_sel_upn1    Script Date: 19/09/2008 15:21:02 ******/


/*
exec usp_sel_upn1 'SBPA', '20080201', '20080215'
EXECUTE SQLSSIII.GEACupax.dbo.usp_sel_upn1 'SBBE', '20080516', '20080531'
*/

CREATE PROCEDURE [dbo].[usp_sel_upn1] 
               ( @p_cd_aerop         char(4), 
                 @p_dt_mov_ini       datetime, 
                 @p_dt_mov_fim       datetime ) 
AS 
DECLARE        @w_com_flg          char(1) 

IF EXISTS ( SELECT * 
			FROM pax_val_quinz_hdr_u_comnt_u 
			WHERE cd_aerop         = @p_cd_aerop 
			AND dt_mov_ini       = @p_dt_mov_ini 
			AND dt_mov_fim       = @p_dt_mov_fim) 
	SELECT @w_com_flg = 'Y' 
ELSE 
	SELECT @w_com_flg = 'N' 

SELECT TOP 1
	a.cd_aerop, 
	a.dt_mov_ini, 
	a.dt_mov_fim, 
	a.com_quin_atu, 
	a.com_quin_ant, 
	a.com_quin_ano_ant, 
	a.tot_voo_no_per, 
	a.tot_voo_conf, 
	a.qua_sel_dis, 
	a.qua_sel_pen, 
	a.consideracoes, 
	a.fl_val, 
	a.user_res_val,	--ltrim(rtrim(a.user_res_val)) + ' - ' + isnull(rtrim(ltrim(u1.first_name)) + ' ' + rtrim(ltrim(u1.last_name)), ''), 
	a.dt_val, 
	a.fl_aut, 
	a.user_aut_fat, --ltrim(rtrim(a.user_aut_fat)) + ' - ' + isnull(rtrim(ltrim(u2.first_name)) + ' ' + rtrim(ltrim(u2.last_name)), ''), 
	a.dt_aut, 
	a.qua_sel_dis_geral,
	a.qua_sel_pen_geral,
	a.chgstamp, 
	@w_com_flg,
	rtrim(b.no_aerop),
	isnull(c.dt_time, '19000101'),
	isnull(rtrim(ltrim(c.user_id)), '') + ' - ' + isnull(rtrim(ltrim(u3.first_name))  + ' ' +  rtrim(ltrim(u3.last_name)), ''),
	ltrim(rtrim(a.user_res_val)) + ' - ' + isnull(rtrim(ltrim(u1.first_name)) + ' ' + rtrim(ltrim(u1.last_name)), '') user_val,
	ltrim(rtrim(a.user_aut_fat)) + ' - ' + isnull(rtrim(ltrim(u2.first_name)) + ' ' + rtrim(ltrim(u2.last_name)), '') user_aut
FROM pax_val_quinz_hdr_u a
inner join GEACutcx..cor_aeroporto_u b
on b.cd_aerop			= a.cd_aerop
left join pax_val_quinz_hdr__history_u c
on c.cd_aerop			= a.cd_aerop
and c.dt_mov_ini		= a.dt_mov_ini
and c.dt_mov_fim		= a.dt_mov_fim
and c.chg_type			in ('M', 'A')
and c.chg_trans			= 'upa9931'
and c.col_id			in ('980979', '980980', '980981', '980982', '0')
and c.dt_time = (select max(d.dt_time) from pax_val_quinz_hdr__history_u d (nolock)
				where d.cd_aerop		= c.cd_aerop
				and d.dt_mov_ini		= c.dt_mov_ini
				and d.dt_mov_fim		= c.dt_mov_fim
				and d.chg_type			= c.chg_type
				and d.chg_trans			= 'upa9931'
				and d.col_id			= c.col_id)
left join DBSwact..user_master_1 u1 (nolock)
on u1.user_id			= a.user_res_val
left join DBSwact..user_master_1 u2 (nolock)
on u2.user_id			= a.user_aut_fat
left join DBSwact..user_master_1 u3 (nolock)
on substring(u3.user_id,1,10)	= c.user_id
WHERE a.cd_aerop				= @p_cd_aerop 
AND a.dt_mov_ini				= @p_dt_mov_ini 
AND a.dt_mov_fim				= @p_dt_mov_fim 
order by c.dt_time desc 





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upn1_com]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upn1_com    Script Date: 19/09/2008 15:21:02 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_upn1_com] 
               ( @p_cd_aerop   char(4),  
                 @p_dt_mov_ini datetime,  
                 @p_dt_mov_fim datetime,  
                 @p_type_cd    char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_val_quinz_hdr_u_comnt_u 
   WHERE cd_aerop   = @p_cd_aerop 
     AND dt_mov_ini = @p_dt_mov_ini 
     AND dt_mov_fim = @p_dt_mov_fim 
     AND type_cd    = @p_type_cd 
   ORDER  
      BY seq_nbr 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upn1_inf_adi]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_sel_upn1_inf_adi    Script Date: 19/09/2008 15:21:03 ******/




--exec usp_sel_upn1_inf_adi 'SBSP', '20070601', '20070615'

CREATE          procedure [dbo].[usp_sel_upn1_inf_adi]
	(@p_cd_aerop			char(4)
	,@p_dt_mov_ini			datetime
	,@p_dt_mov_fim			datetime)
as

declare @qtd_selos_pendentes	int
	,@qtd_selos_discrepancias	int
	,@p_qua_sel_dis_geral      	int 
	,@p_qua_sel_pen_geral      	int 
	,@qtd_voo					int
	,@qtd_selos_ano_anterior_f	int
	,@qtd_selos_ano_anterior_e	int
	,@qtd_selos_quiz_anterior_f	int
	,@qtd_selos_quiz_anterior_e	int
	,@p_dt_mov_ini_tem			datetime
	,@p_dt_mov_fim_tem			datetime
	,@p_fl_atualizar			char(1)
	,@p_tot_voo_conf			int


select @p_dt_mov_fim	= dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim))

-- rotina de validação inibida para possibilitar a validação até definição da regra. 
-- Adaili Dias em 08/01/2008
set @p_fl_atualizar		= 'S'
/*
if exists (select 1 from pax_selo_u (nolock index = pax_selo_fatura)
where billing_line_id 	<> 0
	and selo_status			= '2'
	and dt_mov 				between @p_dt_mov_ini and @p_dt_mov_fim
	and tp_fat				= 'F'
	and cd_aerop 			= @p_cd_aerop )

	set @p_fl_atualizar		= 'N'
else
	set @p_fl_atualizar		= 'S'
*/

if @p_fl_atualizar		= 'S'
begin
	select @qtd_selos_pendentes = count(1) 
	from pax_selo_u (nolock index = IDX01_BI)
	where selo_status	= '1'
	and dt_mov 			between @p_dt_mov_ini and @p_dt_mov_fim
	and cd_aerop 		= @p_cd_aerop
	and cd_terminal		= '1'
	
	select @qtd_selos_discrepancias = count(1) 
	from pax_discrep_selo_u (nolock index = P_pax_discrep_selo_u)
	where cd_aerop_destino 		= @p_cd_aerop
	and cd_terminal_destino		= '1'
	and dt_mov 					between @p_dt_mov_ini and @p_dt_mov_fim
	
	select @p_qua_sel_pen_geral = count(1) 
	from pax_selo_u (nolock index = IDX01_BI)
	where selo_status	= '1'
	and dt_mov 			<= @p_dt_mov_fim
	and cd_aerop 		= @p_cd_aerop
	and cd_terminal		= '1'
	
	select @p_qua_sel_dis_geral = count(1) 
	from pax_discrep_selo_u (nolock index = P_pax_discrep_selo_u)
	where cd_aerop_destino 		= @p_cd_aerop
	and cd_terminal_destino		= '1'
	and dt_mov 					<= @p_dt_mov_fim
	
	select @qtd_voo	= count(distinct convert(varchar(8),dt_voo,112) +  ltrim(rtrim(str(convert(int, nro_voo)))))
	from rpax_emb_voo_u (nolock index = P_rpax_emb_voo_u)
	where cd_aerop 		= @p_cd_aerop
	and cd_terminal		= '1'
	and dt_voo 			between @p_dt_mov_ini and @p_dt_mov_fim
	and inactive_ind	= '0'
	
	select 	@p_dt_mov_ini_tem 	= dateadd(yy, -1, @p_dt_mov_ini)
			,@p_dt_mov_fim_tem	= dateadd(yy, -1, @p_dt_mov_fim)
	
	select @qtd_selos_ano_anterior_f = count(1)
	from pax_selo_u (nolock index = IDX01_BI)
	where selo_status			= '2'
	and cd_aerop_utilizacao		= @p_cd_aerop
	and cd_terminal_utilizacao	= '1'
	and dt_mov					between @p_dt_mov_ini_tem and @p_dt_mov_fim_tem
	and tp_natureza				in ('D', 'I')
	
	select @qtd_selos_ano_anterior_e = count(1)
	from pax_selo_electronico_u (nolock index = P_pax_selo_electronico_u)
	where cd_aerop		= @p_cd_aerop
	and cd_terminal		='1'
	and dt_mov			between @p_dt_mov_ini_tem and @p_dt_mov_fim_tem
	and selo_status 	= '2'
	and tp_natureza		in ('D', 'I')	
	

	if day(@p_dt_mov_ini) = 1
	begin
		set @p_dt_mov_ini_tem = dateadd(mm, -1, @p_dt_mov_ini)
		set @p_dt_mov_ini_tem = dateadd(dd, 15, @p_dt_mov_ini_tem)
		select @p_dt_mov_fim_tem = dateadd(mm, 1, @p_dt_mov_ini_tem)
		select @p_dt_mov_fim_tem = dateadd(dd, -(day(@p_dt_mov_fim_tem)), @p_dt_mov_fim_tem)
	end
	else
	begin
		set @p_dt_mov_ini_tem = dateadd(dd, -15, @p_dt_mov_ini)			
		set @p_dt_mov_fim_tem = dateadd(dd, 14, @p_dt_mov_ini_tem)
	end 

	/*
	select 	@p_dt_mov_ini_tem 	= dateadd(dd, -15, @p_dt_mov_ini)

	if day(@p_dt_mov_ini_tem) > 1 and  day(@p_dt_mov_ini_tem) < 15
	begin
		set @p_dt_mov_ini_tem = left(convert(varchar(8), @p_dt_mov_ini_tem, 112), 6) + '01'
	end
	
	if day(@p_dt_mov_ini_tem) = 1 
	begin
		set @p_dt_mov_fim_tem = left(convert(varchar(8),@p_dt_mov_ini_tem,112), 6) + '15' 
		set @p_dt_mov_fim_tem = dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim_tem))
	end
	
	if day(@p_dt_mov_ini_tem) > 16 
	begin
		set @p_dt_mov_ini_tem = left(convert(varchar(8),@p_dt_mov_ini_tem,112), 6) + '16'
	end

	if day(@p_dt_mov_ini_tem) = 16 
	begin
		set @p_dt_mov_fim_tem = dateadd(dd, 15, @p_dt_mov_ini_tem)
		while month(@p_dt_mov_fim_tem) > month(@p_dt_mov_ini_tem)
		begin
			set @p_dt_mov_fim_tem = dateadd(dd, -1, @p_dt_mov_fim_tem)
		end
		set @p_dt_mov_fim_tem	= dateadd(ms, -15, dateadd(dd, 1, @p_dt_mov_fim_tem))
	end
	*/	
	
	select @qtd_selos_quiz_anterior_f = count(1)
	from pax_selo_u (nolock index = IDX01_BI)
	where selo_status			= '2'
	and cd_aerop_utilizacao		= @p_cd_aerop
	and cd_terminal_utilizacao	= '1'
	and dt_mov					between @p_dt_mov_ini_tem and @p_dt_mov_fim_tem
	and tp_natureza				in ('D', 'I')
	
	select @qtd_selos_quiz_anterior_e = count(1)
	from pax_selo_electronico_u (nolock index = P_pax_selo_electronico_u)
	where cd_aerop		= @p_cd_aerop
	and cd_terminal		='1'
	and dt_mov			between @p_dt_mov_ini_tem and @p_dt_mov_fim_tem
	and selo_status 	= '2'
	and tp_natureza				in ('D', 'I')	

	/* Ajuste 001: procurar quantidade de vôos fiscalizados */
	/* Data: 12/02/2008 */
	/* Responsavél: José Antonio Muñoz */
	select @p_tot_voo_conf		= count(1) 
	from pax_fiscal_det_u (nolock)
	where cd_aerop 			= @p_cd_aerop
	and data_mov 			between @p_dt_mov_ini and @p_dt_mov_fim
	and (cont_bilhetes + cont_man_voo + cont_pax_aero) > 0
	/* Fim Ajuste 001*/

	select qtd_selos_pendentes 		= @qtd_selos_pendentes	 		
		,qtd_selos_discrepancias	= @qtd_selos_discrepancias	
		,qtd_voo					= @qtd_voo					
		,qtd_selos_ano_anterior_e	= (@qtd_selos_ano_anterior_e + @qtd_selos_ano_anterior_f) 
		,qtd_selos_quiz_anterior	= (@qtd_selos_quiz_anterior_f + @qtd_selos_quiz_anterior_e) 
		,qua_sel_pen_geral			= @p_qua_sel_pen_geral
		,qua_sel_dis_geral			= @p_qua_sel_dis_geral
		,tot_voo_conf				= @p_tot_voo_conf	/* Ajuste 001 */
	
end
else
begin
	raiserror 26001 'Quinzena já faturada'
end




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upna]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upna    Script Date: 19/09/2008 15:21:03 ******/


CREATE PROCEDURE [dbo].[usp_sel_upna] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_cd_cia_aerea    	char(3), 
                 @p_nro_voo         	char(5), 
                 @p_dt_voo          	datetime, 
                 @p_hr_voo          	char(8) ) 
AS 
  SELECT cd_aerop, 
         cd_terminal, 
         cd_cia_aerea, 
         nro_voo, 
         dt_voo, 
         hr_voo, 
         tp_natureza, 
         tp_voo, 
         tp_fat, 
         pax_total, 
         item_fat, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         chgstamp 
    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upna_2]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upna_2    Script Date: 19/09/2008 15:21:03 ******/


CREATE PROCEDURE [dbo].[usp_sel_upna_2]
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_cd_cia_aerea     	char(3), 
                 @p_nro_voo          	char(5), 
                 @p_dt_voo           	datetime, 
                 @p_hr_voo           	char(8), 
                 @p_tp_natureza 	char(1) = '%') 
AS 
  SELECT cd_aerop
 ,cd_terminal
 ,cd_cia_aerea
 ,nro_voo
 ,dt_voo
 ,hr_voo
 ,tp_rpax
 ,tp_natureza
 ,tp_voo
 ,tp_fat
 ,pax_total
 ,item_fat
 ,billing_line_id
 ,billing_int_date
 ,billing_int_type
 ,billing_user_1
 ,date_created
 ,user_id_created
 ,date_changed
 ,user_id_changed
 ,chgstamp
    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND tp_fat   		= 'A'
     AND tp_natureza LIKE  @p_tp_natureza




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upna_3]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upna_3    Script Date: 19/09/2008 15:21:03 ******/

CREATE PROCEDURE [dbo].[usp_sel_upna_3]
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_cd_cia_aerea     	char(3), 
                 @p_nro_voo          	char(5), 
                 @p_dt_voo           	datetime, 
                 @p_hr_voo           	char(8) ) 
AS 
DECLARE   @billing_line_id_a_vista_dom  REAL
  ,@billing_line_id_a_vista_int  	REAL
  ,@billing_line_id_faturado_dom  	REAL
  ,@billing_line_id_faturado_int  	REAL
  ,@boleto_a_vista_dom   	CHAR(10)
  ,@boleto_a_vista_int   		CHAR(10)
  ,@boleto_faturado_dom   	CHAR(10)
  ,@boleto_faturado_int   	CHAR(10)

SELECT   @boleto_a_vista_dom  	= ''
  ,@boleto_a_vista_int  			= ''
  ,@boleto_faturado_dom  		= ''
  ,@boleto_faturado_int  			= ''

  SELECT @billing_line_id_a_vista_dom = ISNULL(billing_line_id,0)
    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND tp_fat   		= 'A'
     AND tp_natureza 	= 'D'

  SELECT @billing_line_id_a_vista_int = ISNULL(billing_line_id,0)
    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND tp_fat   		= 'A'
     AND tp_natureza 	= 'I'

  SELECT @billing_line_id_faturado_dom = ISNULL(billing_line_id,0)
    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND tp_fat   		= 'F'
     AND tp_natureza 	= 'D'

  SELECT @billing_line_id_faturado_int = ISNULL(billing_line_id,0)
    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND tp_fat   		= 'F'
     AND tp_natureza 	= 'I'

/*
SELECT @boleto_a_vista_dom = ISNULL(recv_doc_id, '')
FROM  GEACbl..gtb_billing_line_u (NOLOCK)
WHERE billing_line_id        = @billing_line_id_a_vista_dom
SELECT @boleto_a_vista_int = ISNULL(recv_doc_id, '')
FROM  GEACbl..gtb_billing_line_u (NOLOCK)
WHERE billing_line_id        = @billing_line_id_a_vista_int
SELECT @boleto_faturado_dom = ISNULL(recv_doc_id, '')
FROM GEACbl..gtb_billing_line_u  (NOLOCK)
WHERE billing_line_id        = @billing_line_id_faturado_dom
SELECT @boleto_faturado_int = ISNULL(recv_doc_id, '')
FROM GEACbl..gtb_billing_line_u  (NOLOCK)
WHERE billing_line_id        = @billing_line_id_faturado_int
*/

SELECT @boleto_a_vista_dom 	= Case @billing_line_id_a_vista_dom When 0 Then '' Else Str (@billing_line_id_a_vista_dom) End
SELECT @boleto_a_vista_int 	= Case @billing_line_id_a_vista_int When 0 Then '' Else Str (@billing_line_id_a_vista_int) End
SELECT @boleto_faturado_dom 	= Case @billing_line_id_faturado_dom When 0 Then '' Else Str (@billing_line_id_faturado_dom) End
SELECT @boleto_faturado_int 	= Case @billing_line_id_faturado_int When 0 Then '' Else Str (@billing_line_id_faturado_int) End

SELECT @billing_line_id_a_vista_dom
 ,@billing_line_id_a_vista_int
 ,@billing_line_id_faturado_dom
 ,@billing_line_id_faturado_int
 ,@boleto_a_vista_dom
 ,@boleto_a_vista_int
 ,@boleto_faturado_dom
 ,@boleto_faturado_int



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upoa]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upoa    Script Date: 19/09/2008 15:21:03 ******/



CREATE   PROCEDURE [dbo].[usp_sel_upoa]
			( @p_cd_aerop         	char(4), 
			@p_cd_terminal      	char(10), 
			@p_dt_entrega       	datetime,
			@p_hh_entrega       	char(6),    
			@p_cd_cia_aerea     	char(3), 
			@p_nro_rste         	char(6), 
			@p_nro_selo_inicial 	char(10), 
			@p_nro_selo_final   	char(10) ) 
AS 
	SELECT nro_selo_inicial, 
		nro_selo_final, 
		convert(money, qtd_selos), 
		tp_fat, 
		ano_remesa,
		date_created, 
		user_id_created, 
		date_changed, 
		user_id_changed, 
		inactive_ind, 
		active_date, 
		chgstamp 
	FROM pax_entrega_selo_line_u  (NOLOCK INDEX = P_pax_entrega_selo_line_u )
	WHERE cd_aerop        			= @p_cd_aerop 
		AND cd_terminal       		= @p_cd_terminal 
		AND CONVERT(VARCHAR,dt_entrega,112)       = CONVERT(VARCHAR,@p_dt_entrega,112) 
		AND hh_entrega       		= @p_hh_entrega
		AND cd_cia_aerea     		= @p_cd_cia_aerea 
		AND nro_rste          		= @p_nro_rste 
		AND nro_selo_inicial  		= @p_nro_selo_inicial 
		AND nro_selo_final    		= @p_nro_selo_final 
 








GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upoa_com]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upoa_com    Script Date: 19/09/2008 15:21:04 ******/



CREATE PROCEDURE [dbo].[usp_sel_upoa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_hh_entrega       char(6),  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_entrega_selo_lin_comnt_u 
   WHERE cd_aerop         = @p_cd_aerop 
     AND cd_terminal      = @p_cd_terminal 
     AND dt_entrega       = @p_dt_entrega 
     AND hh_entrega       = @p_hh_entrega 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rste         = @p_nro_rste 
     AND nro_selo_inicial = @p_nro_selo_inicial 
     AND nro_selo_final   = @p_nro_selo_final 
     AND type_cd          = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upoa_tab]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_sel_upoa_tab    Script Date: 19/09/2008 15:21:04 ******/

--EXECUTE SQLSSIII.GEACupax.dbo.usp_sel_upoa_tab 'SBCF', '1', '20040218', '000000', 'DMJ', '000187'

CREATE PROCEDURE [dbo].[usp_sel_upoa_tab] 
			( @p_cd_aerop          	char(4), 
			@p_cd_terminal       	char(10), 
			@p_dt_entrega        	datetime,
			@p_hh_entrega       	char(6), 
			@p_cd_cia_aerea      	char(3), 
			@p_nro_rste          	char(6) ) 
AS 
	SELECT a.nro_selo_inicial, 
		a.nro_selo_final, 
		qtd_selos = CONVERT(FLOAT, a.qtd_selos), 
		b.descp,
		a.ano_remesa,
		a.date_created, 
		a.user_id_created, 
		a.date_changed, 
		a.user_id_changed, 
		a.inactive_ind, 
		a.active_date, 
		a.chgstamp, 
		case when a.tp_fat = 'A' and d.cd_situacao_rste = '1' then c.billing_line_id else '0' end
	FROM pax_entrega_selo_line_u   a (NOLOCK INDEX = P_pax_entrega_selo_line_u)
	INNER JOIN GEACCOMMON..dropdowndw_u  b (NOLOCK INDEX = dropdowndw_u_ndx)
	ON  b.tbl_code     			= 'TPFT'
	AND b.code  				= a.tp_fat
	inner join pax_selo_u c (nolock index = P_pax_selo_u)
	on c.nro_selo  				= a.nro_selo_inicial
	and c.ano_remesa			= a.ano_remesa
	inner join pax_entrega_selo_ctrl_u   d (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
	on d.cd_aerop     			= a.cd_aerop
	AND d.cd_terminal      		= a.cd_terminal
	AND d.dt_entrega       		= a.dt_entrega
	AND d.hh_entrega       		= a.hh_entrega
	AND d.cd_cia_aerea  		= a.cd_cia_aerea
	AND d.nro_rste          	= a.nro_rste
	where a.cd_aerop     		= @p_cd_aerop 
		AND a.cd_terminal      	= @p_cd_terminal 
		AND CONVERT(VARCHAR,a.dt_entrega,112)       = CONVERT(VARCHAR,@p_dt_entrega,112) 
		AND a.hh_entrega       	= @p_hh_entrega
		AND a.cd_cia_aerea  	= @p_cd_cia_aerea 
		AND a.nro_rste          = @p_nro_rste 
	union all
	SELECT a.nro_selo_inicial, 
		a.nro_selo_final, 
		qtd_selos = CONVERT(FLOAT, a.qtd_selos), 
		b.descp,
		a.ano_remesa,
		a.date_created, 
		a.user_id_created, 
		a.date_changed, 
		a.user_id_changed, 
		a.inactive_ind, 
		a.active_date, 
		a.chgstamp, 
		case when a.tp_fat = 'A' and d.cd_situacao_rste = '1' then c.billing_line_id else '0' end
	FROM pax_entrega_selo_line_u   a (NOLOCK INDEX = P_pax_entrega_selo_line_u)
	INNER JOIN GEACCOMMON..dropdowndw_u  b (NOLOCK INDEX = dropdowndw_u_ndx)
	ON  b.tbl_code     			= 'TPFT'
	AND b.code  				= a.tp_fat
	inner join pax_selo_u_historica c (nolock index = P_pax_selo_u_historica)
	on c.nro_selo  				= a.nro_selo_inicial
	and c.ano_remesa			= a.ano_remesa
	inner join pax_entrega_selo_ctrl_u   d (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u)
	on d.cd_aerop     			= a.cd_aerop
	AND d.cd_terminal      		= a.cd_terminal
	AND d.dt_entrega       		= a.dt_entrega
	AND d.hh_entrega       		= a.hh_entrega
	AND d.cd_cia_aerea  		= a.cd_cia_aerea
	AND d.nro_rste          	= a.nro_rste
	where a.cd_aerop     		= @p_cd_aerop 
		AND a.cd_terminal      	= @p_cd_terminal 
		AND CONVERT(VARCHAR,a.dt_entrega,112)       = CONVERT(VARCHAR,@p_dt_entrega,112) 
		AND a.hh_entrega       	= @p_hh_entrega
		AND a.cd_cia_aerea  	= @p_cd_cia_aerea 
		AND a.nro_rste          = @p_nro_rste 



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uppa]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_sel_uppa    Script Date: 19/09/2008 15:21:04 ******/



CREATE PROCEDURE [dbo].[usp_sel_uppa] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_dt_mov           datetime, 
                 @p_hh_mm            char(6) ) 
AS 
DECLARE        @w_com_flg          char(1) 

IF EXISTS ( SELECT * 
			FROM pax_baixa_selecao_u_comnt_u (NOLOCK)
			WHERE cd_aerop         = @p_cd_aerop 
			 AND cd_terminal       	= @p_cd_terminal 
			 AND dt_mov            	= @p_dt_mov 
			 AND hh_mm             	= @p_hh_mm) 
	SELECT @w_com_flg = 'Y'
ELSE 
	SELECT @w_com_flg = 'N'

SELECT cd_aerop, 
	cd_terminal, 
	dt_mov, 
	hh_mm, 
	selo_status, 
	cd_motivo, 
	periodo_de, 
	periodo_ate, 
	cd_cia_aerea, 
	nro_rste, 
	nro_selo_inicial, 
	nro_selo_final, 
	convert(money, qtd_selos), 
	tp_baixa, 
	fl_distribuidos,
	fl_utilizados,
	ano_remesa,
	fl_pendentes,
	date_created, 
	user_id_created, 
	date_changed, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp, 
	@w_com_flg 
FROM pax_baixa_selecao_u  (NOLOCK INDEX = P_pax_baixa_selecao_u )
WHERE cd_aerop       	= @p_cd_aerop 
AND cd_terminal       	= @p_cd_terminal 
AND dt_mov            	= @p_dt_mov 
AND hh_mm             	= @p_hh_mm


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uppa_com]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uppa_com    Script Date: 19/09/2008 15:21:04 ******/


CREATE PROCEDURE [dbo].[usp_sel_uppa_com] 
               ( @p_cd_aerop    	char(4),  
                 @p_cd_terminal 	char(10),  
                 @p_dt_mov      	datetime,  
                 @p_hh_mm       	char(6),  
                 @p_type_cd     	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_baixa_selecao_u_comnt_u  (NOLOCK)
   WHERE cd_aerop    	= @p_cd_aerop 
     AND cd_terminal 	= @p_cd_terminal 
     AND dt_mov      	= @p_dt_mov 
     AND hh_mm       	= @p_hh_mm 
     AND type_cd     	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uppa_tab]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uppa_tab    Script Date: 19/09/2008 15:21:05 ******/

/****** Object:  Stored Procedure dbo.usp_sel_uppa_tab    Script Date: 6/11/2004 19:25:56 ******/

CREATE  PROCEDURE [dbo].[usp_sel_uppa_tab]
               ( @p_cd_aerop         	char(4),
                 @p_cd_terminal      	char(10),
                 @p_periodo_de        	datetime,
                 @p_periodo_ate       	datetime,
                 @p_cd_cia_aerea     	varchar(03),
                 @p_nro_rste         	varchar(06),
                 @p_nro_selo_inicial 	char(10),
                 @p_nro_selo_final   	char(10),
                 @p_transaction_id   	char(45))
AS
declare @w_exec                      	varchar(1000)
declare @w_qtd_selos                 int

/*
delete pax_baixa_selecao_temp_u 
where user_id                        =  suser_sname()
*/

if @p_periodo_ate                    	= '19000101'
begin
   select @p_periodo_ate		= '29990101'
end 
select @w_exec                       = "insert into pax_baixa_selecao_temp_u "
                                     + "select suser_sname(), "
                                     +         "'" + @p_transaction_id + "'," 
                                     +         "0, " 
                                     +         "nro_selo, " 
                                     +         "0 " 
                                     +         "from pax_selo_u (nolock index = P_pax_selo_u)" 
                                     +         "where cd_aerop                 = '" + @p_cd_aerop + "' " 
                                     +         "and   cd_terminal              = '" + @p_cd_terminal + "' " 
                                     +         "and   selo_status              = '1'"
                                     +         "and   dt_mov                  >= '" + convert(char(8), @p_periodo_de, 112) + "' "
                                     +         "and   dt_mov                  <= '" + convert(char(8), @p_periodo_ate, 112) + "' "
                                     +         "and   nro_selo                >= '" + @p_nro_selo_inicial + "' "
                                     +         "and   nro_selo                <= '" + @p_nro_selo_final + "' "
select @p_cd_cia_aerea               = isnull(@p_cd_cia_aerea, " ")
if @p_cd_cia_aerea                  <> " "
begin
  select @w_exec                    = @w_exec 
                                    +          "and   cd_cia_aerea          = '" + @p_cd_cia_aerea + "'"
end      
select @p_nro_rste                  = isnull(@p_nro_rste, " ")
if @p_nro_rste                     <> " "
begin
   select @w_exec                    = @w_exec 
                                    +          "and   nro_rste              = '" + @p_nro_rste + "'"
end      
set rowcount 50
exec(@w_exec)
select @w_qtd_selos                 = @@rowcount
select @w_qtd_selos                 = 3
set rowcount 0
select user_id,
       transaction_id,
       inactive_ind,
       nro_selo_inicial,
      @w_qtd_selos,
       chgstamp
from pax_baixa_selecao_temp_u 
where user_id                       = suser_sname()
and     transaction_id            = @p_transaction_id





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uppb_com]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uppb_com    Script Date: 19/09/2008 15:21:05 ******/


CREATE PROCEDURE [dbo].[usp_sel_uppb_com] 
               ( @p_cd_aerop    	char(4),  
                 @p_cd_terminal 	char(10),  
                 @p_dt_mov      	datetime,  
                 @p_hh_mm       	char(6),  
                 @p_selo_status 	char(1),  
                 @p_nro_selo    	char(10),  
                 @p_type_cd     	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_selos_baixa_sele_comnt_u  (NOLOCK)
   WHERE cd_aerop    	= @p_cd_aerop 
     AND cd_terminal 	= @p_cd_terminal 
     AND dt_mov      	= @p_dt_mov 
     AND hh_mm       	= @p_hh_mm 
     AND selo_status 	= @p_selo_status 
     AND nro_selo    	= @p_nro_selo 
     AND type_cd     	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uppb_tab]    Script Date: 01/05/2011 18:05:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uppb_tab    Script Date: 19/09/2008 15:21:05 ******/


CREATE PROCEDURE [dbo].[usp_sel_uppb_tab] 
               ( @p_cd_aerop     	char(4), 
                 @p_cd_terminal  	char(10), 
                 @p_dt_mov       	datetime, 
                 @p_hh_mm        	char(5), 
                 @p_selo_status  	char(1), 
                 @p_cd_motivo    	char(2), 
                 @p_nro_selo     	char(10) = NULL ) 
AS 
 
IF @p_nro_selo != NULL 
  SELECT nro_selo, 
         inactive_ind, 
         chgstamp 
    FROM pax_baixa_selecao_selos_u (NOLOCK INDEX = P_P_pax_baixa_selecao_selos_u)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal   	= @p_cd_terminal 
     AND dt_mov        	= @p_dt_mov 
     AND hh_mm         	= @p_hh_mm 
     AND selo_status   	= @p_selo_status 
     AND cd_motivo     	= @p_cd_motivo 
     AND nro_selo      	= @p_nro_selo 
 
ELSE 
  SELECT nro_selo, 
         inactive_ind, 
         chgstamp 
    FROM pax_baixa_selecao_selos_u (NOLOCK INDEX = P_P_pax_baixa_selecao_selos_u)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal   	= @p_cd_terminal 
     AND dt_mov        	= @p_dt_mov 
     AND hh_mm         	= @p_hh_mm 
     AND selo_status   	= @p_selo_status 
     AND cd_motivo     	= @p_cd_motivo




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upqa]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upqa    Script Date: 19/09/2008 15:21:05 ******/


CREATE PROCEDURE [dbo].[usp_sel_upqa] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_ano_rste        	char(4) ) 
AS 
  DECLARE        @w_com_flg         char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_param_rste_u_comnt_u  (NOLOCK)
               WHERE cd_aerop         = @p_cd_aerop 
                 AND cd_terminal      	= @p_cd_terminal 
                 AND ano_rste         	= @p_ano_rste) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
         cd_terminal, 
         ano_rste, 
         ultimo_rste, 
         ultimo_rcld, 
         ultimo_rdev, 
        date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_param_rste_u (NOLOCK INDEX = P_pax_param_rste_u )
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND ano_rste         	= @p_ano_rste 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upqa_com]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upqa_com    Script Date: 19/09/2008 15:21:05 ******/


CREATE PROCEDURE [dbo].[usp_sel_upqa_com] 
               ( @p_cd_aerop    	char(4),  
                 @p_cd_terminal 	char(10),  
                 @p_ano_rste    	char(4),  
                 @p_type_cd     	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_param_rste_u_comnt_u  (NOLOCK)
   WHERE cd_aerop    	= @p_cd_aerop 
     AND cd_terminal 	= @p_cd_terminal 
     AND ano_rste    	= @p_ano_rste 
     AND type_cd     	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upra]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upra    Script Date: 19/09/2008 15:21:06 ******/




CREATE  PROCEDURE [dbo].[usp_sel_upra] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(10), 
                 @p_hh_mov                 char(6) ) 
AS 
  DECLARE        @w_com_flg                char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_selo_elec_dup_u_comnt_u 
               WHERE cd_aerop               = @p_cd_aerop 
                 AND cd_terminal            = @p_cd_terminal 
                 AND dt_mov                 = @p_dt_mov 
                 AND nro_selo_electronico   = @p_nro_selo_electronico 
                 AND hh_mov                 = @p_hh_mov) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT nro_selo_electronico, 
         hh_mov, 
         tp_natureza, 
         selo_status, 
         cd_motivo, 
         tp_fat, 
         cd_cia_aerea, 
         tp_unid, 
         dt_confirma, 
         cd_aerop_utilizacao, 
         cd_terminal_utilizacao, 
         tp_coletor, 
         item_fat, 
         billing_line_id, 
         billing_int_date, 
         billing_int_type, 
         billing_user_1, 
         voo_rea, 
         dt_voo_rea, 
         hh_voo_rea, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_selo_elec_dup_u 
   WHERE cd_aerop               = @p_cd_aerop 
     AND cd_terminal            = @p_cd_terminal 
     AND dt_mov                 = @p_dt_mov 
     AND nro_selo_electronico   = @p_nro_selo_electronico 
     AND hh_mov                 = @p_hh_mov 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upra_com]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upra_com    Script Date: 19/09/2008 15:21:06 ******/



CREATE PROCEDURE [dbo].[usp_sel_upra_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_hh_mov               char(6),  
                 @p_type_cd              char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_selo_elec_dup_u_comnt_u 
   WHERE cd_aerop             = @p_cd_aerop 
     AND cd_terminal          = @p_cd_terminal 
     AND dt_mov               = @p_dt_mov 
     AND nro_selo_electronico = @p_nro_selo_electronico 
     AND hh_mov               = @p_hh_mov 
     AND type_cd              = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upra_tab]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upra_tab    Script Date: 19/09/2008 15:21:06 ******/




CREATE  PROCEDURE [dbo].[usp_sel_upra_tab] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime ) 
AS 

SELECT A.nro_selo_electronico
    ,A.hh_mov 
    ,A.tp_natureza
    ,A.selo_status
    ,A.cd_motivo
    ,A.tp_fat
    ,A.cd_cia_aerea
    ,A.tp_unid
    ,A.dt_confirma
    ,A.cd_aerop_utilizacao
    ,A.cd_terminal_utilizacao
    ,A.tp_coletor
    ,A.item_fat
    ,A.billing_line_id
    ,A.billing_int_date
    ,A.billing_int_type
    ,A.billing_user_1
    ,A.voo_rea
    ,A.dt_voo_rea
    ,A.hh_voo_rea
    ,A.date_created
    ,A.user_id_created
    ,A.date_changed
    ,A.user_id_changed
    ,A.inactive_ind
    ,A.active_date
    ,A.chgstamp 
    ,ds_natureza	= LTRIM(RTRIM(B.descp)) 
    ,ds_selo_status	= LTRIM(RTRIM(C.descp)) 
    ,ds_motivocnc	= LTRIM(RTRIM(ISNULL(D.ds_motivocnc,'')))
    ,ds_tp_fat		= LTRIM(RTRIM(E.descp))
    ,ds_cia_aerea	= LTRIM(RTRIM(F.no_cia_aerea))
    ,ds_unid		= LTRIM(RTRIM(ISNULL(G.descp,'')))
    ,ds_aerop_utilizacao = CASE WHEN A.cd_aerop_utilizacao IS NULL THEN '' ELSE A.cd_aerop_utilizacao + ' - ' + LTRIM(RTRIM(H.no_aerop)) END 
    ,ds_tp_coletor	= LTRIM(RTRIM(I.descp))
FROM pax_selo_elec_dup_u  A (nolock)
INNER JOIN GEACCOMMON..dropdowndw_u B (NOLOCK INDEX = PK_dropdowndw_u)
ON B.tbl_code			= 'NTRI'
  AND B.code				= A.tp_natureza
INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
ON C.tbl_code			= 'STSL'
  AND C.code				= A.selo_status
LEFT JOIN GEACutcx..cor_motivocnc_selo_u D (NOLOCK INDEX = P_cor_motivocnc_selo_u)
ON D.cd_motivo			= A.cd_motivo
INNER JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
ON E.tbl_code			= 'TPFT'
  AND E.code				= A.tp_fat
INNER JOIN GEACutcx..cor_cia_aerea_u F (NOLOCK INDEX = P_cor_cia_aerea_u)
ON F.cd_cia_aerea		= A.cd_cia_aerea
LEFT JOIN GEACCOMMON..dropdowndw_u G (NOLOCK INDEX = PK_dropdowndw_u)
ON G.tbl_code			= 'TPUN'
  AND G.code				= A.tp_unid
LEFT JOIN GEACutcx..cor_aeroporto_u H (NOLOCK INDEX = P_cor_aeroporto_u)
ON H.cd_aerop			= A.cd_aerop_utilizacao
INNER JOIN GEACCOMMON..dropdowndw_u I (NOLOCK INDEX = PK_dropdowndw_u)
ON I.tbl_code			= 'TPCL'
  AND I.code				= A.tp_coletor
WHERE A.cd_aerop                       = @p_cd_aerop 
  AND A.cd_terminal                    = @p_cd_terminal 
  AND CONVERT(VARCHAR,A.dt_mov,112)    = CONVERT(VARCHAR,@p_dt_mov ,112)
 



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upsa]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upsa    Script Date: 19/09/2008 15:21:06 ******/


CREATE PROCEDURE [dbo].[usp_sel_upsa] 
               ( @p_cd_aerop              char(4), 
                 @p_cd_terminal           char(10), 
                 @p_cd_cia_aerea 	char(3), 
                 @p_nro_voo                char(5), 
                 @p_dt_voo                 datetime, 
                 @p_hr_voo                 char(4), 
                 @p_tp_rpax                char(1), 
                 @p_recv_doc_id        char(22) ) 
AS 
  DECLARE        @w_com_flg                char(1) 
 
  IF EXISTS ( SELECT * 
                FROM rpax_boleto_cancelad_comnt_u  (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal         	= @p_cd_terminal 
                 AND cd_cia_aerea   	= @p_cd_cia_aerea 
                 AND nro_voo              	= @p_nro_voo 
                 AND dt_voo                	= @p_dt_voo 
                 AND hr_voo                	= @p_hr_voo 
                 AND tp_rpax               	= @p_tp_rpax 
                 AND recv_doc_id      	= @p_recv_doc_id) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
         cd_terminal, 
         cd_cia_aerea, 
         nro_voo, 
         dt_voo, 
         hr_voo, 
         tp_rpax, 
         recv_doc_id, 
         user_field_description, 
         item_id, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM rpax_boleto_cancelado_u  (NOLOCK INDEX = P_rpax_boleto_cancelado_u )
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal         = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND nro_voo             = @p_nro_voo 
     AND dt_voo               = @p_dt_voo 
     AND hr_voo               = @p_hr_voo 
     AND tp_rpax              = @p_tp_rpax 
     AND recv_doc_id      = @p_recv_doc_id 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upsa_com]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upsa_com    Script Date: 19/09/2008 15:21:06 ******/


CREATE PROCEDURE [dbo].[usp_sel_upsa_com] 
               ( @p_cd_aerop     	char(4),  
                 @p_cd_terminal  	char(10),  
                 @p_cd_cia_aerea 	char(3),  
                 @p_nro_voo      	char(5),  
                 @p_dt_voo       	datetime,  
                 @p_hr_voo       	char(4),  
                 @p_tp_rpax      	char(1),  
                 @p_recv_doc_id  	char(22),  
                 @p_type_cd      	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM rpax_boleto_cancelad_comnt_u  (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND nro_voo      	= @p_nro_voo 
     AND dt_voo       	= @p_dt_voo 
     AND hr_voo       	= @p_hr_voo 
     AND tp_rpax      	= @p_tp_rpax 
     AND recv_doc_id  	= @p_recv_doc_id 
     AND type_cd      	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upsv]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upsv    Script Date: 19/09/2008 15:21:06 ******/


CREATE PROCEDURE [dbo].[usp_sel_upsv] 
               ( @p_cd_aerop             	char(4), 
                 @p_cd_terminal         	char(10), 
                 @p_cd_cia_aerea      	char(3), 
                 @p_nro_voo              	char(5), 
                 @p_dt_voo                	datetime, 
                 @p_hr_voo                	char(4), 
                 @p_tp_rpax               	char(1), 
                 @p_recv_doc_id        	char(22) ) 
AS 
  SELECT recv_doc_id, 
         billing_line_id, 
         billing_int_date, 
         item_id, 
         item_descp, 
         recv_doc_status_code 
    FROM gvw_boletos_u 
   WHERE cd_aerop 	= @p_cd_aerop 
     AND cd_terminal        	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo             	= @p_nro_voo 
     AND dt_voo               	= @p_dt_voo 
     AND hr_voo               	= @p_hr_voo 
     AND tp_rpax              	= @p_tp_rpax 
     AND recv_doc_id     	= @p_recv_doc_id 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upsv_tab]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upsv_tab    Script Date: 19/09/2008 15:21:07 ******/


CREATE PROCEDURE [dbo].[usp_sel_upsv_tab] 
               ( @p_cd_aerop              char(4), 
                 @p_cd_terminal           char(10), 
                 @p_cd_cia_aerea      char(3), 
                 @p_nro_voo               char(5), 
                 @p_dt_voo                datetime, 
                 @p_hr_voo                char(4), 
                 @p_tp_rpax               char(1) ) 
AS 
  SELECT recv_doc_id, 
         billing_line_id, 
         billing_int_date, 
         item_id, 
         item_descp, 
         tp_fat,
         recv_doc_status_code 
    FROM gvw_boletos_u 
   WHERE cd_aerop        = @p_cd_aerop 
     AND cd_terminal       = @p_cd_terminal 
     AND cd_cia_aerea    = @p_cd_cia_aerea 
     AND nro_voo             = @p_nro_voo 
     AND dt_voo               = @p_dt_voo 
     AND hr_voo               = @p_hr_voo 
     AND tp_rpax              = @p_tp_rpax 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upta]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upta    Script Date: 19/09/2008 15:21:07 ******/


CREATE PROCEDURE [dbo].[usp_sel_upta] 
               ( @p_cd_aerop               	char(4), 
                 @p_cd_terminal            	char(10), 
                 @p_dt_mov                 	datetime, 
                 @p_cd_cia_aerea           	char(3), 
                 @p_nro_rste               		char(6), 
                 @p_nro_selo_inicial       	char(10), 
                 @p_nro_selo_final         	char(10), 
                 @p_tp_fat                 		char(1), 
                 @p_recv_doc_id            	char(22) ) 
AS 
  DECLARE        @w_com_flg                char(1) 
 
  IF EXISTS ( SELECT * 
                FROM selo_boleto_cancelad_comnt_u  (NOLOCK)
               WHERE cd_aerop               	= @p_cd_aerop 
                 AND cd_terminal            	= @p_cd_terminal 
                 AND dt_mov                 	= @p_dt_mov 
                 AND cd_cia_aerea           	= @p_cd_cia_aerea 
                 AND nro_rste               	= @p_nro_rste 
                 AND nro_selo_inicial       	= @p_nro_selo_inicial 
                 AND nro_selo_final         	= @p_nro_selo_final 
                 AND tp_fat                 		= @p_tp_fat 
                 AND recv_doc_id            	= @p_recv_doc_id) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT cd_aerop, 
         cd_terminal, 
         dt_mov, 
         cd_cia_aerea, 
         nro_rste, 
         nro_selo_inicial, 
         nro_selo_final, 
         tp_fat, 
         recv_doc_id, 
         user_field_description, 
         item_id, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM selo_boleto_cancelado_u  (NOLOCK INDEX = P_selo_boleto_cancelado_u)
   WHERE cd_aerop               	= @p_cd_aerop 
     AND cd_terminal            	= @p_cd_terminal 
     AND dt_mov                 	= @p_dt_mov 
     AND cd_cia_aerea           	= @p_cd_cia_aerea 
     AND nro_rste               	= @p_nro_rste 
     AND nro_selo_inicial       	= @p_nro_selo_inicial 
     AND nro_selo_final         	= @p_nro_selo_final 
     AND tp_fat                 		= @p_tp_fat 
     AND recv_doc_id            	= @p_recv_doc_id 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upta_com]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upta_com    Script Date: 19/09/2008 15:21:07 ******/


CREATE PROCEDURE [dbo].[usp_sel_upta_com] 
               ( @p_cd_aerop         	char(4),  
                 @p_cd_terminal      	char(10),  
                 @p_dt_mov           	datetime,  
                 @p_cd_cia_aerea     	char(3),  
                 @p_nro_rste         	char(6),  
                 @p_nro_selo_inicial 	char(10),  
                 @p_nro_selo_final   	char(10),  
                 @p_tp_fat           	char(1),  
                 @p_recv_doc_id      	char(22),  
                 @p_type_cd          	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM selo_boleto_cancelad_comnt_u  (NOLOCK)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND dt_mov           	= @p_dt_mov 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_rste         	= @p_nro_rste 
     AND nro_selo_inicial 	= @p_nro_selo_inicial 
     AND nro_selo_final   	= @p_nro_selo_final 
     AND tp_fat           	= @p_tp_fat 
     AND recv_doc_id      	= @p_recv_doc_id 
     AND type_cd          	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upua]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upua    Script Date: 19/09/2008 15:21:07 ******/


CREATE PROCEDURE [dbo].[usp_sel_upua] 
               ( @p_cd_aerop          	char(4), 
                 @p_cd_terminal       	char(10), 
                 @p_dt_mov            	datetime, 
                 @p_cd_cia_aerea      	char(3), 
                 @p_nro_rste          	char(6), 
                 @p_nro_selo_inicial  	char(10), 
                 @p_nro_selo_final    	char(10), 
                 @p_tp_fat            	char(1), 
                 @p_tp_natureza       	char(1), 
                 @p_recv_doc_id       	char(22), 
                 @p_item_id           	varchar(26), 
                 @p_selo_status       	char(1) ) 
AS 
  SELECT nro_selo_inicial, 
         nro_selo_final, 
         tp_fat, 
         tp_natureza, 
         recv_doc_id, 
         item_id, 
         selo_status 
    FROM gvw_selos_boletos_u 
   WHERE cd_aerop          	= @p_cd_aerop 
     AND cd_terminal        		= @p_cd_terminal 
     AND dt_mov             		= @p_dt_mov 
     AND cd_cia_aerea      	= @p_cd_cia_aerea 
     AND nro_rste           		= @p_nro_rste 
     AND nro_selo_inicial   	= @p_nro_selo_inicial 
     AND nro_selo_final     	= @p_nro_selo_final 
     AND tp_fat             		= @p_tp_fat 
     AND tp_natureza        	= @p_tp_natureza 
     AND recv_doc_id        	= @p_recv_doc_id 
     AND item_id            		= @p_item_id 
     AND selo_status        		= @p_selo_status 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upua_tab]    Script Date: 01/05/2011 18:05:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upua_tab    Script Date: 19/09/2008 15:21:07 ******/


CREATE PROCEDURE [dbo].[usp_sel_upua_tab] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_dt_mov           	datetime, 
                 @p_cd_cia_aerea     	char(3), 
                 @p_nro_rste         	char(6) ) 
AS 
  SELECT A.nro_selo_inicial
         ,A.nro_selo_final
         ,A.tp_fat
         ,A.tp_natureza
         ,A.recv_doc_id
         ,A.item_id
         ,A.selo_status 
         ,LTRIM(RTRIM(A.selo_status)) + ' - ' + LTRIM(RTRIM(B.descp))
    FROM gvw_selos_boletos_u     A  (NOLOCK)
    INNER JOIN GEACrrcv..gtb_situacao_boleto_u   B (NOLOCK)
    ON B.cd_situacao 	= A.selo_status
   WHERE A.cd_aerop    = @p_cd_aerop 
     AND A.cd_terminal    	= @p_cd_terminal 
     AND A.dt_mov           	= @p_dt_mov 
     AND A.cd_cia_aerea 	= @p_cd_cia_aerea 
     AND A.nro_rste          	= @p_nro_rste 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv3]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv3    Script Date: 19/09/2008 15:21:08 ******/



CREATE  PROCEDURE [dbo].[usp_sel_upv3] 
               ( @p_nro_selo               char(10), 
                 @p_ano_remesa             int, 
                 @p_tp_natureza            char(1), 
                 @p_dt_mov                 datetime, 
                 @p_selo_status            char(1), 
                 @p_date_changed_char      char(20) ) 
AS 

set nocount on

SELECT  A.tp_natureza
	,A.dt_mov
	,A.selo_status
	,A.date_changed_char
	,cd_motivo   	= RTRIM(B.cd_motivo) + ' - ' + RTRIM(B.ds_motivocnc)
	,tp_fat   		= LTRIM(RTRIM(H.descp))
	,cd_cia_aerea  = RTRIM(A.cd_cia_aerea) + ' - ' + RTRIM(C.no_cia_aerea)
	,tp_unid   	= LTRIM(RTRIM(E.descp))   -- A.tp_unid
	,cd_aerop  	= CASE WHEN tp_unid = 'A' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(D.no_aerop)
						WHEN tp_unid = 'X' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(J.no_almox) ELSE ' ' END
	,A.cd_terminal
	,tp_unid_destino  = LTRIM(RTRIM(F.descp))
	,cd_aerop_destino = CASE WHEN tp_unid_destino = 'A' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(G.no_aerop)
							WHEN tp_unid_destino = 'X' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(K.no_almox) ELSE ' 'END 
	,A.cd_terminal_destino
	,A.dt_confirma
	,cd_aerop_utilizacao = RTRIM(A.cd_aerop_utilizacao) + ' - ' + RTRIM(I.no_aerop)
	,A.cd_terminal_utilizacao
	,A.nfm
	,A.nro_rste
	,A.tp_coletor
	,A.item_fat
	,A.billing_line_id
	,A.billing_int_date
	,A.billing_int_type 
	,A.billing_user_1
	,A.recv_doc_id
	,A.date_created
	,A.user_id_created
	,A.user_id_changed
	,A.inactive_ind
	,A.active_date
	,A.chgstamp 
INTO #TEMP_CONSULTA 
FROM GEACupax..gvw_pax_selo_log_u   A (NOLOCK) 
LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
On    B.cd_motivo  = A.cd_motivo
LEFT JOIN GEACutcx..cor_cia_aerea_u   C (NOLOCK INDEX = P_cor_cia_aerea_u)
On    C.cd_cia_aerea  = A.cd_cia_aerea
LEFT JOIN GEACutcx..cor_aeroporto_u   D (NOLOCK INDEX = P_cor_aeroporto_u)
On    D.cd_aerop  = A.cd_aerop
LEFT JOIN GEACutcx..cor_aeroporto_u   G (NOLOCK INDEX = P_cor_aeroporto_u)
On    G.cd_aerop  = A.cd_aerop_destino
LEFT JOIN GEACutcx..cor_aeroporto_u   I (NOLOCK INDEX = P_cor_aeroporto_u)
On    I.cd_aerop  = A.cd_aerop_utilizacao
LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = dropdowndw_u_ndx)
ON  E.tbl_code  = 'TPUN'
AND E.code   = A.tp_unid  
LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = dropdowndw_u_ndx)
ON  F.tbl_code  = 'TPUN'
AND F.code   = A.tp_unid_destino   
LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = dropdowndw_u_ndx)
ON  H.tbl_code  = 'TPFT'
AND H.code   = A.tp_fat  
LEFT JOIN GEACutcx..cor_almoxarife_u   J (NOLOCK INDEX = P_cor_almoxarife_u)
ON  J.cd_almox  = A.cd_aerop
LEFT JOIN GEACutcx..cor_almoxarife_u   K (NOLOCK INDEX = P_cor_almoxarife_u)
ON  K.cd_almox  = A.cd_aerop_destino
WHERE 1 = 2

INSERT INTO #TEMP_CONSULTA 
SELECT A.tp_natureza
	,A.dt_mov
	,A.selo_status
	,A.date_changed_char
	,cd_motivo   	= RTRIM(B.cd_motivo) + ' - ' + RTRIM(B.ds_motivocnc)
	,tp_fat   		= LTRIM(RTRIM(H.descp))
	,cd_cia_aerea  = RTRIM(A.cd_cia_aerea) + ' - ' + RTRIM(C.no_cia_aerea)
	,tp_unid   	= LTRIM(RTRIM(E.descp))   -- A.tp_unid
	,cd_aerop  	= CASE WHEN tp_unid = 'A' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(D.no_aerop)
						WHEN tp_unid = 'X' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(J.no_almox) ELSE ' ' END
	,A.cd_terminal
	,tp_unid_destino  = LTRIM(RTRIM(F.descp))
	,cd_aerop_destino = CASE WHEN tp_unid_destino = 'A' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(G.no_aerop)
						WHEN tp_unid_destino = 'X' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(K.no_almox) ELSE ' 'END 
	,A.cd_terminal_destino
	,A.dt_confirma
	,cd_aerop_utilizacao = RTRIM(A.cd_aerop_utilizacao) + ' - ' + RTRIM(I.no_aerop)
	,A.cd_terminal_utilizacao
	,A.nfm
	,A.nro_rste
	,A.tp_coletor
	,A.item_fat
	,A.billing_line_id
	,A.billing_int_date
	,A.billing_int_type 
	,A.billing_user_1
	,A.recv_doc_id
	,A.date_created
	,A.user_id_created
	,A.user_id_changed
	,A.inactive_ind
	,A.active_date
	,A.chgstamp 
FROM GEACupax..gvw_pax_selo_log_u   A (NOLOCK) 
LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
On    B.cd_motivo  = A.cd_motivo
LEFT JOIN GEACutcx..cor_cia_aerea_u   C (NOLOCK INDEX = P_cor_cia_aerea_u)
On    C.cd_cia_aerea  = A.cd_cia_aerea
LEFT JOIN GEACutcx..cor_aeroporto_u   D (NOLOCK INDEX = P_cor_aeroporto_u)
On    D.cd_aerop  = A.cd_aerop
LEFT JOIN GEACutcx..cor_aeroporto_u   G (NOLOCK INDEX = P_cor_aeroporto_u)
On    G.cd_aerop  = A.cd_aerop_destino
LEFT JOIN GEACutcx..cor_aeroporto_u   I (NOLOCK INDEX = P_cor_aeroporto_u)
On    I.cd_aerop  = A.cd_aerop_utilizacao
LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = dropdowndw_u_ndx)
ON  E.tbl_code  = 'TPUN'
AND E.code   = A.tp_unid  
LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = dropdowndw_u_ndx)
ON  F.tbl_code  = 'TPUN'
AND F.code   = A.tp_unid_destino   
LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = dropdowndw_u_ndx)
ON  H.tbl_code  = 'TPFT'
AND H.code   = A.tp_fat  
LEFT JOIN GEACutcx..cor_almoxarife_u   J (NOLOCK INDEX = P_cor_almoxarife_u)
ON  J.cd_almox  = A.cd_aerop
LEFT JOIN GEACutcx..cor_almoxarife_u   K (NOLOCK INDEX = P_cor_almoxarife_u)
ON  K.cd_almox  = A.cd_aerop_destino
WHERE nro_selo                		= @p_nro_selo 
	AND ano_remesa             		= @p_ano_remesa 
	AND tp_natureza             	= @p_tp_natureza 
	AND convert(VARCHAR,dt_mov,112) = CONVERT(VARCHAR,@p_dt_mov ,112)
	AND selo_status             	= @p_selo_status 
	AND date_changed_char       	= @p_date_changed_char
	

IF @@ROWCOUNT = 0
INSERT INTO #TEMP_CONSULTA 
	SELECT A.tp_natureza
	,A.dt_mov
	,A.selo_status
	,A.date_changed_char
	,cd_motivo   	= RTRIM(B.cd_motivo) + ' - ' + RTRIM(B.ds_motivocnc)
	,tp_fat   		= LTRIM(RTRIM(H.descp))
	,cd_cia_aerea  = RTRIM(A.cd_cia_aerea) + ' - ' + RTRIM(C.no_cia_aerea)
	,tp_unid   	= LTRIM(RTRIM(E.descp))   -- A.tp_unid
	,cd_aerop  	= CASE WHEN tp_unid = 'A' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(D.no_aerop)
					WHEN tp_unid = 'X' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(J.no_almox) ELSE ' ' END
	,A.cd_terminal
	,tp_unid_destino  = LTRIM(RTRIM(F.descp))
	,cd_aerop_destino = CASE WHEN tp_unid_destino = 'A' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(G.no_aerop)
						WHEN tp_unid_destino = 'X' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(K.no_almox) ELSE ' 'END 
	,A.cd_terminal_destino
	,A.dt_confirma
	,cd_aerop_utilizacao = RTRIM(A.cd_aerop_utilizacao) + ' - ' + RTRIM(I.no_aerop)
	,A.cd_terminal_utilizacao
	,A.nfm
	,A.nro_rste
	,A.tp_coletor
	,A.item_fat
	,A.billing_line_id
	,A.billing_int_date
	,A.billing_int_type 
	,A.billing_user_1
	,A.recv_doc_id
	,A.date_created
	,A.user_id_created
	,A.user_id_changed
	,A.inactive_ind
	,A.active_date
	,A.chgstamp 
FROM GEACupax..gvw_pax_selo_u   		A 	(NOLOCK) 
	,GEACutcx..cor_aeroporto_u   	G (NOLOCK INDEX = P_cor_aeroporto_u)
	,GEACutcx..cor_motivocnc_selo_u B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
	,GEACutcx..cor_cia_aerea_u   	C (NOLOCK INDEX = P_cor_cia_aerea_u)
	,GEACutcx..cor_aeroporto_u   	D (NOLOCK INDEX = P_cor_aeroporto_u)
	,GEACutcx..cor_aeroporto_u   	I (NOLOCK INDEX = P_cor_aeroporto_u)
	,GEACCOMMON..dropdowndw_u  		E (NOLOCK INDEX = dropdowndw_u_ndx)
	,GEACCOMMON..dropdowndw_u  		F (NOLOCK INDEX = dropdowndw_u_ndx)
	,GEACCOMMON..dropdowndw_u  		H (NOLOCK INDEX = dropdowndw_u_ndx)
	,GEACutcx..cor_almoxarife_u   	J (NOLOCK INDEX = P_cor_almoxarife_u)
	,GEACutcx..cor_almoxarife_u   	K (NOLOCK INDEX = P_cor_almoxarife_u)
WHERE nro_selo 				= @p_nro_selo
	AND ano_remesa			= @p_ano_remesa 
	and A.cd_aerop_destino 	*= G.cd_aerop 
	and A.cd_motivo 		*= B.cd_motivo  
	and A.cd_cia_aerea 		*= C.cd_cia_aerea
	and A.cd_aerop 			*= D.cd_aerop
	and A.cd_aerop_utilizacao *= I.cd_aerop 
	and (E.tbl_code  = 'TPUN' AND A.tp_unid 		*= E.code)
	and (F.tbl_code  = 'TPUN' AND A.tp_unid_destino *= F.code )
	and (H.tbl_code  = 'TPFT' AND A.tp_fat   		*= H.code)
	and A.cd_aerop 	 *= J.cd_almox 
	and A.cd_aerop_destino *= K.cd_almox 

	AND A.tp_natureza             		= @p_tp_natureza 
	AND convert(VARCHAR,A.dt_mov,112) 	= CONVERT(VARCHAR,@p_dt_mov ,112)
	AND A.selo_status             		= @p_selo_status 
	AND A.date_changed_char       		= @p_date_changed_char



SELECT * FROM #TEMP_CONSULTA 

DROP TABLE #TEMP_CONSULTA 

set nocount off




  SELECT tp_natureza, 
         dt_mov, 
         selo_status, 
         date_changed_char, 
         cd_motivo, 
         tp_fat, 
         cd_cia_aerea, 
         tp_unid, 
         cd_aerop, 
         cd_terminal, 
         tp_unid_destino, 
         cd_aerop_destino, 
         cd_terminal_destino, 
         dt_confirma, 
         cd_aerop_utilizacao, 
         cd_terminal_utilizacao, 
         nfm, 
         nro_rste, 
         tp_coletor, 
         item_fat, 
         billing_line_id, 
         billing_int_date, 
         billing_int_type, 
         billing_user_1, 
         recv_doc_id, 
         date_created, 
         user_id_created, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp 
    FROM gvw_pax_selo_log_u 
   WHERE nro_selo               = @p_nro_selo 
     AND ano_remesa             = @p_ano_remesa 
     AND tp_natureza            = @p_tp_natureza 
     AND dt_mov                 = @p_dt_mov 
     AND selo_status            = @p_selo_status 
     AND date_changed_char      = @p_date_changed_char 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv3_tab]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv3_tab    Script Date: 19/09/2008 15:21:08 ******/



CREATE  PROCEDURE [dbo].[usp_sel_upv3_tab] 
               ( @p_nro_selo               char(10), 
                 @p_ano_remesa             int ) 
AS 
  SELECT 
         A.tp_natureza 
         ,A.dt_mov 
         ,A.selo_status 
         ,A.date_changed_char 
         ,cd_motivo 		= Rtrim(B.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc)
         ,A.tp_fat 
         ,A.cd_cia_aerea 
         ,A.tp_unid 
         ,A.cd_aerop 
         ,A.cd_terminal 
         ,A.tp_unid_destino 
         ,A.cd_aerop_destino 
         ,A.cd_terminal_destino 
         ,A.dt_confirma 
         ,A.cd_aerop_utilizacao 
         ,A.cd_terminal_utilizacao 
         ,A.nfm 
         ,A.nro_rste 
         ,A.tp_coletor 
         ,A.item_fat 
         ,A.billing_line_id 
         ,A.billing_int_date 
         ,A.billing_int_type 
         ,A.billing_user_1 
         ,A.recv_doc_id
         ,A.date_created 
         ,A.user_id_created 
         ,A.user_id_changed 
         ,A.inactive_ind 
         ,A.active_date
         ,A.chgstamp
         ,descp_tp_natureza  	= LTRIM(RTRIM(C.descp))
         ,descp_tp_coletor   	= LTRIM(RTRIM(D.descp))
         ,descp_tp_unid   		= LTRIM(RTRIM(E.descp))
         ,descp_tp_unid_destino  	= LTRIM(RTRIM(F.descp))
         ,descp_selo_status  	= LTRIM(RTRIM(G.descp))
         ,descp_tp_fat   		= LTRIM(RTRIM(H.descp))
    FROM GEACupax..gvw_pax_selo_u        A (NOLOCK) /* gvw_pax_selo_log_u */
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  		= 'NTRZ'
        AND  C.code   		= A.tp_natureza  
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  		= 'TPCL'
        AND  D.code   		= A.tp_coletor  
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  		= 'TPUN'
        AND  E.code   		= A.tp_unid  
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  		= 'TPUN'
        AND  F.code   		= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  		= 'SSCO'
        AND  G.code   		= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  		= 'TPFT'
        AND  H.code   		= A.tp_fat  
   WHERE 
         A.nro_selo         	= @p_nro_selo 
     AND A.ano_remesa           = @p_ano_remesa 
    ORDER BY   
        A.date_changed_char, A.dt_mov, A.chgstamp


 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv3_tab_excel]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv3_tab_excel    Script Date: 19/09/2008 15:21:08 ******/



CREATE  PROCEDURE [dbo].[usp_sel_upv3_tab_excel]
               ( @p_nro_selo               char(10) 
				,@p_ano_remesa				int) 
AS 
  SELECT 
         Natureza 			= LTRIM(RTRIM(C.descp))
         ,Data_da_Baixa		= A.dt_mov 
         ,Tipo_Baixa 		= LTRIM(RTRIM(G.descp))
         ,Data_da_Alteracao	= A.date_changed_char 
         ,Motivo_do_Cancelamento	= CASE WHEN A.cd_motivo IS NULL OR LTRIM(RTRIM(A.cd_motivo)) = '' THEN ' ' ELSE  Rtrim(A.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc) END
         ,Tipo_de_Faturamento	= CASE WHEN A.tp_fat 	IS NULL OR LTRIM(RTRIM(A.tp_fat)) = '' THEN ' ' ELSE   LTRIM(RTRIM(H.descp)) END  
         ,Cia_Aerea			= A.cd_cia_aerea 
         ,Tipo_Unidad_Origem 	= LTRIM(RTRIM(E.descp))
         ,Unidad_Origem		= A.cd_aerop 
         ,Terminal_Origem		= A.cd_terminal 
         ,Tipo_Unidad_Destino 	= CASE WHEN A.tp_unid_destino IS NULL OR LTRIM(RTRIM(A.tp_unid_destino)) = '' THEN ' ' ELSE  LTRIM(RTRIM(F.descp)) END
         ,Unidad_Destino		= A.cd_aerop_destino 
         ,Terminal_Destino 		= A.cd_terminal_destino 
         ,Data_de_Recebimento	= A.dt_confirma 
         ,Aeroporto_Utilizacao	= A.cd_aerop_utilizacao 
         ,Terminal_Utilizacao	= A.cd_terminal_utilizacao 
         ,NFM			= A.nfm 
         ,NRO_RSTE		= A.nro_rste 
         ,Tipo_de_Coletor 		= CASE WHEN A.tp_coletor IS NULL OR LTRIM(RTRIM(A.tp_coletor)) = '' THEN ' ' ELSE   LTRIM(RTRIM(D.descp)) END
         ,ITEM			= A.item_fat 
         ,billing_line_id		= A.billing_line_id 
         ,billing_int_date		= A.billing_int_date 
         ,billing_int_type     		= A.billing_int_type 
         ,billing_user_1		= A.billing_user_1 
         ,Boleto  			= A.recv_doc_id
         ,Data_de_Inclusao		= A.date_created 
         ,Usuario_Inclusao		= A.user_id_created 
         ,Usuario_Alterasao		= A.user_id_changed 
         ,Inativo			= A.inactive_ind 
         ,Data_de_ativasao		= A.active_date
    FROM GEACupax..gvw_pax_selo_log_u        A (NOLOCK)
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  	= 'NTRZ'
        AND  C.code   	= A.tp_natureza  
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  	= 'TPCL'
        AND  D.code   	= A.tp_coletor  
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  	= 'TPUN'
        AND  E.code   	= A.tp_unid  
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  	= 'TPUN'
        AND  F.code   	= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  	= 'SSCO'
        AND  G.code   	= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  	= 'TPFT'
        AND  H.code   	= A.tp_fat  
   WHERE 
         A.nro_selo               = @p_nro_selo 
	and	A.ano_remesa			= @p_ano_remesa
    ORDER BY   
        A.date_changed_char, A.dt_mov




 





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv3_tab_ii]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv3_tab_ii    Script Date: 19/09/2008 15:21:08 ******/







CREATE     PROCEDURE [dbo].[usp_sel_upv3_tab_ii] 
               ( @p_nro_selo               char(10) 
				,@p_ano_remesa				int) 
AS 


  SELECT 
         A.tp_natureza 
         ,A.dt_mov 
         ,A.selo_status 
         ,A.date_changed_char 
         ,cd_motivo 		= Rtrim(B.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc)
         ,A.tp_fat 
         ,A.cd_cia_aerea 
         ,A.tp_unid 
         ,A.cd_aerop 
         ,A.cd_terminal 
         ,A.tp_unid_destino 
         ,A.cd_aerop_destino 
         ,A.cd_terminal_destino 
         ,A.dt_confirma 
         ,A.cd_aerop_utilizacao 
         ,A.cd_terminal_utilizacao 
         ,A.nfm 
         ,A.nro_rste 
         ,A.tp_coletor 
         ,A.item_fat 
         ,A.billing_line_id 
         ,A.billing_int_date 
         ,A.billing_int_type 
         ,A.billing_user_1 
         ,A.recv_doc_id
         ,A.date_created 
         ,A.user_id_created 
         ,A.user_id_changed 
         ,A.inactive_ind 
         ,A.active_date
         ,A.chgstamp
         ,descp_tp_natureza  	= LTRIM(RTRIM(C.descp))
         ,descp_tp_coletor   	= LTRIM(RTRIM(D.descp))
         ,descp_tp_unid   		= LTRIM(RTRIM(E.descp))
         ,descp_tp_unid_destino  	= LTRIM(RTRIM(F.descp))
         ,descp_selo_status  	= LTRIM(RTRIM(G.descp))
         ,descp_tp_fat   		= LTRIM(RTRIM(H.descp))
    FROM GEACupax..gvw_pax_selo_u        A (NOLOCK)
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  		= 'NTRZ'
        AND  C.code   		= A.tp_natureza  
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  		= 'TPCL'
        AND  D.code   		= A.tp_coletor  
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  		= 'TPUN'
        AND  E.code   		= A.tp_unid  
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  		= 'TPUN'
        AND  F.code   		= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  		= 'SSCO'
        AND  G.code   		= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  		= 'TPFT'
        AND  H.code   			= A.tp_fat  
   WHERE 
         A.nro_selo         		= @p_nro_selo 
		and A.ano_remesa			= @p_ano_remesa
  UNION ALL

  SELECT 
         A.tp_natureza 
         ,A.dt_mov 
         ,A.selo_status 
         ,A.date_changed_char 
         ,cd_motivo 		= Rtrim(B.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc)
         ,A.tp_fat 
         ,A.cd_cia_aerea 
         ,A.tp_unid 
         ,A.cd_aerop 
         ,A.cd_terminal 
         ,A.tp_unid_destino 
         ,A.cd_aerop_destino 
         ,A.cd_terminal_destino 
         ,A.dt_confirma 
         ,A.cd_aerop_utilizacao 
         ,A.cd_terminal_utilizacao 
         ,A.nfm 
         ,A.nro_rste 
         ,A.tp_coletor 
         ,A.item_fat 
         ,A.billing_line_id 
         ,A.billing_int_date 
         ,A.billing_int_type 
         ,A.billing_user_1 
         ,A.recv_doc_id
         ,A.date_created 
         ,A.user_id_created 
         ,A.user_id_changed 
         ,A.inactive_ind 
         ,A.active_date
         ,A.chgstamp
         ,descp_tp_natureza  	= LTRIM(RTRIM(C.descp))
         ,descp_tp_coletor   	= LTRIM(RTRIM(D.descp))
         ,descp_tp_unid   		= LTRIM(RTRIM(E.descp))
         ,descp_tp_unid_destino  	= LTRIM(RTRIM(F.descp))
         ,descp_selo_status  	= LTRIM(RTRIM(G.descp))
         ,descp_tp_fat   		= LTRIM(RTRIM(H.descp))
    FROM GEACupax..gvw_pax_selo_log_u        A (NOLOCK)
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  		= 'NTRZ'
        AND  C.code   		= A.tp_natureza  
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  		= 'TPCL'
        AND  D.code   		= A.tp_coletor  
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  		= 'TPUN'
        AND  E.code   		= A.tp_unid  
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  		= 'TPUN'
        AND  F.code   		= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  		= 'SSCO'
        AND  G.code   		= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  		= 'TPFT'
        AND  H.code   		= A.tp_fat  
   	WHERE 
         A.nro_selo         		= @p_nro_selo 
	and A.ano_remesa				= @p_ano_remesa
    ORDER BY   
        31, 4, 2


	







GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv4]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv4    Script Date: 19/09/2008 15:21:09 ******/
CREATE   PROCEDURE [dbo].[usp_sel_upv4] 
               ( @p_nro_selo_elec           char(20), 
                 @p_tp_natureza            	char(1), 
                 @p_dt_mov                 	datetime, 
                 @p_selo_status            	char(1), 
                 @p_date_changed_char		char(20) ) 
AS 
  SELECT A.tp_natureza
	,A.dt_mov
	,A.selo_status
	,A.date_changed_char
	,cd_motivo 		= RTRIM(B.cd_motivo) + ' - ' + RTRIM(B.ds_motivocnc)
	,tp_fat			= LTRIM(RTRIM(H.descp))
	,cd_cia_aerea		= RTRIM(A.cd_cia_aerea) + ' - ' + RTRIM(C.no_cia_aerea)
	,tp_unid 		= LTRIM(RTRIM(E.descp)) 		-- A.tp_unid
	,cd_aerop		= CASE WHEN tp_unid = 'A' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(D.no_aerop)
				   	WHEN tp_unid = 'X' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(J.no_almox) ELSE ' ' END
	,A.cd_terminal
	,tp_unid_destino		= LTRIM(RTRIM(F.descp))
	,cd_aerop_destino	= CASE WHEN tp_unid_destino = 'A' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(G.no_aerop)
				   	WHEN tp_unid_destino = 'X' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(K.no_almox) ELSE ' 'END 
	,A.cd_terminal_destino
	,A.dt_confirma
	,cd_aerop_utilizacao	= RTRIM(A.cd_aerop_utilizacao) + ' - ' + RTRIM(I.no_aerop)
	,A.cd_terminal_utilizacao
	,A.nfm
	,A.nro_rste
	,A.tp_coletor
	,A.item_fat
	,A.billing_line_id
	,A.billing_int_date
	,A.billing_int_type 
	,A.billing_user_1
	,A.recv_doc_id
	,A.date_created
	,A.user_id_created
	,A.user_id_changed
	,A.inactive_ind
	,A.active_date
	,A.chgstamp 
	,A.nro_selo_elec
    FROM GEACupax..gvw_pax_selo_elec_log_u 		A (NOLOCK) 
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u 	B (NOLOCK)
        On   	B.cd_motivo 	= A.cd_motivo
        LEFT JOIN GEACutcx..cor_cia_aerea_u 		C (NOLOCK)
        On   	C.cd_cia_aerea 	= A.cd_cia_aerea
        LEFT JOIN GEACutcx..cor_aeroporto_u 		D (NOLOCK)
        On   	D.cd_aerop 	= A.cd_aerop
        LEFT JOIN GEACutcx..cor_aeroporto_u 		G (NOLOCK)
        On   	G.cd_aerop 	= A.cd_aerop_destino
        LEFT JOIN GEACutcx..cor_aeroporto_u 		I (NOLOCK)
        On   	I.cd_aerop 	= A.cd_aerop_utilizacao
        LEFT JOIN GEACCOMMON..dropdowndw_u 	E (NOLOCK)
        ON 	E.code 		= A.tp_unid 	
        AND 	E.tbl_code 	= 'TPUN'
        LEFT JOIN GEACCOMMON..dropdowndw_u 	F (NOLOCK)
        ON 	F.code 		= A.tp_unid_destino 	
        AND 	F.tbl_code 	= 'TPUN'
        LEFT JOIN GEACCOMMON..dropdowndw_u 	H (NOLOCK)
        ON 	H.code 		= A.tp_fat 	
        AND 	H.tbl_code 	= 'TPFT'
        LEFT JOIN GEACutcx..cor_almoxarife_u 		J (NOLOCK)
        ON 	J.cd_almox 	= A.cd_aerop
        LEFT JOIN GEACutcx..cor_almoxarife_u 		K (NOLOCK)
        ON 	K.cd_almox 	= A.cd_aerop_destino
   WHERE nro_selo_elec              = @p_nro_selo_elec 
     AND tp_natureza            	= @p_tp_natureza 
     AND dt_mov                 	= @p_dt_mov 
     AND selo_status            	= @p_selo_status 
     AND date_changed_char      	= @p_date_changed_char


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv4_tab]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv4_tab    Script Date: 19/09/2008 15:21:09 ******/



CREATE  PROCEDURE [dbo].[usp_sel_upv4_tab] 
               ( @p_nro_selo_elec               char(20) ) 
AS 
  SELECT 
         A.tp_natureza 
         ,A.dt_mov 
         ,A.selo_status 
         ,A.date_changed_char 
         ,cd_motivo 		= Rtrim(B.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc)
         ,A.tp_fat 
         ,A.cd_cia_aerea 
         ,A.tp_unid 
         ,A.cd_aerop 
         ,A.cd_terminal 
         ,A.tp_unid_destino 
         ,A.cd_aerop_destino 
         ,A.cd_terminal_destino 
         ,A.dt_confirma 
         ,A.cd_aerop_utilizacao 
         ,A.cd_terminal_utilizacao 
         ,A.nfm 
         ,A.nro_rste 
         ,A.tp_coletor 
         ,A.item_fat 
         ,A.billing_line_id 
         ,A.billing_int_date 
         ,A.billing_int_type 
         ,A.billing_user_1 
         ,A.recv_doc_id
         ,A.date_created 
         ,A.user_id_created 
         ,A.user_id_changed 
         ,A.inactive_ind 
         ,A.active_date
         ,A.chgstamp
         ,descp_tp_natureza  	= LTRIM(RTRIM(C.descp))
         ,descp_tp_coletor   	= LTRIM(RTRIM(D.descp))
         ,descp_tp_unid   		= LTRIM(RTRIM(E.descp))
         ,descp_tp_unid_destino = LTRIM(RTRIM(F.descp))
         ,descp_selo_status  	= LTRIM(RTRIM(G.descp))
         ,descp_tp_fat   		= LTRIM(RTRIM(H.descp))
    FROM GEACupax..gvw_pax_selo_ele_log_u        A (NOLOCK)
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  	= 'NTRZ'
        AND  C.code   	= A.tp_natureza  
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  	= 'TPCL'
        AND D.code   	= A.tp_coletor  
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  	= 'TPUN'
        AND  E.code   	= A.tp_unid  
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  	= 'TPUN'
        AND F.code   	= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  	= 'SSCO'
        AND G.code   	= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  	= 'TPFT'
        AND H.code   	= A.tp_fat  
   WHERE 
         A.nro_selo_elec               = @p_nro_selo_elec 
    ORDER BY   
        A.date_changed_char, A.dt_mov





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv5]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv5    Script Date: 19/09/2008 15:21:09 ******/



CREATE PROCEDURE [dbo].[usp_sel_upv5] 
               ( @p_cd_aerop             char(4), 
                 @p_cd_terminal          char(10), 
                 @p_dt_mov               datetime, 
                 @p_nro_selo_electronico char(10), 
                 @p_hh_mov               char(6) ) 
AS 
  SELECT nro_selo_electronico, 
         hh_mov, 
         user_id, 
         dt_time, 
         chg_trans, 
         chg_type, 
         col_id, 
         col_label, 
         data_chg_from, 
         data_chg_to, 
         activity_desc, 
         usuario 
    FROM gvw_selos_sup_excluidos_u 
   WHERE cd_aerop             = @p_cd_aerop 
     AND cd_terminal          = @p_cd_terminal 
     AND dt_mov               = @p_dt_mov 
     AND nro_selo_electronico = @p_nro_selo_electronico 
     AND hh_mov               = @p_hh_mov 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv5_tab]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv5_tab    Script Date: 19/09/2008 15:21:09 ******/



CREATE PROCEDURE [dbo].[usp_sel_upv5_tab] 
               ( @p_cd_aerop             char(4), 
                 @p_cd_terminal          char(10), 
                 @p_dt_mov               datetime ) 
AS 
  SELECT nro_selo_electronico, 
         hh_mov, 
         user_id, 
         dt_time, 
         chg_trans, 
         chg_type, 
         col_id, 
         col_label, 
         data_chg_from, 
         data_chg_to, 
         activity_desc, 
         usuario 
    FROM gvw_selos_sup_excluidos_u 
   WHERE cd_aerop             = @p_cd_aerop 
     AND cd_terminal          = @p_cd_terminal 
     AND dt_mov               = @p_dt_mov 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upv6]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upv6    Script Date: 19/09/2008 15:21:09 ******/




CREATE   PROCEDURE [dbo].[usp_sel_upv6] 
               ( @p_cd_aerop     char(4), 
                 @p_data_mov     datetime ) 
AS

SELECT @p_cd_aerop, 
	@p_data_mov, 
	'ALL', 
	'ALL',
	no_aerop
from GEACutcx..cor_aeroporto_u (nolock index = P_cor_aeroporto_u)
where cd_aerop = @p_cd_aerop
 
/*
  SELECT cd_aerop, 
         data_mov, 
         cd_cia_aerea, 
         nro_voo 
    FROM pax_fiscal_dia_vw_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND data_mov     = @p_data_mov
 */



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upwa]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upwa    Script Date: 19/09/2008 15:21:09 ******/


CREATE PROCEDURE [dbo].[usp_sel_upwa] 
               ( @p_cd_aerop         char(4), 
                 @p_cd_terminal      char(10), 
                 @p_dt_entrega       datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_rdev         char(6), 
                 @p_nro_selo_inicial char(10), 
                 @p_nro_selo_final   char(10) ) 
AS 
  DECLARE        @w_com_flg          char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_dev_selo_line_u_comnt_u (NOLOCK)
               WHERE cd_aerop        	= @p_cd_aerop 
                 AND cd_terminal      	= @p_cd_terminal 
                 AND dt_entrega       	= @p_dt_entrega 
                 AND cd_cia_aerea     	= @p_cd_cia_aerea 
                 AND nro_rdev         	= @p_nro_rdev 
                 AND nro_selo_inicial 	= @p_nro_selo_inicial 
                 AND nro_selo_final   	= @p_nro_selo_final) 
      SELECT @w_com_flg = 'Y'
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT nro_selo_inicial, 
         nro_selo_final, 
         qtd_selos, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_dev_selo_line_u  (NOLOCK INDEX = P_pax_dev_selo_line_u )
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND dt_entrega       	= @p_dt_entrega 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rdev         	= @p_nro_rdev 
     AND nro_selo_inicial 	= @p_nro_selo_inicial 
     AND nro_selo_final   	= @p_nro_selo_final 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upwa_com]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upwa_com    Script Date: 19/09/2008 15:21:10 ******/


CREATE PROCEDURE [dbo].[usp_sel_upwa_com] 
               ( @p_cd_aerop         	char(4),  
                 @p_cd_terminal      	char(10),  
                 @p_dt_entrega       	datetime,  
                 @p_cd_cia_aerea     	char(3),  
                 @p_nro_rdev         	char(6),  
                 @p_nro_selo_inicial 	char(10),  
                 @p_nro_selo_final   	char(10),  
                 @p_type_cd          	char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_dev_selo_line_u_comnt_u  (NOLOCK)
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND dt_entrega       	= @p_dt_entrega 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_rdev         	= @p_nro_rdev 
     AND nro_selo_inicial 	= @p_nro_selo_inicial 
     AND nro_selo_final   	= @p_nro_selo_final 
     AND type_cd          	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upwa_tab]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upwa_tab    Script Date: 19/09/2008 15:21:10 ******/


CREATE PROCEDURE [dbo].[usp_sel_upwa_tab] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_dt_entrega       	datetime, 
                 @p_cd_cia_aerea     	char(3), 
                 @p_nro_rdev         	char(6) ) 
AS 
  SELECT nro_selo_inicial, 
         nro_selo_final, 
         qtd_selos, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp 
    FROM pax_dev_selo_line_u  (NOLOCK INDEX = P_pax_dev_selo_line_u )
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND dt_entrega       	= @p_dt_entrega 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_rdev         	= @p_nro_rdev 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upx3]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upx3    Script Date: 19/09/2008 15:21:10 ******/
CREATE    PROCEDURE [dbo].[usp_sel_upx3] 
               ( @p_nro_selo               		char(20), 
                 @p_tp_natureza            	char(1), 
                 @p_dt_mov                 	datetime, 
                 @p_selo_status            	char(1), 
                 @p_date_changed_char	char(20) ) 
AS 
  SELECT A.tp_natureza
	,A.dt_mov
	,L.descp
	,A.date_changed_char
	,cd_motivo 		= RTRIM(B.cd_motivo) + ' - ' + RTRIM(B.ds_motivocnc)
	,tp_fat			= LTRIM(RTRIM(H.descp))
	,cd_cia_aerea	= RTRIM(A.cd_cia_aerea) + ' - ' + RTRIM(C.no_cia_aerea)
	,tp_unid 		= LTRIM(RTRIM(E.descp)) 		-- A.tp_unid
	,cd_aerop		= CASE WHEN tp_unid = 'A' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(D.no_aerop)
				   	WHEN tp_unid = 'X' THEN RTRIM(A.cd_aerop) + ' - ' + RTRIM(J.no_almox) ELSE ' ' END
	,A.cd_terminal
	,tp_unid_destino		= LTRIM(RTRIM(F.descp))
	,cd_aerop_destino	= CASE WHEN tp_unid_destino = 'A' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(G.no_aerop)
				   	WHEN tp_unid_destino = 'X' THEN RTRIM(A.cd_aerop_destino) + ' - ' + RTRIM(K.no_almox) ELSE ' 'END 
	,A.cd_terminal_destino
	,A.dt_confirma
	,cd_aerop_utilizacao	= RTRIM(A.cd_aerop_utilizacao) + ' - ' + RTRIM(I.no_aerop)
	,A.cd_terminal_utilizacao
	,A.nfm
	,A.nro_rste
	,M.descp
	,A.item_fat
	,A.billing_line_id
	,A.billing_int_date
	,A.billing_int_type 
	,A.billing_user_1
	,A.recv_doc_id
	,A.date_created
	,A.user_id_created
	,A.user_id_changed
	,A.inactive_ind
	,A.active_date
	,A.chgstamp 
	,A.nro_selo_elec
    FROM GEACupax..gvw_pax_selo_ele_log_u 		A (NOLOCK) 
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u 	B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On   	B.cd_motivo 	= A.cd_motivo
        LEFT JOIN GEACutcx..cor_cia_aerea_u 		C (NOLOCK INDEX = P_cor_cia_aerea_u)
        On   	C.cd_cia_aerea 	= A.cd_cia_aerea
        LEFT JOIN GEACutcx..cor_aeroporto_u 		D (NOLOCK INDEX = P_cor_aeroporto_u)
        On   	D.cd_aerop 	= A.cd_aerop
        LEFT JOIN GEACutcx..cor_aeroporto_u 		G (NOLOCK INDEX = P_cor_aeroporto_u)
        On   	G.cd_aerop 	= A.cd_aerop_destino
        LEFT JOIN GEACutcx..cor_aeroporto_u 		I (NOLOCK INDEX = P_cor_aeroporto_u)
        On   	I.cd_aerop 	= A.cd_aerop_utilizacao
        LEFT JOIN GEACCOMMON..dropdowndw_u 	E (NOLOCK INDEX = PK_dropdowndw_u)
        ON 	E.tbl_code 	= 'TPUN'
        AND 	E.code 		= A.tp_unid 	
        LEFT JOIN GEACCOMMON..dropdowndw_u 	F (NOLOCK INDEX = PK_dropdowndw_u)
        ON 	F.tbl_code 	= 'TPUN'
        AND 	F.code 		= A.tp_unid_destino 	
        LEFT JOIN GEACCOMMON..dropdowndw_u 	H (NOLOCK INDEX = PK_dropdowndw_u)
        ON 	H.tbl_code 	= 'TPFT'
        AND 	H.code 		= A.tp_fat 	
        LEFT JOIN GEACutcx..cor_almoxarife_u 		J (NOLOCK INDEX = P_cor_almoxarife_u)
        ON 	J.cd_almox 	= A.cd_aerop
        LEFT JOIN GEACutcx..cor_almoxarife_u 		K (NOLOCK INDEX = P_cor_almoxarife_u)
        ON 	K.cd_almox 	= A.cd_aerop_destino
        INNER JOIN GEACCOMMON..dropdowndw_u 	L (NOLOCK INDEX = PK_dropdowndw_u)
        ON 	L.tbl_code 	= 'STSL'
        AND 	L.code 	= A.selo_status
        INNER JOIN GEACCOMMON..dropdowndw_u 	M (NOLOCK INDEX = PK_dropdowndw_u)
        ON 	M.tbl_code 	= 'TPCL'
        AND 	M.code 	= A.tp_coletor

   WHERE nro_selo_elec               	= @p_nro_selo 
     AND tp_natureza            		= @p_tp_natureza 
     AND Convert (Char (10), dt_mov, 101)  = Convert (Char (10), @p_dt_mov, 101 )
     AND selo_status            		= @p_selo_status 
     AND date_changed_char      		= @p_date_changed_char


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upx3_tab]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upx3_tab    Script Date: 19/09/2008 15:21:10 ******/



CREATE PROCEDURE [dbo].[usp_sel_upx3_tab] 
               ( @p_nro_selo               char(20) ) 
AS 
  SELECT 
         A.tp_natureza 
         ,A.dt_mov 
         ,A.selo_status 
         ,A.date_changed_char 
         ,cd_motivo 		= Rtrim(B.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc)
         ,A.tp_fat 
         ,A.cd_cia_aerea 
         ,A.tp_unid 
         ,A.cd_aerop 
         ,A.cd_terminal 
         ,A.tp_unid_destino 
         ,A.cd_aerop_destino 
         ,A.cd_terminal_destino 
         ,A.dt_confirma 
         ,A.cd_aerop_utilizacao 
         ,A.cd_terminal_utilizacao 
         ,A.nfm 
         ,A.nro_rste 
         ,A.tp_coletor 
         ,A.item_fat 
         ,A.billing_line_id 
         ,A.billing_int_date 
         ,A.billing_int_type 
         ,A.billing_user_1 
         ,A.recv_doc_id
         ,A.date_created 
         ,A.user_id_created 
         ,A.user_id_changed 
         ,A.inactive_ind 
         ,A.active_date
         ,A.chgstamp
         ,descp_tp_natureza  	= LTRIM(RTRIM(C.descp))
         ,descp_tp_coletor   	= LTRIM(RTRIM(D.descp))
         ,descp_tp_unid   		= LTRIM(RTRIM(E.descp))
         ,descp_tp_unid_destino  	= LTRIM(RTRIM(F.descp))
         ,descp_selo_status  	= LTRIM(RTRIM(G.descp))
         ,descp_tp_fat   		= LTRIM(RTRIM(H.descp))
    FROM GEACupax..gvw_pax_selo_ele_log_u        A (NOLOCK)
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  	= 'NTRZ'
        AND  C.code   	= A.tp_natureza  
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  	= 'TPCL'
        AND  D.code   	= A.tp_coletor  
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  	= 'TPUN'
        AND  E.code   	= A.tp_unid  
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  	= 'TPUN'
        AND  F.code   	= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  	= 'SSCO'
        AND  G.code   	= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  	= 'TPFT'
        AND  H.code   	= A.tp_fat  
   WHERE 
         A.nro_selo_elec               = @p_nro_selo 
    ORDER BY   
        A.date_changed_char, A.dt_mov





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upx3_tab_excel]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upx3_tab_excel    Script Date: 19/09/2008 15:21:10 ******/



CREATE PROCEDURE [dbo].[usp_sel_upx3_tab_excel]
               ( @p_nro_selo               char(10) ) 
AS 
  SELECT 
         Natureza 			= LTRIM(RTRIM(C.descp))
         ,Data_da_Baixa		= A.dt_mov 
         ,Tipo_Baixa 		= LTRIM(RTRIM(G.descp))
         ,Data_da_Alteracao	= A.date_changed_char 
         ,Motivo_do_Cancelamento	= CASE WHEN A.cd_motivo IS NULL OR LTRIM(RTRIM(A.cd_motivo)) = '' THEN ' ' ELSE  Rtrim(A.cd_motivo) + ' - ' + Rtrim(B.ds_motivocnc) END
         ,Tipo_de_Faturamento	= CASE WHEN A.tp_fat 	IS NULL OR LTRIM(RTRIM(A.tp_fat)) = '' THEN ' ' ELSE   LTRIM(RTRIM(H.descp)) END  
         ,Cia_Aerea			= A.cd_cia_aerea 
         ,Tipo_Unidad_Origem 	= LTRIM(RTRIM(E.descp))
         ,Unidad_Origem		= A.cd_aerop 
         ,Terminal_Origem		= A.cd_terminal 
         ,Tipo_Unidad_Destino 	= CASE WHEN A.tp_unid_destino IS NULL OR LTRIM(RTRIM(A.tp_unid_destino)) = '' THEN ' ' ELSE  LTRIM(RTRIM(F.descp)) END
         ,Unidad_Destino		= A.cd_aerop_destino 
         ,Terminal_Destino 		= A.cd_terminal_destino 
         ,Data_de_Recebimento	= A.dt_confirma 
         ,Aeroporto_Utilizacao	= A.cd_aerop_utilizacao 
         ,Terminal_Utilizacao	= A.cd_terminal_utilizacao 
         ,NFM			= A.nfm 
         ,NRO_RSTE		= A.nro_rste 
         ,Tipo_de_Coletor 		= CASE WHEN A.tp_coletor IS NULL OR LTRIM(RTRIM(A.tp_coletor)) = '' THEN ' ' ELSE   LTRIM(RTRIM(D.descp)) END
         ,ITEM			= A.item_fat 
         ,billing_line_id		= A.billing_line_id 
         ,billing_int_date		= A.billing_int_date 
         ,billing_int_type     		= A.billing_int_type 
         ,billing_user_1		= A.billing_user_1 
         ,Boleto  			= A.recv_doc_id
         ,Data_de_Inclusao		= A.date_created 
         ,Usuario_Inclusao		= A.user_id_created 
         ,Usuario_Alterasao		= A.user_id_changed 
         ,Inativo			= A.inactive_ind 
         ,Data_de_ativasao		= A.active_date
    FROM GEACupax..gvw_pax_selo_ele_log_u        A (NOLOCK)
        LEFT JOIN GEACutcx..cor_motivocnc_selo_u  B (NOLOCK INDEX = P_cor_motivocnc_selo_u)
        On    B.cd_motivo  	= A.cd_motivo
        LEFT JOIN GEACCOMMON..dropdowndw_u  C (NOLOCK INDEX = PK_dropdowndw_u)
        ON  C.tbl_code  	= 'NTRZ'
        AND C.code   	= A.tp_natureza   
        LEFT JOIN GEACCOMMON..dropdowndw_u  D (NOLOCK INDEX = PK_dropdowndw_u)
        ON  D.tbl_code  	= 'TPCL'
        AND D.code   	= A.tp_coletor   
        LEFT JOIN GEACCOMMON..dropdowndw_u  E (NOLOCK INDEX = PK_dropdowndw_u)
        ON  E.tbl_code  	= 'TPUN'
        AND E.code   	= A.tp_unid   
        LEFT JOIN GEACCOMMON..dropdowndw_u  F (NOLOCK INDEX = PK_dropdowndw_u)
        ON  F.tbl_code  	= 'TPUN'
        AND  F.code   	= A.tp_unid_destino  
        LEFT JOIN GEACCOMMON..dropdowndw_u  G (NOLOCK INDEX = PK_dropdowndw_u)
        ON  G.tbl_code  	= 'SSCO'
        AND  G.code   	= A.selo_status  
        LEFT JOIN GEACCOMMON..dropdowndw_u  H (NOLOCK INDEX = PK_dropdowndw_u)
        ON  H.tbl_code  	= 'TPFT'
        AND  H.code   	= A.tp_fat  
   WHERE 
         A.nro_selo_elec               = @p_nro_selo 
    ORDER BY   
        A.date_changed_char, A.dt_mov






GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upxa]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upxa    Script Date: 19/09/2008 15:21:10 ******/



CREATE PROCEDURE [dbo].[usp_sel_upxa] 
               ( @p_nro_selo_elec               char(20) ) 
AS 
  DECLARE        @w_com_flg                char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_selo_elec_u_comnt_u  (NOLOCK)
               WHERE nro_selo_elec               = @p_nro_selo_elec) 
      SELECT @w_com_flg = 'Y' 
  ELSE 
      SELECT @w_com_flg = 'N' 
 
  SELECT nro_selo_elec, 
         tp_natureza, 
         dt_mov, 
         selo_status, 
         cd_motivo, 
         tp_fat, 
         cd_cia_aerea, 
         tp_unid, 
         cd_aerop, 
         cd_terminal, 
         tp_unid_destino, 
         cd_aerop_destino, 
         cd_terminal_destino, 
         dt_confirma, 
         cd_aerop_utilizacao, 
         cd_terminal_utilizacao, 
         nfm, 
         nro_rste, 
         tp_coletor, 
         item_fat, 
         billing_line_id, 
         billing_int_date, 
         billing_int_type, 
         billing_user_1, 
         date_created, 
         user_id_created, 
         date_changed, 
         user_id_changed, 
         inactive_ind, 
         active_date, 
         chgstamp, 
         @w_com_flg 
    FROM pax_selo_elec_u (NOLOCK INDEX = PK_pax_selo_elec_u)
   WHERE nro_selo_elec               = @p_nro_selo_elec 
 







GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upxa_com]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upxa_com    Script Date: 19/09/2008 15:21:11 ******/




CREATE PROCEDURE [dbo].[usp_sel_upxa_com] 
               ( @p_nro_selo_elec char(20),  
                 @p_type_cd       char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_selo_elec_u_comnt_u  (NOLOCK)
   WHERE nro_selo_elec = @p_nro_selo_elec 
     AND type_cd       	= @p_type_cd 
   ORDER  
      BY seq_nbr 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upz1_com]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upz1_com    Script Date: 19/09/2008 15:21:11 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_upz1_com] 
               ( @p_cd_aerop     char(4),  
                 @p_dt_mov_ini   datetime,  
                 @p_dt_mov_fim   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_valida_quinzena__comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND dt_mov_ini   = @p_dt_mov_ini 
     AND dt_mov_fim   = @p_dt_mov_fim 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND type_cd      = @p_type_cd 
   ORDER  
      BY seq_nbr 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upza]    Script Date: 01/05/2011 18:05:40 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upza    Script Date: 19/09/2008 15:21:11 ******/







CREATE     PROCEDURE [dbo].[usp_sel_upza] 
		( @p_cd_aerop               char(4), 
		@p_cd_terminal            	char(10), 
		@p_dt_mov                 	datetime, 
		@p_nro_selo_electronico   	char(14), 
		@p_date_changed_char      	char(20) ) 
AS 
DECLARE        @w_com_flg                char(1) 
 
SELECT @w_com_flg = 'N' 

SELECT date_changed_char, 
	tp_natureza, 
	selo_status, 
	cd_motivo, 
	tp_fat, 
	cd_cia_aerea, 
	tp_unid, 
	dt_confirma, 
	cd_aerop_utilizacao, 
	cd_terminal_utilizacao, 
	tp_coletor, 
	item_fat, 
	billing_line_id, 
	billing_int_date, 
	billing_int_type, 
	billing_user_1, 
	recv_doc_id, 
	voo_rea,
	dt_voo_rea,
	hh_voo_rea,
	date_created, 
	user_id_created, 
	user_id_changed, 
	inactive_ind, 
	active_date, 
	chgstamp, 
	@w_com_flg 
FROM gvw_pax_selo_electronico_log_u 
WHERE cd_aerop               		= @p_cd_aerop 
	AND cd_terminal            		= @p_cd_terminal 
	AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
	AND nro_selo_electronico   		= @p_nro_selo_electronico 
	AND date_changed_char      		= @p_date_changed_char 
 






GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upza_com]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upza_com    Script Date: 19/09/2008 15:21:11 ******/




CREATE  PROCEDURE [dbo].[usp_sel_upza_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_type_cd              char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_selo_electronico_comnt_u 
   WHERE cd_aerop             			= @p_cd_aerop 
     AND cd_terminal          			= @p_cd_terminal 
     AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
     AND nro_selo_electronico 			= @p_nro_selo_electronico 
     AND type_cd              			= @p_type_cd 
   ORDER  
      BY seq_nbr 
 



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_upza_tab]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_upza_tab    Script Date: 19/09/2008 15:21:11 ******/




/*

exec usp_sel_upza_tab 'SBBR', '1', '20041112', '0000000001'

*/



CREATE     PROCEDURE [dbo].[usp_sel_upza_tab] 
			(@p_cd_aerop               char(4), 
			 @p_cd_terminal            char(10), 
			 @p_dt_mov                 datetime, 
			 @p_nro_selo_electronico   char(14) ) 
AS 
SELECT A.date_changed_char 
	,A.tp_natureza 
	,A.selo_status 
	,A.cd_motivo 
	,A.tp_fat 
	,A.cd_cia_aerea 
	,A.tp_unid 
	,A.dt_confirma 
	,A.cd_aerop_utilizacao 
	,A.cd_terminal_utilizacao 
	,A.tp_coletor 
	,A.item_fat 
	,A.billing_line_id 
	,A.billing_int_date 
	,A.billing_int_type 
	,A.billing_user_1 
	,A.recv_doc_id 
	,A.voo_rea
	,A.dt_voo_rea
	,A.hh_voo_rea
	,A.date_created 
	,A.user_id_created 
	,A.user_id_changed 
	,A.inactive_ind 
	,A.active_date 
	,A.chgstamp 
	,ds_natureza	= LTRIM(RTRIM(B.descp)) 
	,ds_selo_status	= LTRIM(RTRIM(C.descp)) 
	,ds_motivocnc	= LTRIM(RTRIM(ISNULL(D.ds_motivocnc,'')))
	,ds_tp_fat		= LTRIM(RTRIM(E.descp))
	,ds_cia_aerea	= LTRIM(RTRIM(F.no_cia_aerea))
	,ds_unid		= LTRIM(RTRIM(ISNULL(G.descp,'')))
	,ds_aerop_utilizacao = CASE WHEN A.cd_aerop_utilizacao IS NULL THEN '' ELSE A.cd_aerop_utilizacao + ' - ' + LTRIM(RTRIM(H.no_aerop)) END 
	,ds_tp_coletor	= LTRIM(RTRIM(I.descp))
FROM gvw_pax_selo_electronico_log_u A (nolock)
INNER JOIN GEACCOMMON..dropdowndw_u B (NOLOCK INDEX = PK_dropdowndw_u)
ON B.tbl_code			= 'NTRI'
AND B.code				= A.tp_natureza
INNER JOIN GEACCOMMON..dropdowndw_u C (NOLOCK INDEX = PK_dropdowndw_u)
ON C.tbl_code			= 'STSL'
AND C.code				= A.selo_status
LEFT JOIN GEACutcx..cor_motivocnc_selo_u D (NOLOCK INDEX = P_cor_motivocnc_selo_u)
ON D.cd_motivo			= A.cd_motivo
INNER JOIN GEACCOMMON..dropdowndw_u E (NOLOCK INDEX = PK_dropdowndw_u)
ON E.tbl_code			= 'TPFT'
AND E.code				= A.tp_fat
INNER JOIN GEACutcx..cor_cia_aerea_u F (NOLOCK INDEX = P_cor_cia_aerea_u)
ON F.cd_cia_aerea		= A.cd_cia_aerea
LEFT JOIN GEACCOMMON..dropdowndw_u G (NOLOCK INDEX = PK_dropdowndw_u)
ON G.tbl_code			= 'TPUN'
AND G.code				= A.tp_unid
LEFT JOIN GEACutcx..cor_aeroporto_u H (NOLOCK INDEX = P_cor_aeroporto_u)
ON H.cd_aerop			= A.cd_aerop_utilizacao
INNER JOIN GEACCOMMON..dropdowndw_u I (NOLOCK INDEX = PK_dropdowndw_u)
ON I.tbl_code			= 'TPCL'
AND I.code				= A.tp_coletor
WHERE A.cd_aerop               			= @p_cd_aerop 
	AND A.cd_terminal					= @p_cd_terminal 
	AND CONVERT(VARCHAR,A.dt_mov,112)	= @p_dt_mov 
	AND A.nro_selo_electronico			= @p_nro_selo_electronico 







GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqaa]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqaa    Script Date: 19/09/2008 15:21:11 ******/




CREATE   PROCEDURE [dbo].[usp_sel_uqaa] 
               ( @p_cd_aerop         char(4), 
                 @p_data_mov         datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_voo          char(5) ) 
AS 
DECLARE        @w_com_flg          char(1) 

IF EXISTS ( SELECT * 
            FROM pax_fiscal_head_u_comnt_u 
           WHERE cd_aerop         = @p_cd_aerop 
             AND data_mov         = @p_data_mov 
             AND cd_cia_aerea     = @p_cd_cia_aerea 
             AND nro_voo          = @p_nro_voo) 
	SELECT @w_com_flg = 'Y' 
ELSE 
	SELECT @w_com_flg = 'N' 
 
SELECT a.cd_aerop, 
	a.data_mov, 
	a.cd_cia_aerea, 
	a.nro_voo, 
	a.fl_fiscalizado, 
	a.user_ficalizador, 
	a.fl_validado, 
	a.user_validador, 
	a.chgstamp, 
	@w_com_flg,
	isnull(ltrim(rtrim(b.no_aerop)), '') ds_aerop,
	isnull(ltrim(rtrim(c.no_cia_aerea)), '') ds_aerop,
	isnull(rtrim(d.user_id),'') 	user_id_created,
	isnull(d.dt_time, '19000101')	date_created,
	isnull(rtrim(f.user_id),'') 	user_id_changed,
	isnull(f.dt_time, '19000101')	date_changed
FROM pax_fiscal_head_u a (nolock index = P_pax_fiscal_head_u)
left join GEACutcx..cor_aeroporto_u b(nolock index = P_cor_aeroporto_u)
on b.cd_aerop		= a.cd_aerop
left join GEACutcx..cor_cia_aerea_u c(nolock index = P_cor_cia_aerea_u)
on c.cd_cia_aerea	= a.cd_cia_aerea
left join pax_fiscal_head_u_history_u d (nolock)
on d.cd_aerop		= a.cd_aerop
and d.data_mov		= a.data_mov
and d.cd_cia_aerea	= a.cd_cia_aerea
and d.nro_voo		= a.nro_voo
and d.chg_type		= 'A'
and d.dt_time		= (select max(e.dt_time)
					    from pax_fiscal_head_u_history_u e (nolock)
						where e.cd_aerop	= d.cd_aerop
						and e.data_mov		= d.data_mov
						and e.cd_cia_aerea	= d.cd_cia_aerea
						and e.nro_voo		= d.nro_voo
						and e.chg_type		= d.chg_type )
left join pax_fiscal_head_u_history_u f (nolock)
on f.cd_aerop		= a.cd_aerop
and f.data_mov		= a.data_mov
and f.cd_cia_aerea	= a.cd_cia_aerea
and f.nro_voo		= a.nro_voo
and f.chg_type		= 'M'
and f.dt_time		= (select max(g.dt_time)
					    from pax_fiscal_head_u_history_u g (nolock)
						where g.cd_aerop	= f.cd_aerop
						and g.data_mov		= f.data_mov
						and g.cd_cia_aerea	= f.cd_cia_aerea
						and g.nro_voo		= f.nro_voo
						and g.chg_type		= f.chg_type )
WHERE a.cd_aerop	= @p_cd_aerop 
AND a.data_mov		= @p_data_mov 
AND a.cd_cia_aerea	= @p_cd_cia_aerea 
AND a.nro_voo		= @p_nro_voo 
 
select * from pax_fiscal_head_u_history_u



GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqaa_com]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqaa_com    Script Date: 19/09/2008 15:21:11 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_uqaa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_data_mov     datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_fiscal_head_u_comnt_u 
   WHERE cd_aerop     = @p_cd_aerop 
     AND data_mov     = @p_data_mov 
     AND cd_cia_aerea = @p_cd_cia_aerea 
     AND nro_voo      = @p_nro_voo 
     AND type_cd      = @p_type_cd 
   ORDER  
      BY seq_nbr 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqba]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqba    Script Date: 19/09/2008 15:21:12 ******/


-- exec usp_sel_uqba 'SBBR', '20070801', 'VRN', 'TODOS'

CREATE   procedure [dbo].[usp_sel_uqba]
(		@p_cd_aerop			char(4)
		,@p_data_mov		datetime
		,@p_cd_cia_aerea	char(3)
		,@p_nro_voo			char(5)
)
as
select 
	 a.cd_aerop
	,a.data_mov
	,a.cd_cia_aerea
	,a.nro_voo
	,a.numero
	,a.nro_voo_lista
	,a.sel_lid_dom_fis
	,a.sel_lid_dom_ele
	,a.sel_lid_int_fis
	,a.sel_lid_int_ele
	,a.sel_lid_tot
	,a.sel_conf_dom_ele
	,a.sel_conf_int_ele
	,a.sel_tot_fat
	,a.tot_rpe
	,a.cont_bilhetes
	,a.cont_man_voo
	,a.cont_pax_aero
	,a.tot_pax_ise
	,a.fl_voo_lib_fat
	,a.fl_dados_inconsistentes
	,a.qtd_pax_con
	,a.qtd_boa_ise_dom
	,a.qtd_boa_ise_int
	,a.qtd_boa_con_dom
	,a.qtd_boa_con_int
	,a.qtd_boa_emb_dom
	,a.qtd_boa_emb_int
	,a.qtd_man_ise_dom
	,a.qtd_man_ise_Int
	,a.qtd_man_con_dom
	,a.qtd_man_con_int
	,a.qtd_man_emb_dom
	,a.qtd_man_emb_int
	,a.qtd_man_tra_dom
	,a.qtd_man_tra_int
	,a.comentario
	,a.matricula
	,a.data_hora
	,a.chgstamp
	,isnull(b.hr_voo, '')
	,isnull(b.nro_voo, '')
	,case 
		when (a.cont_bilhetes + a.cont_man_voo + a.cont_pax_aero) > 0 then 'S' 
        else 'N' 
     end
from pax_fiscal_det_u a (nolock index = P_pax_fiscal_det_u)
left join rpax_emb_voo_u b(nolock index = P_rpax_emb_voo_u)
on b.cd_aerop								= a.cd_aerop
and b.cd_terminal							= '1'
and b.cd_cia_aerea							= a.cd_cia_aerea
and b.dt_voo								= a.data_mov
and right('0' + rtrim(ltrim(b.nro_voo)),5)	= right('0' + rtrim(ltrim(a.nro_voo_lista)),5)
and b.inactive_ind							= '0'
where a.cd_aerop		= @p_cd_aerop
and a.data_mov			= @p_data_mov
and a.cd_cia_aerea		= @p_cd_cia_aerea
and a.nro_voo			= @p_nro_voo





GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqba_com]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqba_com    Script Date: 19/09/2008 15:21:12 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_uqba_com] 
               ( @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_numero        int,  
                 @p_nro_voo_lista char(5),  
                 @p_type_cd       char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_fiscal_det_u_comnt_u 
   WHERE cd_aerop      = @p_cd_aerop 
     AND data_mov      = @p_data_mov 
     AND cd_cia_aerea  = @p_cd_cia_aerea 
     AND nro_voo       = @p_nro_voo 
     AND numero        = @p_numero 
     AND nro_voo_lista = @p_nro_voo_lista 
     AND type_cd       = @p_type_cd 
   ORDER  
      BY seq_nbr 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqba_tab]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqba_tab    Script Date: 19/09/2008 15:21:12 ******/

 
CREATE PROCEDURE [dbo].[usp_sel_uqba_tab] 
               ( @p_cd_aerop                char(4), 
                 @p_dt_mov_ini              datetime, 
                 @p_dt_mov_fim              datetime, 
                 @p_cd_cia_aerea            char(3), 
                 @p_nro_voo                 char(5) ) 
AS 
  SELECT data_mov, 
         numero, 
         nro_voo_lista, 
         sel_lid_dom_fis, 
         sel_lid_dom_ele, 
         sel_lid_int_fis, 
         sel_lid_int_ele, 
         sel_lid_tot, 
         sel_conf_dom_ele, 
         sel_conf_int_ele, 
         sel_tot_fat, 
         tot_rpe, 
         cont_bilhetes, 
         cont_man_voo, 
         cont_pax_aero, 
         tot_pax_ise, 
--         fl_voo_fiscalizado, 
         fl_voo_lib_fat, 
         fl_dados_inconsistentes, 
         chgstamp 
   FROM pax_fiscal_det_u 
   WHERE cd_aerop                = @p_cd_aerop 
     AND data_mov                = @p_dt_mov_ini 
--     AND dt_mov_fim              = @p_dt_mov_fim 
     AND cd_cia_aerea            = @p_cd_cia_aerea 
     AND nro_voo                 = @p_nro_voo 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqca]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqca    Script Date: 19/09/2008 15:21:12 ******/



CREATE PROCEDURE [dbo].[usp_sel_uqca] 
               ( @p_cd_aerop       char(4), 
                 @p_aurorizador_id char(30) ) 
AS 
  DECLARE        @w_com_flg        char(1) 
 
  IF EXISTS ( SELECT * 
                FROM pax_val_qui_res_u_comnt_u 
               WHERE cd_aerop       = @p_cd_aerop 
                 AND aurorizador_id = @p_aurorizador_id) 
      SELECT @w_com_flg = "Y" 
  ELSE 
      SELECT @w_com_flg = "N" 
 
  SELECT aurorizador_id, 
         inactive_ind, 
         dt_inactive, 
         chgstamp, 
         @w_com_flg 
    FROM pax_val_qui_res_u 
   WHERE cd_aerop       = @p_cd_aerop 
     AND aurorizador_id = @p_aurorizador_id 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqca_com]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqca_com    Script Date: 19/09/2008 15:21:12 ******/



CREATE PROCEDURE [dbo].[usp_sel_uqca_com] 
               ( @p_cd_aerop       char(4),  
                 @p_aurorizador_id char(30),  
                 @p_type_cd        char(1) ) 
AS 
  SELECT text,  
         chgstamp 
    FROM pax_val_qui_res_u_comnt_u 
   WHERE cd_aerop       = @p_cd_aerop 
     AND aurorizador_id = @p_aurorizador_id 
     AND type_cd        = @p_type_cd 
   ORDER  
      BY seq_nbr 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_uqca_tab]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_uqca_tab    Script Date: 19/09/2008 15:21:12 ******/



CREATE PROCEDURE [dbo].[usp_sel_uqca_tab] 
               ( @p_cd_aerop       char(4) ) 
AS 
  SELECT aurorizador_id, 
         inactive_ind, 
         dt_inactive, 
         chgstamp 
    FROM pax_val_qui_res_u 
   WHERE cd_aerop       = @p_cd_aerop 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_sel_val_tot_pax]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_sel_val_tot_pax    Script Date: 19/09/2008 15:21:12 ******/

CREATE PROCEDURE [dbo].[usp_sel_val_tot_pax] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_cd_cia_aerea     	char(3), 
                 @p_tp_natureza      	char(1), 
                 @p_periodo_de       	datetime, 
                 @p_periodo_ate      	datetime)
AS 
    SELECT pax_total =  CASE 
   WHEN Sum(pax_total)  IS NULL THEN 0
   ELSE Sum(pax_total)  END
    FROM GEACupax..rpax_emb_dia_u  (NOLOCK INDEX = P_rpax_emb_dia_u)
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND tp_natureza      	= @p_tp_natureza 
     AND periodo_de       	= @p_periodo_de 
     AND periodo_ate      	= @p_periodo_ate 




GO

/****** Object:  StoredProcedure [dbo].[usp_selos_edit_fields]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_selos_edit_fields    Script Date: 19/09/2008 15:21:13 ******/




CREATE   procedure [dbo].[usp_selos_edit_fields]
			(@p_process					char(05),
			 @p_edit_type				varchar(100),
			 @p_string_01				varchar(100)  = ' ' output,
			 @p_string_02				varchar(100)  = ' ' output,
			 @p_string_03				varchar(100)  = ' ' output,
			 @p_string_04				varchar(100)  = ' ' output,
			 @p_string_05				varchar(100)  = ' ' output,
			 @p_string_06				varchar(100)  = ' ' output,
			 @p_string_07				varchar(100)  = ' ' output,
			 @p_string_08				varchar(100)  = ' ' output,
			 @p_string_09				varchar(100)  = ' ' output,
			 @p_string_10				varchar(100)  = ' ' output,
			 @p_msg_id					char(08)      = ' ' output,
			 @p_result_ind				char(01) = 'Y')
as

declare @w_result				int
		,@w_exec				int
		,@w_error				char(01)
		,@w_msg_id				char(08)
		,@w_ad_msg				varchar(30)
		,@w_string				varchar(250)
		,@w_money				money
		,@w_datetime			datetime
		,@w_int					int
		,@w_selo_ini			real
		,@w_selo_fin			real


select @w_string				= ' '
		,@w_money				= 0
		,@w_int					= 0
		,@w_exec				= 0
		,@w_error				= 'N'
		,@w_msg_id				= ' '
		,@w_ad_msg				= ' '

/* Parametros de entrada para el tipo de processo
@p_process                                              = 'IC' = Itemchange
                                                       'DU' = Dbupdate
*/
/* Parametros de entrada calcular el Numero de Transaccion
   @p_edit_type                = 'transaction_id'
   @p_string_01                                     = Codigo da mensagem
*/
if  @p_edit_type = 'transaction_id' and @p_process = 'OP'
begin
	exec @w_result = GEACupax..usp_sel_transaction_id @w_string output, 'N'
	if @w_result > 0
	begin
		select @w_exec			= 1
			,@w_error			= 'E'
			,@w_msg_id			= 'xx'
			,@w_string			= 0
		goto goto_select
	end
	goto goto_select
end
/* Parametros de entrada para validar aeroportos
   @p_edit_type                = 'aeroporto'
   @p_string_01                                     = Tipo de Unidade
   @p_string_02                                     = Codigo da unidade
*/
if  @p_edit_type                                    = 'aeroporto'
and @p_process                                     in ('IC')
begin
	if @p_string_01 not in ('X', 'A')
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9001'
		goto goto_select
	end
	if @p_string_01 = 'A'
	begin
		select @w_string = no_aerop
		from GEACutcx..cor_aeroporto_u (nolock INDEX = P_cor_aeroporto_u)  
		where cd_aerop = @p_string_02
 
		if @@rowcount = 0
		begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9002'
			goto goto_select
		end
	end
	if @p_string_01 = 'X'
	begin
		select @w_string = no_almox
		from GEACutcx..cor_almoxarife_u (nolock INDEX = P_cor_almoxarife_u) 
		where cd_almox = @p_string_02
		if @@rowcount = 0
		begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9003'
			goto goto_select
		end
	end
	goto goto_select
end
/* Parametros de entrada para validar nombre funcionario
   @p_edit_type                = 'no_funcio'
   @p_string_01                                     = codigo de nombre funcionario
   @p_string_02                                     = codigo de aeroporto
   @p_string_03                                     = codigo de terminal
   @p_string_04                                     = codigo de cia aerea
*/
if  @p_edit_type = 'no_funcio' and @p_process = 'IC'
begin
	if @p_string_01 = ' '
	begin
		select @w_exec 		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9016'
		goto goto_select
	end
	
	if @p_string_02 = ' ' or @p_string_03 = ' ' or @p_string_04 = ' '
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9016'
		goto goto_select
	end
	
	select @w_string = no_funcio
	from GEACutcx..cor_funcio_selo_u (nolock INDEX = P_cor_funcio_selo_u) 
	where cd_aerop				= @p_string_02
		and   cd_terminal		= @p_string_03
		and   cd_cia_aerea		= @p_string_04
		and   no_funcio			= @p_string_01
	if @@rowcount = 0
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9016'
		goto goto_select
	end
	goto goto_select
end
/* Parametros de entrada para validar terminais
   @p_edit_type                = 'terminal'
   @p_string_01                                     = Tipo de Unidade
   @p_string_02                                     = Codigo da unidade
   @p_string_03                                     = Codigo do terminal
*/
if  @p_edit_type = 'terminal' and @p_process = 'IC'
begin
	if @p_string_01 not in ('X', 'A')
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9001'
		goto goto_select
	end
	if @p_string_01	= 'A'
	begin
		select @w_string = cd_aerop
		from GEACutcx..cor_terminal_aerop_u (nolock INDEX = P_cor_terminal_aerop_u) 
		where cd_aerop 		= @p_string_02 
			and	terminal	= @p_string_03
 		
		if @@rowcount = 0
		begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9004'
			goto goto_select
		end
	end
	if @p_string_01	= 'X'
	begin
		select @w_string = no_almox
		from GEACutcx..cor_almoxarife_u (nolock INDEX = P_cor_almoxarife_u) 
		where cd_almox 			= @p_string_02 
			and cd_terminal     = @p_string_03
		if @@rowcount	= 0
		begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9004'
			goto goto_select
		end
	end
	goto goto_select
end
/* Parametros de entrada para validar terminais
   @p_edit_type                = 'terminal_destino'
   @p_string_01                                     = Tipo de Unidade Destino
   @p_string_02                                     = Codigo da unidade Destino
   @p_string_03                                     = Codigo do terminal Destino
   @p_string_01                                     = Tipo de Unidade Origem
   @p_string_02                                     = Codigo da unidade Origem
   @p_string_03                                     = Codigo do terminal Origem
*/
if  @p_edit_type = 'terminal_destino' and @p_process ='IC'
begin
	if @p_string_01 +  @p_string_02 +  @p_string_03 =  @p_string_04 +  @p_string_05 +  @p_string_06
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9012'
		goto goto_select
	end
	goto goto_select
end
/* Parametros de entrada para validar cia aerea
   @p_edit_type                = 'cia_aerea'
   @p_string_01                                     = codigo de cia aerea
*/
if  @p_edit_type = 'cia_aerea' and @p_process ='IC'
begin
	if @p_string_01 = ' '
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9015'
		goto goto_select
	end
	
	select @w_string = no_cia_aerea
	from GEACutcx..cor_cia_aerea_u (nolock INDEX = P_cor_cia_aerea_u)  
	where cd_cia_aerea = @p_string_01
	  and inactive_ind = 0
	
	if @@rowcount = 0
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9015'
		goto goto_select
	end
	goto goto_select
end
/* Parametros de entrada para numero de selo inicial e final
   @p_edit_type                = 'selo'
   @p_string_01                                     = 'selo_ini ou selo_fin'
   @p_string_02                                     = numero de selo inicial
   @p_string_03                                     = numero de selo final
   @p_string_04                                     = complemento da mensagem
   @p_string_05                                     = local
*/
if  @p_edit_type = 'selo' and @p_process = 'IC'
begin
	declare @w_selo_ini_str		char(10)
		,@w_selo_fin_str		char(10)
		,@w_selo_teste			char(10)

	select @w_selo_ini_str			= @p_string_02
		,@w_selo_fin_str			= @p_string_03
		,@w_ad_msg					= @p_string_04
		,@w_selo_ini				= 0
		,@w_selo_fin				= 0
	
   -- Verifica se o Primeiro parametro é selo_fin ou selo_ini
	if @p_string_01 <> 'selo_fin' and @p_string_01 <> 'selo_ini'   
	begin
		select @w_exec			= 1
			,@w_error			= 'E'
			,@w_msg_id			= 'upa9009'
			goto goto_select
		end
		if @p_string_01 = 'selo_ini'
		begin
			select @w_selo_teste = @p_string_02
		end
		else
		begin
			select @w_selo_teste = @p_string_03
		end
      -- Prefixo
		if  substring(@w_selo_teste,1,1) not in ('D','I','S') 
		begin
			select @w_exec			= 1
				,@w_error			= 'E'
				,@w_msg_id			= 'upa9006a'
			goto goto_select
		end 
      -- Sequencia
		if  substring(@w_selo_teste,3,7) < '0000000' or substring(@w_selo_teste,3,7) > '9999999'
		begin
			select @w_exec			= 1
				,@w_error			= 'E'
				,@w_msg_id			= 'upa9006b'
			goto goto_select
		end 
		
		-- Tamanho
		if len(rtrim(@w_selo_teste)) > 9
		begin
			select @w_exec			= 1
				,@w_error			= 'E'
				,@w_msg_id			= 'upa9006'
			goto goto_select
		end 
		-- Zeros a esquerda
		if  rtrim(ltrim(right('00000000' + ltrim(rtrim(convert(char(7),convert(integer,substring(@w_selo_teste,3,7))))),7))) <> ltrim(rtrim(substring(@w_selo_teste,3,7)))
		begin
			select @w_exec			= 1
				,@w_error			= 'E'
				,@w_msg_id			= 'upa9006c'
			goto goto_select
		end 

		-- Se for selo final
		if @p_string_01 = 'selo_fin'   
		begin
			if  @w_selo_ini_str = ' ' or  @w_selo_ini_str = '' 
			begin
				select @w_exec		= 1
					,@w_error		= 'E'
					,@w_msg_id		= 'upa9008'
				goto goto_select
			end
			if  substring(@w_selo_ini_str,1,2) <> substring(@w_selo_fin_str,1,2)      
			begin
				select @w_exec			= 1
					,@w_error			= 'E'
					,@w_msg_id			= 'upa9011'
				goto goto_select
			end
			
			if  substring(@w_selo_fin_str,3,7)  <  substring(@w_selo_ini_str,3,7)
			begin
				select @w_exec			= 1
					,@w_error			= 'E'
					,@w_msg_id			= 'upa9007'
				goto goto_select
			end
			
			-- Verificante intervalo maximo de selos
			select @w_selo_ini = convert(real, substring(@p_string_02, 3, 7))
				  ,@w_selo_fin = convert(real, substring(@p_string_03, 3, 7))
   
			select @w_money = (@w_selo_fin - @w_selo_ini) + 1
	end   
	goto goto_select
end

/* Parametros de entrada para validar aeroportos
   @p_edit_type                = 'dt_remessa'
   @p_string_01                                     = data da remessa
   @p_string_02                                     = ano da remessa
   @p_string_03                                     = mes da remessa
   @p_string_04                                     = dia da remessa
*/
if  @p_edit_type = 'dt_remessa' and @p_process = 'IC'
begin
	if convert(datetime,@p_string_03 + '/' + @p_string_04 + '/' + @p_string_02) > getdate()
	begin
		select @w_exec		= 1
			,@w_error		= 'E'
			,@w_msg_id		= 'upa9010'
		goto goto_select
	end
	goto goto_select
end
/* Parametros de entrada para validar o codigo de motivo
   @p_edit_type                = 'motivo'
   @p_string_01                                     = codigo del motivo
   @p_string_02                                     = status del selo
*/
if  @p_edit_type = 'motivo' and @p_process = 'IC'
begin
	if @p_string_02 = '4'  
	begin
		if @p_string_01 = ' '
		begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9018'
			goto goto_select
		end
		
		select @w_string = ds_motivocnc
		from GEACutcx..cor_motivocnc_selo_u (NOLOCK INDEX = P_cor_motivocnc_selo_u)
		where cd_motivo	= @p_string_01
				
		if @@rowcount		= 0
		begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9018'
			goto goto_select
		end
	end
	goto goto_select
end
/* Parametros de entrada para validar se selo existe e inserir
   @p_edit_type                = 'motivo'
   @p_string_01                                     = codigo del motivo
   @p_string_02                                     = status del selo
*/
if @p_edit_type = 'grava_remessa' and @p_process = 'IC'
begin
	if 1 = 1 
	begin
		select 1
	end
	goto goto_select
end
/* Parametros de entrada para calculo do Numero RSTE
   @p_edit_type                = 'nro_rste'
   @p_string_01                                     = Codigo de aeroporto
   @p_string_02                                     = Terminal
   @p_string_03                                     = Data de entrega
   @p_string_04                                     = cia Aerea
*/
if  @p_edit_type = 'nro_rste' and @p_process = 'DU'
begin
	declare @w_year			char(04)
			,@w_inative_ind	char(1)

	/* Verificar si a CIA AEREA esta inativa*/
	set @w_inative_ind = '1'
	
	select @w_inative_ind = inactive_ind
	from GEACutcx..cor_cia_aerea_u (nolock index = P_cor_cia_aerea_u)
	where cd_cia_aerea = ltrim(rtrim(@p_string_04))
      and inactive_ind = 0
	
	if @w_inative_ind = '1'
	begin
			select @w_exec		= 1
				,@w_error		= 'E'
				,@w_msg_id		= 'upa9111'
			goto goto_select
	end
	
	begin tran rste
	
	select @w_year = substring(@p_string_03, 1, 4)
	update GEACupax..pax_param_rste_u 
	set ultimo_rste 		= ultimo_rste + 1
		,date_changed    	= convert(char(10), getdate(), 112)
		,user_id_changed 	= suser_sname()
	where cd_aerop				= @p_string_01
		and cd_terminal			= @p_string_02
		and ano_rste			= @w_year
	
	if @@rowcount = 0
	begin
		SET @w_string = '000001'
		insert into GEACupax..pax_param_rste_u
		select @p_string_01,
			@p_string_02,
			@w_year,
			1,
			0,
			0,
			convert(char(10), getdate(), 112),
			suser_sname(),
			'19000101',
			' ',
			'0',
			convert(char(10), getdate(), 112),
			0
	end 
	else
	begin
		select @w_string = right('000000' + ltrim(rtrim(convert(char(06), ultimo_rste))), 6)
		from GEACupax..pax_param_rste_u 
		where cd_aerop			= @p_string_01
			and cd_terminal		= @p_string_02
			and ano_rste		= @w_year
	end 
	commit tran rste
	goto goto_select
end
/* Parametros de entrada para el total de selos
   @p_edit_type                = 'tot_selos'
   @p_string_01                                     = numero de selo inicial
   @p_string_02                                     = numero de selo final
*/
if  @p_edit_type = 'tot_selos' and @p_process = 'IC'
begin
	select @w_selo_ini	= convert(real, substring(@p_string_01, 3, 7))
		,@w_selo_fin	= convert(real, substring(@p_string_02, 3, 7))

	set @w_money		= (@w_selo_fin - @w_selo_ini) + 1
	goto goto_select
end
/* Parametros de entrada para buscar la descriçao do tipo de faturamento
   @p_edit_type                = 'tp_fat'
   @p_string_01                                     = Tipo de facturamento
*/
if  @p_edit_type = 'tp_fat' and @p_process = 'IC'
begin
	select @w_string = descp
	from GEACCOMMON..dropdowndw_u (NOLOCK INDEX = PK_dropdowndw_u)
	where tbl_code		= 'TPFT'
		and code		= @p_string_01
	goto goto_select
end

goto_select:
if @p_result_ind = 'Y'
begin
	select @w_error, @w_msg_id, @w_ad_msg, @w_string, @w_money, @w_datetime, @w_int
end
return @w_exec








GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up1a]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up1a    Script Date: 19/09/2008 15:21:13 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_up1a] 
               ( @p_cd_cia_aerea    char(3), 
                 @p_dt_arquivo      datetime, 
                 @p_arquivo         char(255), 
                 @p_qtd_selos       float, 
                 @p_status_arq      char(1), 
                 @p_date_created    datetime, 
                 @p_user_id_created char(30), 
                 @p_date_changed    datetime, 
                 @p_user_id_changed char(30), 
                 @p_inactive_ind    char(1), 
                 @p_active_date     datetime, 
                 @p_old_chgstamp    smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_conf_baixa_selo_u 
     SET qtd_selos       = @p_qtd_selos, 
         status_arq      = @p_status_arq, 
         date_created    = @p_date_created, 
         user_id_created = @p_user_id_created, 
         date_changed    = @p_date_changed, 
         user_id_changed = @p_user_id_changed, 
         inactive_ind    = @p_inactive_ind, 
         active_date     = @p_active_date, 
         chgstamp        = @w_new_chgstamp 
   WHERE cd_cia_aerea    = @p_cd_cia_aerea 
     AND dt_arquivo      = @p_dt_arquivo 
     AND arquivo         = @p_arquivo 
     AND chgstamp        = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_conf_baixa_selo_u 
                   WHERE cd_cia_aerea    = @p_cd_cia_aerea 
                     AND dt_arquivo      = @p_dt_arquivo 
                     AND arquivo         = @p_arquivo ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up1a_com]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up1a_com    Script Date: 19/09/2008 15:21:13 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_up1a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_arquivo   datetime,  
                 @p_arquivo      char(255),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_conf_baixa_selo__comnt_u 
            ( cd_cia_aerea, 
              dt_arquivo, 
              arquivo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_cia_aerea, 
              @p_dt_arquivo, 
              @p_arquivo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_conf_baixa_selo__comnt_u 
  HOLDLOCK  
     WHERE cd_cia_aerea  = @p_cd_cia_aerea 
       AND dt_arquivo    = @p_dt_arquivo 
       AND arquivo       = @p_arquivo 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up2a]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up2a    Script Date: 19/09/2008 15:21:13 ******/




CREATE   PROCEDURE [dbo].[usp_upd_up2a] 
		( @p_cd_aerop			char(4), 
		@p_cd_terminal			char(10), 
		@p_cd_cia_aerea			char(3), 
		@p_dt_inicio			datetime, 
		@p_date_created			datetime, 
		@p_user_id_created		char(30), 
		@p_date_changed			datetime, 
		@p_user_id_changed		char(30), 
		@p_inactive_ind			char(1), 
		@p_active_date			datetime, 
		@p_old_chgstamp			smallint ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @p_active_date = GETDATE()
   end
else 
   select @p_active_date = ''

-- fim da verificacao do status de ativacao

UPDATE pax_ini_ope_selo_elet_u 
SET dt_inicio       	= @p_dt_inicio, 
	date_created    	= @p_date_created, 
	user_id_created 	= @p_user_id_created, 
	date_changed		= GETDATE(), 		--@p_date_changed, 
	user_id_changed 	= SUSER_SNAME(),		--@p_user_id_changed, 
	inactive_ind		= @p_inactive_ind, 
	active_date 		= @p_active_date,
	chgstamp        	= @w_new_chgstamp 
WHERE cd_aerop        	= @p_cd_aerop 
	AND cd_terminal     = @p_cd_terminal 
	AND cd_cia_aerea    = @p_cd_cia_aerea 
	AND chgstamp        = @p_old_chgstamp 
 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
	FROM pax_ini_ope_selo_elet_u (NOLOCK INDEX = P_pax_ini_ope_selo_elet_u)
	WHERE cd_aerop			= @p_cd_aerop 
	AND cd_terminal			= @p_cd_terminal 
	AND cd_cia_aerea		= @p_cd_cia_aerea ) 
		RAISERROR 20001 'Row updated by another user.'
	ELSE 
		RAISERROR 20002 'Row does not exist.'
	RETURN 
END 
	
SELECT @w_new_chgstamp 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up2a_com]    Script Date: 01/05/2011 18:05:41 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up2a_com    Script Date: 19/09/2008 15:21:13 ******/



CREATE PROCEDURE [dbo].[usp_upd_up2a_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_ini_ope_selo_ele_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_ini_ope_selo_ele_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up3a]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up3a    Script Date: 19/09/2008 15:21:13 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_up3a] 
               ( @p_serial       char(9), 
                 @p_dependencia  char(3), 
                 @p_sigla        char(4), 
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_coletor_u 
     SET dependencia  = @p_dependencia, 
         sigla        = @p_sigla, 
         chgstamp     = @w_new_chgstamp 
   WHERE serial       = @p_serial 
     AND chgstamp     = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_coletor_u 
                   WHERE serial       = @p_serial ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up3a_com]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up3a_com    Script Date: 19/09/2008 15:21:13 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_up3a_com] 
               ( @p_serial   char(9),  
                 @p_type_cd  char(1),  
                 @p_text     varchar(255),  
                 @p_chgstamp smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_coletor_u_comnt_u 
            ( serial, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_serial, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_coletor_u_comnt_u 
  HOLDLOCK  
     WHERE serial    = @p_serial 
       AND type_cd   = @p_type_cd  
       AND seq_nbr   = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up6a]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up6a    Script Date: 19/09/2008 15:21:14 ******/





CREATE     PROCEDURE [dbo].[usp_upd_up6a] 
				( @p_tp_unid			char(1), 
				@p_cd_aerop            	char(4), 
				@p_cd_terminal         	char(10), 
				@p_tp_unid_destino     	char(1), 
				@p_cd_aerop_destino    	char(4), 
				@p_cd_terminal_destino 	char(10), 
				@p_dt_devolucao        	datetime, 
				@p_nro_selo_inicial    	char(10), 
				@p_nro_selo_final      	char(10), 
				@p_motivo_dev          	varchar(255), 
				@p_dt_confirma			datetime,
				@p_oper_confirma		char(15),
				@p_qtd_selos			float,
				@p_date_created        	datetime, 
				@p_user_id_created     	char(30), 
				@p_date_changed        	datetime, 
				@p_user_id_changed     	char(30), 
				@p_inactive_ind        	char(1), 
				@p_active_date         	datetime, 
				@p_old_chgstamp        	smallint ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 

-- Inicio da verificacao do status de ativacao
declare @wdt_ativo datetime

if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @wdt_ativo = getdate()
      else
         select @wdt_ativo = @p_active_date
   end
else 
   select @wdt_ativo = ''

-- fim da verificacao do status de ativacao
UPDATE pax_remesa_dev_u 
SET motivo_dev          = @p_motivo_dev, 
	dt_confirma			= @p_dt_confirma,
	oper_confirma		= @p_oper_confirma,
	qtd_selos			= @p_qtd_selos,
	date_changed		= getdate(), 			--@p_date_changed, 
	user_id_changed 	= suser_sname(),		--@p_user_id_changed, 
	inactive_ind		= @p_inactive_ind, 
	active_date 		= @wdt_ativo,			--@p_active_date,         
	chgstamp        	= @w_new_chgstamp 
WHERE tp_unid			= @p_tp_unid 
AND cd_aerop			= @p_cd_aerop 
AND cd_terminal			= @p_cd_terminal 
AND tp_unid_destino		= @p_tp_unid_destino 
AND cd_aerop_destino	= @p_cd_aerop_destino 
AND cd_terminal_destino	= @p_cd_terminal_destino 
AND dt_devolucao		= @p_dt_devolucao 
AND nro_selo_inicial	= @p_nro_selo_inicial 
AND nro_selo_final		= @p_nro_selo_final 
AND chgstamp			= @p_old_chgstamp 
 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
				FROM pax_remesa_dev_u 
				WHERE tp_unid             = @p_tp_unid 
				AND cd_aerop            = @p_cd_aerop 
				AND cd_terminal         = @p_cd_terminal 
				AND tp_unid_destino     = @p_tp_unid_destino 
				AND cd_aerop_destino    = @p_cd_aerop_destino 
				AND cd_terminal_destino = @p_cd_terminal_destino 
				AND dt_devolucao        = @p_dt_devolucao 
				AND nro_selo_inicial    = @p_nro_selo_inicial 
				AND nro_selo_final      = @p_nro_selo_final ) 
	RAISERROR 20001 'Row updated by another user.'
ELSE 
	RAISERROR 20002 'Row does not exist.'
RETURN 
END 
 
SELECT @w_new_chgstamp 







GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up6a_com]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up6a_com    Script Date: 19/09/2008 15:21:14 ******/



CREATE PROCEDURE [dbo].[usp_upd_up6a_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_devolucao        datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1),  
                 @p_text                varchar(255),  
                 @p_chgstamp            smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_remesa_dev_u_comnt_u 
            ( tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_devolucao, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_devolucao, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_remesa_dev_u_comnt_u 
  HOLDLOCK  
     WHERE tp_unid              = @p_tp_unid 
       AND cd_aerop             = @p_cd_aerop 
       AND cd_terminal          = @p_cd_terminal 
       AND tp_unid_destino      = @p_tp_unid_destino 
       AND cd_aerop_destino     = @p_cd_aerop_destino 
       AND cd_terminal_destino  = @p_cd_terminal_destino 
       AND dt_devolucao         = @p_dt_devolucao 
       AND nro_selo_inicial     = @p_nro_selo_inicial 
       AND nro_selo_final       = @p_nro_selo_final 
       AND type_cd              = @p_type_cd  
       AND seq_nbr              = 1   
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up7a]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up7a    Script Date: 19/09/2008 15:21:14 ******/

CREATE PROCEDURE [dbo].[usp_upd_up7a] 
			( @p_cd_cia_aerea     char(3), 
			@p_dt_inicio        datetime, 
			@p_dt_final         datetime, 
			@p_valor            float, 
			@p_justificativa    varchar(500), 
			@p_processado       char(1), 
			@p_dt_processamento datetime, 
			@p_nu_boleto_ss     int, 
			@p_inactive_ind     char(1), 
			@p_data_desativacao datetime, 
			@p_tp_natureza		char(1),
			@p_old_chgstamp     smallint ) 
AS 
DECLARE 	@ret 			int 
	,@p_inactive_ind_aux	char(1)

EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 

select @p_inactive_ind_aux = inactive_ind
from pax_cred_cia_u (nolock index = P_pax_cred_cia_u)
WHERE cd_cia_aerea     	= @p_cd_cia_aerea 
AND dt_inicio        	= @p_dt_inicio 
AND dt_final         	= @p_dt_final 
AND chgstamp         	= @p_old_chgstamp 

if @p_inactive_ind_aux <> @p_inactive_ind
begin
	if @p_inactive_ind = '1'
	begin
		if convert(varchar(8), @p_data_desativacao, 112) = '19000101'
		begin
			set @p_data_desativacao = convert(varchar(8), getdate(), 112)
		end
	end
	else
	begin
		if convert(varchar(8), @p_data_desativacao, 112) <> '19000101'
		begin
			set @p_data_desativacao = convert(varchar(8), '19000101', 112)
		end
	end
end 
 
UPDATE pax_cred_cia_u 
SET valor            	= @p_valor, 
	justificativa    	= @p_justificativa, 
	processado       	= @p_processado, 
	dt_processamento 	= @p_dt_processamento, 
	nu_boleto_ss     	= @p_nu_boleto_ss, 
	inactive_ind     	= @p_inactive_ind, 
	data_desativacao 	= @p_data_desativacao, 
	tp_natureza			= @p_tp_natureza,
	chgstamp         	= @w_new_chgstamp 
WHERE cd_cia_aerea     	= @p_cd_cia_aerea 
AND dt_inicio        	= @p_dt_inicio 
AND dt_final         	= @p_dt_final 
AND chgstamp         	= @p_old_chgstamp 
 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
	FROM pax_cred_cia_u 
	WHERE cd_cia_aerea     = @p_cd_cia_aerea 
	AND dt_inicio        = @p_dt_inicio 
	AND dt_final         = @p_dt_final ) 
	RAISERROR 20001 'Row updated by another user.'
ELSE 
	RAISERROR 20002 'Row does not exist.' 
RETURN 
END 
 
SELECT @w_new_chgstamp 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_up7a_com]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_up7a_com    Script Date: 19/09/2008 15:21:14 ******/



CREATE PROCEDURE [dbo].[usp_upd_up7a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_inicio    datetime,  
                 @p_dt_final     datetime,  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_cred_cia_u_comnt_u 
            ( cd_cia_aerea, 
              dt_inicio, 
              dt_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_cia_aerea, 
              @p_dt_inicio, 
              @p_dt_final, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_cred_cia_u_comnt_u 
  HOLDLOCK  
     WHERE cd_cia_aerea  = @p_cd_cia_aerea 
       AND dt_inicio     = @p_dt_inicio 
       AND dt_final      = @p_dt_final 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upaa_com]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upaa_com    Script Date: 19/09/2008 15:21:14 ******/


CREATE PROCEDURE [dbo].[usp_upd_upaa_com] 
               ( @p_nro_selo char(10),  
                 @p_type_cd  char(1),  
                 @p_text     varchar(255),  
                 @p_chgstamp smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_u_comnt_u 
            ( nro_selo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_nro_selo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_selo_u_comnt_u 
  HOLDLOCK  
     WHERE nro_selo  = @p_nro_selo 
       AND type_cd   = @p_type_cd  
       AND seq_nbr   = 1   
 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upca]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_upd_upca    Script Date: 19/09/2008 15:21:14 ******/







CREATE     PROCEDURE [dbo].[usp_upd_upca] 
               ( @p_tp_unid               	char(1),     --1
                 @p_cd_aerop              	char(4),  --2
                 @p_cd_terminal           	char(10),  -- 3
                 @p_tp_unid_destino      	char(1),  --4
                 @p_cd_aerop_destino     	char(4),  --5
                 @p_cd_terminal_destino  	char(10),  --6
                 @p_dt_remessa            	datetime,  --7
                 @p_nro_selo_inicial      	char(10),  --8
                 @p_nro_selo_final        	char(10),  --9
                 @p_qtd_selos             	float,  --10
                 @p_cd_situacao           	char(1),  --11
                 @p_dt_confirma           	datetime,  --12
                 @p_oper_confirma        	char(15), 
                 @p_motivo_cnc            	varchar(100), 
                 @p_nfm                   	char(20), 
                 @p_date_created         	datetime, 
                 @p_user_id_created      	char(30), 
                 @p_date_changed         	datetime, 
                 @p_user_id_changed      	char(30), 
                 @p_inactive_ind          	char(1), 
                 @p_active_date           	datetime, 
                 @p_old_chgstamp         	smallint ) 
AS 
DECLARE @ret    			int
		,@ROWCOUNT   		REAL 
		,@w_new_chgstamp 	smallint 
		,@W_tp_unid        	char(1)
		,@W_cd_aerop       	char(4)
		,@W_cd_terminal    	char(10)
		,@p_ano_remesa		integer
	

EXEC @ret = sp_dbs_authenticate 

Select @p_date_changed		= GetDate()
	,@p_user_id_changed		= suser_sname()
	,@p_ano_remesa			= year(@p_dt_remessa)
 
if @p_tp_unid	= 'A' and @p_tp_unid_destino = 'A'
begin
	select top 1 @p_ano_remesa	= ano_remesa
	from pax_selo_u (nolock)
	where nro_selo 	= @p_nro_selo_inicial
	and cd_aerop 	= @p_cd_aerop
	and cd_terminal	= @p_cd_terminal
	and selo_status	= '9'
	
end
                 
IF @ret != 0 RETURN 

EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
if  @p_cd_situacao <>'0' 
begin
/*            select  @p_dt_confirma = convert(char(4),year(getdate())) + "/" + 
                                             convert(char(2),month(getdate())) + "/" + 
                                             convert(char(2),day(getdate()))
*/
	select @p_dt_confirma   = CONVERT(CHAR(8), GETDATE(), 112)
		,@p_oper_confirma  = suser_sname()
end

BEGIN TRANSACTION
UPDATE pax_lote_selo_u 
 SET qtd_selos            	= @p_qtd_selos, 
     cd_situacao          	= @p_cd_situacao, 
     dt_confirma          	=  @p_dt_confirma, 
     oper_confirma        	= @p_oper_confirma, 
     motivo_cnc           	= @p_motivo_cnc, 
     nfm                  	= @p_nfm, 
     date_created         	= @p_date_created, 
     user_id_created      	= @p_user_id_created, 
     date_changed        	= @p_date_changed, 
     user_id_changed    	= @p_user_id_changed, 
     inactive_ind         	= @p_inactive_ind, 
     active_date          	= @p_active_date, 
     chgstamp             	= @w_new_chgstamp 
WHERE tp_unid              	= @p_tp_unid 
	 AND cd_aerop             = @p_cd_aerop 
	 AND cd_terminal          = @p_cd_terminal 
	 AND tp_unid_destino      = @p_tp_unid_destino 
	 AND cd_aerop_destino     = @p_cd_aerop_destino 
	 AND cd_terminal_destino  = @p_cd_terminal_destino 
	 AND dt_remessa           = @p_dt_remessa 
	 AND nro_selo_inicial     = @p_nro_selo_inicial 
	 AND nro_selo_final       = @p_nro_selo_final 
	 AND chgstamp             = @p_old_chgstamp 


SELECT @ROWCOUNT = @@ROWCOUNT  
-- Atualiza os status dos selos de 9 Enviado para 0 Disponível
if @p_cd_situacao = '1' or @p_cd_situacao = '2' 
begin
	if @p_cd_situacao = '1' 
	begin
		select @W_tp_unid		= @p_tp_unid_destino 
		,@W_cd_aerop			= @p_cd_aerop_destino
		,@W_cd_terminal			= @p_cd_terminal_destino
	end
	else
	begin
		select @W_tp_unid 		= @p_tp_unid
		,@W_cd_aerop    		= @p_cd_aerop
		,@W_cd_terminal  		= @p_cd_terminal
	end

	Update pax_selo_u
	Set    
		dt_mov                  = @p_dt_confirma 
		,selo_status            = case when @p_cd_situacao = '1' then '0' 
		                         when @p_cd_situacao = '2' then '3'
		                         else 'X' end -- Disponível     
		,tp_unid               	= @W_tp_unid 
		,cd_aerop             	= @W_cd_aerop
		,cd_terminal          	= @W_cd_terminal
		,tp_unid_destino      	= ' ' 
		,cd_aerop_destino     	= ' '
		,cd_terminal_destino  	= ' '
		,dt_confirma			= @p_date_changed
		,nfm   					= @p_nfm                                  
		,date_changed          	= @p_date_changed            
		,user_id_changed       	= @p_user_id_changed         
		,inactive_ind          	= @p_inactive_ind            
		,active_date           	= Convert(DateTime,@p_active_date)
		,chgstamp   			= chgstamp + 1
	where  nro_selo > = @p_nro_selo_inicial and  nro_selo <= @p_nro_selo_final
		AND ano_remesa	= @p_ano_remesa
	
	SELECT @ROWCOUNT = @@ROWCOUNT
end

IF @ROWCOUNT = 0 
BEGIN 
	IF EXISTS ( SELECT * 
	            FROM pax_lote_selo_u  (NOLOCK INDEX = P_pax_lote_selo_u)
	           WHERE tp_unid              	= @p_tp_unid 
	             AND cd_aerop             	= @p_cd_aerop 
	             AND cd_terminal          	= @p_cd_terminal 
	             AND tp_unid_destino      	= @p_tp_unid_destino 
	             AND cd_aerop_destino     	= @p_cd_aerop_destino 
	             AND cd_terminal_destino  	= @p_cd_terminal_destino 
	             AND dt_remessa           	= @p_dt_remessa 
	             AND nro_selo_inicial     	= @p_nro_selo_inicial 
	             AND nro_selo_final       	= @p_nro_selo_final ) 
	  RAISERROR 20001 'Row updated by another user.'
	ELSE 
	  RAISERROR 20002 'Row does not exist.'
	ROLLBACK TRANSACTION
	RETURN 
END 
COMMIT TRANSACTION 
SELECT @w_new_chgstamp







GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upca_com]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upca_com    Script Date: 19/09/2008 15:21:14 ******/


CREATE PROCEDURE [dbo].[usp_upd_upca_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_remessa          datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10),  
                 @p_type_cd             char(1),  
                 @p_text                varchar(255),  
                 @p_chgstamp            smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_lote_selo_u_comnt_u 
            ( tp_unid, 
              cd_aerop, 
              cd_terminal, 
              tp_unid_destino, 
              cd_aerop_destino, 
              cd_terminal_destino, 
              dt_remessa, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_tp_unid, 
              @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_unid_destino, 
              @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_remessa, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_lote_selo_u_comnt_u 
  HOLDLOCK  
     WHERE tp_unid              = @p_tp_unid 
       AND cd_aerop             = @p_cd_aerop 
       AND cd_terminal          = @p_cd_terminal 
       AND tp_unid_destino      = @p_tp_unid_destino 
       AND cd_aerop_destino     = @p_cd_aerop_destino 
       AND cd_terminal_destino  = @p_cd_terminal_destino 
       AND dt_remessa           = @p_dt_remessa 
       AND nro_selo_inicial     = @p_nro_selo_inicial 
       AND nro_selo_final       = @p_nro_selo_final 
       AND type_cd              = @p_type_cd  
       AND seq_nbr              = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upea]    Script Date: 01/05/2011 18:05:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upea    Script Date: 19/09/2008 15:21:15 ******/






CREATE  PROCEDURE [dbo].[usp_upd_upea] 
			( @p_cd_aerop        	char(4), 
			@p_cd_terminal     	char(10), 
			@p_dt_mov          	datetime, 
			@p_hh_mm           	char(6), 
			@p_tp_selo           	char(1), 
			@p_selo_status     	char(1), 
			@p_arquivo         	char(255), 
			@p_cd_motivo       	char(2), 
			@p_qtd_selos       	FLOAT, 
			@p_tp_coletor      	char(16), 
			@p_tp_baixa        	char(1), 
			@p_status_arq      	char(1), 
			@p_qtd_lineas_arq		FLOAT, 
			@p_qtd_discrepancias 	FLOAT, 
			@p_qtd_lineas_erro     	FLOAT, 
			@p_qtd_discrepancias_tra	FLOAT,
			@p_qtd_duplicados			FLOAT,
			@p_date_created    	datetime, 
			@p_user_id_created 	char(30), 
			@p_date_changed    	datetime, 
			@p_user_id_changed 	char(30), 
			@p_inactive_ind    	char(1), 
			@p_active_date     	datetime, 
			@p_old_chgstamp    	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @p_active_date = getdate()
   end
else 
   select @p_active_date = ''

-- fim da verificacao do status de ativacao

  UPDATE pax_baixa_selo_u 
     SET selo_status     	= @p_selo_status, 
         arquivo         	= @p_arquivo, 
         cd_motivo       	= @p_cd_motivo, 
         qtd_selos       	= @p_qtd_selos, 
         tp_coletor      	= @p_tp_coletor, 
         tp_baixa        	= @p_tp_baixa, 
         status_arq      	= @p_status_arq, 
         qtd_lineas_arq		= @p_qtd_lineas_arq,
         qtd_discrepancias	= @p_qtd_discrepancias,
         qtd_lineas_erro    = @p_qtd_lineas_erro,
         qtd_discrepancias_tra	= @p_qtd_discrepancias_tra,
         qtd_duplicados			= @p_qtd_duplicados,
         date_created    	= @p_date_created, 
         user_id_created 	= @p_user_id_created, 
         date_changed		= getdate(), 		--@p_date_changed, 
         user_id_changed 	= suser_sname(),		--@p_user_id_changed, 
         inactive_ind		= @p_inactive_ind, 
         active_date 		= @p_active_date,         
         chgstamp         	= @w_new_chgstamp 
   WHERE cd_aerop        	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND dt_mov          	= @p_dt_mov 
     AND hh_mm           	= @p_hh_mm 
     AND tp_selo		= @p_tp_selo
     AND chgstamp        	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_baixa_selo_u (NOLOCK INDEX = P_pax_baixa_selo_u )
                   WHERE cd_aerop    	= @p_cd_aerop 
                     AND cd_terminal     	= @p_cd_terminal 
                     AND dt_mov          	= @p_dt_mov 
                     AND hh_mm           	= @p_hh_mm 
	       AND  tp_selo 	= @p_tp_selo ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upea_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_upd_upea_com    Script Date: 19/09/2008 15:21:15 ******/




CREATE PROCEDURE [dbo].[usp_upd_upea_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_tp_selo       char(1),  
                 @p_type_cd     char(1),  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selo_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
	tp_selo,
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
	 @p_tp_selo,
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_baixa_selo_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop     = @p_cd_aerop 
       AND cd_terminal  = @p_cd_terminal 
       AND dt_mov       = @p_dt_mov 
       AND hh_mm        = @p_hh_mm 
       AND tp_selo        = @p_tp_selo
       AND type_cd      = @p_type_cd  
       AND seq_nbr      = 1



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upga]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upga    Script Date: 19/09/2008 15:21:15 ******/





CREATE   PROCEDURE [dbo].[usp_upd_upga] 
				( @p_cd_aerop		char(4), 
				@p_cd_terminal      char(10), 
				@p_dt_entrega       datetime, 
				@p_hh_entrega       char(6),  
				@p_cd_cia_aerea     char(3), 
				@p_nro_rste         char(6), 
				@p_no_funcio        varchar(40), 
				@p_cd_situacao_rste char(1),
				@p_date_created     datetime,
				@p_ano_remesa		integer,
				@p_user_id_created  char(30), 
				@p_date_changed     datetime, 
				@p_user_id_changed  char(30), 
				@p_inactive_ind     char(1), 
				@p_active_date      datetime, 
				@p_old_chgstamp     smallint ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
	begin
		if @p_active_date = ''
		select @p_active_date = getdate()
	end
else 
	select @p_active_date = ''
	-- fim da verificacao do status de ativacao
	UPDATE pax_entrega_selo_ctrl_u 
	SET no_funcio        		= @p_no_funcio, 
		cd_situacao_rste 		= @p_cd_situacao_rste,
		ano_remesa				= @p_ano_remesa,
		date_created     		= @p_date_created, 
		user_id_created  		= @p_user_id_created, 
		date_changed 			= getdate(),   --@p_date_changed, 
		user_id_changed  		= suser_sname(),  --@p_user_id_changed, 
		inactive_ind 			= @p_inactive_ind, 
		active_date  			= @p_active_date,         
		chgstamp         		= @w_new_chgstamp 
	WHERE cd_aerop       		= @p_cd_aerop 
		AND cd_terminal      	= @p_cd_terminal 
		AND CONVERT(VARCHAR,dt_entrega,112)       = CONVERT(VARCHAR,@p_dt_entrega,112) 
		AND hh_entrega			= @p_hh_entrega
		AND cd_cia_aerea     	= @p_cd_cia_aerea 
		AND nro_rste         	= @p_nro_rste 
		AND chgstamp         	= @p_old_chgstamp 
	
	IF @@rowcount = 0 
	BEGIN 
      
		IF EXISTS ( SELECT * 
				FROM pax_entrega_selo_ctrl_u (NOLOCK INDEX = P_pax_entrega_selo_ctrl_u )
				WHERE cd_aerop			= @p_cd_aerop 
					AND cd_terminal		= @p_cd_terminal 
					AND CONVERT(VARCHAR,dt_entrega,112)       = CONVERT(VARCHAR,@p_dt_entrega,112) 
					AND hh_entrega     	= @p_hh_entrega
					AND cd_cia_aerea  	= @p_cd_cia_aerea 
					AND nro_rste         = @p_nro_rste ) 
			RAISERROR 20001 'Row updated by another user.' 
		ELSE 
			RAISERROR 20002 'Row does not exist.' 
		RETURN 
  END 
 
  SELECT @w_new_chgstamp









GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upga_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upga_com    Script Date: 19/09/2008 15:21:15 ******/



CREATE PROCEDURE [dbo].[usp_upd_upga_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_hh_entrega   char(6),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rste     char(6),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_entrega_selo_ctr_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              hh_entrega, 
              cd_cia_aerea, 
              nro_rste, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_hh_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_entrega_selo_ctr_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND dt_entrega    = @p_dt_entrega 
       AND hh_entrega    = @p_hh_entrega 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND nro_rste      = @p_nro_rste 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upha_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upha_com    Script Date: 19/09/2008 15:21:15 ******/


CREATE PROCEDURE [dbo].[usp_upd_upha_com] 
               ( @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_mov              datetime,  
                 @p_selo_status         char(1),  
                 @p_nro_selo            char(10),  
                 @p_type_cd             char(1),  
                 @p_text                varchar(255),  
                 @p_chgstamp            smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_discrep_selo_u_comnt_u 
            ( cd_aerop_destino, 
              cd_terminal_destino, 
              dt_mov, 
              selo_status, 
              nro_selo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop_destino, 
              @p_cd_terminal_destino, 
              @p_dt_mov, 
              @p_selo_status, 
              @p_nro_selo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_discrep_selo_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop_destino     = @p_cd_aerop_destino 
       AND cd_terminal_destino  = @p_cd_terminal_destino 
       AND dt_mov               = @p_dt_mov 
       AND selo_status          = @p_selo_status 
       AND nro_selo             = @p_nro_selo 
       AND type_cd              = @p_type_cd  
       AND seq_nbr              = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upia]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upia    Script Date: 19/09/2008 15:21:15 ******/



CREATE PROCEDURE [dbo].[usp_upd_upia] 
               ( @p_cd_aerop            char(4), 
                 @p_cd_terminal         char(10), 
                 @p_cd_cia_aerea        char(3), 
                 @p_dt_voo              datetime, 
                 @p_hr_voo              char(4), 
                 @p_nro_voo             char(5), 
                 @p_tp_natureza         char(1), 
                 @p_tp_voo              char(1), 
                 @p_mt_aeronave         char(10), 
                 @p_desem_pax_dom      int, 
                 @p_desem_pax_int      int, 
                 @p_desem_bagagem_dom  float, 
                 @p_desem_bagagem_int  float, 
                 @p_desem_carga_dom    float, 
                 @p_desem_carga_int    float, 
                 @p_desem_correio_dom  float, 
                 @p_desem_correio_int  float, 
                 @p_rpax_participa  char(1), 
     @p_desem_pax_dom_conex   float, 
     @p_desem_pax_int_conex   float, 
     @p_desem_bagagem_dom_conex  float, 
     @p_desem_bagagem_int_conex  float, 
     @p_desem_carga_dom_conex  float, 
     @p_desem_carga_int_conex   float, 
     @p_desem_correio_dom_conex  float, 
     @p_desem_correio_int_conex   float, 
                 @p_com_voo_gen        varchar(250), 
                 @p_date_created        datetime, 
                 @p_user_id_created     char(30), 
                 @p_date_changed       datetime, 
                 @p_user_id_changed    char(30), 
                 @p_inactive_ind        char(1), 
                 @p_active_date         datetime, 
                 @p_old_chgstamp        smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
-- Inicio da verificacao do status de ativacao
declare @wdt_ativo datetime
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @wdt_ativo = getdate()
      else
         select @wdt_ativo = @p_active_date
   end
else 
   select @wdt_ativo = ''
-- fim da verificacao do status de ativacao
  UPDATE rpax_desemb_u 
     SET tp_natureza         		= @p_tp_natureza, 
         tp_voo              			= @p_tp_voo, 
         mt_aeronave         			= @p_mt_aeronave, 
         desem_pax_dom      		= @p_desem_pax_dom, 
         desem_pax_int       			= @p_desem_pax_int, 
         desem_bagagem_dom  		= @p_desem_bagagem_dom, 
         desem_bagagem_int  		= @p_desem_bagagem_int, 
         desem_carga_dom    		= @p_desem_carga_dom, 
         desem_carga_int    		= @p_desem_carga_int, 
         desem_correio_dom  		= @p_desem_correio_dom, 
         desem_correio_int   		= @p_desem_correio_int, 
         rpax_participa   			= @p_rpax_participa, 
         desem_pax_dom_conex   		= @p_desem_pax_dom_conex,
         desem_pax_int_conex   		= @p_desem_pax_int_conex,
         desem_bagagem_dom_conex  	= @p_desem_bagagem_dom_conex,
         desem_bagagem_int_conex  	= @p_desem_bagagem_int_conex,
         desem_carga_dom_conex   	= @p_desem_carga_dom_conex ,
         desem_carga_int_conex   		= @p_desem_carga_int_conex,
         desem_correio_dom_conex  	= @p_desem_correio_dom_conex,
         desem_correio_int_conex   		= @p_desem_correio_int_conex,
         com_voo_gen         		= @p_com_voo_gen,
         date_created        			= @p_date_created, 
         user_id_created     			= @p_user_id_created, 
         date_changed  			= getdate(),   --@p_date_changed, 
         user_id_changed   			= suser_sname(),  --@p_user_id_changed,  
         inactive_ind        			= @p_inactive_ind, 
         active_date         			= @wdt_ativo, 
         chgstamp            			= @w_new_chgstamp 
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal       	= @p_cd_terminal 
     AND cd_cia_aerea 	= @p_cd_cia_aerea 
     AND nro_voo            	= @p_nro_voo 


     AND dt_voo             	= @p_dt_voo 
     AND hr_voo             	= @p_hr_voo 
     AND chgstamp          	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_desemb_u (NOLOCK INDEX = P_rpax_desemb_u )
                   WHERE cd_aerop   	= @p_cd_aerop 
                     AND cd_terminal     	= @p_cd_terminal 
                     AND cd_cia_aerea 	= @p_cd_cia_aerea 
                     AND nro_voo         	= @p_nro_voo 
                     AND dt_voo           	= @p_dt_voo 
                     AND hr_voo            	= @p_hr_voo ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upia_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upia_com    Script Date: 19/09/2008 15:21:16 ******/


CREATE PROCEDURE [dbo].[usp_upd_upia_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_desemb_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              dt_voo, 
              hr_voo, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_nro_voo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM rpax_desemb_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND dt_voo        = @p_dt_voo 
       AND hr_voo        = @p_hr_voo 
       AND nro_voo       = @p_nro_voo 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upj3_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upj3_com    Script Date: 19/09/2008 15:21:16 ******/


CREATE PROCEDURE [dbo].[usp_upd_upj3_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_embarque  datetime,  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_dia_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              tp_natureza, 
              periodo_de, 
              periodo_ate, 
              cd_cia_aerea, 
              dt_embarque, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_tp_natureza, 
              @p_periodo_de, 
              @p_periodo_ate, 
              @p_cd_cia_aerea, 
              @p_dt_embarque, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM rpax_emb_dia_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND tp_natureza   = @p_tp_natureza 
       AND periodo_de    = @p_periodo_de 
       AND periodo_ate   = @p_periodo_ate 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND dt_embarque   = @p_dt_embarque 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upj4_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upj4_com    Script Date: 19/09/2008 15:21:16 ******/


CREATE PROCEDURE [dbo].[usp_upd_upj4_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_dt_embarque  datetime,  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_dia_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              tp_natureza, 
              periodo_de, 
              periodo_ate, 
              dt_embarque, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_tp_natureza, 
              @p_periodo_de, 
              @p_periodo_ate, 
              @p_dt_embarque, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM rpax_emb_dia_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND tp_natureza   = @p_tp_natureza 
       AND periodo_de    = @p_periodo_de 
       AND periodo_ate   = @p_periodo_ate 
       AND dt_embarque   = @p_dt_embarque 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upja]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upja    Script Date: 19/09/2008 15:21:16 ******/







CREATE    PROCEDURE [dbo].[usp_upd_upja] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_cd_cia_aerea    	char(3), 
                 @p_tp_natureza     	char(1), 
                 @p_periodo_de      	datetime, 
                 @p_periodo_ate     	datetime, 
                 @p_dt_embarque     	datetime, 
                 @p_pax_total       	int, 
                 @p_date_created    	datetime, 
                 @p_user_id_created 	char(30), 
                 @p_date_changed    	datetime, 
                 @p_user_id_changed 	char(30), 
                 @p_inactive_ind    	char(1), 
                 @p_active_date     	datetime, 
                 @p_old_chgstamp    	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp 		smallint 
	,@p_dt_voo					datetime
	,@p_hr_voo					char(4)
	,@p_tipo_output				char(1)
	,@p_nro_voo					char(6)
	,@p_tp_voo					char(1)
	,@p_pax_dom_vista			int
	,@p_pax_int_vista			int
	,@p_pax_dom_fat				int
	,@p_pax_int_fat				int
	,@p_item_id_int				char(26)
	,@p_item_id_dom				char(26)


     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao

if @p_inactive_ind = '0' 
begin
  if @p_active_date = ''
     select @p_active_date = getdate()
end
else 
   select @p_active_date = getdate()

-- fim da verificacao do status de ativacao


BEGIN TRANSACTION 

UPDATE rpax_emb_dia_u 
	SET pax_total       	= @p_pax_total, 
	date_created    	= @p_date_created, 
	user_id_created 	= @p_user_id_created, 
	date_changed		= getdate(), 		--@p_date_changed, 
	user_id_changed 	= suser_sname(),		--@p_user_id_changed, 
	inactive_ind		= @p_inactive_ind, 
	active_date 		= @p_active_date,         
	chgstamp        	= @w_new_chgstamp 
WHERE cd_aerop     		= @p_cd_aerop 
	AND cd_terminal     	= @p_cd_terminal 
	AND cd_cia_aerea    	= @p_cd_cia_aerea 
	AND tp_natureza     	= @p_tp_natureza 
	AND periodo_de      	= @p_periodo_de 
	AND periodo_ate     	= @p_periodo_ate 
	AND dt_embarque     	= @p_dt_embarque 
	AND chgstamp        	= @p_old_chgstamp 
 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
			FROM rpax_emb_dia_u  (NOLOCK INDEX = P_rpax_emb_dia_u)
			WHERE cd_aerop   	= @p_cd_aerop 
			AND cd_terminal     	= @p_cd_terminal 
			AND cd_cia_aerea 	= @p_cd_cia_aerea 
			AND tp_natureza   	= @p_tp_natureza 
			AND periodo_de    	= @p_periodo_de 
			AND periodo_ate   	= @p_periodo_ate 
			AND dt_embarque  	= @p_dt_embarque ) 
		RAISERROR 20001 'Row updated by another user.'
	ELSE 
		RAISERROR 20002 'Row does not exist.'
	RETURN 
END 
IF @@ERROR <> 0
BEGIN
	ROLLBACK TRANSACTION
	RAISERROR 26000 'ERROR AL INSERTAR EMBARQUE POR VOO'
	GOTO FIM
END 
ELSE
BEGIN
	SELECT @p_tipo_output 		= '1'
		,@p_item_id_dom 		= ''
		,@p_item_id_int 		= ''
		,@p_nro_voo 			= 'XXXX'
		,@p_hr_voo 				= '0000'
		,@p_dt_voo 				= @p_dt_embarque
		,@p_tp_voo          	= '4'

	DELETE rpax_itens_u
	WHERE cd_aerop        			= @p_cd_aerop 
		AND cd_terminal     		= @p_cd_terminal 
		AND cd_cia_aerea    		= @p_cd_cia_aerea 
		AND dt_voo          		= @p_dt_voo 
		AND hr_voo          		= @p_hr_voo 
		AND nro_voo         		= @p_nro_voo 
		AND tp_rpax					= 'D'
		AND tp_natureza				= @p_tp_natureza


	EXEC psp_valida_item  
		@p_cd_aerop,      
		@p_cd_terminal,   
		'D',   
		@p_dt_voo ,       
		@p_tipo_output,               
		@p_item_id_dom                      output

	EXEC psp_valida_item  
		@p_cd_aerop,      
		@p_cd_terminal,   
		'I',   
		@p_dt_voo ,       
		@p_tipo_output,               
		@p_item_id_int                      output

	Select  @p_pax_dom_fat = Case @p_tp_natureza When 'D' Then @p_pax_total Else 0 End,
		@p_pax_int_fat = Case @p_tp_natureza When 'I' Then @p_pax_total Else 0 End

	IF ( @p_pax_dom_fat > 0 and @p_inactive_ind = '0')
	BEGIN
        -- Incluindo Faturado, Domestica
        EXEC    psp_ins_upd_itens_rpax 
          @p_cd_aerop         
         ,@p_cd_terminal      
         ,@p_cd_cia_aerea  
         ,@p_nro_voo          
         ,@p_dt_voo           
         ,@p_hr_voo          
         ,'D' -- @p_tp_rpax          (V)oo e (D)Diaria
         ,'D'
         ,@p_tp_voo          
         ,'F' -- @p_tp_fat          
         ,@p_pax_dom_fat -- MRP 21/12/2004 @p_pax_total --@p_pax_total       
         ,@p_item_id_dom
    
    
		IF @@error <> 0
		BEGIN
			ROLLBACK
			RAISERROR 26002 'Erro na transacao' 
			GOTO FIM
		END
	END -- MRP 21/12/2004
	IF ( @p_pax_int_fat > 0 and @p_inactive_ind = '0')
	BEGIN
		-- Incluindo Faturado, Internacional
		EXEC psp_ins_upd_itens_rpax 
			@p_cd_aerop         
			,@p_cd_terminal      
			,@p_cd_cia_aerea  
			,@p_nro_voo          
			,@p_dt_voo           
			,@p_hr_voo          
			,'D' -- @p_tp_rpax          (V)oo e (D)Diaria
			,'I'
			,@p_tp_voo          
			,'F' -- @p_tp_fat          
			,@p_pax_int_fat -- MRP 21/12/2004 @p_pax_total --@p_pax_total       
			,@p_item_id_int

    
		IF @@error <> 0
		BEGIN
			ROLLBACK
			RAISERROR 26002 'Erro na transacao' 
			GOTO FIM
		END
	END -- MRP 21/12/2004
END
COMMIT TRANSACTION


FIM:
  SELECT @w_new_chgstamp 









GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upja_com]    Script Date: 01/05/2011 18:05:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upja_com    Script Date: 19/09/2008 15:21:16 ******/


CREATE PROCEDURE [dbo].[usp_upd_upja_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_dt_embarque  datetime,
/*
                 @p_periodo_de   varchar(10),  
                 @p_periodo_ate  varchar(10),  
                 @p_dt_embarque  varchar(10),  
*/
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
/*
,
  @d_periodo_de   datetime ,  
                 @d_p_periodo_ate  datetime ,  
                 @d_p_dt_embarque  datetime 
     EXEC @ret = sp_dbs_authenticate 
Select  @d_periodo_de   = Convert(datetime , Substring(@p_periodo_de,1,4) + '-' + Substring(@p_periodo_de,5,2) + '-' + Substring(@p_periodo_de,7,2))
        ,@d_p_periodo_ate  = Convert(datetime , Substring(@p_periodo_ate,1,4) + '-' + Substring(@p_periodo_ate,5,2) + '-' + Substring(@p_periodo_ate,7,2))
        ,@d_p_dt_embarque  = Convert(datetime , Substring(@p_dt_embarque,1,4) + '-' + Substring(@p_dt_embarque,5,2) + '-' + Substring(@p_dt_embarque,7,2))
*/ 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_dia_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              tp_natureza, 
              periodo_de, 
              periodo_ate, 
              dt_embarque, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_tp_natureza, 
       @p_periodo_de,
              @p_periodo_ate,
              @p_dt_embarque,
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM rpax_emb_dia_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND tp_natureza   = @p_tp_natureza 
       AND periodo_de    = @p_periodo_de
       AND periodo_ate   = @p_periodo_ate
       AND dt_embarque   = @p_dt_embarque
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upka]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upka    Script Date: 19/09/2008 15:21:16 ******/


CREATE PROCEDURE [dbo].[usp_upd_upka] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_dt_entrega      	datetime, 
                 @p_cd_cia_aerea    	char(3), 
                 @p_nro_rdev        	char(6), 
                 @p_arquivo         	char(255), 
                 @p_date_created    	datetime, 
                 @p_user_id_created 	char(30), 
                 @p_date_changed    	datetime, 
                 @p_user_id_changed 	char(30), 
                 @p_inactive_ind    	char(1), 
                 @p_active_date     	datetime, 
                 @p_old_chgstamp    	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_dev_selo_ctrl_u 
     SET arquivo         	= @p_arquivo, 
         date_created    	= @p_date_created, 
         user_id_created 	= @p_user_id_created, 
         date_changed    	= @p_date_changed, 
         user_id_changed 	= @p_user_id_changed, 
         inactive_ind    	= @p_inactive_ind, 
         active_date     	= @p_active_date, 
         chgstamp        	= @w_new_chgstamp 
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND dt_entrega      	= @p_dt_entrega 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_rdev        	= @p_nro_rdev 
     AND chgstamp        	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_dev_selo_ctrl_u (NOLOCK INDEX = P_pax_dev_selo_ctrl_u)
                   WHERE cd_aerop    	= @p_cd_aerop 
                     AND cd_terminal     	= @p_cd_terminal 
                     AND dt_entrega      	= @p_dt_entrega 
                     AND cd_cia_aerea 	= @p_cd_cia_aerea 
                     AND nro_rdev        	= @p_nro_rdev ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upka_com]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upka_com    Script Date: 19/09/2008 15:21:17 ******/


CREATE PROCEDURE [dbo].[usp_upd_upka_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rdev     char(6),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_ctrl_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              cd_cia_aerea, 
              nro_rdev, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rdev, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_dev_selo_ctrl_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND dt_entrega    = @p_dt_entrega 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND nro_rdev      = @p_nro_rdev 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upla]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upla    Script Date: 19/09/2008 15:21:17 ******/






CREATE           PROCEDURE [dbo].[usp_upd_upla] 
		( @p_cd_aerop               char(4), 
		@p_cd_terminal            char(10), 
		@p_dt_mov                 datetime, 
		@p_nro_selo_electronico   char(14), 
		@p_tp_natureza            char(1), 
		@p_selo_status            char(1), 
		@p_cd_motivo              char(2), 
		@p_tp_fat                 char(1), 
		@p_cd_cia_aerea           char(3), 
		@p_tp_unid                char(1), 
		@p_dt_confirma            datetime, 
		@p_cd_aerop_utilizacao    char(4), 
		@p_cd_terminal_utilizacao char(10), 
		@p_tp_coletor             char(16), 
		@p_item_fat               char(26), 
		@p_billing_line_id        int, 
		@p_billing_int_date       datetime, 
		@p_billing_int_type       char(1), 
		@p_billing_user_1         char(10), 
		@p_voo_rea					char(4), 					
		@p_dt_voo_rea				datetime,
		@p_hh_voo_rea				char(6),
		@p_hh_mov					char(6), 
		@p_date_created           datetime, 
		@p_user_id_created        char(30), 
		@p_date_changed           datetime, 
		@p_user_id_changed        char(30), 
		@p_inactive_ind           char(1), 
		@p_active_date            datetime, 
		@p_old_chgstamp           smallint ) 
AS 
DECLARE @ret 			int 
	,@v_item_fat		char(26)
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 

-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @p_active_date = getdate()
   end
else 
   select @p_active_date = ''
-- fim da verificacao do status de ativacao

/* 001 Alteração para utilizar item de selos a vista
	- Responsable	: José Muñoz
	- Data			: 04/10/2007
*/
if @p_tp_fat = 'A' and @p_tp_natureza in ('D','I')
begin
	SELECT TOP 1 @v_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) = 'V'
	ORDER BY   dt_vigencia DESC
end
else
begin
	SELECT TOP 1 @v_item_fat = ISNULL(item_id,'')
	FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
	WHERE cd_aerop      		= @p_cd_aerop 
	    AND cd_terminal     	= @p_cd_terminal 
	    AND tp_natureza     	= @p_tp_natureza 
	    AND dt_vigencia			<= @p_dt_mov
		and inactive_ind		= '0'
		AND RIGHT(RTRIM(item_id),1) <> 'V'
	ORDER BY   dt_vigencia DESC
end

/* Original 
SELECT TOP 1 @v_item_fat = ISNULL(item_id,'')
FROM GEACutcx..cor_item_pax_u 	(NOLOCK INDEX = P_cor_item_pax_u)
WHERE cd_aerop      		= @p_cd_aerop 
    AND cd_terminal     	= @p_cd_terminal 
    AND tp_natureza     	= @p_tp_natureza 
    AND dt_vigencia			<= @p_dt_mov
    AND inactive_ind		= '0'
ORDER BY   dt_vigencia DESC
*/
/* 001 FIM Alteração para utilizar item de selos a vista
	- Responsable	: José Muñoz
	- Data			: 04/10/2007
*/

if @p_tp_coletor = 'MA'
	set @p_tp_coletor = '03'
 
UPDATE pax_selo_electronico_u 
	SET tp_natureza			= @p_tp_natureza, 
	selo_status				= @p_selo_status, 
	cd_motivo              	= @p_cd_motivo, 
	tp_fat                 	= @p_tp_fat, 
	cd_cia_aerea           	= @p_cd_cia_aerea, 
	tp_unid                	= @p_tp_unid, 
	dt_confirma            	= @p_dt_confirma, 
	cd_aerop_utilizacao    	= @p_cd_aerop_utilizacao, 
	cd_terminal_utilizacao 	= @p_cd_terminal_utilizacao, 
	tp_coletor             	= @p_tp_coletor, 
	item_fat               	= @v_item_fat, 
	billing_line_id        	= @p_billing_line_id, 
	billing_int_date       	= @p_billing_int_date, 
	billing_int_type       	= @p_billing_int_type, 
	billing_user_1         	= @p_billing_user_1, 
	voo_rea					= @p_voo_rea,
	dt_voo_rea				= @p_dt_voo_rea,
	hh_voo_rea				= @p_hh_voo_rea,
	hh_mov					= @p_hh_mov,
	date_changed 			= getdate(),   		--@p_date_changed, 
	user_id_changed  		= suser_sname(),  	--@p_user_id_changed, 
	inactive_ind           	= @p_inactive_ind, 
	active_date            	= @p_active_date, 
	chgstamp               	= @w_new_chgstamp 
WHERE cd_aerop              		= @p_cd_aerop 
	AND cd_terminal            		= @p_cd_terminal 
	AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
	AND nro_selo_electronico   		= @p_nro_selo_electronico 
	AND chgstamp               		= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_electronico_u (nolock)
                   WHERE cd_aerop               	= @p_cd_aerop 
                     AND cd_terminal            	= @p_cd_terminal 
                     AND CONVERT(VARCHAR,dt_mov,112)= @p_dt_mov 
                     AND nro_selo_electronico   	= @p_nro_selo_electronico ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 






GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upla_com]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upla_com    Script Date: 19/09/2008 15:21:17 ******/




CREATE  PROCEDURE [dbo].[usp_upd_upla_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_type_cd              char(1),  
                 @p_text                 varchar(255),  
                 @p_chgstamp             smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_electronico_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_selo_electronico_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop              		= @p_cd_aerop 
       AND cd_terminal           		= @p_cd_terminal 
       AND CONVERT(VARCHAR,dt_mov,112)	= @p_dt_mov 
       AND nro_selo_electronico  		= @p_nro_selo_electronico 
       AND type_cd               		= @p_type_cd  
       AND seq_nbr               		= 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upma]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upma    Script Date: 19/09/2008 15:21:17 ******/






CREATE    PROCEDURE [dbo].[usp_upd_upma] 
               ( @p_cd_aerop        		char(4), 
                 @p_cd_terminal     		char(10), 
                 @p_cd_cia_aerea    		char(3), 
                 @p_dt_voo          		datetime, 
                 @p_hr_voo          		char(4), 
                 @p_nro_voo         		char(5), 
                 @p_tp_natureza     		char(1), 
                 @p_tp_voo          		char(1), 
                 @p_pax_dom_fat     		int, 
                 @p_pax_int_fat     		int, 
                 @p_pax_tot_fat     		int, 
                 @p_pax_dom_vista   		int, 
                 @p_pax_int_vista   		int, 
                 @p_pax_tot_vista   		int, 
                 @p_pax_colo        		int, 
                 @p_pax_transito    		int, 
                 @p_pax_conexao_dom 	int, 
                 @p_pax_conexao_int 		int, 
                 @p_pax_iac2110     		int, 
                 @p_pax_tot_isento  		int, 
                 @p_pax_total       		int, 
                 @p_emb_bagagem_dom 	int, 
                 @p_emb_bagagem_int 	int, 
                 @p_emb_carga_dom   	int, 
                 @p_emb_carga_int   		int, 
                 @p_emb_correio_dom 	int, 
                 @p_emb_correio_int 		int, 
                 @p_rpax_participa  		char(15), 
                 @p_mt_aeronave     		char(10), 
                 @p_com_voo_gen        	varchar(250), 
                 @p_date_created    		datetime, 
                 @p_user_id_created 		char(30), 
                 @p_date_changed    		datetime, 
                 @p_user_id_changed 		char(30), 
                 @p_inactive_ind    		char(1), 
                 @p_active_date     		datetime, 
                 @p_old_chgstamp    		smallint ) 
AS 

SET NOCOUNT ON

DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

DECLARE @w_new_chgstamp smallint 

EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao
declare @wdt_ativo datetime
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @wdt_ativo = getdate()
      else
         select @wdt_ativo = @p_active_date
   end
else 
   select @wdt_ativo = ''

IF @p_inactive_ind = '1'
	select @wdt_ativo = getdate()

-- fim da verificacao do status de ativacao
BEGIN TRANSACTION
  UPDATE rpax_emb_voo_u 
     SET tp_natureza     	= @p_tp_natureza, 
         tp_voo          	= @p_tp_voo, 
         pax_dom_fat     	= @p_pax_dom_fat, 
         pax_int_fat     	= @p_pax_int_fat, 
         pax_tot_fat     	= @p_pax_tot_fat, 
         pax_dom_vista   	= @p_pax_dom_vista, 
         pax_int_vista   	= @p_pax_int_vista, 
         pax_tot_vista   	= @p_pax_tot_vista, 
         pax_colo        	= @p_pax_colo, 
         pax_transito    	= @p_pax_transito, 
         pax_conexao_dom 	= @p_pax_conexao_dom, 
         pax_conexao_int 	= @p_pax_conexao_int, 
         pax_iac2110     	= @p_pax_iac2110, 
         pax_tot_isento  	= @p_pax_tot_isento, 
         pax_total       	= @p_pax_total, 
         emb_bagagem_dom 	= @p_emb_bagagem_dom, 
         emb_bagagem_int 	= @p_emb_bagagem_int, 
         emb_carga_dom   	= @p_emb_carga_dom, 
         emb_carga_int   	= @p_emb_carga_int, 
         emb_correio_dom 	= @p_emb_correio_dom, 
         emb_correio_int 	= @p_emb_correio_int, 
         rpax_participa  	= @p_rpax_participa, 
         mt_aeronave     	= @p_mt_aeronave, 
         date_created    	= @p_date_created, 
         user_id_created 	= @p_user_id_created, 
         com_voo_gen       	= @p_com_voo_gen,
         date_changed 	= getdate(),   --@p_date_changed, 
         user_id_changed  	= suser_sname(),  --@p_user_id_changed, 
         active_date  	= CASE WHEN inactive_ind = '0' THEN @wdt_ativo ELSE active_date END,  --@p_active_date,         
         inactive_ind 	= @p_inactive_ind, 
         chgstamp        	= @w_new_chgstamp 
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal     	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND dt_voo          	= @p_dt_voo 
     AND hr_voo          	= @p_hr_voo 
     AND nro_voo         	= @p_nro_voo 
     AND chgstamp        	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_emb_voo_u  (NOLOCK INDEX = P_rpax_emb_voo_u)
                   WHERE cd_aerop    		= @p_cd_aerop 
                     AND cd_terminal     		= @p_cd_terminal 
                     AND cd_cia_aerea 		= @p_cd_cia_aerea 
                     AND dt_voo          		= @p_dt_voo 
                     AND hr_voo          		= @p_hr_voo 
                     AND nro_voo         		= @p_nro_voo ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
if @@error <> 0
begin   
   ROLLBACK
   RAISERROR 20002 'Erro na transacao' 
   goto FIM
end


declare @p_tipo_output char(1), 
	@p_item_id_dom char(26),
	@p_item_id_int char(26)

select @p_tipo_output 	= '1'
	,@p_item_id_dom 	= ''
	,@p_item_id_int 	= ''

/*
delete rpax_itens_u
WHERE cd_aerop        	= @p_cd_aerop 
	AND cd_terminal     = @p_cd_terminal 
	AND cd_cia_aerea    = @p_cd_cia_aerea 
	AND dt_voo          = @p_dt_voo 
	AND hr_voo          = @p_hr_voo 
	AND nro_voo         = @p_nro_voo 
*/
IF @p_inactive_ind = '0'
BEGIN

	EXEC psp_valida_item  
		@p_cd_aerop,      
		@p_cd_terminal,   
		'D',   
		@p_dt_voo ,       
		@p_tipo_output,               
		@p_item_id_dom                      output
	
	EXEC psp_valida_item  
		@p_cd_aerop,      
		@p_cd_terminal,   
		'I',   
		@p_dt_voo ,       
		@p_tipo_output,               
		@p_item_id_int                      output

	-- Incluindo A vista, Domestico
	exec psp_ins_upd_itens_rpax 
		@p_cd_aerop         
		,@p_cd_terminal      
		,@p_cd_cia_aerea  
		,@p_nro_voo          
		,@p_dt_voo           
		,@p_hr_voo          
		,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
		,'D' --@p_tp_natureza   
		,@p_tp_voo          
		,'A' -- @p_tp_fat          
		,@p_pax_dom_vista --@p_pax_total       
		, @p_item_id_dom
	if @@error <> 0
	begin   
	   ROLLBACK
	   RAISERROR 20002 'Erro na transacao' 
	   goto FIM
	end

	-- Incluindo A vista,Internacional
	exec psp_ins_upd_itens_rpax 
		@p_cd_aerop         
		,@p_cd_terminal      
		,@p_cd_cia_aerea  
		,@p_nro_voo          
		,@p_dt_voo           
		,@p_hr_voo          
		,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
		,'I' --@p_tp_natureza   
		,@p_tp_voo          
		,'A' -- @p_tp_fat          
		,@p_pax_int_vista --@p_pax_total       
		, @p_item_id_int
	if @@error <> 0
	begin   
	   ROLLBACK
	   RAISERROR 20002 'Erro na transacao' 
	   goto FIM
	end
	-- Incluindo Faturado, Domestica
	exec psp_ins_upd_itens_rpax 
		@p_cd_aerop         
		,@p_cd_terminal      
		,@p_cd_cia_aerea  
		,@p_nro_voo          
		,@p_dt_voo           
		,@p_hr_voo          
		,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
		,'D' --@p_tp_natureza   
		,@p_tp_voo          
		,'F' -- @p_tp_fat          
		,@p_pax_dom_fat --@p_pax_total       
		,@p_item_id_dom
	if @@error <> 0
	begin   
		ROLLBACK
		RAISERROR 20002 'Erro na transacao' 
		goto FIM
	end
	-- Incluindo Faturado,Internacional
	exec psp_ins_upd_itens_rpax 
		@p_cd_aerop         
		,@p_cd_terminal      
		,@p_cd_cia_aerea  
		,@p_nro_voo          
		,@p_dt_voo           
		,@p_hr_voo          
		,'V' -- @p_tp_rpax          (V)oo e (D)Diaria
		,'I' --@p_tp_natureza   
		,@p_tp_voo          
		,'F' -- @p_tp_fat          
		,@p_pax_int_fat --@p_pax_total       
		,@p_item_id_int
	if @@error <> 0
	begin   
		ROLLBACK
		RAISERROR 20002 'Erro na transacao' 
		goto FIM
	end
END
commit transaction


SET NOCOUNT OFF
FIM:
SELECT @w_new_chgstamp



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upma_com]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upma_com    Script Date: 19/09/2008 15:21:17 ******/


CREATE PROCEDURE [dbo].[usp_upd_upma_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_emb_voo_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              dt_voo, 
              hr_voo, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_nro_voo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM rpax_emb_voo_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND dt_voo        = @p_dt_voo 
       AND hr_voo        = @p_hr_voo 
       AND nro_voo       = @p_nro_voo 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upn1]    Script Date: 01/05/2011 18:05:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



/****** Object:  Stored Procedure dbo.usp_upd_upn1    Script Date: 19/09/2008 15:21:17 ******/



/*
EXECUTE SQLSSIII.GEACupax.dbo.usp_upd_upn1 'SBBR', '20070916', '20070930', 119974, 120520, 103579, 2026, 521, 443, 802
	,''
	,'0'
	,'- - -'
	,'19000101'
	,'1'
	,'MUNOZ'
	, '20071005'
	, 34847
	, 1820
	, 53

SELECT * FROM pax_val_quinz_hdr_u
WHERE cd_aerop 	= 'SBBR'
AND dt_mov_ini	= '20070916'
and dt_mov_fim	= '20070930'

SELECT * FROM gtb_ctrl_email_u 
where email_status = 'P'

DELETE FROM gtb_ctrl_email_u 
where email_status = 'P'

*/

CREATE PROCEDURE [dbo].[usp_upd_upn1] 
	( @p_cd_aerop         char(4), 
	@p_dt_mov_ini       datetime, 
	@p_dt_mov_fim       datetime, 
	@p_com_quin_atu     int, 
	@p_com_quin_ant     int, 
	@p_com_quin_ano_ant int, 
	@p_tot_voo_no_per   int, 
	@p_tot_voo_conf     int, 
	@p_qua_sel_dis      int, 
	@p_qua_sel_pen      int, 
	@p_consideracoes    varchar(255), 
	@p_fl_val           char(1), 
	@p_user_res_val     varchar(30), 
	@p_dt_val           datetime, 
	@p_fl_aut           char(1), 
	@p_user_aut_fat     varchar(30), 
	@p_dt_aut           datetime, 
	@p_qua_sel_dis_geral	int, 
	@p_qua_sel_pen_geral	int, 
	@p_old_chgstamp     smallint ) 
AS 

DECLARE @ret int 
	,@v_fl_aut_aux			char(1)
	,@p_email_from			char(255)
	,@p_email_to        	char(255)
	,@p_email_subject   	char(255)
	,@p_email_body      	varchar(2000)
	,@p_email_status    	char(1)
	,@p_superintendente		varchar(50)
	,@p_name_from			varchar(50)
	,@p_name_from_function	varchar(50)
	,@p_user_id				char(30)
	,@v_vl_total 			float
	,@v_sub_tot_pag			integer
	,@v_perc_quinz_ant			float
	,@v_perc_quinz_ano_ant 		float

	,@v_str_vl_total 			varchar(20)
	,@v_str_sub_tot_pag			varchar(20)
	,@v_str_com_quin_atu 		varchar(20)
	,@v_str_tot_voo_no_per 		varchar(20)
	,@v_str_tot_voo_conf		varchar(20)
	,@v_str_com_quin_ant		varchar(20)
	,@v_str_com_quin_ano_ant	varchar(20)
	,@str_perc_quinz_ant		varchar(20)
	,@str_perc_quinz_ano_ant 	varchar(20)
	
	,@int_neg_1					smallint
	,@int_neg_2					smallint
	,@v_nome_func_autorizador	varchar(100)
	,@v_cargo_func_autorizador	varchar(60)

EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 

/* buscar autorizacao */
select @v_fl_aut_aux = fl_aut
from pax_val_quinz_hdr_u (nolock)
where cd_aerop         = @p_cd_aerop 
and dt_mov_ini       = @p_dt_mov_ini 
and dt_mov_fim       = @p_dt_mov_fim 
and chgstamp         = @p_old_chgstamp 


UPDATE pax_val_quinz_hdr_u 
SET com_quin_atu     	= @p_com_quin_atu, 
	com_quin_ant     	= @p_com_quin_ant, 
	com_quin_ano_ant 	= @p_com_quin_ano_ant, 
	tot_voo_no_per   	= @p_tot_voo_no_per, 
	tot_voo_conf     	= @p_tot_voo_conf, 
	qua_sel_dis      	= @p_qua_sel_dis, 
	qua_sel_pen      	= @p_qua_sel_pen, 
	consideracoes    	= @p_consideracoes, 
	fl_val           	= @p_fl_val, 
	user_res_val     	= @p_user_res_val, 
	dt_val           	= @p_dt_val, 
	fl_aut           	= @p_fl_aut, 
	user_aut_fat     	= @p_user_aut_fat, 
	dt_aut           	= @p_dt_aut, 
	qua_sel_dis_geral 	= @p_qua_sel_dis_geral,
	qua_sel_pen_geral 	= @p_qua_sel_pen_geral,
	chgstamp         	= @w_new_chgstamp 
WHERE cd_aerop         = @p_cd_aerop 
AND dt_mov_ini       = @p_dt_mov_ini 
AND dt_mov_fim       = @p_dt_mov_fim 
AND chgstamp         = @p_old_chgstamp 


IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
		FROM pax_val_quinz_hdr_u 
		WHERE cd_aerop       = @p_cd_aerop 
		AND dt_mov_ini       = @p_dt_mov_ini 
		AND dt_mov_fim       = @p_dt_mov_fim ) 
		RAISERROR 20001 'Row updated by another user.' 
	ELSE 
		RAISERROR 20002 'Row does not exist.' 
	RETURN 
END 


if suser_sname() = 'MUNOZ'
	set @p_user_id = 'DFTC_DENISE'
else
	set @p_user_id = suser_sname() 

/* colocar no email se for autorizacao para faturamento */

/* buscar dados da pessoa que envia o email */	


if @v_fl_aut_aux = '0' and @p_fl_aut = '1'
begin
	
	select @v_nome_func_autorizador	= rtrim(ltrim(last_name)) + ', ' + rtrim(ltrim(first_name)) 
	from DBSwact..user_master_1 (nolock)
	where user_id	= @p_user_aut_fat
	
	select @p_email_from	= 'jose.munoz@infraero.gov.br'
		,@p_email_to        = 'jose.munoz@infraero.gov.br'
		,@p_superintendente	= 'Carlos Rigo'
		,@p_name_from			= ''
	
	
	select @p_superintendente 	= ltrim(rtrim(NOME))
		,@p_email_to			= ltrim(rtrim(E_MAIL))
	from GEACutcx..cor_aeroporto_u a
	inner join INFRAERO..VIW_EMP_INTEGRASS b (NOLOCK)
	on left(b.UOR_SIGLA,1) 			= left(a.cd_aerop,1)
	and right(rtrim(b.UOR_SIGLA),2) = right(a.cd_aerop,2)
	--and b.DEP_CODIGO = convert(int,a.cd_regional)
	where a.cd_aerop = @p_cd_aerop
	and b.NOM_FUNCAO like 'SUPERINT%' 
        ----Léo colocou porque no na VIW_EMP_INTEGRASS não tem SBEG E SIM SRMN.
	if @p_cd_aerop='SBEG'
        begin
           select top 1 @p_superintendente 	= ltrim(rtrim(NOME))
                        ,@p_email_to		= ltrim(rtrim(E_MAIL))
            from INFRAERO..VIW_EMP_INTEGRASS b (NOLOCK)
            where 
               DEP_SIGLA='SRMN'
             and 
               b.NOM_FUNCAO like 'SUPERINT%' 
        end


	if @p_user_id = 'DBS'
		set @p_user_id = 'DFTC_DENISE'	
	
	select @p_name_from			= ltrim(rtrim(b.NOME))
		,@p_email_from 			= ltrim(rtrim(b.E_MAIL))
		,@p_name_from_function	= ltrim(rtrim(b.NOM_FUNCAO))
	from DBSwact..user_master_1 a (nolock)
	left join INFRAERO..VIW_EMP_INTEGRASS b (nolock)
	on b.MATRICULA	= substring(a.notes,9,7)
	where a.user_id = @p_user_id
	
	-- SET @p_email_to = 'jose.munoz@infraero.gov.br' + ', ' + @p_email_from   -- + ', ' + @p_email_to
	
	select @v_vl_total 			= sum(vl_total)
			,@v_sub_tot_pag		= sum(sub_tot_pag)
	from pax_val_quinz_mov_u (nolock index = P_pax_val_quinz_mov_u)
	where cd_aerop       = @p_cd_aerop 
	and convert(varchar(8), dt_mov_ini, 112) = convert(varchar(8), @p_dt_mov_ini, 112)
	and convert(varchar(8), dt_mov_fim, 112) = convert(varchar(8), @p_dt_mov_fim, 112) 
	
	select @v_perc_quinz_ant		= 100 - (@p_com_quin_ant * 100.00 / @p_com_quin_atu)
		,@v_perc_quinz_ano_ant 		= 100 - (@p_com_quin_ano_ant * 100.00 / @p_com_quin_atu)
		,@int_neg_1					= 0
		,@int_neg_2					= 0
	
	if @v_perc_quinz_ant < 0
	begin
		select @int_neg_1		= 1
			,@v_perc_quinz_ant 	= @v_perc_quinz_ant * -1
	end
	
	if @v_perc_quinz_ano_ant < 0
	begin
		select @int_neg_2		= 1
			,@v_perc_quinz_ano_ant = @v_perc_quinz_ano_ant * -1
	end
	
	exec GEACrrcv..gsp_str @v_vl_total, 				@v_str_vl_total 		output
	exec GEACrrcv..gsp_str @v_perc_quinz_ant,			@str_perc_quinz_ant		output
	exec GEACrrcv..gsp_str @v_perc_quinz_ano_ant,		@str_perc_quinz_ano_ant	output
	exec GEACrrcv..gsp_str_integer @v_sub_tot_pag,  	@v_str_sub_tot_pag 		output
	exec GEACrrcv..gsp_str_integer @p_com_quin_atu, 	@v_str_com_quin_atu 	output
	exec GEACrrcv..gsp_str_integer @p_tot_voo_no_per, 	@v_str_tot_voo_no_per 	output
	exec GEACrrcv..gsp_str_integer @p_tot_voo_conf,		@v_str_tot_voo_conf		output
	exec GEACrrcv..gsp_str_integer @p_com_quin_ant,		@v_str_com_quin_ant		output
	exec GEACrrcv..gsp_str_integer @p_com_quin_ano_ant,	@v_str_com_quin_ano_ant	output
	
	if @int_neg_1 = 1 
		set @str_perc_quinz_ant = '-' + ltrim(rtrim(@str_perc_quinz_ant))
	
	if @int_neg_2 = 1 
		set @str_perc_quinz_ano_ant = '-' + ltrim(rtrim(@str_perc_quinz_ano_ant))
	
	select @p_email_subject = 'Tarifa de Embarque - ' + @p_cd_aerop
		,@p_email_status    = 'P'
	
	set @p_email_body      = 'Informo concluída a análise para o Faturamento referente'
	if day(@p_dt_mov_ini) = 1
		set @p_email_body      = @p_email_body + ' a Tarifa de Embarque no ' + @p_cd_aerop + ', 1ª quinzena'
	else
		set @p_email_body      = @p_email_body + ' a Tarifa de Embarque no ' + @p_cd_aerop + ', 2ª quinzena'		
	
	set @p_email_body      = @p_email_body + ' de ' + substring(convert(varchar(8), @p_dt_mov_ini,112),5,2) 
	set @p_email_body      = @p_email_body + '/' + substring(convert(varchar(8), @p_dt_mov_ini,112),1,4)
 	set @p_email_body      = @p_email_body + ', conforme abaixo:' + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Total de passageiros pagantes embarcados no período : ' + ltrim(rtrim(@v_str_com_quin_atu)) + char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Valor Total Faturado: ' + ltrim(rtrim(@v_str_vl_total)) + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Total de vôos processados: ' + ltrim(rtrim(@v_str_tot_voo_no_per)) + char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Total de vôos fiscalizados: ' + ltrim(rtrim(@v_str_tot_voo_conf)) + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Comparativos' + char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Nº de Passageiros da Quinzena Anterior: ' + ltrim(rtrim(@v_str_com_quin_ant)) + ' (' + ltrim(rtrim(@str_perc_quinz_ant)) + '%)'+ char(13) + char(10)
	set @p_email_body      = @p_email_body + 'Nº de Passageiros Mesmo período ano anterior: ' + ltrim(rtrim(@v_str_com_quin_ano_ant)) + ' (' + ltrim(rtrim(@str_perc_quinz_ano_ant)) + '%)'+ char(13) + char(10)
/*	set @p_email_body      = @p_email_body + 'Percentual	' + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + rtrim(ltrim(@p_name_from)) + char(13) + char(10)
	set @p_email_body      = @p_email_body + rtrim(ltrim(@p_name_from_function)) + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
 	set @p_email_body      = @p_email_body + 'Total Acumulado:'
	set @p_email_body      = @p_email_body + char(13) + char(10)
	set @p_email_body      = @p_email_body + char(13) + char(10)
 	set @p_email_body      = @p_email_body + 'Mês Ano' + char(13) + char(10)
*/	
	exec usp_ins_gtb_ctrl_email_u 
		 @p_email_from
		,@p_email_to 
		,@p_email_subject   
		,@p_email_body      
		,@p_email_status    
		,''
		,'jose.munoz@infraero.gov.br, sandroleo@infraero.gov.br, rogerio_neno@infraero.gov.br, crigo@infraero.gov.br '
end

SELECT @w_new_chgstamp 







GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upn1_com]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upn1_com    Script Date: 19/09/2008 15:21:18 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_upn1_com] 
               ( @p_cd_aerop   char(4),  
                 @p_dt_mov_ini datetime,  
                 @p_dt_mov_fim datetime,  
                 @p_type_cd    char(1),  
                 @p_text       varchar(255),  
                 @p_chgstamp   smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_quinz_hdr_u_comnt_u 
            ( cd_aerop, 
              dt_mov_ini, 
              dt_mov_fim, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_dt_mov_ini, 
              @p_dt_mov_fim, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_val_quinz_hdr_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop    = @p_cd_aerop 
       AND dt_mov_ini  = @p_dt_mov_ini 
       AND dt_mov_fim  = @p_dt_mov_fim 
       AND type_cd     = @p_type_cd  
       AND seq_nbr     = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upna]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upna    Script Date: 19/09/2008 15:21:18 ******/



CREATE PROCEDURE [dbo].[usp_upd_upna] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_cd_cia_aerea     	char(3), 
                 @p_nro_voo          	char(5), 
                 @p_dt_voo           	datetime, 
                 @p_hr_voo           	char(8), 
                 @p_tp_natureza      	char(1), 
                 @p_tp_voo           	char(1), 
                 @p_tp_fat           	char(1), 
                 @p_pax_total        	int, 
                 @p_item_fat         	char(26), 
                 @p_date_created     	datetime, 
                 @p_user_id_created  	char(30), 
                 @p_date_changed     	datetime, 
                 @p_user_id_changed 	char(30), 
                 @p_inactive_ind     	char(1), 
                 @p_active_date      	datetime, 
                 @p_old_chgstamp     	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @p_active_date = getdate()
   end
else 
   select @p_active_date = ''
-- fim da verificacao do status de ativacao
  UPDATE rpax_itens_u 
     SET tp_natureza      	= @p_tp_natureza, 
         tp_voo           	= @p_tp_voo, 
         tp_fat           	= @p_tp_fat, 
         pax_total        	= @p_pax_total, 
         item_fat         	= @p_item_fat, 
         date_created     	= @p_date_created, 
         user_id_created  	= @p_user_id_created, 
         date_changed 	= getdate(),   --@p_date_changed, 
         user_id_changed  	= suser_sname(),  --@p_user_id_changed, 
         chgstamp         	= @w_new_chgstamp 
   WHERE cd_aerop       = @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea    	= @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND chgstamp         	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_itens_u  (NOLOCK INDEX = P_rpax_itens_u)
                   WHERE cd_aerop    	= @p_cd_aerop 
                     AND cd_terminal     	= @p_cd_terminal 
                     AND cd_cia_aerea 	= @p_cd_cia_aerea 
                     AND nro_voo          	= @p_nro_voo 
                     AND dt_voo           	= @p_dt_voo 
                     AND hr_voo           	= @p_hr_voo ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upna2]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upna2    Script Date: 19/09/2008 15:21:18 ******/


CREATE PROCEDURE [dbo].[usp_upd_upna2]
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_cd_cia_aerea  	char(3), 
                 @p_nro_voo          	char(5), 
                 @p_dt_voo           	datetime, 
                 @p_hr_voo  		char(4), 
                 @p_item_fat  		char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date    	datetime, 
                 @p_old_chgstamp     	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
  IF @ret != 0 RETURN 
 
  UPDATE rpax_itens_u 
     SET 
         billing_line_id        	= @p_billing_line_id, 
         billing_int_date      	= @p_billing_int_date, 
         date_changed 	= getdate(),   		--@p_date_changed, 
         user_id_changed  	= suser_sname()  		--@p_user_id_changed, 
   WHERE cd_aerop       = @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND cd_cia_aerea     = @p_cd_cia_aerea 
     AND nro_voo          	= @p_nro_voo 
     AND dt_voo           	= @p_dt_voo 
     AND hr_voo           	= @p_hr_voo 
     AND chgstamp         	= @p_old_chgstamp 
     AND item_fat  	= @p_item_fat

RETURN @@ROWCOUNT





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upoa]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upoa    Script Date: 19/09/2008 15:21:18 ******/




CREATE   PROCEDURE [dbo].[usp_upd_upoa] 
			( @p_cd_aerop          	char(4), 
			@p_cd_terminal       	char(10), 
			@p_dt_entrega        	datetime, 
			@p_hh_entrega        	char(6), 
			@p_cd_cia_aerea      	char(3), 
			@p_nro_rste          	char(6), 
			@p_nro_selo_inicial  	char(10), 
			@p_nro_selo_final    	char(10), 
			@p_qtd_selos         	decimal(7,2), 
			@p_tp_fat            	char(1), 
			@p_ano_remesa			int,
			@p_date_created      	datetime, 
			@p_user_id_created   	char(30), 
			@p_date_changed     	datetime, 
			@p_user_id_changed 		char(30), 
			@p_inactive_ind      	char(1), 
			@p_active_date       	datetime, 
			@p_old_chgstamp     smallint ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
begin
	if @p_active_date = ''
		select @p_active_date = GETDATE()
end
else 
	select @p_active_date = ''

	-- fim da verificacao do status de ativacao
UPDATE pax_entrega_selo_line_u 
SET qtd_selos         	= @p_qtd_selos, 
	tp_fat            	= @p_tp_fat, 
	date_created      	= @p_date_created, 
	user_id_created   	= @p_user_id_created, 
	ano_remesa			= @p_ano_remesa,
	date_changed 		= GETDATE(),   --@p_date_changed, 
	user_id_changed  	= suser_sname(),  --@p_user_id_changed, 
	inactive_ind 		= @p_inactive_ind, 
	active_date  		= @p_active_date,          
	chgstamp          	= @w_new_chgstamp 
WHERE cd_aerop      	= @p_cd_aerop 
	AND cd_terminal       	= @p_cd_terminal 
	AND cd_cia_aerea    	= @p_cd_cia_aerea 
	AND dt_entrega        	= @p_dt_entrega 
	AND hh_entrega        	= @p_hh_entrega 
	AND nro_rste          	= @p_nro_rste 
	AND nro_selo_inicial  	= @p_nro_selo_inicial 
	AND nro_selo_final    	= @p_nro_selo_final 
	AND chgstamp         	= @p_old_chgstamp 

IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
				FROM pax_entrega_selo_line_u  (NOLOCK INDEX = P_pax_entrega_selo_line_u)
				WHERE cd_aerop          = @p_cd_aerop 
				AND cd_terminal       	= @p_cd_terminal 
				AND cd_cia_aerea      	= @p_cd_cia_aerea 
				AND dt_entrega        	= @p_dt_entrega 
				AND nro_rste           	= @p_nro_rste 
				AND nro_selo_inicial  	= @p_nro_selo_inicial 
				AND nro_selo_final    	= @p_nro_selo_final ) 
		RAISERROR 20001 'Row updated by another user.' 
	ELSE 
		RAISERROR 20002 'Row does not exist.' 
	RETURN 
END 
ELSE
BEGIN
	UPDATE pax_selo_u
	SET tp_fat			= @p_tp_fat
		,date_changed	= GETDATE()
	WHERE 	nro_selo  	between @p_nro_selo_inicial AND @p_nro_selo_final
END  

SELECT @w_new_chgstamp 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upoa_com]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upoa_com    Script Date: 19/09/2008 15:21:18 ******/



CREATE PROCEDURE [dbo].[usp_upd_upoa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_hh_entrega       char(6),  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1),  
                 @p_text             varchar(255),  
                 @p_chgstamp         smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_entrega_selo_lin_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              hh_entrega, 
              cd_cia_aerea, 
              nro_rste, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_hh_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_entrega_selo_lin_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop          = @p_cd_aerop 
       AND cd_terminal       = @p_cd_terminal 
       AND dt_entrega        = @p_dt_entrega 
       AND hh_entrega        = @p_hh_entrega 
       AND cd_cia_aerea      = @p_cd_cia_aerea 
       AND nro_rste          = @p_nro_rste 
       AND nro_selo_inicial  = @p_nro_selo_inicial 
       AND nro_selo_final    = @p_nro_selo_final 
       AND type_cd           = @p_type_cd  
       AND seq_nbr           = 1   
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uppa]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_upd_uppa    Script Date: 19/09/2008 15:21:18 ******/




CREATE PROCEDURE [dbo].[usp_upd_uppa] 
			( @p_cd_aerop          	char(4), 
			@p_cd_terminal       	char(10), 
			@p_dt_mov            	datetime, 
			@p_hh_mm             	char(6), 
			@p_selo_status       	char(1), 
			@p_cd_motivo         	char(2), 
			@p_periodo_de        	datetime, 
			@p_periodo_ate       	datetime, 
			@p_cd_cia_aerea      	char(3), 
			@p_nro_rste          	char(6), 
			@p_nro_selo_inicial  	char(10), 
			@p_nro_selo_final    	char(10), 
			@p_qtd_selos         	decimal(7,2), 
			@p_tp_baixa          	char(1), 
			@p_fl_distribuidos       	char(1), 
			@p_fl_utilizados       	char(1), 
			@p_ano_remesa	int,
			@p_fl_pendentes       char(1), 
			@p_date_created      	datetime, 
			@p_user_id_created   char(30), 
			@p_date_changed     datetime, 
			@p_user_id_changed char(30), 
			@p_inactive_ind      	char(1), 
			@p_active_date       	datetime, 
			@p_old_chgstamp      	smallint ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 

IF @ret != 0 RETURN 

DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 

-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
begin
	if @p_active_date = ''
		select @p_active_date = getdate()
end
else 
	select @p_active_date = ''
-- fim da verificacao do status de ativacao

UPDATE pax_baixa_selecao_u 
SET selo_status       	= @p_selo_status, 
	cd_motivo         	= @p_cd_motivo, 
	periodo_de        	= @p_periodo_de, 
	periodo_ate       	= @p_periodo_ate, 
	cd_cia_aerea      	= @p_cd_cia_aerea, 
	nro_rste          	= @p_nro_rste, 
	nro_selo_inicial  	= @p_nro_selo_inicial, 
	nro_selo_final    	= @p_nro_selo_final, 
	qtd_selos         	= CONVERT(FLOAT(2), @p_qtd_selos),
	tp_baixa          	= @p_tp_baixa, 
	fl_distribuidos     = @p_fl_distribuidos,
	fl_utilizados       = @p_fl_utilizados,
	date_created      	= @p_date_created, 
	ano_remesa			= @p_ano_remesa,
	fl_pendentes       	= @p_fl_pendentes,
	user_id_created   	= @p_user_id_created, 
	date_changed 		= getdate(),   		--@p_date_changed, 
	user_id_changed  	= suser_sname(),  	--@p_user_id_changed, 
	inactive_ind 		= @p_inactive_ind, 
	active_date  		= @p_active_date,         
	chgstamp          	= @w_new_chgstamp 
WHERE cd_aerop       	= @p_cd_aerop 
AND cd_terminal       	= @p_cd_terminal 
AND dt_mov            	= @p_dt_mov 
AND hh_mm             	= @p_hh_mm 
AND chgstamp          	= @p_old_chgstamp 
 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
		FROM pax_baixa_selecao_u  (NOLOCK INDEX = P_pax_baixa_selecao_u )
		WHERE cd_aerop   	= @p_cd_aerop 
		AND cd_terminal    	= @p_cd_terminal 
		AND dt_mov            = @p_dt_mov 
		AND hh_mm            	= @p_hh_mm ) 
		RAISERROR 20001 'Row updated by another user.' 
	ELSE 
		RAISERROR 20002 'Row does not exist.' 
	RETURN 
END 
SELECT @w_new_chgstamp


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uppa_com]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uppa_com    Script Date: 19/09/2008 15:21:18 ******/


CREATE PROCEDURE [dbo].[usp_upd_uppa_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_type_cd     char(1),  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_baixa_selecao_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_baixa_selecao_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop     = @p_cd_aerop 
       AND cd_terminal  = @p_cd_terminal 
       AND dt_mov       = @p_dt_mov 
       AND hh_mm        = @p_hh_mm 
       AND type_cd      = @p_type_cd  
       AND seq_nbr      = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uppb_com]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uppb_com    Script Date: 19/09/2008 15:21:19 ******/


CREATE PROCEDURE [dbo].[usp_upd_uppb_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_selo_status char(1),  
                 @p_nro_selo    char(10),  
                 @p_type_cd     char(1),  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selos_baixa_sele_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              hh_mm, 
              selo_status, 
              nro_selo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_hh_mm, 
              @p_selo_status, 
              @p_nro_selo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_selos_baixa_sele_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop     = @p_cd_aerop 
       AND cd_terminal  = @p_cd_terminal 
       AND dt_mov       = @p_dt_mov 
       AND hh_mm        = @p_hh_mm 
       AND selo_status  = @p_selo_status 
       AND nro_selo     = @p_nro_selo 
       AND type_cd      = @p_type_cd  
       AND seq_nbr      = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uppb_tab]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uppb_tab    Script Date: 19/09/2008 15:21:19 ******/


CREATE PROCEDURE [dbo].[usp_upd_uppb_tab] 
               ( @p_cd_aerop     char(4), 
                 @p_cd_terminal  char(10), 
                 @p_dt_mov       datetime, 
                 @p_hh_mm        char(5), 
                 @p_selo_status  char(1), 
                 @p_cd_motivo    char(2), 
                 @p_nro_selo     char(10), 
                 @p_inactive_ind char(1), 
                 @p_old_chgstamp smallint ) 
AS 
  DECLARE @ret int 
  declare @w_erro char(5)
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
--begin transaction
 
/*
  if @p_inactive_ind = "1"
  begin
  EXEC psp_ins_baixa_selos 
  @p_cd_aerop 
 ,@p_cd_terminal            
 ,@p_nro_selo 
 ,@p_nro_selo
 ,@p_selo_status
 ,@p_dt_mov        
             ,'N'
             ,@w_erro  output
  if @w_erro = 'Y'
    begin
        select @p_inactive_ind = "2"
    end
-- else
  --   begin
        -- rollback
--     end
  end
*/
  UPDATE pax_baixa_selecao_selos_u 
     SET inactive_ind 	= @p_inactive_ind, 
         chgstamp     	= @w_new_chgstamp 
   WHERE cd_aerop     	= @p_cd_aerop 
     AND cd_terminal  	= @p_cd_terminal 
     AND dt_mov       	= @p_dt_mov 
     AND hh_mm        	= @p_hh_mm 
     AND selo_status  	= @p_selo_status 
     AND cd_motivo    	= @p_cd_motivo 
     AND nro_selo     	= @p_nro_selo 
     AND chgstamp     	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_baixa_selecao_selos_u  (NOLOCK INDEX = P_pax_baixa_selecao_selos_u )
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal  	= @p_cd_terminal 
                     AND dt_mov       	= @p_dt_mov 
                     AND hh_mm        	= @p_hh_mm 
                     AND selo_status  	= @p_selo_status 
                     AND cd_motivo    	= @p_cd_motivo 
                     AND nro_selo     	= @p_nro_selo ) 
          BEGIN
          RAISERROR 20001 'Row updated by another user.'
          RETURN
          --rollback
          END
      ELSE 
          BEGIN
          RAISERROR 20002 'Row does not exist.'
          --rollback
          END
      RETURN 
  END 
 -- commit
  SELECT @w_new_chgstamp 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upqa]    Script Date: 01/05/2011 18:05:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upqa    Script Date: 19/09/2008 15:21:19 ******/


CREATE PROCEDURE [dbo].[usp_upd_upqa] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_ano_rste         	char(4), 
                 @p_ultimo_rste      	int, 
                 @p_ultimo_rcld      	int, 
                 @p_ultimo_rdev      	int, 
                 @p_date_created     	datetime, 
                 @p_user_id_created  	char(30), 
                 @p_date_changed     	datetime, 
                 @p_user_id_changed	char(30), 
                 @p_inactive_ind     	char(1), 
                 @p_active_date      	datetime, 
                 @p_old_chgstamp     	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_param_rste_u 
     SET ultimo_rste      	= @p_ultimo_rste, 
         ultimo_rcld      	= @p_ultimo_rcld,      
         ultimo_rdev      	= @p_ultimo_rdev,      
         date_created     	= @p_date_created, 
         user_id_created  	= @p_user_id_created, 
         date_changed     	= @p_date_changed, 
         user_id_changed  	= @p_user_id_changed, 
         inactive_ind     	= @p_inactive_ind, 
         active_date      	= @p_active_date, 
         chgstamp         	= @w_new_chgstamp 
   WHERE cd_aerop       	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND ano_rste         	= @p_ano_rste 
     AND chgstamp         	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_param_rste_u  (NOLOCK INDEX = P_pax_param_rste_u)
                   WHERE cd_aerop     = @p_cd_aerop 
                     AND cd_terminal      = @p_cd_terminal 
                     AND ano_rste         = @p_ano_rste ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upqa_com]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upqa_com    Script Date: 19/09/2008 15:21:19 ******/


CREATE PROCEDURE [dbo].[usp_upd_upqa_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_ano_rste    char(4),  
                 @p_type_cd     char(1),  
                 @p_text        varchar(255),  
                 @p_chgstamp    smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_param_rste_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              ano_rste, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_ano_rste, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_param_rste_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop     = @p_cd_aerop 
       AND cd_terminal  = @p_cd_terminal 
       AND ano_rste     = @p_ano_rste 
       AND type_cd      = @p_type_cd  
       AND seq_nbr      = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upra]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upra    Script Date: 19/09/2008 15:21:19 ******/



CREATE PROCEDURE [dbo].[usp_upd_upra] 
               ( @p_cd_aerop               char(4), 
                 @p_cd_terminal            char(10), 
                 @p_dt_mov                 datetime, 
                 @p_nro_selo_electronico   char(10), 
                 @p_hh_mov                 char(6), 
                 @p_tp_natureza            char(1), 
                 @p_selo_status            char(1), 
                 @p_cd_motivo              char(2), 
                 @p_tp_fat                 char(1), 
                 @p_cd_cia_aerea           char(3), 
                 @p_tp_unid                char(1), 
                 @p_dt_confirma            datetime, 
                 @p_cd_aerop_utilizacao    char(4), 
                 @p_cd_terminal_utilizacao char(10), 
                 @p_tp_coletor             char(16), 
                 @p_item_fat               char(26), 
                 @p_billing_line_id        int, 
                 @p_billing_int_date       datetime, 
                 @p_billing_int_type       char(1), 
                 @p_billing_user_1         char(10), 
                 @p_voo_rea                char(4), 
                 @p_dt_voo_rea             datetime, 
                 @p_hh_voo_rea             char(6), 
                 @p_date_created           datetime, 
                 @p_user_id_created        char(30), 
                 @p_date_changed           datetime, 
                 @p_user_id_changed        char(30), 
                 @p_inactive_ind           char(1), 
                 @p_active_date            datetime, 
                 @p_old_chgstamp           smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_selo_elec_dup_u 
     SET tp_natureza            = @p_tp_natureza, 
         selo_status            = @p_selo_status, 
         cd_motivo              = @p_cd_motivo, 
         tp_fat                 = @p_tp_fat, 
         cd_cia_aerea           = @p_cd_cia_aerea, 
         tp_unid                = @p_tp_unid, 
         dt_confirma            = @p_dt_confirma, 
         cd_aerop_utilizacao    = @p_cd_aerop_utilizacao, 
         cd_terminal_utilizacao = @p_cd_terminal_utilizacao, 
         tp_coletor             = @p_tp_coletor, 
         item_fat               = @p_item_fat, 
         billing_line_id        = @p_billing_line_id, 
         billing_int_date       = @p_billing_int_date, 
         billing_int_type       = @p_billing_int_type, 
         billing_user_1         = @p_billing_user_1, 
         voo_rea                = @p_voo_rea, 
         dt_voo_rea             = @p_dt_voo_rea, 
         hh_voo_rea             = @p_hh_voo_rea, 
         date_created           = @p_date_created, 
         user_id_created        = @p_user_id_created, 
         date_changed           = @p_date_changed, 
         user_id_changed        = @p_user_id_changed, 
         inactive_ind           = @p_inactive_ind, 
         active_date            = @p_active_date, 
         chgstamp               = @w_new_chgstamp 
   WHERE cd_aerop               = @p_cd_aerop 
     AND cd_terminal            = @p_cd_terminal 
     AND dt_mov                 = @p_dt_mov 
     AND nro_selo_electronico   = @p_nro_selo_electronico 
     AND hh_mov                 = @p_hh_mov 
     AND chgstamp               = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_selo_elec_dup_u 
                   WHERE cd_aerop               = @p_cd_aerop 
                     AND cd_terminal            = @p_cd_terminal 
                     AND dt_mov                 = @p_dt_mov 
                     AND nro_selo_electronico   = @p_nro_selo_electronico 
                     AND hh_mov                 = @p_hh_mov ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upra_com]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upra_com    Script Date: 19/09/2008 15:21:19 ******/



CREATE PROCEDURE [dbo].[usp_upd_upra_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_hh_mov               char(6),  
                 @p_type_cd              char(1),  
                 @p_text                 varchar(255),  
                 @p_chgstamp             smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_selo_elec_dup_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              nro_selo_electronico, 
              hh_mov, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_nro_selo_electronico, 
              @p_hh_mov, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_selo_elec_dup_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop              = @p_cd_aerop 
       AND cd_terminal           = @p_cd_terminal 
       AND dt_mov                = @p_dt_mov 
       AND nro_selo_electronico  = @p_nro_selo_electronico 
       AND hh_mov                = @p_hh_mov 
       AND type_cd               = @p_type_cd  
       AND seq_nbr               = 1   
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upsa]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upsa    Script Date: 19/09/2008 15:21:20 ******/


CREATE PROCEDURE [dbo].[usp_upd_upsa] 
               ( @p_cd_aerop                	char(4), 
                 @p_cd_terminal             	char(10), 
                 @p_cd_cia_aerea            	char(3), 
                 @p_nro_voo                 	char(5), 
                 @p_dt_voo                   	datetime, 
                 @p_hr_voo                   	char(4), 
                 @p_tp_rpax                  	char(1), 
                 @p_recv_doc_id             	char(22), 
                 @p_user_field_description  	varchar(255), 
                 @p_item_id    			char(26), 
                 @p_date_created            	datetime, 
                 @p_user_id_created         	char(30), 
                 @p_date_changed            	datetime, 
                 @p_user_id_changed         	char(30), 
                 @p_inactive_ind            	char(1), 
                 @p_active_date             	datetime, 
                 @p_old_chgstamp            	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @p_active_date = getdate()
   end
else 
   select @p_active_date = ''
-- fim da verificacao do status de ativacao
 
  UPDATE rpax_boleto_cancelado_u 
     SET user_field_description  	= @p_user_field_description, 
         item_id    			= @p_item_id, 
         date_created            	= @p_date_created, 
         user_id_created         	= @p_user_id_created, 
         date_changed  		= getdate(),   --@p_date_changed, 
         user_id_changed   		= suser_sname(),  --@p_user_id_changed, 
         inactive_ind  		= @p_inactive_ind, 
         active_date   		= @p_active_date,         
         chgstamp                 	= @w_new_chgstamp 
   WHERE cd_aerop                	= @p_cd_aerop 
     AND cd_terminal             	= @p_cd_terminal 
     AND cd_cia_aerea            	= @p_cd_cia_aerea 
     AND nro_voo                 	= @p_nro_voo 
     AND dt_voo                  	= @p_dt_voo 
     AND hr_voo                  	= @p_hr_voo 
     AND tp_rpax                 	= @p_tp_rpax 
     AND recv_doc_id             	= @p_recv_doc_id 
     AND chgstamp                	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM rpax_boleto_cancelado_u (NOLOCK INDEX = P_rpax_boleto_cancelado_u )
                   WHERE cd_aerop                	= @p_cd_aerop 
                     AND cd_terminal             	= @p_cd_terminal 
                     AND cd_cia_aerea            	= @p_cd_cia_aerea 
                     AND nro_voo                 	= @p_nro_voo 
                     AND dt_voo                  	= @p_dt_voo 
                     AND hr_voo                  	= @p_hr_voo 
                     AND tp_rpax                 	= @p_tp_rpax 
                     AND recv_doc_id             	= @p_recv_doc_id ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.' 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upsa_com]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upsa_com    Script Date: 19/09/2008 15:21:20 ******/


CREATE PROCEDURE [dbo].[usp_upd_upsa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_tp_rpax      char(1),  
                 @p_recv_doc_id  char(22),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO rpax_boleto_cancelad_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              cd_cia_aerea, 
              nro_voo, 
              dt_voo, 
              hr_voo, 
              tp_rpax, 
              recv_doc_id, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_dt_voo, 
              @p_hr_voo, 
              @p_tp_rpax, 
              @p_recv_doc_id, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM rpax_boleto_cancelad_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND cd_terminal   = @p_cd_terminal 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND nro_voo       = @p_nro_voo 
       AND dt_voo        = @p_dt_voo 
       AND hr_voo        = @p_hr_voo 
       AND tp_rpax       = @p_tp_rpax 
       AND recv_doc_id   = @p_recv_doc_id 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upta]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upta    Script Date: 19/09/2008 15:21:20 ******/



CREATE PROCEDURE [dbo].[usp_upd_upta] 
               ( @p_cd_aerop                	char(4), 
                 @p_cd_terminal             	char(10), 
                 @p_dt_mov                  	datetime, 
                 @p_cd_cia_aerea            	char(3), 
                 @p_nro_rste                 	char(6), 
                 @p_nro_selo_inicial        	char(10), 
                 @p_nro_selo_final          	char(10), 
                 @p_tp_fat                   		char(1), 
                 @p_recv_doc_id             	char(22), 
                 @p_user_field_description  	varchar(255), 
                 @p_item_id                  	varchar(26), 
                 @p_date_created            	datetime, 
                 @p_user_id_created         	char(30), 
                 @p_date_changed            	datetime, 
                 @p_user_id_changed         	char(30), 
                 @p_inactive_ind            	char(1), 
                 @p_active_date             	datetime, 
                 @p_old_chgstamp            	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
-- Inicio da verificacao do status de ativacao
if @p_inactive_ind = '0' 
   begin
      if @p_active_date = ''
         select @p_active_date = GETDATE()
   end
else 
   select @p_active_date = ''
-- fim da verificacao do status de ativacao
  UPDATE selo_boleto_cancelado_u 
     SET 
        user_field_description  	= @p_user_field_description, 
         item_id                  		= @p_item_id, 
         date_created            	= @p_date_created, 
         user_id_created         	= @p_user_id_created, 
         date_changed  		= GETDATE(),   --@p_date_changed, 
         user_id_changed   		= suser_sname(), --@p_user_id_changed, 
         inactive_ind  		= @p_inactive_ind, 
         active_date   		= @p_active_date,         
         chgstamp                 	= @w_new_chgstamp 
   WHERE cd_aerop                	= @p_cd_aerop 
     AND cd_terminal             	= @p_cd_terminal 
     AND dt_mov                  	= @p_dt_mov 
     AND cd_cia_aerea            	= @p_cd_cia_aerea 
     AND nro_rste                	= @p_nro_rste 
     AND nro_selo_inicial        	= @p_nro_selo_inicial 
     AND nro_selo_final          	= @p_nro_selo_final 
     AND tp_fat                   	= @p_tp_fat 
     AND recv_doc_id             	= @p_recv_doc_id 
     AND chgstamp                	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM selo_boleto_cancelado_u  (NOLOCK INDEX = P_selo_boleto_cancelado_u )
                   WHERE cd_aerop      	= @p_cd_aerop 
                     AND cd_terminal       	= @p_cd_terminal 
                     AND dt_mov            	= @p_dt_mov 
                     AND cd_cia_aerea   	= @p_cd_cia_aerea 
                     AND nro_rste          		= @p_nro_rste 
                     AND nro_selo_inicial        	= @p_nro_selo_inicial 
                     AND nro_selo_final          	= @p_nro_selo_final 
                     AND tp_fat                  	= @p_tp_fat 
                     AND recv_doc_id             	= @p_recv_doc_id ) 
          RAISERROR 20001 'Row updated by another user.' 
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 





GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upta_com]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upta_com    Script Date: 19/09/2008 15:21:20 ******/


CREATE PROCEDURE [dbo].[usp_upd_upta_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_mov           datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_tp_fat           char(1),  
                 @p_recv_doc_id      char(22),  
                 @p_type_cd          char(1),  
                 @p_text             varchar(255),  
                 @p_chgstamp         smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO selo_boleto_cancelad_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_mov, 
              cd_cia_aerea, 
              nro_rste, 
              nro_selo_inicial, 
              nro_selo_final, 
              tp_fat, 
              recv_doc_id, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_mov, 
              @p_cd_cia_aerea, 
              @p_nro_rste, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_tp_fat, 
              @p_recv_doc_id, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM selo_boleto_cancelad_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop          = @p_cd_aerop 
       AND cd_terminal       = @p_cd_terminal 
       AND dt_mov            = @p_dt_mov 
       AND cd_cia_aerea      = @p_cd_cia_aerea 
       AND nro_rste          = @p_nro_rste 
       AND nro_selo_inicial  = @p_nro_selo_inicial 
       AND nro_selo_final    = @p_nro_selo_final 
       AND tp_fat            = @p_tp_fat 
       AND recv_doc_id       = @p_recv_doc_id 
       AND type_cd           = @p_type_cd  
       AND seq_nbr           = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upwa]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upwa    Script Date: 19/09/2008 15:21:21 ******/


CREATE PROCEDURE [dbo].[usp_upd_upwa] 
               ( @p_cd_aerop         	char(4), 
                 @p_cd_terminal      	char(10), 
                 @p_dt_entrega       	datetime, 
                 @p_cd_cia_aerea     	char(3), 
                 @p_nro_rdev         	char(6), 
                 @p_nro_selo_inicial 	char(10), 
                 @p_nro_selo_final   	char(10), 
                 @p_qtd_selos        	float, 
                 @p_date_created     	datetime, 
                 @p_user_id_created  	char(30), 
                 @p_date_changed     	datetime, 
                 @p_user_id_changed  char(30), 
                 @p_inactive_ind     	char(1), 
                 @p_active_date      	datetime, 
                 @p_old_chgstamp     	smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_dev_selo_line_u 
     SET qtd_selos        	= @p_qtd_selos, 
         date_created     	= @p_date_created, 
         user_id_created  	= @p_user_id_created, 
         date_changed     	= @p_date_changed, 
         user_id_changed  	= @p_user_id_changed, 
         inactive_ind     	= @p_inactive_ind, 
         active_date      	= @p_active_date, 
         chgstamp         	= @w_new_chgstamp 
   WHERE cd_aerop      	= @p_cd_aerop 
     AND cd_terminal      	= @p_cd_terminal 
     AND dt_entrega       	= @p_dt_entrega 
     AND cd_cia_aerea   	= @p_cd_cia_aerea 
     AND nro_rdev         	= @p_nro_rdev 
     AND nro_selo_inicial 	= @p_nro_selo_inicial 
     AND nro_selo_final   	= @p_nro_selo_final 
     AND chgstamp         	= @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_dev_selo_line_u  (NOLOCK INDEX = P_pax_dev_selo_line_u)
                   WHERE cd_aerop         	= @p_cd_aerop 
                     AND cd_terminal      	= @p_cd_terminal 
                     AND dt_entrega       	= @p_dt_entrega 
                     AND cd_cia_aerea     	= @p_cd_cia_aerea 
                     AND nro_rdev         		= @p_nro_rdev 
                     AND nro_selo_inicial 	= @p_nro_selo_inicial 
                     AND nro_selo_final   	= @p_nro_selo_final ) 
          RAISERROR 20001 'Row updated by another user.'
      ELSE 
          RAISERROR 20002 'Row does not exist.'
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 




GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upwa_com]    Script Date: 01/05/2011 18:05:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upwa_com    Script Date: 19/09/2008 15:21:21 ******/


CREATE PROCEDURE [dbo].[usp_upd_upwa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rdev         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_type_cd          char(1),  
                 @p_text             varchar(255),  
                 @p_chgstamp         smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_dev_selo_line_u_comnt_u 
            ( cd_aerop, 
              cd_terminal, 
              dt_entrega, 
              cd_cia_aerea, 
              nro_rdev, 
              nro_selo_inicial, 
              nro_selo_final, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_cd_terminal, 
              @p_dt_entrega, 
              @p_cd_cia_aerea, 
              @p_nro_rdev, 
              @p_nro_selo_inicial, 
              @p_nro_selo_final, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_dev_selo_line_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop          = @p_cd_aerop 
       AND cd_terminal       = @p_cd_terminal 
       AND dt_entrega        = @p_dt_entrega 
       AND cd_cia_aerea      = @p_cd_cia_aerea 
       AND nro_rdev          = @p_nro_rdev 
       AND nro_selo_inicial  = @p_nro_selo_inicial 
       AND nro_selo_final    = @p_nro_selo_final 
       AND type_cd           = @p_type_cd  
       AND seq_nbr           = 1   
 



GO

/****** Object:  StoredProcedure [dbo].[usp_upd_upz1_com]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_upz1_com    Script Date: 19/09/2008 15:21:21 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_upz1_com] 
               ( @p_cd_aerop     char(4),  
                 @p_dt_mov_ini   datetime,  
                 @p_dt_mov_fim   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_valida_quinzena__comnt_u 
            ( cd_aerop, 
              dt_mov_ini, 
              dt_mov_fim, 
              cd_cia_aerea, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_dt_mov_ini, 
              @p_dt_mov_fim, 
              @p_cd_cia_aerea, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_valida_quinzena__comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND dt_mov_ini    = @p_dt_mov_ini 
       AND dt_mov_fim    = @p_dt_mov_fim 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uqaa]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uqaa    Script Date: 19/09/2008 15:21:21 ******/

CREATE  PROCEDURE [dbo].[usp_upd_uqaa] 
               ( @p_cd_aerop         char(4), 
                 @p_data_mov         datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_voo          char(5), 
                 @p_fl_fiscalizado   char(1), 
                 @p_user_ficalizador char(30), 
                 @p_fl_validado      char(1), 
                 @p_user_validador   char(30), 
                 @p_old_chgstamp     smallint ) 
AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
UPDATE pax_fiscal_head_u 
SET fl_fiscalizado   = @p_fl_fiscalizado, 
	user_ficalizador = @p_user_ficalizador, 
	fl_validado      = @p_fl_validado, 
	user_validador   = @p_user_validador, 
	chgstamp         = @w_new_chgstamp 
WHERE cd_aerop		= @p_cd_aerop 
AND data_mov         = @p_data_mov 
AND cd_cia_aerea     = @p_cd_cia_aerea 
AND nro_voo          = @p_nro_voo 
AND chgstamp         = @p_old_chgstamp 
 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
		FROM pax_fiscal_head_u 
		WHERE cd_aerop         = @p_cd_aerop 
		AND data_mov         = @p_data_mov 
		AND cd_cia_aerea     = @p_cd_cia_aerea 
		AND nro_voo          = @p_nro_voo ) 
		RAISERROR 20001 'Row updated by another user.' 
	ELSE 
		RAISERROR 20002 'Row does not exist.' 
	RETURN 
END 
 
exec usp_ins_uqaa_com_adc @p_cd_aerop, @p_data_mov, @p_cd_cia_aerea, @p_nro_voo

SELECT @w_new_chgstamp 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uqaa_com]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uqaa_com    Script Date: 19/09/2008 15:21:21 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_uqaa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_data_mov     datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_type_cd      char(1),  
                 @p_text         varchar(255),  
                 @p_chgstamp     smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_head_u_comnt_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_fiscal_head_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop      = @p_cd_aerop 
       AND data_mov      = @p_data_mov 
       AND cd_cia_aerea  = @p_cd_cia_aerea 
       AND nro_voo       = @p_nro_voo 
       AND type_cd       = @p_type_cd  
       AND seq_nbr       = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uqba]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uqba    Script Date: 19/09/2008 15:21:21 ******/



CREATE  PROCEDURE [dbo].[usp_upd_uqba] 
               ( @p_cd_aerop                char(4), 
                 @p_data_mov				datetime, 
                 @p_cd_cia_aerea            char(3), 
                 @p_nro_voo                 char(5), 
                 @p_numero                  int, 
                 @p_nro_voo_lista           char(5), 
                 @p_sel_lid_dom_fis         int, 
                 @p_sel_lid_dom_ele         int, 
                 @p_sel_lid_int_fis         int, 
                 @p_sel_lid_int_ele         int, 
                 @p_sel_lid_tot             int, 
                 @p_sel_conf_dom_ele        int, 
                 @p_sel_conf_int_ele        int, 
                 @p_sel_tot_fat             int, 
                 @p_tot_rpe                 int, 
                 @p_cont_bilhetes           int, 
                 @p_cont_man_voo            int, 
                 @p_cont_pax_aero           int, 
                 @p_tot_pax_ise             int, 
                 @p_fl_voo_lib_fat          char(1), 
                 @p_fl_dados_inconsistentes char(1), 
                 @p_qtd_pax_con				int,
                 @p_qtd_boa_ise_dom			int,
                 @p_qtd_boa_ise_int			int,
                 @p_qtd_boa_con_dom			int,
                 @p_qtd_boa_con_int			int,
                 @p_qtd_boa_emb_dom			int,
                 @p_qtd_boa_emb_int			int,
                 @p_qtd_man_ise_dom			int,
                 @p_qtd_man_ise_Int			int,
                 @p_qtd_man_con_dom			int,
                 @p_qtd_man_con_int			int,
                 @p_qtd_man_emb_dom			int,
                 @p_qtd_man_emb_int			int,
                 @p_qtd_man_tra_dom			int,
                 @p_qtd_man_tra_int			int,
                 @p_comentario				varchar(255),
                 @p_matricula				char(30),
                 @p_data_hora				datetime,
                 @p_old_chgstamp            smallint ) 

AS 
DECLARE @ret int 
EXEC @ret = sp_dbs_authenticate 
 
IF @ret != 0 RETURN 
 
DECLARE @w_new_chgstamp smallint 
EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
UPDATE pax_fiscal_det_u 
		SET sel_lid_dom_fis     = @p_sel_lid_dom_fis, 
		sel_lid_dom_ele         = @p_sel_lid_dom_ele, 
		sel_lid_int_fis         = @p_sel_lid_int_fis, 
		sel_lid_int_ele         = @p_sel_lid_int_ele, 
		sel_lid_tot             = @p_sel_lid_tot, 
		sel_conf_dom_ele        = @p_sel_conf_dom_ele, 
		sel_conf_int_ele        = @p_sel_conf_int_ele, 
		sel_tot_fat             = @p_sel_tot_fat, 
		tot_rpe                 = @p_tot_rpe, 
		cont_bilhetes           = @p_cont_bilhetes, 
		cont_man_voo            = @p_cont_man_voo, 
		cont_pax_aero           = @p_cont_pax_aero, 
		tot_pax_ise             = @p_tot_pax_ise, 
		fl_voo_lib_fat          = @p_fl_voo_lib_fat, 
		fl_dados_inconsistentes = @p_fl_dados_inconsistentes, 
		qtd_pax_con				= @p_qtd_pax_con,
		qtd_boa_ise_dom			= @p_qtd_boa_ise_dom,
		qtd_boa_ise_int			= @p_qtd_boa_ise_int,
		qtd_boa_con_dom			= @p_qtd_boa_con_dom,
		qtd_boa_con_int			= @p_qtd_boa_con_int,
		qtd_boa_emb_dom			= @p_qtd_boa_emb_dom,
		qtd_boa_emb_int			= @p_qtd_boa_emb_int,
		qtd_man_ise_dom			= @p_qtd_man_ise_dom,
		qtd_man_ise_Int			= @p_qtd_man_ise_Int,
		qtd_man_con_dom			= @p_qtd_man_con_dom,
		qtd_man_con_int			= @p_qtd_man_con_int,
		qtd_man_emb_dom			= @p_qtd_man_emb_dom,
		qtd_man_emb_int			= @p_qtd_man_emb_int,
		qtd_man_tra_dom			= @p_qtd_man_tra_dom,
		qtd_man_tra_int			= @p_qtd_man_tra_int,
		comentario				= @p_comentario,
		matricula				= suser_sname(),  	--@p_matricula,
		data_hora				= getdate(),		--@p_data_hora,
		chgstamp                = @w_new_chgstamp 
WHERE cd_aerop                	= @p_cd_aerop 
	AND data_mov              	= @p_data_mov
	AND cd_cia_aerea            = @p_cd_cia_aerea 
	AND nro_voo                 = @p_nro_voo 
	AND numero                  = @p_numero 
	AND nro_voo_lista           = @p_nro_voo_lista 
	AND chgstamp                = @p_old_chgstamp 

 
IF @@rowcount = 0 
BEGIN 
	IF EXISTS ( SELECT * 
	FROM pax_fiscal_det_u 
	WHERE cd_aerop              = @p_cd_aerop 
	AND data_mov              	= @p_data_mov
	AND cd_cia_aerea            = @p_cd_cia_aerea 
	AND nro_voo                 = @p_nro_voo 
	AND numero                  = @p_numero 
	AND nro_voo_lista           = @p_nro_voo_lista  )
	RAISERROR 20001 'Row updated by another user.'
ELSE 
	RAISERROR 20002 'Row does not exist.' 

	RETURN 
END 

SELECT @w_new_chgstamp 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uqba_com]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uqba_com    Script Date: 19/09/2008 15:21:22 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_uqba_com] 
               ( @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_numero        int,  
                 @p_nro_voo_lista char(5),  
                 @p_type_cd       char(1),  
                 @p_text          varchar(255),  
                 @p_chgstamp      smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_fiscal_det_u_comnt_u 
            ( cd_aerop, 
              data_mov, 
              cd_cia_aerea, 
              nro_voo, 
              numero, 
              nro_voo_lista, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_data_mov, 
              @p_cd_cia_aerea, 
              @p_nro_voo, 
              @p_numero, 
              @p_nro_voo_lista, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_fiscal_det_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop       = @p_cd_aerop 
       AND data_mov       = @p_data_mov 
       AND cd_cia_aerea   = @p_cd_cia_aerea 
       AND nro_voo        = @p_nro_voo 
       AND numero         = @p_numero 
       AND nro_voo_lista  = @p_nro_voo_lista 
       AND type_cd        = @p_type_cd  
       AND seq_nbr        = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uqca]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uqca    Script Date: 19/09/2008 15:21:22 ******/



CREATE PROCEDURE [dbo].[usp_upd_uqca] 
               ( @p_cd_aerop       char(4), 
                 @p_aurorizador_id char(30), 
                 @p_inactive_ind   char(1), 
                 @p_dt_inactive    datetime, 
                 @p_old_chgstamp   smallint ) 
AS 
  DECLARE @ret int 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  DECLARE @w_new_chgstamp smallint 
     EXEC sp_dbs_calc_chgstamp @p_old_chgstamp, @w_new_chgstamp OUTPUT 
 
  UPDATE pax_val_qui_res_u 
     SET inactive_ind   = @p_inactive_ind, 
         dt_inactive    = @p_dt_inactive, 
         chgstamp       = @w_new_chgstamp 
   WHERE cd_aerop       = @p_cd_aerop 
     AND aurorizador_id = @p_aurorizador_id 
     AND chgstamp       = @p_old_chgstamp 
 
  IF @@rowcount = 0 
  BEGIN 
      IF EXISTS ( SELECT * 
                    FROM pax_val_qui_res_u 
                   WHERE cd_aerop       = @p_cd_aerop 
                     AND aurorizador_id = @p_aurorizador_id ) 
          RAISERROR 20001 "Row updated by another user." 
      ELSE 
          RAISERROR 20002 "Row does not exist." 
      RETURN 
  END 
 
  SELECT @w_new_chgstamp 
 


GO

/****** Object:  StoredProcedure [dbo].[usp_upd_uqca_com]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_upd_uqca_com    Script Date: 19/09/2008 15:21:22 ******/

 
CREATE PROCEDURE [dbo].[usp_upd_uqca_com] 
               ( @p_cd_aerop       char(4),  
                 @p_aurorizador_id char(30),  
                 @p_type_cd        char(1),  
                 @p_text           varchar(255),  
                 @p_chgstamp       smallint ) 
AS 
  DECLARE @ret int, @w_chgstamp smallint 
     EXEC @ret = sp_dbs_authenticate 
 
  IF @ret != 0 RETURN 
 
  INSERT INTO pax_val_qui_res_u_comnt_u 
            ( cd_aerop, 
              aurorizador_id, 
              type_cd, 
              seq_nbr, 
              text, 
              chgstamp ) 
     VALUES ( @p_cd_aerop, 
              @p_aurorizador_id, 
              @p_type_cd, 
              1, 
              @p_text, 
              @p_chgstamp ) 
 
    SELECT @w_chgstamp = chgstamp 
      FROM pax_val_qui_res_u_comnt_u 
  HOLDLOCK  
     WHERE cd_aerop        = @p_cd_aerop 
       AND aurorizador_id  = @p_aurorizador_id 
       AND type_cd         = @p_type_cd  
       AND seq_nbr         = 1   
 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_up1a_com]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up1a_com    Script Date: 19/09/2008 15:21:22 ******/

 
CREATE PROCEDURE [dbo].[usp_val_up1a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_arquivo   datetime,  
                 @p_arquivo      char(255) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_conf_baixa_selo__comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_arquivo    = @p_dt_arquivo 
                  AND arquivo       = @p_arquivo 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_conf_baixa_selo__comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_arquivo    = @p_dt_arquivo 
                  AND arquivo       = @p_arquivo 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_conf_baixa_selo__comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_arquivo    = @p_dt_arquivo 
                  AND arquivo       = @p_arquivo 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_conf_baixa_selo__comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_arquivo    = @p_dt_arquivo 
                  AND arquivo       = @p_arquivo 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_up2a]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up2a    Script Date: 19/09/2008 15:21:22 ******/



CREATE PROCEDURE [dbo].[usp_val_up2a] 
		( @p_cd_aerop			char(4), 
		@p_cd_terminal			char(10), 
		@p_cd_cia_aerea			char(3), 
		@p_dt_inicio			datetime, 
		@p_date_created			datetime, 
		@p_user_id_created		char(30), 
		@p_date_changed			datetime, 
		@p_user_id_changed		char(30), 
		@p_inactive_ind			char(1), 
		@p_active_date			datetime, 
		-- Especiais
		@p_activity_id               	char(10),           		-- Código da Atividade
		@p_output                    	char(1) ,            		-- 1 faz select do codigo da mensagem-- 0 não faz deve utilizar variavel output
		@p_campo                     	char(20),            		-- Nome do campo a ser validado, ou 'todos' para validar tudo
		@p_acao                      	char(1),             		-- I Inclusão 	U Update 	D Delete 	C Consulta 	X viene del itemghanged
		@p_error_message_id          	char(10) output,     	-- Código da mensagem de erro ou 0000 se estiver tudo OK
		@p_error_complemento         	char(100) output,     	-- Complemento da mensagem
		@p_error_campo               	char(20) output   )  	--  Código do campo com erro

AS 

-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '

-- Outras Variaveis
DECLARE	@result		VARCHAR(255)

-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u  (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'utc0026'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u   (NOLOCK INDEX = P_cor_terminal_aerop_u)
    WHERE cd_aerop 		= @p_cd_aerop
      and terminal 		= @p_cd_terminal
      and inactive_ind 	= '0'

    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'utc0049'
        	,@p_error_complemento 		= ''
        	, @p_error_campo  			= 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u) WHERE cd_cia_aerea = @p_cd_cia_aerea  and inactive_ind = 0
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'utc0048'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END



TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END

IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1





GO

/****** Object:  StoredProcedure [dbo].[usp_val_up2a_com]    Script Date: 01/05/2011 18:05:47 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up2a_com    Script Date: 19/09/2008 15:21:22 ******/

 
CREATE PROCEDURE [dbo].[usp_val_up2a_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_ini_ope_selo_ele_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_ini_ope_selo_ele_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_ini_ope_selo_ele_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_ini_ope_selo_ele_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_up3a]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up3a    Script Date: 19/09/2008 15:21:23 ******/






CREATE  PROCEDURE [dbo].[usp_val_up3a] 
               ( @p_serial       char(9), 
                 @p_dependencia  char(3), 
                 @p_sigla        char(4), 
                 -- Especiais
                 @p_activity_id               	char(10),           		-- Código da Atividade
                 @p_output                    	char(1) ,            		-- 1 faz select do codigo da mensagem-- 0 não faz deve utilizar variavel output
                 @p_campo                     	char(20),            		-- Nome do campo a ser validado, ou 'todos' para validar tudo
                 @p_acao                      	char(1),             		-- I Inclusão 	U Update 	D Delete 	C Consulta 	X viene del itemghanged
                 @p_error_message_id          	char(10) output,     	-- Código da mensagem de erro ou 0000 se estiver tudo OK
                 @p_error_complemento         	char(100) output,     	-- Complemento da mensagem
                 @p_error_campo               	char(20) output   )  	--  Código do campo com erro
                
AS 

-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '

-- Outras Variaveis
DECLARE	@result		VARCHAR(255)

-- ------------------------------------------------------------------------
-- VALIDAR SIGLA
IF @p_campo = 'sigla' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u  (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_sigla
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'upa9929'
        SELECT @p_error_complemento 	= ''
        SELECT @p_error_campo  			= 'sigla'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        SELECT @p_error_complemento 	= @result
        SELECT @p_error_campo  			= 'sigla'
        IF @p_acao = 'X' GOTO TERMINA
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR DEPENDENCIA
IF @p_campo = 'dependencia' OR @p_campo = 'todos'
BEGIN
	
    SELECT @result = dependencia_descp FROM GEACrpt..infra_dependencias (nolock) WHERE dependencia = @p_dependencia
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'upa9929'
        SELECT @p_error_complemento 	= ''
        SELECT @p_error_campo  			= 'dependencia'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        SELECT @p_error_complemento 	= @result
        SELECT @p_error_campo  			= 'dependencia'
        IF @p_acao = 'X' GOTO TERMINA
    END
END


TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END

IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1









GO

/****** Object:  StoredProcedure [dbo].[usp_val_up3a_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up3a_com    Script Date: 19/09/2008 15:21:23 ******/

 
CREATE PROCEDURE [dbo].[usp_val_up3a_com] 
               ( @p_serial   char(9) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_coletor_u_comnt_u 
                WHERE serial    = @p_serial 
                  AND type_cd   = "A"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_coletor_u_comnt_u 
                WHERE serial    = @p_serial 
                  AND type_cd   = "I"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_coletor_u_comnt_u 
                WHERE serial    = @p_serial 
                  AND type_cd   = "E"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_coletor_u_comnt_u 
                WHERE serial    = @p_serial 
                  AND type_cd   = "D"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_up6a]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up6a    Script Date: 19/09/2008 15:21:23 ******/


CREATE    PROCEDURE [dbo].[usp_val_up6a] 
				( @p_tp_unid			char(1), 
				@p_cd_aerop				char(4), 
				@p_cd_terminal			char(10), 
				@p_tp_unid_destino		char(1), 
				@p_cd_aerop_destino		char(4), 
				@p_cd_terminal_destino	char(10), 
				@p_dt_devolucao			datetime, 
				@p_nro_selo_inicial		char(10), 
				@p_nro_selo_final		char(10), 
				@p_motivo_dev			varchar(255), 
				@p_dt_confirma			datetime,
				@p_oper_confirma		char(15),
				@p_qtd_selos			float,
				@p_date_created			datetime, 
				@p_user_id_created		char(30), 
				@p_date_changed			datetime, 
				@p_user_id_changed		char(30), 
				@p_inactive_ind			char(1), 
				@p_active_date			datetime, 
				-- Especiais
				@p_activity_id               	char(10),           		-- Código da Atividade
				@p_output                    	char(1) ,            		-- 1 faz select do codigo da mensagem-- 0 não faz deve utilizar variavel output
				@p_campo                     	char(20),            		-- Nome do campo a ser validado, ou 'todos' para validar tudo
				@p_acao                      	char(1),             		-- I Inclusão 	U Update 	D Delete 	C Consulta 	X viene del itemghanged
				@p_error_message_id          	char(10) output,     	-- Código da mensagem de erro ou 0000 se estiver tudo OK
				@p_error_complemento         	char(100) output,     	-- Complemento da mensagem
				@p_error_campo               	char(20) output   )  	--  Código do campo com erro
                
AS 

-- Iniciando Variaveis de Retorno
select  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '

-- Outras Variaveis
DECLARE	@hor		varchar(2)
		,@min		varchar(2)
		,@seg		varchar(2)
		,@result	varchar(255)
		,@selo_ini	numeric
		,@selo_fin	numeric
		,@qtd		integer

-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
	if @p_tp_unid = '' or @p_tp_unid is null 
	begin
        select @p_error_message_id 		= 'upa9069'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'cd_aerop'
        goto  TERMINA 
	end
	else
	begin
		if @p_tp_unid = 'A'
		begin
		    select @result = no_aerop FROM GEACutcx..cor_aeroporto_u  (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
		    IF  @result = '' OR @result IS NULL
		    BEGIN
		        select @p_error_message_id 		= 'utc0026'
		        	,@p_error_complemento 		= ''
		        	,@p_error_campo  			= 'cd_aerop'
		        goto  TERMINA 
		    END 
		    ELSE
		    BEGIN
		        select @p_error_message_id 		= '0000'
		        	,@p_error_complemento 		= @result
		        	,@p_error_campo  			= 'cd_aerop'
		        IF @p_acao = 'X' goto TERMINA
		    END
		end 
		else
		begin
			if @p_tp_unid = 'X'
			begin
				select @result = no_almox from GEACutcx..cor_almoxarife_u (nolock index = P_cor_almoxarife_u ) where cd_almox = @p_cd_aerop
			    IF  @result = '' OR @result IS NULL
			    BEGIN
			        select @p_error_message_id 		= 'upa9003'
			        	,@p_error_complemento 		= ''
			        	,@p_error_campo  			= 'cd_aerop'
			        goto  TERMINA 
			    END 
			    ELSE
			    BEGIN
			        select @p_error_message_id 		= '0000'
			        	,@p_error_complemento 		= @result
			        	,@p_error_campo  			= 'cd_aerop'
			        IF @p_acao = 'X' goto TERMINA
			    END
			end
		end
	end 		
END


-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
	if @p_tp_unid = 'A'
	begin
	    select @result = terminal 
	    FROM GEACutcx..cor_terminal_aerop_u   (NOLOCK INDEX = P_cor_terminal_aerop_u)
	    WHERE cd_aerop 		= @p_cd_aerop
	      and terminal 		= @p_cd_terminal
	      and inactive_ind 	= '0'
	
	    IF  @result = '' OR @result IS NULL
	    BEGIN
	        select @p_error_message_id 		= 'utc0049'
	        	,@p_error_complemento 		= ''
	        	,@p_error_campo  			= 'cd_termina'
	        goto  TERMINA 
	    END 
	    ELSE
	    BEGIN
	        select @p_error_message_id 		= '0000'
	        	,@p_error_complemento 		= @result
	        	,@p_error_campo  			= 'cd_termina'
	        IF @p_acao = 'X' goto TERMINA
	    END
	end
	else
	begin
	    select @result = cd_terminal 
	    FROM GEACutcx..cor_almoxarife_u   (NOLOCK INDEX = P_cor_almoxarife_u)
	    WHERE cd_almox 			= @p_cd_aerop
	      and cd_terminal 		= @p_cd_terminal
	      and inactive_ind 		= '0'
	
	    IF  @result = '' OR @result IS NULL
	    BEGIN
	        select @p_error_message_id 		= 'utc0049'
	        	,@p_error_complemento 		= ''
	        	,@p_error_campo  			= 'cd_terminal'
	        goto  TERMINA 
	    END 
	    ELSE
	    BEGIN
	        select @p_error_message_id 		= '0000'
	        	,@p_error_complemento 		= @result
	        	,@p_error_campo  			= 'cd_terminal'
	        IF @p_acao = 'X' goto TERMINA
	    END
	end 
END 

-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO DESTINO
IF @p_campo = 'cd_aerop_destino' OR @p_campo = 'todos'
BEGIN
	if @p_tp_unid_destino = '' or @p_tp_unid is null 
	begin
        select @p_error_message_id 		= 'upa0108'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'cd_aerop_destino'
        goto  TERMINA 
	end
	else
	begin
		if @p_tp_unid_destino = 'A'
		begin
		    select @result = no_aerop FROM GEACutcx..cor_aeroporto_u  (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop_destino
		    IF  @result = '' OR @result IS NULL
		    BEGIN
		        select @p_error_message_id 		= 'utc0026'
		        	,@p_error_complemento 		= ''
		        	,@p_error_campo  			= 'cd_aerop_destino'
		        goto  TERMINA 
		    END 
		    ELSE
		    BEGIN
		        select @p_error_message_id 		= '0000'
		        	,@p_error_complemento 		= @result
		        	,@p_error_campo  			= 'cd_aerop_destino'
		        IF @p_acao = 'X' goto TERMINA
		    END
		end 
		else
		begin
			if @p_tp_unid_destino = 'X'
			begin
				select @result = no_almox from GEACutcx..cor_almoxarife_u (nolock index = P_cor_almoxarife_u )	where cd_almox = @p_cd_aerop_destino
			    IF  @result = '' OR @result IS NULL
			    BEGIN
			        select @p_error_message_id 		= 'upa9003'
			        	,@p_error_complemento 		= ''
			        	,@p_error_campo  			= 'cd_aerop_destino'
			        goto  TERMINA 
			    END 
			    ELSE
			    BEGIN
			        select @p_error_message_id 		= '0000'
			        	,@p_error_complemento 		= @result
			        	,@p_error_campo  			= 'cd_aerop_destino'
			        IF @p_acao = 'X' goto TERMINA
			    END
			end
		end
	end 		
END


-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL DESTINO
IF @p_campo = 'cd_terminal_destino' OR @p_campo = 'todos'
BEGIN
	if @p_tp_unid_destino = 'A'
	begin
	    select @result = terminal 
	    FROM GEACutcx..cor_terminal_aerop_u   (NOLOCK INDEX = P_cor_terminal_aerop_u)
	    WHERE cd_aerop 		= @p_cd_aerop_destino
	      and terminal 		= @p_cd_terminal_destino
	      and inactive_ind 	= '0'
	
	    IF  @result = '' OR @result IS NULL
	    BEGIN
	        select @p_error_message_id 		= 'utc0049'
	        	,@p_error_complemento 		= ''
	        	,@p_error_campo  			= 'cd_terminal_destino'
	        goto  TERMINA 
	    END 
	    ELSE
	    BEGIN
	        select @p_error_message_id 		= '0000'
	        	,@p_error_complemento 		= @result
	        	,@p_error_campo  			= 'cd_terminal_destino'
	        IF @p_acao = 'X' goto TERMINA
	    END
	end
	else
	begin
	    select @result = cd_terminal 
	    FROM GEACutcx..cor_almoxarife_u   (NOLOCK INDEX = P_cor_almoxarife_u)
	    WHERE cd_almox 			= @p_cd_aerop_destino
	      and cd_terminal 		= @p_cd_terminal_destino
	      and inactive_ind 		= '0'
	
	    IF  @result = '' OR @result IS NULL
	    BEGIN
	        select @p_error_message_id 		= 'utc0049'
	        	,@p_error_complemento 		= ''
	        	,@p_error_campo  			= 'cd_terminal_destino'
	        goto  TERMINA 
	    END 
	    ELSE
	    BEGIN
	        select @p_error_message_id 		= '0000'
	        	,@p_error_complemento 		= @result
	        	,@p_error_campo  			= 'cd_terminal_destino'
	        IF @p_acao = 'X' goto TERMINA
	    END
	end 
END 


-- ------------------------------------------------------------------------
-- VALIDAR dt_devolucao
IF @p_campo = 'dt_devolucao' OR @p_campo = 'todos'
BEGIN

    IF @p_dt_devolucao > GETDATE()
    BEGIN
        select @p_error_message_id 		= 'upa9010'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'dt_devolucao'
        goto  TERMINA 
    END
END



-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_INICIAL
IF @p_campo = 'nro_selo_inicial' OR @p_campo = 'todos'
BEGIN
    IF SUBSTRING(@p_nro_selo_inicial, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_inicial) <> 9
    BEGIN
        select @p_error_message_id 		= 'upa9006'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'nro_selo_inicial'
        goto  TERMINA 
    END
END 

-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_FINAL
IF @p_campo = 'nro_selo_final' OR @p_campo = 'todos'
BEGIN
    IF SUBSTRING(@p_nro_selo_final, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_final) <> 9
    BEGIN
        select @p_error_message_id 		= 'upa9006'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'nro_selo_final'
        goto  TERMINA 
    END

    IF SUBSTRING(@p_nro_selo_final, 1, 2) <> SUBSTRING(@p_nro_selo_inicial, 1, 2)
    BEGIN
        select @p_error_message_id 		= 'upa9007'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'nro_selo_final'
        goto  TERMINA 
    END


    select @selo_ini 	= CONVERT(numeric, SUBSTRING(@p_nro_selo_inicial, 3, 8))
    	,@selo_fin		= CONVERT(numeric, SUBSTRING(@p_nro_selo_final, 3, 8 ))

    IF @selo_ini > @selo_fin
    BEGIN
        select @p_error_message_id 		= 'upa9037'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'nro_selo_final'
        goto  TERMINA 
    END
END

if @p_campo = 'todos' and @p_acao = 'I'
begin
	select @qtd = count(1) from GEACupax..pax_selo_u (nolock index = P_pax_selo_u)	
	where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
	and selo_status <> '0'

	if @qtd <> 0
	begin
        select @p_error_message_id 		= 'upa9108'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'todos'
        goto  TERMINA 
	end

	select @qtd = count(1) from GEACupax..pax_selo_u (nolock index = P_pax_selo_u)	
	where nro_selo between @p_nro_selo_inicial and @p_nro_selo_final
	and billing_line_id <> 0

	if @qtd <> 0
	begin
        select @p_error_message_id 		= 'upa9109'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'todos'
        goto  TERMINA 
	end
end

TERMINA:
IF @p_output = '1'
BEGIN
    select @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END

IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1





GO

/****** Object:  StoredProcedure [dbo].[usp_val_up6a_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up6a_com    Script Date: 19/09/2008 15:21:23 ******/



CREATE PROCEDURE [dbo].[usp_val_up6a_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_devolucao        datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_remesa_dev_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_devolucao         = @p_dt_devolucao 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "A"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_remesa_dev_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_devolucao         = @p_dt_devolucao 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "I"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_remesa_dev_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_devolucao         = @p_dt_devolucao 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "E"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_remesa_dev_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_devolucao         = @p_dt_devolucao 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "D"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 


GO

/****** Object:  StoredProcedure [dbo].[usp_val_up7a]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up7a    Script Date: 19/09/2008 15:21:24 ******/

CREATE PROCEDURE [dbo].[usp_val_up7a] 
		( @p_cd_cia_aerea				char(3), 
		@p_dt_inicio					datetime, 
		@p_dt_final						datetime, 
		@p_valor						float, 
		@p_justificativa				varchar(500), 
		@p_processado					char(1), 
		@p_dt_processamento				datetime, 
		@p_nu_boleto_ss					int, 
		@p_inactive_ind					char(1), 
		@p_data_desativacao				datetime, 
		@p_tp_natureza					char(1),
        -- Especiais
        @p_activity_id                	char(10),             -- Código da Atividade
        @p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
        @p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
        @p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
        @p_error_message_id           	char(10)  	output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
        @p_error_complemento          	char(100)  	output,   -- Complemento da mensagem
        @p_error_campo                	char(20)  	output)   --  Código do campo com erro

AS 
-- Iniciando Variaveis de Retorno
select  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
declare @result  			varchar(255)
        ,@v_cd_cia_num		char(2)
        ,@v_cd_cia_aerea	char(3)

-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
if @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
begin
    select @result = no_cia_aerea 
    from GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u)  
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
     and inactive_ind   = '0'
    if  @result = '' OR @result IS NULL
    begin
        select @p_error_message_id   	= 'utc0074'
        select @p_error_complemento   	= ''
        select @p_error_campo     		= 'cd_cia_aerea'
        goto  TERMINA 
    end 
    else
    begin
        select @p_error_message_id   	= '0000'
        select @p_error_complemento   	= @result
        select @p_error_campo     		= 'cd_cia_aerea'
        if @p_acao = 'X' goto TERMINA
    end
end 

-- ------------------------------------------------------------------------
-- Validar todos los campos para gravar
if @p_campo = 'todos'
begin
	if ltrim(rtrim(@p_justificativa)) = ''
	begin
        select @p_error_message_id   	= 'upaXXYY'
        	,@p_error_complemento   	= ''
        	,@p_error_campo     		= 'justificativa'
        goto  TERMINA 
	end
	
	if @p_valor <= 0
	begin
        select @p_error_message_id   	= 'upaXXYY'
        	,@p_error_complemento   	= ''
        	,@p_error_campo     		= 'valor'
        goto  TERMINA 
	end
 

end



TERMINA:
if @p_output = '1'
begin
    select @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
end
if  @p_error_message_id = '0000'
    return 0
else
    return 1








GO

/****** Object:  StoredProcedure [dbo].[usp_val_up7a_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_up7a_com    Script Date: 19/09/2008 15:21:24 ******/



CREATE PROCEDURE [dbo].[usp_val_up7a_com] 
               ( @p_cd_cia_aerea char(3),  
                 @p_dt_inicio    datetime,  
                 @p_dt_final     datetime ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_cred_cia_u_comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_inicio     = @p_dt_inicio 
                  AND dt_final      = @p_dt_final 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_cred_cia_u_comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_inicio     = @p_dt_inicio 
                  AND dt_final      = @p_dt_final 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_cred_cia_u_comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_inicio     = @p_dt_inicio 
                  AND dt_final      = @p_dt_final 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_cred_cia_u_comnt_u 
                WHERE cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_inicio     = @p_dt_inicio 
                  AND dt_final      = @p_dt_final 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 


GO

/****** Object:  StoredProcedure [dbo].[usp_val_upaa_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upaa_com    Script Date: 19/09/2008 15:21:24 ******/


CREATE PROCEDURE [dbo].[usp_val_upaa_com] 
               ( @p_nro_selo char(10) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_u_comnt_u 
                WHERE nro_selo  = @p_nro_selo 
                  AND type_cd   = "A"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_u_comnt_u 
                WHERE nro_selo  = @p_nro_selo 
                  AND type_cd   = "I"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_u_comnt_u 
                WHERE nro_selo  = @p_nro_selo 
                  AND type_cd   = "E"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_u_comnt_u 
                WHERE nro_selo  = @p_nro_selo 
                  AND type_cd   = "D"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upca_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upca_com    Script Date: 19/09/2008 15:21:24 ******/


CREATE PROCEDURE [dbo].[usp_val_upca_com] 
               ( @p_tp_unid             char(1),  
                 @p_cd_aerop            char(4),  
                 @p_cd_terminal         char(10),  
                 @p_tp_unid_destino     char(1),  
                 @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_remessa          datetime,  
                 @p_nro_selo_inicial    char(10),  
                 @p_nro_selo_final      char(10) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_lote_selo_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_remessa           = @p_dt_remessa 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "A"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_lote_selo_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_remessa           = @p_dt_remessa 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "I"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_lote_selo_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_remessa           = @p_dt_remessa 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "E"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_lote_selo_u_comnt_u 
                WHERE tp_unid              = @p_tp_unid 
                  AND cd_aerop             = @p_cd_aerop 
                  AND cd_terminal          = @p_cd_terminal 
                  AND tp_unid_destino      = @p_tp_unid_destino 
                  AND cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_remessa           = @p_dt_remessa 
                  AND nro_selo_inicial     = @p_nro_selo_inicial 
                  AND nro_selo_final       = @p_nro_selo_final 
                  AND type_cd              = "D"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upea]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upea    Script Date: 19/09/2008 15:21:24 ******/




CREATE  PROCEDURE [dbo].[usp_val_upea] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_dt_mov          	datetime, 
                 @p_hh_mm           	char(6), 
                 @p_tp_selo           	char(1), 
                 @p_selo_status     	char(1), 
                 @p_arquivo         	char(255), 
                 @p_cd_motivo       	char(2), 
                 @p_qtd_selos       	FLOAT, 
                 @p_tp_coletor      	char(16), 
                 @p_tp_baixa        	char(1), 
                 @p_status_arq      	char(1), 
                 @p_qtd_lineas_arq		FLOAT, 
                 @p_qtd_discrepancias 	FLOAT, 
                 @p_qtd_lineas_erro      FLOAT, 
                 @p_qtd_discrepancias_tra	FLOAT,
                 @p_qtd_duplicados			FLOAT,
                 @p_date_created    	datetime, 
                 @p_user_id_created 	char(30), 
                 @p_date_changed    	datetime, 
                 @p_user_id_changed 	char(30), 
                 @p_inactive_ind    	char(1), 
                 @p_active_date     	datetime, 
                 -- Especiais
                 @p_activity_id               	char(10),           		-- Código da Atividade
                 @p_output                    	char(1) ,            		-- 1 faz select do codigo da mensagem-- 0 não faz deve utilizar variavel output
                 @p_campo                     	char(20),            		-- Nome do campo a ser validado, ou 'todos' para validar tudo
                 @p_acao                      	char(1),             		-- I Inclusão 	U Update 	D Delete 	C Consulta 	X viene del itemghanged
                 @p_error_message_id          	char(10) output,     	-- Código da mensagem de erro ou 0000 se estiver tudo OK
                 @p_error_complemento         	char(100) output,     	-- Complemento da mensagem
                 @p_error_campo               	char(20) output   )  	--  Código do campo com erro
                
AS 

-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '

-- Outras Variaveis
DECLARE	@hor		VARCHAR(2)
		,@min		VARCHAR(2)
		,@seg		VARCHAR(2)
		,@result		VARCHAR(255)
		,@selo_ini	NUMERIC
		,@selo_fin	NUMERIC

-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u  (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'utc0026'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        SELECT @p_error_complemento 		= @result
        SELECT @p_error_campo  			= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END


-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u   (NOLOCK INDEX = P_cor_terminal_aerop_u)
    WHERE cd_aerop 	= @p_cd_aerop
      and terminal 		= @p_cd_terminal
      and inactive_ind 	= '0'

    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'utc0049'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        SELECT @p_error_complemento 		= @result
        SELECT @p_error_campo  			= 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 


-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN

    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id 		= 'upa9010'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'dt_mov'
        GOTO  TERMINA 
    END
END


-- ------------------------------------------------------------------------
-- VALIDAR HORA
IF @p_campo = 'hh_mm' OR @p_campo = 'todos'
BEGIN
    SELECT @hor 	= LTRIM(RTRIM(SUBSTRING(@p_hh_mm, 1,2)))
    SELECT @min 	= LTRIM(RTRIM(SUBSTRING(@p_hh_mm, 3,2)))
    SELECT @seg 	= LTRIM(RTRIM(SUBSTRING(@p_hh_mm, 5,2)))
    IF CONVERT(INT, @hor) < 0 OR CONVERT(INT, @hor) > 23 OR @hor =''
    BEGIN
        SELECT @p_error_message_id 		= 'upa9034'
        SELECT @p_error_complemento 		= STR(@hor)
        SELECT @p_error_campo  			= 'hh_mm'
        GOTO  TERMINA 
    END
    IF CONVERT(INT, @min) < 0 OR CONVERT(INT, @min) > 59  OR @min =''
    BEGIN
        SELECT @p_error_message_id 		= 'upa9035'
        SELECT @p_error_complemento 		= STR(@min)
        SELECT @p_error_campo  			= 'hh_mm'
        GOTO  TERMINA 
    END
    IF CONVERT(INT, @seg) < 0 OR CONVERT(INT, @seg) > 59 OR @seg =''
    BEGIN
        SELECT @p_error_message_id 		= 'upa9036'
        SELECT @p_error_complemento 		= STR(@seg)
        SELECT @p_error_campo  			= 'hh_mm'
        GOTO  TERMINA 
    END
END

/*
-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_INICIAL
IF @p_campo = 'nro_selo_inicial' OR @p_campo = 'todos'
BEGIN
    IF SUBSTRING(@p_nro_selo_inicial, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_inicial) <> 10
    BEGIN
        SELECT @p_error_message_id 		= 'upa9006'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_inicial'
        GOTO  TERMINA 
    END

    IF UPPER(SUBSTRING(@p_nro_selo_inicial, 2,1)) NOT IN('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z')
    BEGIN
        SELECT @p_error_message_id 		= 'upa9025'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_inicial'
        GOTO  TERMINA 
    END

END 

-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_FINAL
IF @p_campo = 'nro_selo_final' OR @p_campo = 'todos'
BEGIN
    IF SUBSTRING(@p_nro_selo_final, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_final) <> 10
    BEGIN
        SELECT @p_error_message_id 		= 'upa9006'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_final'
        GOTO  TERMINA 
    END

    IF SUBSTRING(@p_nro_selo_final, 1, 2) <> SUBSTRING(@p_nro_selo_inicial, 1, 2)
    BEGIN
        SELECT @p_error_message_id 		= 'upa9007'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_final'
        GOTO  TERMINA 
    END

    IF UPPER(SUBSTRING(@p_nro_selo_final, 2,1)) NOT IN('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z')
    BEGIN
        SELECT @p_error_message_id 		= 'upa9026'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_final'
        GOTO  TERMINA 
    END

    SELECT @selo_ini 	= CONVERT(NUMERIC, SUBSTRING(@p_nro_selo_inicial, 3, 8))
    SELECT @selo_fin	= CONVERT(NUMERIC, SUBSTRING(@p_nro_selo_final, 3, 8 ))

    IF @selo_ini > @selo_fin
    BEGIN
        SELECT @p_error_message_id 		= 'upa9037'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_final'
        GOTO  TERMINA 
    END

    IF @selo_fin - @selo_ini > 1000
    BEGIN
        SELECT @p_error_message_id 		= 'upa9017'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'nro_selo_final'
        GOTO  TERMINA 
    END

END

*/
-- ------------------------------------------------------------------------
-- VALIDAR CD_MOTIVO
IF @p_campo = 'cd_motivo' OR @p_campo = 'todos'
BEGIN
    IF @p_selo_status <> '4' AND @p_cd_motivo <> 'NA'
    BEGIN
        SELECT @p_error_message_id 		= 'uar0009'
        SELECT @p_error_complemento 		= 'Motivo deve ser NA, pois não é cancelamento'
        SELECT @p_error_campo  			= 'cd_motivo'
        GOTO  TERMINA 
    END

    IF @p_selo_status = '4' AND @p_cd_motivo = 'NA'
    BEGIN
        SELECT @p_error_message_id 		= 'uar0009'
        SELECT @p_error_complemento 		= 'Motivo não pode ser NA, pois é cancelamento'
        SELECT @p_error_campo  			= 'cd_motivo'
        GOTO  TERMINA 
    END

    IF @p_selo_status = '4' AND LTRIM(RTRIM(@p_cd_motivo)) = ''
    BEGIN
        SELECT @p_error_message_id 		= 'upa9018'
        SELECT @p_error_complemento 		= ''
        SELECT @p_error_campo  			= 'cd_motivo'
        GOTO  TERMINA 
    END

END 



TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END

IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1







GO

/****** Object:  StoredProcedure [dbo].[usp_val_upea_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_val_upea_com    Script Date: 19/09/2008 15:21:25 ******/




CREATE PROCEDURE [dbo].[usp_val_upea_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),
	   @p_tp_selo 	   char (1) )
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selo_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
	    AND tp_selo = @p_tp_selo 
                  AND type_cd      = 'A'  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + 'A'  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selo_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
	    AND tp_selo = @p_tp_selo 
                  AND type_cd      = 'I'  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + 'I'  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selo_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
	    AND tp_selo = @p_tp_selo 
                  AND type_cd      = 'E'  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + 'E'  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selo_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
	    AND tp_selo = @p_tp_selo 
                  AND type_cd      = 'D'  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + 'D'  
 
  SELECT @w_exists



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upga_com]    Script Date: 01/05/2011 18:05:48 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upga_com    Script Date: 19/09/2008 15:21:25 ******/



CREATE PROCEDURE [dbo].[usp_val_upga_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_hh_entrega   char(6),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rste     char(6) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_ctr_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND hh_entrega    = @p_hh_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rste      = @p_nro_rste 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_ctr_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND hh_entrega    = @p_hh_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rste      = @p_nro_rste 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_ctr_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND hh_entrega    = @p_hh_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rste      = @p_nro_rste 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_ctr_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND hh_entrega    = @p_hh_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rste      = @p_nro_rste 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 


GO

/****** Object:  StoredProcedure [dbo].[usp_val_upha_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upha_com    Script Date: 19/09/2008 15:21:25 ******/


CREATE PROCEDURE [dbo].[usp_val_upha_com] 
               ( @p_cd_aerop_destino    char(4),  
                 @p_cd_terminal_destino char(10),  
                 @p_dt_mov              datetime,  
                 @p_selo_status         char(1),  
                 @p_nro_selo            char(10) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_discrep_selo_u_comnt_u 
                WHERE cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_mov               = @p_dt_mov 
                  AND selo_status          = @p_selo_status 
                  AND nro_selo             = @p_nro_selo 
                  AND type_cd              = "A"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_discrep_selo_u_comnt_u 
                WHERE cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_mov               = @p_dt_mov 
                  AND selo_status          = @p_selo_status 
                  AND nro_selo             = @p_nro_selo 
                  AND type_cd              = "I"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_discrep_selo_u_comnt_u 
                WHERE cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_mov               = @p_dt_mov 
                  AND selo_status          = @p_selo_status 
                  AND nro_selo             = @p_nro_selo 
                  AND type_cd              = "E"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_discrep_selo_u_comnt_u 
                WHERE cd_aerop_destino     = @p_cd_aerop_destino 
                  AND cd_terminal_destino  = @p_cd_terminal_destino 
                  AND dt_mov               = @p_dt_mov 
                  AND selo_status          = @p_selo_status 
                  AND nro_selo             = @p_nro_selo 
                  AND type_cd              = "D"  
                  AND seq_nbr              = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upia_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upia_com    Script Date: 19/09/2008 15:21:25 ******/


CREATE PROCEDURE [dbo].[usp_val_upia_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_nro_voo      char(5) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_desemb_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_desemb_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_desemb_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_desemb_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upj3_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upj3_com    Script Date: 19/09/2008 15:21:26 ******/


CREATE PROCEDURE [dbo].[usp_val_upj3_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_embarque  datetime ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upj4_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upj4_com    Script Date: 19/09/2008 15:21:26 ******/


CREATE PROCEDURE [dbo].[usp_val_upj4_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_tp_natureza  char(1),  
                 @p_periodo_de   datetime,  
                 @p_periodo_ate  datetime,  
                 @p_dt_embarque  datetime ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND tp_natureza   = @p_tp_natureza 
                  AND periodo_de    = @p_periodo_de 
                  AND periodo_ate   = @p_periodo_ate 
                  AND dt_embarque   = @p_dt_embarque 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upja_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upja_com    Script Date: 19/09/2008 15:21:26 ******/


CREATE PROCEDURE [dbo].[usp_val_upja_com] 
               ( @p_cd_aerop char(4) 
            ,@p_cd_terminal  char(10)
            ,@p_cd_cia_aerea char(3)
            ,@p_tp_natureza  char(1)
            ,@p_periodo_de   datetime
            ,@p_periodo_ate  datetime
            ,@p_dt_embarque  datetime) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
      and cd_terminal  = @p_cd_terminal 
              and cd_cia_aerea = @p_cd_cia_aerea
              and tp_natureza  = @p_tp_natureza  
              and periodo_de   = @p_periodo_de  
              and periodo_ate  = @p_periodo_ate
              and dt_embarque  = @p_dt_embarque 
                  AND type_cd   = "A"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop  = @p_cd_aerop 
      and cd_terminal  = @p_cd_terminal 
              and cd_cia_aerea = @p_cd_cia_aerea
              and tp_natureza  = @p_tp_natureza  
              and periodo_de   = @p_periodo_de  
              and periodo_ate  = @p_periodo_ate
              and dt_embarque  = @p_dt_embarque  
                 AND type_cd   = "I"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop  = @p_cd_aerop 
      and cd_terminal  = @p_cd_terminal 
              and cd_cia_aerea = @p_cd_cia_aerea
              and tp_natureza  = @p_tp_natureza  
              and periodo_de   = @p_periodo_de  
              and periodo_ate  = @p_periodo_ate
              and dt_embarque  = @p_dt_embarque  
                 AND type_cd   = "E"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_dia_u_comnt_u 
                WHERE cd_aerop  = @p_cd_aerop 
      and cd_terminal  = @p_cd_terminal 
              and cd_cia_aerea = @p_cd_cia_aerea
              and tp_natureza  = @p_tp_natureza  
              and periodo_de   = @p_periodo_de  
              and periodo_ate  = @p_periodo_ate
              and dt_embarque  = @p_dt_embarque 
                  AND type_cd   = "D"  
                  AND seq_nbr   = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upka]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upka    Script Date: 19/09/2008 15:21:27 ******/

CREATE PROCEDURE [dbo].[usp_val_upka] 
               ( @p_cd_aerop        	char(4), 
                 @p_cd_terminal     	char(10), 
                 @p_dt_entrega      	datetime, 
                 @p_cd_cia_aerea    	char(3), 
                 @p_nro_rdev        	char(6), 
                 @p_arquivo         	char(255), 
                 @p_date_created    	datetime, 
                 @p_user_id_created 	char(30), 
                 @p_date_changed    	datetime, 
                 @p_user_id_changed 	char(30), 
                 @p_inactive_ind    	char(1), 
                 @p_active_date     	datetime, 
                 -- Especiais
                 @p_activity_id                	char(10),             -- Código da Atividade
                 @p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
                 @p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
                 @p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
                 @p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
                 @p_error_complemento          	char(100)  output,   -- Complemento da mensagem
                 @p_error_campo                	char(20)  output)   --  Código do campo com erro
                
AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  VARCHAR(255)
  ,@selo_ini NUMERIC
  ,@selo_fin NUMERIC
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0026'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  	= @p_cd_aerop
      and terminal   	= @p_cd_terminal
      and inactive_ind  	= '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0049'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_entrega' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_entrega > GETDATE()
    BEGIN
        SELECT @p_error_message_id   = 'upa9010'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'dt_entrega'
        GOTO  TERMINA 
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u)  
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
      and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL

    BEGIN
        SELECT @p_error_message_id   = 'utc0074'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upka_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upka_com    Script Date: 19/09/2008 15:21:27 ******/


CREATE PROCEDURE [dbo].[usp_val_upka_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_dt_entrega   datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_rdev     char(6) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_ctrl_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rdev      = @p_nro_rdev 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_ctrl_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rdev      = @p_nro_rdev 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_ctrl_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rdev      = @p_nro_rdev 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_ctrl_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND dt_entrega    = @p_dt_entrega 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_rdev      = @p_nro_rdev 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upla]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_val_upla    Script Date: 19/09/2008 15:21:28 ******/


CREATE          PROCEDURE [dbo].[usp_val_upla] 
    ( @p_cd_aerop               char(4), 
    @p_cd_terminal            char(10), 
    @p_dt_mov                 datetime, 
    @p_nro_selo_electronico   char(14), 
    @p_tp_natureza            char(1), 
    @p_selo_status            char(1), 
    @p_cd_motivo              char(2), 
    @p_tp_fat                 char(1), 
    @p_cd_cia_aerea           char(3), 
    @p_tp_unid                char(1), 
    @p_dt_confirma            datetime, 
    @p_cd_aerop_utilizacao    char(4), 
    @p_cd_terminal_utilizacao char(10), 
    @p_tp_coletor             char(16), 
    @p_item_fat               char(26), 
    @p_billing_line_id        int, 
    @p_billing_int_date       datetime, 
    @p_billing_int_type       char(1), 
    @p_billing_user_1         char(10), 
    @p_voo_rea					char(4), 					
    @p_dt_voo_rea				datetime,
    @p_hh_voo_rea				char(6),
	@p_hh_mov 					char(6),
    @p_date_created           datetime, 
    @p_user_id_created        char(30), 
    @p_date_changed           datetime, 
    @p_user_id_changed        char(30), 
    @p_inactive_ind           char(1), 
    @p_active_date            datetime, 
    -- Especiais
    @p_activity_id                	char(10),             -- Código da Atividade
    @p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
    @p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
    @p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
    @p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
    @p_error_complemento          	char(100)  output,   -- Complemento da mensagem
    @p_error_campo                	char(20)  output)   --  Código do campo com erro

AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  			VARCHAR(255)
        ,@v_cd_cia_num		CHAR(2)
        ,@v_cd_cia_aerea	CHAR(3)
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0026'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  	= @p_cd_aerop
      and terminal   	= @p_cd_terminal
      and inactive_ind  	= '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0049'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
            
        SELECT @p_error_campo     		= 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
if @p_acao = 'I' or @p_acao = 'U'
begin
	IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
	BEGIN
		IF @p_dt_mov > GETDATE()
		BEGIN
			SELECT @p_error_message_id   	= 'upa9010'
			SELECT @p_error_complemento   	= ''
			SELECT @p_error_campo     		= 'dt_mov'
			GOTO  TERMINA 
		END
	END
end
-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_ELECTRONICO
IF @p_campo = 'nro_selo_electronico' OR @p_campo = 'todos'
BEGIN
    IF LEN(@p_nro_selo_electronico) <> 10 and LEN(@p_nro_selo_electronico) <> 14
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto por 10 dígitos ou 14 dígitos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF ISNUMERIC(@p_nro_selo_electronico) = 0
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto só por dígitos numéricos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF SUBSTRING(@p_nro_selo_electronico, 1,1) NOT IN ('0', '1')
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O primeiro dígito do número de Selo deve ser [0] para Doméstico ou [1] para Internacional.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END

    SET @v_cd_cia_num = SUBSTRING(@p_nro_selo_electronico, 2,2)	
    SELECT @v_cd_cia_aerea = cd_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = ix_cd_cia_num)
    WHERE cd_cia_num  			= @v_cd_cia_num
      and inactive_ind  	= '0'

    IF  @v_cd_cia_aerea = '' OR @v_cd_cia_aerea IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'A companhia aérea não existe [' + @v_cd_cia_num + '].'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF @p_campo = 'todos'
    BEGIN
        IF @v_cd_cia_aerea <> @p_cd_cia_aerea		
        BEGIN
            SELECT @p_error_message_id   	= 'upa9097'
            SELECT @p_error_complemento   	= 'O Selo não pertence à companhia indicada. O Selo pertenece a [' + @v_cd_cia_aerea + '].'
            SELECT @p_error_campo     		= 'nro_selo_electronico'
            GOTO  TERMINA 
        END
    END

END

-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u)  
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
      and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0074'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

IF @p_campo = 'todos'
BEGIN
    IF @p_tp_natureza = 'D' AND SUBSTRING(@p_nro_selo_electronico,1,1) <> '0'
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'Natureza do Selo inválida.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END
    
    IF @p_tp_natureza = 'I' AND SUBSTRING(@p_nro_selo_electronico,1,1) <> '1'
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'Natureza do Selo inválida.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END
END


TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1





GO

/****** Object:  StoredProcedure [dbo].[usp_val_upla_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upla_com    Script Date: 19/09/2008 15:21:28 ******/




CREATE  PROCEDURE [dbo].[usp_val_upla_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(14) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "A"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "I"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "E"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "D"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upma_com]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upma_com    Script Date: 19/09/2008 15:21:28 ******/


CREATE PROCEDURE [dbo].[usp_val_upma_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_nro_voo      char(5) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_voo_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_voo_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_voo_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_emb_voo_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upn1]    Script Date: 01/05/2011 18:05:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_val_upn1    Script Date: 19/09/2008 15:21:28 ******/







CREATE     procedure [dbo].[usp_val_upn1] 
		( @p_cd_aerop			char(4), 
		@p_dt_mov_ini       	datetime, 
		@p_dt_mov_fim       	datetime, 
		@p_com_quin_atu     	int, 
		@p_com_quin_ant     	int, 
		@p_com_quin_ano_ant 	int, 
		@p_tot_voo_no_per   	int, 
		@p_tot_voo_conf     	int, 
		@p_qua_sel_dis      	int, 
		@p_qua_sel_pen      	int, 
		@p_consideracoes    	varchar(255), 
		@p_fl_val           	char(1), 
		@p_user_res_val     	varchar(30), 
		@p_dt_val           	datetime, 
		@p_fl_aut           	char(1), 
		@p_user_aut_fat     	varchar(30), 
		@p_dt_aut				datetime, 		
		@p_qua_sel_dis_geral      	int, 
		@p_qua_sel_pen_geral      	int,

		-- Especiais
		@p_activity_id			char(10),           		-- Código da Atividade
		@p_output				char(1) ,            		-- 1 faz select do codigo da mensagem-- 0 não faz deve utilizar variavel output
		@p_campo				char(20),            		-- Nome do campo a ser validado, ou 'todos' para validar tudo
		@p_acao					char(1),             		-- I Inclusão 	U Update 	D Delete 	C Consulta 	X viene del itemghanged
		@p_error_message_id		char(10) output,     	-- Código da mensagem de erro ou 0000 se estiver tudo OK
		@p_error_complemento	char(100) output,     	-- Complemento da mensagem
		@p_error_campo			char(20) output   )  	--  Código do campo com erro

AS 

-- Iniciando Variaveis de Retorno
select  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '

-- Outras Variaveis
declare	@result			VARCHAR(255)
	,@v_fl_val_aux		char(1)
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
if @p_campo = 'cd_aerop' OR @p_campo = 'todos'
begin
    select @result = no_aerop from GEACutcx..cor_aeroporto_u  (nolock index = P_cor_aeroporto_u) where cd_aerop = @p_cd_aerop
    if  @result = '' OR @result is null
    begin
        select @p_error_message_id 		= 'utc0026'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'cd_aerop'
        goto  TERMINA 
    end 
    else
    begin
        select @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'cd_aerop'
        if @p_acao = 'X' goto TERMINA
    end
end

-- Validando data de inicio
if @p_campo = 'dt_mov_ini' OR @p_campo = 'todos'
begin
	if day(@p_dt_mov_ini) <> 1 and day(@p_dt_mov_ini) <> 16
    begin
        select @p_error_message_id 		= 'upa9113'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'dt_mov_ini'
        goto  TERMINA 
    end 
    else
    begin
        select @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'dt_mov_ini'
        if @p_acao = 'X' goto TERMINA
    end
end 

-------------------------
-- Validando data de fim
if @p_campo = 'dt_mov_fim' OR @p_campo = 'todos'
begin
	if (day(@p_dt_mov_fim) <> 30 and day(@p_dt_mov_fim) <> 31)
		and (month(@p_dt_mov_fim) = 2 and (day(@p_dt_mov_fim) not in (15,27,28, 29)))
    begin
        select @p_error_message_id 		= 'upa9114'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'dt_mov_fim'
        goto  TERMINA 
    end 
    else
    begin
        select @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'dt_mov_fim'
        if @p_acao = 'X' goto TERMINA
    end
end 

----------------------
-- Validar para Salvar
if @p_campo = 'todos'
begin
	if  @p_dt_mov_fim < @p_dt_mov_ini
    begin
        select @p_error_message_id 		= 'upa9115'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'dt_mov_fim'
        goto  TERMINA 
    end 

	if @p_fl_aut = '1'
	begin
		select @v_fl_val_aux = fl_val
		from pax_val_quinz_hdr_u	(nolock index = P_pax_val_quinz_hdr_u)
		where cd_aerop 		= @p_cd_aerop			
		and dt_mov_ini 		= @p_dt_mov_ini       	
		and dt_mov_fim		= @p_dt_mov_fim       	

		if @v_fl_val_aux = '0' 
		begin
		    select @p_error_message_id 		= 'upa9127'
		    	,@p_error_complemento 		= ''
		    	,@p_error_campo  			= 'fl_aut'
		    goto  TERMINA 
		end 
-- Incluido tratamento para selecionar somente Autorizadores "Ativos (0)" em 18/11/2009 - Adaili Dias
		if @p_acao = 'U'
		begin
			if not exists (select 1 from pax_val_qui_res_u (nolock index = P_pax_val_qui_res_u)
			where cd_aerop 		= @p_cd_aerop
			  And aurorizador_id = suser_sname()
              And inactive_ind   = 0 )
			begin
				if suser_sname() not in ('DFTC_RIGO')
				begin
					select @p_error_message_id 		= 'upa9126'
		        		,@p_error_complemento 		= ''
		        		,@p_error_campo  			= 'aurorizador_id'
					goto  TERMINA 
				end 
			end
		end	


	end 
	
end


TERMINA:
if @p_output = '1'
begin
    select @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
end

if  @p_error_message_id = '0000'
    return 0
else
    return 1












GO

/****** Object:  StoredProcedure [dbo].[usp_val_upn1_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upn1_com    Script Date: 19/09/2008 15:21:29 ******/

 
CREATE PROCEDURE [dbo].[usp_val_upn1_com] 
               ( @p_cd_aerop   char(4),  
                 @p_dt_mov_ini datetime,  
                 @p_dt_mov_fim datetime ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_quinz_hdr_u_comnt_u 
                WHERE cd_aerop    = @p_cd_aerop 
                  AND dt_mov_ini  = @p_dt_mov_ini 
                  AND dt_mov_fim  = @p_dt_mov_fim 
                  AND type_cd     = "A"  
                  AND seq_nbr     = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_quinz_hdr_u_comnt_u 
                WHERE cd_aerop    = @p_cd_aerop 
                  AND dt_mov_ini  = @p_dt_mov_ini 
                  AND dt_mov_fim  = @p_dt_mov_fim 
                  AND type_cd     = "I"  
                  AND seq_nbr     = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_quinz_hdr_u_comnt_u 
                WHERE cd_aerop    = @p_cd_aerop 
                  AND dt_mov_ini  = @p_dt_mov_ini 
                  AND dt_mov_fim  = @p_dt_mov_fim 
                  AND type_cd     = "E"  
                  AND seq_nbr     = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_quinz_hdr_u_comnt_u 
                WHERE cd_aerop    = @p_cd_aerop 
                  AND dt_mov_ini  = @p_dt_mov_ini 
                  AND dt_mov_fim  = @p_dt_mov_fim 
                  AND type_cd     = "D"  
                  AND seq_nbr     = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_upoa_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upoa_com    Script Date: 19/09/2008 15:21:29 ******/



CREATE PROCEDURE [dbo].[usp_val_upoa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_hh_entrega       char(6),  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_lin_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND hh_entrega        = @p_hh_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "A"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_lin_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND hh_entrega        = @p_hh_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "I"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_lin_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND hh_entrega        = @p_hh_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "E"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_entrega_selo_lin_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND hh_entrega        = @p_hh_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "D"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 


GO

/****** Object:  StoredProcedure [dbo].[usp_val_uppa]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_val_uppa    Script Date: 19/09/2008 15:21:30 ******/



CREATE  PROCEDURE [dbo].[usp_val_uppa] 
				( @p_cd_aerop          char(4), 
				@p_cd_terminal       char(10), 
				@p_dt_mov            datetime, 
				@p_hh_mm             char(6), 
				@p_selo_status       char(1), 
				@p_cd_motivo         char(2), 
				@p_periodo_de        datetime, 
				@p_periodo_ate       datetime, 
				@p_cd_cia_aerea      char(3), 
				@p_nro_rste          char(6), 
				@p_nro_selo_inicial  char(10), 
				@p_nro_selo_final    char(10), 
				@p_qtd_selos         decimal(7,2), 
				@p_tp_baixa          char(1), 
				@p_fl_distribuidos       char(1), 
				@p_fl_utilizados       char(1),
				@p_ano_remesa	int, 
				@p_fl_pendentes       char(1), 
				@p_date_created      datetime, 
				@p_user_id_created   char(30), 
				@p_date_changed     datetime, 
				@p_user_id_changed char(30), 
				@p_inactive_ind      char(1), 
				@p_active_date       datetime, 
				-- Especiais
				@p_activity_id                char(10),             -- Código da Atividade
				@p_output                     char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
				@p_campo                      char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
				@p_acao                       char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
				@p_error_message_id           char(10) output,      -- Código da mensagem de erro ou 0000 se estiver tudo OK
				@p_error_complemento          char(100) output,      -- Complemento da mensagem
				@p_error_campo                char(20) output   )   --  Código do campo com erro
                
AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @hor  VARCHAR(2)
  ,@min  VARCHAR(2)
  ,@seg  VARCHAR(2)
  ,@result  VARCHAR(255)
  ,@selo_ini NUMERIC
  ,@selo_fin NUMERIC
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0026'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  = @p_cd_aerop
      and terminal   = @p_cd_terminal
      and inactive_ind  = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0049'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV

IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   = 'upa9010'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'dt_mov'
        GOTO  TERMINA 
    END
/*
    IF @p_acao = 'I'
    BEGIN
        IF CONVERT(CHAR(8), @p_dt_mov, 112) <   CONVERT(CHAR(8), DATEADD(dd, -3, GETDATE()), 112) 
        BEGIN
            SELECT @p_error_message_id   = 'upa9042'
            SELECT @p_error_complemento   = CONVERT(CHAR(10), DATEADD(dd, -3, GETDATE()), 103)
            SELECT @p_error_campo    = 'dt_mov'
            GOTO  TERMINA 
        END
    END
*/
END
-- ------------------------------------------------------------------------
-- VALIDAR HORA
IF @p_campo = 'hh_mm' OR @p_campo = 'todos'
BEGIN
    SELECT @hor  = LTRIM(RTRIM(SUBSTRING(@p_hh_mm, 1,2)))
    SELECT @min  = LTRIM(RTRIM(SUBSTRING(@p_hh_mm, 3,2)))
    SELECT @seg  = LTRIM(RTRIM(SUBSTRING(@p_hh_mm, 5,2)))
    IF CONVERT(INT, @hor) < 0 OR CONVERT(INT, @hor) > 23 OR @hor =''
    BEGIN
        SELECT @p_error_message_id   = 'upa9034'
        SELECT @p_error_complemento   = STR(@hor)
        SELECT @p_error_campo     = 'hh_mm'
        GOTO  TERMINA 
    END
    IF CONVERT(INT, @min) < 0 OR CONVERT(INT, @min) > 59  OR @min =''
    BEGIN
        SELECT @p_error_message_id   = 'upa9035'
        SELECT @p_error_complemento   = STR(@min)
        SELECT @p_error_campo     = 'hh_mm'
        GOTO  TERMINA 
    END
    IF CONVERT(INT, @seg) < 0 OR CONVERT(INT, @seg) > 59 OR @seg =''
    BEGIN
        SELECT @p_error_message_id   = 'upa9036'
        SELECT @p_error_complemento   = STR(@seg)
        SELECT @p_error_campo     = 'hh_mm'
        GOTO  TERMINA 
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_INICIAL
IF @p_campo = 'nro_selo_inicial' OR @p_campo = 'todos'
BEGIN
    IF LTRIM(RTRIM(@p_nro_selo_inicial)) <> ''
    BEGIN
        IF SUBSTRING(@p_nro_selo_inicial, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_inicial) <> 9
        BEGIN
            SELECT @p_error_message_id   = 'upa9006'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_inicial'
            GOTO  TERMINA 
        END
/*
        IF UPPER(SUBSTRING(@p_nro_selo_inicial, 2,1)) NOT IN('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z')
        BEGIN
            SELECT @p_error_message_id   = 'upa9025'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_inicial'
            GOTO  TERMINA 
        END
*/
    END 
END 
-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_FINAL
IF @p_campo = 'nro_selo_final' OR @p_campo = 'todos'
BEGIN
    IF LTRIM(RTRIM(@p_nro_selo_final)) <> ''
    BEGIN
        IF LTRIM(RTRIM(@p_nro_selo_inicial)) = '' 
        BEGIN
            IF @p_acao = 'X' 
                SELECT @p_error_message_id  = 'upa9008'
            ELSE
                SELECT @p_error_message_id  = 'upa9039'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        IF SUBSTRING(@p_nro_selo_final, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_final) <> 9
        BEGIN
            SELECT @p_error_message_id   = 'upa9006'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        
        IF SUBSTRING(@p_nro_selo_final, 1, 2) <> SUBSTRING(@p_nro_selo_inicial, 1, 2)
        BEGIN
            SELECT @p_error_message_id   = 'upa9007'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
/*        
        IF UPPER(SUBSTRING(@p_nro_selo_final, 2,1)) NOT IN('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z')
        BEGIN
            SELECT @p_error_message_id   = 'upa9026'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
*/        
        SELECT @selo_ini  = CONVERT(NUMERIC, SUBSTRING(@p_nro_selo_inicial, 3, 8))
        SELECT @selo_fin = CONVERT(NUMERIC, SUBSTRING(@p_nro_selo_final, 3, 8 ))
        
        IF @selo_ini > @selo_fin
        BEGIN
            SELECT @p_error_message_id   = 'upa9037'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        
        IF @selo_fin - @selo_ini > 1000
        BEGIN
            SELECT @p_error_message_id   = 'upa9017'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
    END
    IF @p_acao <> 'X' 
    BEGIN
        IF LTRIM(RTRIM(@p_nro_selo_inicial)) <>'' AND LTRIM(RTRIM(@p_nro_selo_final))  = ''
        BEGIN
            SELECT @p_error_message_id   = 'upa9038'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_inicial'
            GOTO  TERMINA 
        END
        IF LTRIM(RTRIM(@p_nro_selo_inicial)) = '' AND LTRIM(RTRIM(@p_nro_selo_final))  <> ''
        BEGIN
            SELECT @p_error_message_id   = 'upa9039'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR selo_status
IF @p_campo = 'selo_status' OR @p_campo = 'todos'
BEGIN
    IF  @p_activity_id = 'upa9911' AND @p_acao = 'I' AND @p_selo_status = '3'
    BEGIN
        SELECT @p_error_message_id   = 'upa9062'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'selo_status'
        GOTO  TERMINA 
    END
END 
-- ------------------------------------------------------------------------
-- VALIDAR CD_MOTIVO
IF @p_campo = 'cd_motivo' OR @p_campo = 'todos'
BEGIN
    IF @p_selo_status <> '4' AND @p_cd_motivo <> 'NA'
    BEGIN
        SELECT @p_error_message_id   = 'uar0009'
        SELECT @p_error_complemento   = 'Motivo deve ser Inexistente, pois não é cancelamento'
        SELECT @p_error_campo     	= 'cd_motivo'
        GOTO  TERMINA 
    END
    
    IF @p_selo_status = '4' AND @p_cd_motivo = 'NA'
    BEGIN
        SELECT @p_error_message_id   = 'uar0009'
        SELECT @p_error_complemento   = 'Motivo não pode ser NA, pois é cancelamento'
        SELECT @p_error_campo     = 'cd_motivo'
        GOTO  TERMINA 
    END
    
    IF @p_selo_status = '4' AND LTRIM(RTRIM(@p_cd_motivo)) = ''
    BEGIN
        SELECT @p_error_message_id   = 'upa9018'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_motivo'
        GOTO  TERMINA 
    END
END 
-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
	
	if (@p_activity_id = 'upa9911') and (@p_selo_status = '4' or @p_selo_status = 'X')
	begin
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
	end
	
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u) 
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
      and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0074'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'

    RETURN 0
ELSE
    RETURN 1



GO

/****** Object:  StoredProcedure [dbo].[usp_val_uppa_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uppa_com    Script Date: 19/09/2008 15:21:31 ******/


CREATE PROCEDURE [dbo].[usp_val_uppa_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selecao_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND type_cd      = "A"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selecao_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND type_cd      = "I"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selecao_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND type_cd      = "E"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_baixa_selecao_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND type_cd      = "D"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_uppb_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uppb_com    Script Date: 19/09/2008 15:21:31 ******/


CREATE PROCEDURE [dbo].[usp_val_uppb_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_dt_mov      datetime,  
                 @p_hh_mm       char(6),  
                 @p_selo_status char(1),  
                 @p_nro_selo    char(10) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selos_baixa_sele_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND selo_status  = @p_selo_status 
                  AND nro_selo     = @p_nro_selo 
                  AND type_cd      = "A"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selos_baixa_sele_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND selo_status  = @p_selo_status 
                  AND nro_selo     = @p_nro_selo 
                  AND type_cd      = "I"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selos_baixa_sele_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND selo_status  = @p_selo_status 
                  AND nro_selo     = @p_nro_selo 
                  AND type_cd      = "E"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selos_baixa_sele_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND dt_mov       = @p_dt_mov 
                  AND hh_mm        = @p_hh_mm 
                  AND selo_status  = @p_selo_status 
                  AND nro_selo     = @p_nro_selo 
                  AND type_cd      = "D"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upqa_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upqa_com    Script Date: 19/09/2008 15:21:32 ******/


CREATE PROCEDURE [dbo].[usp_val_upqa_com] 
               ( @p_cd_aerop    char(4),  
                 @p_cd_terminal char(10),  
                 @p_ano_rste    char(4) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_param_rste_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND ano_rste     = @p_ano_rste 
                  AND type_cd      = "A"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_param_rste_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND ano_rste     = @p_ano_rste 
                  AND type_cd      = "I"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_param_rste_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND ano_rste     = @p_ano_rste 
                  AND type_cd      = "E"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_param_rste_u_comnt_u 
                WHERE cd_aerop     = @p_cd_aerop 
                  AND cd_terminal  = @p_cd_terminal 
                  AND ano_rste     = @p_ano_rste 
                  AND type_cd      = "D"  
                  AND seq_nbr      = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upra]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.usp_val_upra    Script Date: 19/09/2008 15:21:33 ******/


CREATE  PROCEDURE [dbo].[usp_val_upra] 
        ( @p_cd_aerop               char(4), 
        @p_cd_terminal            char(10), 
        @p_dt_mov                 datetime, 
        @p_nro_selo_electronico   char(10), 
        @p_hh_mov					char(6), 
        @p_tp_natureza            char(1), 
        @p_selo_status            char(1), 
        @p_cd_motivo              char(2), 
        @p_tp_fat                 char(1), 
        @p_cd_cia_aerea           char(3), 
        @p_tp_unid                char(1), 
        @p_dt_confirma            datetime, 
        @p_cd_aerop_utilizacao    char(4), 
        @p_cd_terminal_utilizacao char(10), 
        @p_tp_coletor             char(16), 
        @p_item_fat               char(26), 
        @p_billing_line_id        int, 
        @p_billing_int_date       datetime, 
        @p_billing_int_type       char(1), 
        @p_billing_user_1         char(10), 
        @p_voo_rea					char(4), 					
        @p_dt_voo_rea				datetime,
        @p_hh_voo_rea				char(6), 
        @p_date_created           datetime, 
        @p_user_id_created        char(30), 
        @p_date_changed           datetime, 
        @p_user_id_changed        char(30), 
        @p_inactive_ind           char(1), 
        @p_active_date            datetime, 
        -- Especiais
        @p_activity_id                	char(10),             -- Código da Atividade
        @p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
        @p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
        @p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
        @p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
        @p_error_complemento          	char(100)  output,   -- Complemento da mensagem
        @p_error_campo                	char(20)  output)   --  Código do campo com erro

AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  			VARCHAR(255)
        ,@v_cd_cia_num		CHAR(2)
        ,@v_cd_cia_aerea	CHAR(3)
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0026'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  	= @p_cd_aerop
     and terminal   	= @p_cd_terminal
     and inactive_ind  	= '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0049'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        
        SELECT @p_error_campo     		= 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   	= 'upa9010'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'dt_mov'
        GOTO  TERMINA 
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_ELECTRONICO
IF @p_campo = 'nro_selo_electronico' OR @p_campo = 'todos'
BEGIN
    IF LEN(@p_nro_selo_electronico) <> 10
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto por 10 dígitos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF ISNUMERIC(@p_nro_selo_electronico) = 0
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto só por dígitos numéricos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF SUBSTRING(@p_nro_selo_electronico, 1,1) NOT IN ('0', '1')
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O primeiro dígito do número de Selo deve ser [0] para Doméstico ou [1] para Internacional.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END
    
    SET @v_cd_cia_num = SUBSTRING(@p_nro_selo_electronico, 2,2)	
    SELECT @v_cd_cia_aerea = cd_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = ix_cd_cia_num)
    WHERE cd_cia_num  			= @v_cd_cia_num
     and inactive_ind  	= '0'

    IF  @v_cd_cia_aerea = '' OR @v_cd_cia_aerea IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'A companhia aérea não existe [' + @v_cd_cia_num + '].'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF @p_campo = 'todos'
    BEGIN
        IF @v_cd_cia_aerea <> @p_cd_cia_aerea		
        BEGIN
            SELECT @p_error_message_id   	= 'upa9097'
            SELECT @p_error_complemento   	= 'O Selo não pertence à companhia indicada. O Selo pertenece a [' + @v_cd_cia_aerea + '].'
            SELECT @p_error_campo     		= 'nro_selo_electronico'
            GOTO  TERMINA 
        END
    END
    
END



-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u)  
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
     and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0074'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

IF @p_campo = 'todos'
BEGIN
    IF @p_tp_natureza = 'D' AND SUBSTRING(@p_nro_selo_electronico,1,1) <> '0'
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'Natureza do Selo inválida.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END

    IF @p_tp_natureza = 'I' AND SUBSTRING(@p_nro_selo_electronico,1,1) <> '1'
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'Natureza do Selo inválida.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END
END


TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1






GO

/****** Object:  StoredProcedure [dbo].[usp_val_upra_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upra_com    Script Date: 19/09/2008 15:21:33 ******/

 
CREATE PROCEDURE [dbo].[usp_val_upra_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10),  
                 @p_hh_mov               char(6) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_elec_dup_u_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND hh_mov                = @p_hh_mov 
                  AND type_cd               = "A"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_elec_dup_u_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND hh_mov                = @p_hh_mov 
                  AND type_cd               = "I"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_elec_dup_u_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND hh_mov                = @p_hh_mov 
                  AND type_cd               = "E"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_elec_dup_u_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND hh_mov                = @p_hh_mov 
                  AND type_cd               = "D"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_upsa_com]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upsa_com    Script Date: 19/09/2008 15:21:34 ******/


CREATE PROCEDURE [dbo].[usp_val_upsa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_cd_terminal  char(10),  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5),  
                 @p_dt_voo       datetime,  
                 @p_hr_voo       char(4),  
                 @p_tp_rpax      char(1),  
                 @p_recv_doc_id  char(22) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_boleto_cancelad_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND tp_rpax       = @p_tp_rpax 
                  AND recv_doc_id   = @p_recv_doc_id 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_boleto_cancelad_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND tp_rpax       = @p_tp_rpax 
                  AND recv_doc_id   = @p_recv_doc_id 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_boleto_cancelad_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND tp_rpax       = @p_tp_rpax 
                  AND recv_doc_id   = @p_recv_doc_id 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM rpax_boleto_cancelad_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND cd_terminal   = @p_cd_terminal 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND dt_voo        = @p_dt_voo 
                  AND hr_voo        = @p_hr_voo 
                  AND tp_rpax       = @p_tp_rpax 
                  AND recv_doc_id   = @p_recv_doc_id 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upta]    Script Date: 01/05/2011 18:05:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upta    Script Date: 19/09/2008 15:21:34 ******/

CREATE PROCEDURE [dbo].[usp_val_upta] 
               ( @p_cd_aerop                	char(4), 
                 @p_cd_terminal             	char(10), 
                 @p_dt_mov                  	datetime, 
                 @p_cd_cia_aerea            	char(3), 
                 @p_nro_rste                 	char(6), 
                 @p_nro_selo_inicial        	char(10), 
                 @p_nro_selo_final          	char(10), 
                 @p_tp_fat                   		char(1), 
                 @p_recv_doc_id             	char(22), 
                 @p_user_field_description  	varchar(255), 
                 @p_item_id                  	varchar(26), 
                 @p_date_created            	datetime, 
                 @p_user_id_created         	char(30), 
                 @p_date_changed            	datetime, 
                 @p_user_id_changed         	char(30), 
                 @p_inactive_ind            	char(1), 
                 @p_active_date             	datetime,
                 -- Especiais
                 @p_activity_id                	char(10),             -- Código da Atividade
                 @p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
                 @p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
                 @p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
                 @p_error_message_id           	char(10) output,      -- Código da mensagem de erro ou 0000 se estiver tudo OK
                 @p_error_complemento          	char(100) output,      -- Complemento da mensagem
                 @p_error_campo                	char(20) output   )   --  Código do campo com erro
                
AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  VARCHAR(255)
  ,@selo_ini NUMERIC
  ,@selo_fin NUMERIC
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0026'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  = @p_cd_aerop
      and terminal   = @p_cd_terminal
      and inactive_ind  = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0049'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   = 'upa9010'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'dt_mov'
        GOTO  TERMINA 
    END
    IF @p_acao = 'I'
    BEGIN

        IF CONVERT(CHAR(8), @p_dt_mov, 112) <   CONVERT(CHAR(8), DATEADD(dd, -3, GETDATE()), 112) 
        BEGIN
            SELECT @p_error_message_id   = 'upa9042'
            SELECT @p_error_complemento   = CONVERT(CHAR(10), DATEADD(dd, -3, GETDATE()), 103)
            SELECT @p_error_campo     = 'dt_mov'
            GOTO  TERMINA 
        END
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_INICIAL
IF @p_campo = 'nro_selo_inicial' OR @p_campo = 'todos'
BEGIN
    IF LTRIM(RTRIM(@p_nro_selo_inicial)) <> ''
    BEGIN
        IF SUBSTRING(@p_nro_selo_inicial, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_inicial) <> 9
        BEGIN
            SELECT @p_error_message_id   = 'upa9006'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_inicial'
            GOTO  TERMINA 
        END
    END 
END 
-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_FINAL
IF @p_campo = 'nro_selo_final' OR @p_campo = 'todos'
BEGIN
    IF LTRIM(RTRIM(@p_nro_selo_final)) <> ''
    BEGIN
        IF LTRIM(RTRIM(@p_nro_selo_inicial)) = '' 
        BEGIN
            IF @p_acao = 'X' 
                SELECT @p_error_message_id  = 'upa9008'
            ELSE
                SELECT @p_error_message_id  = 'upa9039'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        IF SUBSTRING(@p_nro_selo_final, 1, 1) NOT IN ('D','I','S') OR LEN(@p_nro_selo_final) <> 9
        BEGIN
            SELECT @p_error_message_id   = 'upa9006'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        
        IF SUBSTRING(@p_nro_selo_final, 1, 2) <> SUBSTRING(@p_nro_selo_inicial, 1, 2)
        BEGIN
            SELECT @p_error_message_id   = 'upa9007'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        
        SELECT @selo_ini  = CONVERT(NUMERIC, SUBSTRING(@p_nro_selo_inicial, 3, 8))
        SELECT @selo_fin = CONVERT(NUMERIC, SUBSTRING(@p_nro_selo_final, 3, 8 ))
        
        IF @selo_ini > @selo_fin
        BEGIN
            SELECT @p_error_message_id   = 'upa9037'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
        
        IF @selo_fin - @selo_ini > 1000
        BEGIN
            SELECT @p_error_message_id   = 'upa9017'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
    END
    IF @p_acao <> 'X' 
    BEGIN
        IF LTRIM(RTRIM(@p_nro_selo_inicial)) <>'' AND LTRIM(RTRIM(@p_nro_selo_final))  = ''
        BEGIN
            SELECT @p_error_message_id   = 'upa9038'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_inicial'
            GOTO  TERMINA 
        END
        IF LTRIM(RTRIM(@p_nro_selo_inicial)) = '' AND LTRIM(RTRIM(@p_nro_selo_final))  <> ''
        BEGIN
            SELECT @p_error_message_id   = 'upa9039'
            SELECT @p_error_complemento   = ''
            SELECT @p_error_campo    = 'nro_selo_final'
            GOTO  TERMINA 
        END
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u) 
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
      and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0074'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upta_com]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upta_com    Script Date: 19/09/2008 15:21:35 ******/


CREATE PROCEDURE [dbo].[usp_val_upta_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_mov           datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rste         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10),  
                 @p_tp_fat           char(1),  
                 @p_recv_doc_id      char(22) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM selo_boleto_cancelad_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_mov            = @p_dt_mov 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND tp_fat            = @p_tp_fat 
                  AND recv_doc_id       = @p_recv_doc_id 
                  AND type_cd           = "A"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM selo_boleto_cancelad_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_mov            = @p_dt_mov 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND tp_fat            = @p_tp_fat 
                  AND recv_doc_id       = @p_recv_doc_id 
                  AND type_cd           = "I"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM selo_boleto_cancelad_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_mov            = @p_dt_mov 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND tp_fat            = @p_tp_fat 
                  AND recv_doc_id       = @p_recv_doc_id 
                  AND type_cd           = "E"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM selo_boleto_cancelad_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_mov            = @p_dt_mov 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rste          = @p_nro_rste 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND tp_fat            = @p_tp_fat 
                  AND recv_doc_id       = @p_recv_doc_id 
                  AND type_cd           = "D"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upua]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upua    Script Date: 19/09/2008 15:21:35 ******/

CREATE PROCEDURE [dbo].[usp_val_upua] 
               ( @p_cd_aerop          char(4), 
                 @p_cd_terminal       char(10), 
                 @p_dt_mov            datetime, 
                 @p_cd_cia_aerea      char(3), 
                 @p_nro_rste          char(6), 
                 -- Especiais
                 @p_activity_id                char(10),             -- Código da Atividade
                 @p_output                     char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
                 @p_campo                      char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
                 @p_acao                       char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
                 @p_error_message_id           char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
                 @p_error_complemento          char(100)  output,   -- Complemento da mensagem
                 @p_error_campo                char(20)  output)   --  Código do campo com erro
                
AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  VARCHAR(255)
  ,@selo_ini NUMERIC
  ,@selo_fin NUMERIC
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0026'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  = @p_cd_aerop
      and terminal   = @p_cd_terminal
      and inactive_ind  = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0049'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   = 'upa9010'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'dt_mov'
        GOTO  TERMINA 
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u)  
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
      and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   = 'utc0074'
        SELECT @p_error_complemento   = ''
        SELECT @p_error_campo     = 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   = '0000'
        SELECT @p_error_complemento   = @result
        SELECT @p_error_campo     = 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 
TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1




GO

/****** Object:  StoredProcedure [dbo].[usp_val_upv5]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upv5    Script Date: 19/09/2008 15:21:36 ******/
CREATE PROCEDURE [dbo].[usp_val_upv5] 
               ( @p_cd_aerop             char(4), 
                 @p_cd_terminal          char(10), 
                 @p_dt_mov               datetime, 
                 @p_nro_selo_electronico char(10), 
                 @p_hh_mov               char(6), 
                 @p_user_id              char(20), 
                 @p_dt_time              datetime, 
                 @p_chg_trans            char(8), 
                 @p_chg_type             char(1), 
                 @p_col_id               int, 
                 @p_col_label            varchar(40), 
                 @p_data_chg_from        varchar(255), 
                 @p_data_chg_to          varchar(255), 
                 @p_activity_desc        varchar(40), 
                 @p_usuario              char(40),
        -- Especiais
				@p_activity_id                	char(10),             -- Código da Atividade
				@p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
				@p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
				@p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
				@p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
				@p_error_complemento          	char(100)  output,   -- Complemento da mensagem
				@p_error_campo                	char(20)  output)   --  Código do campo com erro

AS 
  
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  			VARCHAR(255)
        ,@v_cd_cia_num		CHAR(2)
        ,@v_cd_cia_aerea	CHAR(3)
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0026'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  	= @p_cd_aerop
     and terminal   	= @p_cd_terminal
     and inactive_ind  	= '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0049'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        
        SELECT @p_error_campo     		= 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   	= 'upa9010'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'dt_mov'
        GOTO  TERMINA 
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_ELECTRONICO
IF @p_campo = 'nro_selo_electronico' OR @p_campo = 'todos'
BEGIN
    IF LEN(@p_nro_selo_electronico) <> 10
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto por 10 dígitos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF ISNUMERIC(@p_nro_selo_electronico) = 0
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto só por dígitos numéricos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    IF SUBSTRING(@p_nro_selo_electronico, 1,1) NOT IN ('0', '1')
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O primeiro dígito do número de Selo deve ser [0] para Doméstico ou [1] para Internacional.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END
    
    SET @v_cd_cia_num = SUBSTRING(@p_nro_selo_electronico, 2,2)	
    SELECT @v_cd_cia_aerea = cd_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = ix_cd_cia_num)
    WHERE cd_cia_num  			= @v_cd_cia_num
     and inactive_ind  	= '0'

    IF  @v_cd_cia_aerea = '' OR @v_cd_cia_aerea IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'A companhia aérea não existe [' + @v_cd_cia_num + '].'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 
    
    
END

TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1





GO

/****** Object:  StoredProcedure [dbo].[usp_val_upv6]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upv6    Script Date: 19/09/2008 15:21:36 ******/

CREATE PROCEDURE [dbo].[usp_val_upv6]
				( @p_cd_aerop     char(4), 
				@p_data_mov     datetime, 
				@p_cd_cia_aerea char(3), 
				@p_nro_voo      char(5),
        -- Especiais
				@p_activity_id                	char(10),             -- Código da Atividade
				@p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
				@p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
				@p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
				@p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
				@p_error_complemento          	char(100)  output,   -- Complemento da mensagem
				@p_error_campo                	char(20)  output)   --  Código do campo com erro

AS 
  
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  			VARCHAR(255)
        ,@v_cd_cia_num		CHAR(2)
        ,@v_cd_cia_aerea	CHAR(3)
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0026'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR @p_data_mov
IF @p_campo = 'data_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_data_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   	= 'upa9010'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'data_mov'
        GOTO  TERMINA 
    END
END


TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1






GO

/****** Object:  StoredProcedure [dbo].[usp_val_upwa_com]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upwa_com    Script Date: 19/09/2008 15:21:36 ******/


CREATE PROCEDURE [dbo].[usp_val_upwa_com] 
               ( @p_cd_aerop         char(4),  
                 @p_cd_terminal      char(10),  
                 @p_dt_entrega       datetime,  
                 @p_cd_cia_aerea     char(3),  
                 @p_nro_rdev         char(6),  
                 @p_nro_selo_inicial char(10),  
                 @p_nro_selo_final   char(10) ) 
AS 
  DECLARE @w_exists char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_line_u_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rdev          = @p_nro_rdev 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "A"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_line_u_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rdev          = @p_nro_rdev 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "I"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_line_u_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rdev          = @p_nro_rdev 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "E"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_dev_selo_line_u_comnt_u 
                WHERE cd_aerop          = @p_cd_aerop 
                  AND cd_terminal       = @p_cd_terminal 
                  AND dt_entrega        = @p_dt_entrega 
                  AND cd_cia_aerea      = @p_cd_cia_aerea 
                  AND nro_rdev          = @p_nro_rdev 
                  AND nro_selo_inicial  = @p_nro_selo_inicial 
                  AND nro_selo_final    = @p_nro_selo_final 
                  AND type_cd           = "D"  
                  AND seq_nbr           = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 



GO

/****** Object:  StoredProcedure [dbo].[usp_val_upz1_com]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upz1_com    Script Date: 19/09/2008 15:21:37 ******/

 
CREATE PROCEDURE [dbo].[usp_val_upz1_com] 
               ( @p_cd_aerop     char(4),  
                 @p_dt_mov_ini   datetime,  
                 @p_dt_mov_fim   datetime,  
                 @p_cd_cia_aerea char(3) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_valida_quinzena__comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND dt_mov_ini    = @p_dt_mov_ini 
                  AND dt_mov_fim    = @p_dt_mov_fim 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_valida_quinzena__comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND dt_mov_ini    = @p_dt_mov_ini 
                  AND dt_mov_fim    = @p_dt_mov_fim 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_valida_quinzena__comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND dt_mov_ini    = @p_dt_mov_ini 
                  AND dt_mov_fim    = @p_dt_mov_fim 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_valida_quinzena__comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND dt_mov_ini    = @p_dt_mov_ini 
                  AND dt_mov_fim    = @p_dt_mov_fim 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_upza]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upza    Script Date: 19/09/2008 15:21:37 ******/



/*
EXECUTE DCDF0087.GEACupax.dbo.usp_val_upza 
'SBGR', 
'1', 
'20041123', 
'0012401002', 
'1900-01-01 00:00:00', 
'D', 
'2', 
'', 
'F', 
'TAM', 
'A', 
'19000101', 
'SBGR', 
'1', 
'01', 
'EMBDOM1ESPECIAL', 
0, 
'19000101', 
'', 
'', 
'000000000', '0', '20041123', '000000', '20041125', 'DBS', '', '0', '20041125', 'upa9922', '1', 'nro_selo_electronico','X', '0000' , '', '' 

*/





CREATE        PROCEDURE [dbo].[usp_val_upza] 
			(    @p_cd_aerop               char(4), 
			@p_cd_terminal            char(10), 
			@p_dt_mov                 datetime, 
			@p_nro_selo_electronico   char(10), 
			@p_date_changed_char      char(20), 
			@p_tp_natureza            char(1), 
			@p_selo_status            char(1), 
			@p_cd_motivo              char(2), 
			@p_tp_fat                 char(1), 
			@p_cd_cia_aerea           char(3), 
			@p_tp_unid                char(1), 
			@p_dt_confirma            datetime, 
			@p_cd_aerop_utilizacao    char(4), 
			@p_cd_terminal_utilizacao char(10), 
			@p_tp_coletor             char(16), 
			@p_item_fat               char(26), 
			@p_billing_line_id        int, 
			@p_billing_int_date       datetime, 
			@p_billing_int_type       char(1), 
			@p_billing_user_1         char(10),
			@p_recv_doc_id				char(9),
			@p_voo_rea					char(4), 					
			@p_dt_voo_rea				datetime,
			@p_hh_voo_rea				char(6), 
			@p_date_created           datetime, 
			@p_user_id_created        char(30), 
			@p_user_id_changed        char(30), 
			@p_inactive_ind           char(1), 
			@p_active_date            datetime, 
			-- Especiais
			@p_activity_id                	char(10),             -- Código da Atividade
			@p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
			@p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
			@p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
			@p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
			@p_error_complemento          	char(100)  output,   -- Complemento da mensagem
			@p_error_campo                	char(20)  output)   --  Código do campo com erro

AS 
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  			VARCHAR(255)
		,@v_cd_cia_num		CHAR(2)
		,@v_cd_cia_aerea	CHAR(3)

-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0026'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END
-- ------------------------------------------------------------------------
-- VALIDAR TERMINAL
IF @p_campo = 'cd_terminal' OR @p_campo = 'todos'
BEGIN
    SELECT @result = terminal 
    FROM GEACutcx..cor_terminal_aerop_u  (NOLOCK INDEX = P_cor_terminal_aerop_u) 
    WHERE cd_aerop  	= @p_cd_aerop
      and terminal   	= @p_cd_terminal
      and inactive_ind  	= '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0049'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_termina'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result

        SELECT @p_error_campo     		= 'cd_termina'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

-- ------------------------------------------------------------------------
-- VALIDAR DT_MOV
IF @p_campo = 'dt_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_dt_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   	= 'upa9010'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'dt_mov'
        GOTO  TERMINA 
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR NRO_SELO_ELECTRONICO
IF @p_campo = 'nro_selo_electronico' OR @p_campo = 'todos'
BEGIN

	IF LEN(@p_nro_selo_electronico) <> 10
	BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto por 10 dígitos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
	END 

	IF ISNUMERIC(@p_nro_selo_electronico) = 0
	BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O número de Selo deve estar composto só por dígitos numéricos.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
	END 

    IF SUBSTRING(@p_nro_selo_electronico, 1,1) NOT IN ('0', '1')
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'O primeiro dígito do número de Selo deve ser [0] para Doméstico ou [1] para Internacional.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END

	SET @v_cd_cia_num = SUBSTRING(@p_nro_selo_electronico, 2,2)	

    SELECT @v_cd_cia_aerea = cd_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = ix_cd_cia_num)
    WHERE cd_cia_num  			= @v_cd_cia_num
      and inactive_ind  	= '0'
    IF  @v_cd_cia_aerea = '' OR @v_cd_cia_aerea IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'A companhia aérea não existe [' + @v_cd_cia_num + '].'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
    END 

	IF @p_campo = 'todos'
	BEGIN
		IF @v_cd_cia_aerea <> @p_cd_cia_aerea		
		BEGIN
	        SELECT @p_error_message_id   	= 'upa9097'
	        SELECT @p_error_complemento   	= 'O Selo não pertence à companhia indicada. O Selo pertenece a [' + @v_cd_cia_aerea + '].'
	        SELECT @p_error_campo     		= 'nro_selo_electronico'
	        GOTO  TERMINA 
		END
	END

END



-- ------------------------------------------------------------------------
-- VALIDAR cd_cia_aerea
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_cia_aerea 
    FROM GEACutcx..cor_cia_aerea_u  (NOLOCK INDEX = P_cor_cia_aerea_u)  
    WHERE cd_cia_aerea  = @p_cd_cia_aerea
      and inactive_ind   = '0'
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0074'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END 

IF @p_campo = 'todos'
	IF @p_tp_natureza = 'D' AND SUBSTRING(@p_nro_selo_electronico,1,1) <> '0'
	BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'Natureza do Selo inválida.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
	END

	IF @p_tp_natureza = 'I' AND SUBSTRING(@p_nro_selo_electronico,1,1) <> '1'
	BEGIN
        SELECT @p_error_message_id   	= 'upa9097'
        SELECT @p_error_complemento   	= 'Natureza do Selo inválida.'
        SELECT @p_error_campo     		= 'nro_selo_electronico'
        GOTO  TERMINA 
	END

TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1











GO

/****** Object:  StoredProcedure [dbo].[usp_val_upza_com]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_upza_com    Script Date: 19/09/2008 15:21:38 ******/



CREATE PROCEDURE [dbo].[usp_val_upza_com] 
               ( @p_cd_aerop             char(4),  
                 @p_cd_terminal          char(10),  
                 @p_dt_mov               datetime,  
                 @p_nro_selo_electronico char(10) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "A"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "I"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "E"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_selo_electronico_comnt_u 
                WHERE cd_aerop              = @p_cd_aerop 
                  AND cd_terminal           = @p_cd_terminal 
                  AND dt_mov                = @p_dt_mov 
                  AND nro_selo_electronico  = @p_nro_selo_electronico 
                  AND type_cd               = "D"  
                  AND seq_nbr               = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 


GO

/****** Object:  StoredProcedure [dbo].[usp_val_uqaa]    Script Date: 01/05/2011 18:05:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uqaa    Script Date: 19/09/2008 15:21:38 ******/


CREATE PROCEDURE [dbo].[usp_val_uqaa]
               ( @p_cd_aerop         char(4), 
                 @p_data_mov         datetime, 
                 @p_cd_cia_aerea     char(3), 
                 @p_nro_voo          char(5), 
                 @p_fl_fiscalizado   char(1), 
                 @p_user_ficalizador char(30), 
                 @p_fl_validado      char(1), 
                 @p_user_validador   char(30), 
        -- Especiais
				@p_activity_id                	char(10),             -- Código da Atividade
				@p_output                     	char(1) ,              -- 1 faz select do codigo da mensagem-- 0 nao faz deve utilizar variavel output
				@p_campo                      	char(20),              -- Nome do campo a ser validado, ou 'todos' para validar tudo
				@p_acao                       	char(1),               -- I Inclusao  U Update  D Delete  C Consulta  X viene del itemghanged
				@p_error_message_id           	char(10)  output,   -- Código da mensagem de erro ou 0000 se estiver tudo OK
				@p_error_complemento          	char(100)  output,   -- Complemento da mensagem
				@p_error_campo                	char(20)  output)   --  Código do campo com erro

AS 
  
-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '
-- Outras Variaveis
DECLARE @result  			VARCHAR(255)
        ,@v_cd_cia_num		CHAR(2)
        ,@v_cd_cia_aerea	CHAR(3)
-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0026'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR @p_data_mov
IF @p_campo = 'data_mov' OR @p_campo = 'todos'
BEGIN
    IF @p_data_mov > GETDATE()
    BEGIN
        SELECT @p_error_message_id   	= 'upa9010'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'data_mov'
        GOTO  TERMINA 
    END
END



-- ------------------------------------------------------------------------
-- VALIDAR CIA AEREA
IF @p_campo = 'cd_cia_aerea' OR @p_campo = 'todos'
BEGIN
    SELECT @result = rtrim(no_cia_aerea)
	FROM GEACutcx..cor_cia_aerea_u (NOLOCK INDEX = P_cor_cia_aerea_u) WHERE cd_cia_aerea = @p_cd_cia_aerea and inactive_ind = 0
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id   	= 'utc0014'
        SELECT @p_error_complemento   	= ''
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id   	= '0000'
        SELECT @p_error_complemento   	= @result
        SELECT @p_error_campo     		= 'cd_cia_aerea'
        IF @p_acao = 'X' GOTO TERMINA
    END
END



TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END
IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1







GO

/****** Object:  StoredProcedure [dbo].[usp_val_uqaa_com]    Script Date: 01/05/2011 18:05:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uqaa_com    Script Date: 19/09/2008 15:21:38 ******/

 
CREATE PROCEDURE [dbo].[usp_val_uqaa_com] 
               ( @p_cd_aerop     char(4),  
                 @p_data_mov     datetime,  
                 @p_cd_cia_aerea char(3),  
                 @p_nro_voo      char(5) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_head_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND data_mov      = @p_data_mov 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "A"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_head_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND data_mov      = @p_data_mov 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "I"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_head_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND data_mov      = @p_data_mov 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "E"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_head_u_comnt_u 
                WHERE cd_aerop      = @p_cd_aerop 
                  AND data_mov      = @p_data_mov 
                  AND cd_cia_aerea  = @p_cd_cia_aerea 
                  AND nro_voo       = @p_nro_voo 
                  AND type_cd       = "D"  
                  AND seq_nbr       = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_uqba_com]    Script Date: 01/05/2011 18:05:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uqba_com    Script Date: 19/09/2008 15:21:39 ******/

 
CREATE PROCEDURE [dbo].[usp_val_uqba_com] 
               ( @p_cd_aerop      char(4),  
                 @p_data_mov      datetime,  
                 @p_cd_cia_aerea  char(3),  
                 @p_nro_voo       char(5),  
                 @p_numero        int,  
                 @p_nro_voo_lista char(5) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_det_u_comnt_u 
                WHERE cd_aerop       = @p_cd_aerop 
                  AND data_mov       = @p_data_mov 
                  AND cd_cia_aerea   = @p_cd_cia_aerea 
                  AND nro_voo        = @p_nro_voo 
                  AND numero         = @p_numero 
                  AND nro_voo_lista  = @p_nro_voo_lista 
                  AND type_cd        = "A"  
                  AND seq_nbr        = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_det_u_comnt_u 
                WHERE cd_aerop       = @p_cd_aerop 
                  AND data_mov       = @p_data_mov 
                  AND cd_cia_aerea   = @p_cd_cia_aerea 
                  AND nro_voo        = @p_nro_voo 
                  AND numero         = @p_numero 
                  AND nro_voo_lista  = @p_nro_voo_lista 
                  AND type_cd        = "I"  
                  AND seq_nbr        = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_det_u_comnt_u 
                WHERE cd_aerop       = @p_cd_aerop 
                  AND data_mov       = @p_data_mov 
                  AND cd_cia_aerea   = @p_cd_cia_aerea 
                  AND nro_voo        = @p_nro_voo 
                  AND numero         = @p_numero 
                  AND nro_voo_lista  = @p_nro_voo_lista 
                  AND type_cd        = "E"  
                  AND seq_nbr        = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_fiscal_det_u_comnt_u 
                WHERE cd_aerop       = @p_cd_aerop 
                  AND data_mov       = @p_data_mov 
                  AND cd_cia_aerea   = @p_cd_cia_aerea 
                  AND nro_voo        = @p_nro_voo 
                  AND numero         = @p_numero 
                  AND nro_voo_lista  = @p_nro_voo_lista 
                  AND type_cd        = "D"  
                  AND seq_nbr        = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

/****** Object:  StoredProcedure [dbo].[usp_val_uqca]    Script Date: 01/05/2011 18:05:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uqca    Script Date: 19/09/2008 15:21:39 ******/




CREATE   PROCEDURE [dbo].[usp_val_uqca] 
		( @p_cd_aerop       			char(4), 
		@p_aurorizador_id 				char(30), 
		@p_inactive_ind   				char(1), 
		@p_dt_inactive    				datetime, 
		-- Especiais
		@p_activity_id               	char(10),           		-- Código da Atividade
		@p_output                    	char(1) ,            		-- 1 faz select do codigo da mensagem-- 0 não faz deve utilizar variavel output
		@p_campo                     	char(20),            		-- Nome do campo a ser validado, ou 'todos' para validar tudo
		@p_acao                      	char(1),             		-- I Inclusão 	U Update 	D Delete 	C Consulta 	X viene del itemghanged
		@p_error_message_id          	char(10) output,     	-- Código da mensagem de erro ou 0000 se estiver tudo OK
		@p_error_complemento         	char(100) output,     	-- Complemento da mensagem
		@p_error_campo               	char(20) output   )  	--  Código do campo com erro

AS 

-- Iniciando Variaveis de Retorno
SELECT  @p_error_message_id = '0000', @p_error_complemento = ' ',  @p_error_campo = ' '

-- Outras Variaveis
DECLARE	@result			varchar(255)
	,@v_sec_group_id	varchar(40)
	,@v_aerop_aux		varchar(4)
	,@v_recv_entity_id	varchar(5)


-- ------------------------------------------------------------------------
-- VALIDAR AEROPORTO
IF @p_campo = 'cd_aerop' OR @p_campo = 'todos'
BEGIN
    SELECT @result = no_aerop FROM GEACutcx..cor_aeroporto_u  (NOLOCK INDEX = P_cor_aeroporto_u) WHERE cd_aerop = @p_cd_aerop
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'utc0026'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'cd_aerop'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'cd_aerop'
        IF @p_acao = 'X' GOTO TERMINA
    END
END

-- ------------------------------------------------------------------------
-- VALIDAR USUARIO
IF @p_campo = 'aurorizador_id' OR @p_campo = 'todos'
BEGIN
    SELECT @result 			= ltrim(rtrim(first_name)) + ' ' + ltrim(rtrim(last_name))
	FROM DBSwact..user_master_1  (NOLOCK) 
	WHERE user_id = @p_aurorizador_id
    IF  @result = '' OR @result IS NULL
    BEGIN
        SELECT @p_error_message_id 		= 'upa9119'
        	,@p_error_complemento 		= ''
        	,@p_error_campo  			= 'aurorizador_id'
        GOTO  TERMINA 
    END 
    ELSE
    BEGIN
        SELECT @p_error_message_id 		= '0000'
        	,@p_error_complemento 		= @result
        	,@p_error_campo  			= 'aurorizador_id'
        IF @p_acao = 'X' GOTO TERMINA
    END
	
END


-- -----------------------------------
IF @p_campo = 'todos'
begin
	if @p_acao in ('I','U')
	begin
		/* validar si el usuario tiene permiso para actualizar los datos de este aeroporto*/
		select @v_sec_group_id 		= rtrim(ltrim(ISNULL(a.sec_group_id,'')))
		from DBSwact..user_master_1 a (nolock)
		where a.user_id 		= suser_sname()
														  
		IF @v_sec_group_id not in ('GERENTE_FINANCEIRO', 'DBSSecurity', 'AR_GERENCIA')
		begin
	        SELECT @p_error_message_id 		= 'upa9120'
	        	,@p_error_complemento 		= ''
	        	,@p_error_campo  			= 'todos'
	        GOTO  TERMINA 
		end
				
		if not exists (select 1 from DBSwact..user_master_1 a(nolock)
			inner join GEACutcx..cor_aeroporto_u b(nolock)
			on b.recv_entity_id 	= left(a.notes,5)
			where a.user_id 		= @p_aurorizador_id
			and b.cd_aerop			= @p_cd_aerop)
		begin
			SELECT @p_error_message_id 		= 'upa9121'
	        	,@p_error_complemento 		= ''
	        	,@p_error_campo  			= 'aurorizador_id'
	        GOTO  TERMINA 
		end

	end
end


TERMINA:
IF @p_output = '1'
BEGIN
    SELECT @p_error_message_id,  @p_error_complemento ,  @p_error_campo         
END

IF  @p_error_message_id = '0000'
    RETURN 0
ELSE
    RETURN 1








GO

/****** Object:  StoredProcedure [dbo].[usp_val_uqca_com]    Script Date: 01/05/2011 18:05:52 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


/****** Object:  Stored Procedure dbo.usp_val_uqca_com    Script Date: 19/09/2008 15:21:39 ******/

 
CREATE PROCEDURE [dbo].[usp_val_uqca_com] 
               ( @p_cd_aerop       char(4),  
                 @p_aurorizador_id char(30) ) 
AS 
  DECLARE @w_exists	char(4) 
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_qui_res_u_comnt_u 
                WHERE cd_aerop        = @p_cd_aerop 
                  AND aurorizador_id  = @p_aurorizador_id 
                  AND type_cd         = "A"  
                  AND seq_nbr         = 1  )  
      SELECT @w_exists = @w_exists + "A"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_qui_res_u_comnt_u 
                WHERE cd_aerop        = @p_cd_aerop 
                  AND aurorizador_id  = @p_aurorizador_id 
                  AND type_cd         = "I"  
                  AND seq_nbr         = 1  )  
      SELECT @w_exists = @w_exists + "I"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_qui_res_u_comnt_u 
                WHERE cd_aerop        = @p_cd_aerop 
                  AND aurorizador_id  = @p_aurorizador_id 
                  AND type_cd         = "E"  
                  AND seq_nbr         = 1  )  
      SELECT @w_exists = @w_exists + "E"  
 
  IF EXISTS  ( SELECT * 
                 FROM pax_val_qui_res_u_comnt_u 
                WHERE cd_aerop        = @p_cd_aerop 
                  AND aurorizador_id  = @p_aurorizador_id 
                  AND type_cd         = "D"  
                  AND seq_nbr         = 1  )  
      SELECT @w_exists = @w_exists + "D"  
 
  SELECT @w_exists 

GO

