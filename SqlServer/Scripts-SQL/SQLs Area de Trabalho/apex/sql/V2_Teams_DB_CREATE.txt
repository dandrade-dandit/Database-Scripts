/* This database is designed for use with APEX.  This VERSION 2 for BCIS 450.

In this version of the Teams DB, surrogate keys based on a sequence 
are used for every table.  Each "create table" statement is followed by a 
"create sequence" statement for that table's primary key.  The triggers are 
created in another script.

VERSION 1 of the Teams DB populates all the tables but surrogate keys are not 
used in most cases.  

The scenario and data structure is the same in both version.

*/


/* 
Below are examples of creating tables with SQL in and Oracle database and 
these include some examples of various ways to define columns and to set 
CONSTRAINTs for the tables in this relational database.



This simple database consists of a STUDENTS, TEAMS, EVAL_ITEMS, 
EVALUATIONS, EVAL_ITEMS_SCORES, WORKSHOPS, and ATTENDANCE. This database 
is used by an instructor in a systems analysis and design class to keep 
track of teams and projects, 
team members, and peer evaluations for team members.  


Each project has a name, a description, and a client name.

Each team has a full name, a team ID and may have a project assigned.

Each student is assigned a team for a project though, initially, a 
student may not be assigned a team yet. 

Each student eventually has an evaluation done by each of his/her 
other team members.

Each student eventually completes an evaluation for each of his/her 
team members.

Each evaluation has a set of evaluation items and scores.

Each evaluation item has an evaluation item description.

*/



CREATE TABLE projects
( projectid	NUMBER			NOT NULL,
  proj_name	VARCHAR(45)		NOT NULL,
  proj_client	VARCHAR(35),
  CONSTRAINT	pk_projectid PRIMARY KEY (projectid)
);

 
CREATE SEQUENCE projectid_seq START WITH 100;


/* 
This CREATE TABLE statement defines 3 columns in a TEAMS table 
and defines the PRIMARY KEY field for this table.

Even though the team name is not the primary key field, a unique 
CONSTRAINT has been assigned to this field.

There is a foreign key constraint between teams and projects.

*/





CREATE TABLE teams
( teamid	VARCHAR(8)	NOT NULL,
  team_name	VARCHAR(30)	NOT NULL,
  projectid	NUMBER,
  CONSTRAINT	pk_teamid PRIMARY KEY (teamid),
  CONSTRAINT	uniq_team UNIQUE (team_name),
  CONSTRAINT	fk_projid FOREIGN KEY (projectid) REFERENCES projects
);

CREATE SEQUENCE teamid_seq START WITH 1000;


/* 
The following SQL code illustrates how to designate a FOREIGN KEY 
CONSTRAINT that states which field is related to a PRIMARY KEY field 
in another table.  An entry in the std_teamID field must match a 
value in the related primary key field in the TEAMS table.

*/


CREATE TABLE students
( stdid    	VARCHAR(4)		 	NOT NULL,
  stduserid	VARCHAR(8)			NOT NULL,
  stdfname 	VARCHAR(12)			NOT NULL,
  stdlname 	VARCHAR(13)			NOT NULL,	
  stdmajor 	VARCHAR(6),
  std_teamID	VARCHAR(8),
  CONSTRAINT	pk_stdid PRIMARY KEY (stdid),
  CONSTRAINT	fk_teamid FOREIGN KEY (std_teamid) REFERENCES teams	
);

CREATE SEQUENCE stdid_seq START WITH 5000;

/* 
The CREATE TABLE statement in this file are in a generic SQL format.  
These statements would execute in other DBMS platforms as well, such 
as SQL Server or MySQL.  
*/

  
CREATE TABLE eval_items
( eval_item_ID	VARCHAR(3)			NOT NULL,
  eval_item_code VARCHAR(13)			NOT Null,
  eval_descrip	VARCHAR(35)			NOT NULL,
  CONSTRAINT pk_eval_items_id PRIMARY KEY (eval_item_id),
  CONSTRAINT UNQ_eval_item_code UNIQUE (eval_item_code) 
);


CREATE SEQUENCE eval_item_id_seq;


CREATE TABLE evaluations
( eval_ID	NUMBER  		NOT NULL,
  evaluatorID	VARCHAR(4)		NOT NULL,
  evaluateeID	VARCHAR(4)		NOT NULL,
  evalsemester	VARCHAR(10),
  evalyear	int, 
  CONSTRAINT pk_eval PRIMARY KEY (eval_ID),
  CONSTRAINT fk_evaluatorID FOREIGN KEY (evaluatorID) REFERENCES students,
  CONSTRAINT fk_evaluateeID FOREIGN KEY (evaluateeID) REFERENCES students
);

CREATE SEQUENCE eval_id_seq START WITH 3000;


/*

The EVAL_SCORE_ID column is defined as data type NUMBER.  The values 
for the primary key field are generated by an autonumber generator which 
is called a SEQUENCE in an Oracle DBMS. This sequence is created in 
the SQL command below this CREATE TABLE statement.  The sequence starts 
with a value of 1000.

*/

CREATE TABLE eval_item_scores 
( eval_score_ID NUMBER  		NOT NULL,
  eval_ID	NUMBER			NOT NULL,
  eval_item_ID	VARCHAR(3) 		NOT NULL,
  score		NUMBER			NOT NULL,
  CONSTRAINT pk_eval_item_score	PRIMARY KEY (eval_score_id),
  CONSTRAINT fk_eval_id FOREIGN KEY (eval_id)
	REFERENCES evaluations,
  CONSTRAINT fk_eval_item_id FOREIGN KEY (eval_item_ID) 
	REFERENCES eval_items
);
 
CREATE SEQUENCE eval_score_ID_seq START WITH 1000;



/*  Create a table for team-building workshops taught
for team members. */

CREATE TABLE workshops
 ( wkshp_ID 	VARCHAR(3) 	NOT NULL,
   wkshp_name 	VARCHAR(30) 	NOT NULL,
 CONSTRAINT PK_workshops PRIMARY KEY(wkshp_ID)
 ); 


CREATE SEQUENCE wkshp_ID_seq;


/*  This table tracks which workshops students have completed. */

CREATE TABLE attendances
  ( attnd_ID 		VARCHAR(3) 	NOT NULL,
    attnd_wkshp_id	varchar(3)	NOT NULL,
    attnd_stdid 	VARCHAR(10) 	NOT NULL,
 CONSTRAINT PK_attend PRIMARY KEY(attnd_ID) ,
 CONSTRAINT FK_workshops FOREIGN KEY(attnd_wkshp_ID) REFERENCES workshops,
 CONSTRAINT FK_students FOREIGN KEY(attnd_stdid) REFERENCES students
   ); 

CREATE SEQUENCE attnd_ID_seq;



